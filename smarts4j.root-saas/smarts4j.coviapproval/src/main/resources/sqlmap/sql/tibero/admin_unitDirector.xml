<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="admin.unitDirector">
    <select id="select" parameterType="cmap" resultType="cmap">
		SELECT A.* FROM (
			SELECT A.SortKey AS "SortKey"
			    , A.UnitName AS "UnitName"
			    , A.UnitCode AS "UnitCode"
			    , A.EntCode AS "EntCode"
			    , A.Description AS "Description"
			    , TO_CHAR(A.AuthStartDate,'YYYY-MM-DD') AS "AuthStartDate" 
			    , TO_CHAR(A.AuthEndDate,'YYYY-MM-DD') AS "AuthEndDate"
			    , B.TargetUnitCode AS "TargetUnitCode" 
			    , B.TargetUnitName AS "TargetUnitName"
			    , TO_CHAR(B.ViewStartDate,'YYYY-MM-DD') AS "ViewStartDate" 
			    , TO_CHAR(B.ViewEndDate,'YYYY-MM-DD') AS "ViewEndDate"
			FROM jwf_unitdirector A
			LEFT OUTER JOIN jwf_unitdirectormember B ON A.UnitCode = B.UnitCode	
			WHERE	A.UnitCode = #{UnitCode}
			AND A.EntCode = #{EntCode}
		) A
	</select>
	
 	<select id="selectgrid" parameterType="cmap" resultType="cmap">
 	   <include refid="oracle.include.pagingHeader"/>
		  SELECT 
		    SortKey AS "SortKey"
 	      	, UnitName AS "UnitName"
 	      	, UnitCode AS "UnitCode"
 	      	, EntCode AS "EntCode"
 	      	, Description AS "Description"
 	      	, AuthStartDate AS "AuthStartDate"
 	      	, AuthEndDate AS "AuthEndDate" 
 	      	, TargetUnitCode AS "TargetUnitCode"
 	      	, TargetUnitName AS "TargetUnitName"
		  FROM (
		       SELECT  MAX(A.SortKey) AS SortKey
		        , MAX(Fn_BaseGetDictionary_S(#{lang}, A.UnitName)) AS UnitName
		        , MAX(A.UnitCode) AS UnitCode
		        , MAX(A.EntCode) AS EntCode
		        , MAX(A.Description) AS Description  
		        , TO_CHAR(MAX(A.AuthStartDate) ,'YYYY-MM-DD')AS AuthStartDate 
		        , TO_CHAR(MAX(A.AuthEndDate),'YYYY-MM-DD') AS AuthEndDate
		        , LISTAGG(B.TargetUnitCode, ',') WITHIN GROUP (ORDER BY B.TargetUnitCode) AS TargetUnitCode
		        , LISTAGG(Fn_BaseGetDictionary_S(#{lang}, B.TargetUnitName)|| '(' || B.TargetUnitCode || ')' , ',') WITHIN GROUP (ORDER BY B.TargetUnitName) AS TargetUnitName
		      FROM jwf_unitdirector A 
		      LEFT OUTER JOIN jwf_unitdirectormember B
		      ON A.UnitCode = B.UnitCode
		      <trim prefix="WHERE" prefixOverrides="AND |OR ">		  
				<if test="EntCode != null and EntCode != '' and EntCode.length() gt 0">
				 	A.EntCode = #{EntCode}
				</if>	
				<if test="UnitCode != null and UnitCode != '' and UnitCode.length() gt 0">
				 	AND A.UnitCode = #{UnitCode}
				</if>	
			</trim> 
		      GROUP BY A.UnitCode
		 ) LIST
	     <trim prefix="ORDER BY">
			  	<if test="sortColumn != null and sortDirection != null">
		    		<choose>
						<when test='sortColumn.equalsIgnoreCase("UnitName")'>UnitName</when>
						<when test='sortColumn.equalsIgnoreCase("TargetUnitName")'>TargetUnitName</when>
						<when test='sortColumn.equalsIgnoreCase("Description")'>Description</when>
						<otherwise>SortKey</otherwise>
					</choose>
					<choose>
						<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
						<otherwise> DESC</otherwise>
					</choose>
				</if>
		 </trim>
 	   <include refid="oracle.include.pagingFooter"/>
	</select>
	
 	<select id="selectgridcnt" resultType="java.lang.Long">
		SELECT COUNT(*) FROM (
			SELECT MAX(A.SortKey) AS SortKey
		        , MAX(A.UnitName) AS UnitName
		        , MAX(A.UnitCode) AS UnitCode
		        , MAX(A.EntCode) AS EntCode
		        , MAX(A.Description) AS Description  
		        , MAX(A.AuthStartDate) AS AuthStartDate 
		        , MAX(A.AuthEndDate) AS AuthEndDate
		        , LISTAGG(B.TargetUnitCode, ',') WITHIN GROUP (ORDER BY B.TargetUnitCode) AS TargetUnitCode 
		        , LISTAGG(B.TargetUnitName|| '(' || B.TargetUnitCode || ')' , ',') WITHIN GROUP (ORDER BY B.TargetUnitName) AS TargetUnitName
			FROM jwf_unitdirector A
			LEFT OUTER JOIN jwf_unitdirectormember B ON A.UnitCode = B.UnitCode
			<trim prefix="WHERE" prefixOverrides="AND |OR ">		  
				<if test="EntCode != null and EntCode != '' and EntCode.length() gt 0">
				 	A.EntCode = #{EntCode}
				</if>	
				<if test="UnitCode != null and UnitCode != '' and UnitCode.length() gt 0">
				 	AND A.UnitCode = #{UnitCode}
				</if>	
			</trim>
			GROUP BY A.UnitCode
		) A
	</select>
 	
 	<delete id="deletejwf_unitdirector" parameterType="cmap">
        DELETE FROM jwf_unitdirector 
  		WHERE   UnitCode = #{UnitCode} AND EntCode = #{EntCode}
	</delete>
	
	<delete id="deletejwf_unitdirectormember" parameterType="cmap">
        DELETE FROM jwf_unitdirectormember
  		WHERE UnitCode = #{UnitCode} 
	</delete>

	<insert id="insertjwf_unitdirector" parameterType="cmap">
		INSERT INTO jwf_unitdirector ( UnitCode, EntCode, Description, SortKey, UnitName, AuthStartDate, AuthEndDate 	)
		VALUES (#{UnitCode}, #{EntCode}, #{Description}, #{SortKey}, #{UnitName}, TO_DATE(#{AuthStartDate}, 'YYYY-MM-DD'), TO_DATE(#{AuthEndDate}, 'YYYY-MM-DD'))
	</insert>
	
	<insert id="insertjwf_unitdirectormember" parameterType="cmap">
		INSERT INTO jwf_unitdirectormember( UnitCode ,TargetUnitCode ,TargetUnitName ,ViewStartDate ,ViewEndDate	 )
		VALUES( #{UnitCode} ,#{TargetUnitCode} ,#{TargetUnitName} ,TO_DATE(#{ViewStartDate}, 'YYYY-MM-DD') ,TO_DATE(#{ViewEndDate}, 'YYYY-MM-DD') )
	</insert>
 	
</mapper>

