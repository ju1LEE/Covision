<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="expenceApplication">
	<resultMap type="cmap" id="ReservedStrCLOB">
		<result column="ReservedStr2_Div" property="ReservedStr2_Div" javaType="java.lang.String" jdbcType="CLOB" ></result>
		<result column="ReservedStr3_Div" property="ReservedStr3_Div" javaType="java.lang.String" jdbcType="CLOB" ></result>
		<result column="ReservedStr2" property="ReservedStr2" javaType="java.lang.String" jdbcType="CLOB" ></result>
		<result column="ReservedStr3" property="ReservedStr3" javaType="java.lang.String" jdbcType="CLOB" ></result>
	</resultMap>
    
    <select id="getCardReceipt" parameterType="cmap" resultType="cmap">
 	    /*
 	    	expenceApplication.getCardReceipt
 	    	법인카드 사용내역
 	    */ 
		SELECT 		
			CR.ReceiptID AS "ReceiptID"
			, CR.ItemNo AS "ItemNo"
			, 'CorpCard' AS "ProofCode"
			, CR.CardNo AS "CardNo"
			, TO_CHAR(TO_DATE(CR.UseDate, 'YYYYMMDD'), 'YYYYMMDD') AS "ProofDate"
			, TO_CHAR(TO_DATE(CR.UseDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "ProofDateStr"
			, TO_CHAR(TO_DATE(CR.ApproveTime, 'HH24:MI:SS'), 'HH24MISS') AS "ProofTime"
			, TO_CHAR(TO_DATE(CR.ApproveTime, 'HH24:MI:SS'), 'HH24:MI:SS') AS "ProofTimeStr"
			, CR.ReceiptID AS "CardUID"
			, CR.ApproveNo AS "CardApproveNo"
			, CR.AmountWon AS "TotalAmount"
			, CR.RepAmount AS "RepAmount"
			, CR.TaxAmount AS "TaxAmount"
			, CR.ServiceAmount AS "ServiceAmount"
			, CR.StoreName AS "StoreName"
			, CR.StoreNo AS "StoreNo"
			, CR.StoreCondition AS "StoreCondition"
			, CR.StoreAddress1 || CR.StoreAddress2 AS "StoreAddress"
			, CR.StoreTel AS "StoreTel"
			, AL.ExpenceApplicationListID AS "ExpenceApplicationListID"
			, (CASE WHEN AL.ExpenceApplicationListID IS NULL THEN 'N' ELSE 'Y' END ) AS "IsDuplicate"
			, CC.VendorNo AS "VendorNo"
			, (CASE WHEN SC.AccountCode IS NOT NULL AND SC.AccountCode != '' THEN SC.AccountCode ELSE CR.AccountCode END) AS "AccountCode"
			, (SELECT AccountName FROM act_account AA WHERE AA.CompanyCode = CC.COMPANYCODE AND AA.AccountCode
				= CASE WHEN SC.AccountCode IS NOT NULL AND SC.AccountCode != '' THEN SC.AccountCode ELSE CR.AccountCode END) AS "AccountName"
			, (CASE WHEN SC.StandardBriefID IS NOT NULL AND SC.StandardBriefID != '' THEN SC.StandardBriefID ELSE CR.StandardBriefID END) AS "StandardBriefID"
			, (SELECT StandardBriefName FROM act_standard_brief ASB WHERE ASB.StandardBriefID
				= CASE WHEN SC.StandardBriefID IS NOT NULL AND SC.StandardBriefID != '' THEN SC.StandardBriefID ELSE CR.StandardBriefID END) AS "StandardBriefName"
			, (SELECT TaxCode FROM act_account AA WHERE AA.AccountCode = SC.AccountCode) AS "TaxCode"
			, (SELECT TaxType FROM act_account AA WHERE AA.AccountCode = SC.AccountCode) AS "TaxType"
			
			, CR.CostCenterCode AS "CostCenterCode"
			, (SELECT CostCenterName FROM act_cost_center ACC WHERE ACC.CostCenterCode = CR.CostCenterCode) AS "CostCenterName"
			, CR.UsageText AS "UsageText"
			, CR.Amount AS "Amount"
			, CR.StoreCategory
		FROM act_card_receipt CR
		LEFT OUTER JOIN (
							SELECT MAX(AL.ExpenceApplicationListID) ExpenceApplicationListID
							, AL.CardUID
							FROM act_expence_application_list AL
							INNER JOIN act_expence_application AA
								ON AL.ExpenceApplicationID = AA.ExpenceApplicationID
							WHERE AA.ApplicationStatus NOT IN ('R', 'C', 'DELETE')
							GROUP BY AL.CardUID
							) AL
			ON CR.ReceiptID = AL.CardUID
		INNER JOIN act_corp_card CC ON CR.CardNo = CC.CardNo
		LEFT JOIN act_store_category SC
		ON	CR.StoreCategory = SC.CategoryCode
		AND CC.COMPANYCODE = SC.COMPANYCODE
		WHERE 
			<choose>
				<when test="receiptIDList != null">
					<foreach collection="receiptIDList" item="item" index="index" separator="," open="CR.ReceiptID IN (" close=")">
						#{item}
					</foreach>
				</when>
				<otherwise>
					1=2
				</otherwise>
			</choose>
	</select>
	
    <select id="getTaxCodeList" parameterType="cmap" resultType="cmap">
 	    /*
 	    	expenceApplication.getTaxCodeList
 	    	세금코드 목록
 	    */
	    SELECT BC.CodeGroup AS "CodeGroup"
		, BC.Code AS "Code"
		, BC.CodeName AS "CodeName"
		, PTM.ProofCode AS "ProofCode"
		, PTM.DeductionType AS "DeductionType"
		, (PTM.ProofCode||PTM.DeductionType||BC.Code) AS "MapCode"
		, BC.IsUse AS "IsUse"
		FROM act_base_code BC
		INNER JOIN act_proof_tax_mapp PTM
		ON BC.CodeGroup = 'TaxCode'
		AND BC.Code = PTM.Code
		AND BC.CodeGroup = PTM.CodeGroup
		WHERE 1=1
		AND	PTM.CompanyCode = (
				CASE WHEN EXISTS (SELECT Code FROM act_proof_tax_mapp WHERE CompanyCode = #{companyCode})
				THEN #{companyCode}
				ELSE 'ALL'
				END
			)
	  	<if test="searchProofCode != null and searchProofCode != ''">
		 	AND PTM.ProofCode = #{searchProofCode}
		</if>
	  	<if test="searchDeductionType != null and searchDeductionType != ''">
		 	AND PTM.DeductionType = #{searchDeductionType}
		</if>
		
	</select>
    
	<select id="selectExpenceApplicationListDuplCk" parameterType="cmap" resultType="cmap">
 		SELECT  Count(*) AS "TotalCnt"
			 , COUNT(AEAL.CardUID) AS "CCCnt"
			 , COUNT(AEAL.TaxUID) AS "TBCnt"
			 , COUNT(AEAL.CashUID) AS "CBCnt"
			 , COUNT(AEAL.ReceiptID) AS "MRCnt"
             ,LISTAGG(AEAL.CardUID, ',') within group (order by AEAL.CardUID) AS "CCList"
			 ,LISTAGG(AEAL.TaxUID, ',') within group (order by AEAL.TaxUID) AS "TBList"
			 ,LISTAGG(AEAL.CashUID, ',') within group (order by AEAL.CashUID) AS "CBlist"
			 ,LISTAGG(AEAL.ReceiptID, ',') within group (order by AEAL.ReceiptID) AS "MRList"
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEAL
		ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
		WHERE AEA.ApplicationStatus NOT IN ('R', 'C', 'DELETE')
	  	<if test="ExpenceApplicationID != null and ExpenceApplicationID != ''">
			AND AEA.ExpenceApplicationID != #{ExpenceApplicationID}
		</if>
		AND 
		(
			1=2
			
			<choose>
				<when test="CCList != null">
					OR (AEAL.ProofCode = 'CorpCard' AND 
					<foreach collection="CCList" item="item" index="index" separator="," open="AEAL.CardUID IN (" close=")">
						#{item}
					</foreach>
					)
				</when>
			</choose>
			<choose>
				<when test="TBList != null">
					OR (AEAL.ProofCode = 'TaxBill' AND 
					<foreach collection="TBList" item="item" index="index" separator="," open="AEAL.TaxUID IN (" close=")">
						#{item}
					</foreach>
					)
				</when>
			</choose>
			<choose>
				<when test="CBList != null">
					OR (AEAL.ProofCode = 'CashBill' AND 
					<foreach collection="CBList" item="item" index="index" separator="," open="AEAL.CashUID IN (" close=")">
						#{item}
					</foreach>
					)
				</when>
			</choose>
			<choose>
				<when test="MRList != null">
					OR (AEAL.ProofCode = 'Receipt' AND 
					<foreach collection="MRList" item="item" index="index" separator="," open="AEAL.ReceiptID IN (" close=")">
						#{item}
					</foreach>
					)
				</when>
			</choose>
		)
		GROUP BY AEA.ExpenceApplicationID
    </select>
    
    <insert id="insertExpApp" parameterType="cmap">
 	    /* expenceApplication.insertExpApp 통합비용신청 */
		INSERT INTO act_expence_application (
			CompanyCode,
			ApplicationTitle,
			ApplicationType,
			ApplicationStatus,
			RequestType,
			UR_Code,
			RegisterID,
			RegistDate,
			ModifierID,
			ModifyDate,
			ChargeJob,
			PayDateType,
			RuleItemInfo,
			Sub_UR_Code,
			Sub_UR_Info
			, Note
		) VALUES (
			#{CompanyCode, jdbcType=VARCHAR},
			#{ApplicationTitle, jdbcType=VARCHAR},
			#{ApplicationType, jdbcType=VARCHAR},
			#{ApplicationStatus, jdbcType=VARCHAR},
			#{RequestType, jdbcType=VARCHAR},
 	    	CASE WHEN #{ApplicationStatus, jdbcType=VARCHAR} = 'S' THEN #{SessionUser, jdbcType=VARCHAR} ELSE '' END,
			#{SessionUser, jdbcType=VARCHAR},
			SYSDATE,
			#{SessionUser, jdbcType=VARCHAR},
			SYSDATE,
			#{ChargeJob, jdbcType=VARCHAR},
			#{PayDateType, jdbcType=VARCHAR},
			#{RuleItemInfo, jdbcType=VARCHAR},
			#{Sub_UR_Code, jdbcType=VARCHAR},
			#{Sub_UR_Info, jdbcType=VARCHAR}
			, #{Note, jdbcType=VARCHAR}
		)
		
		<selectKey keyProperty="ExpenceApplicationID" resultType="Integer" order="AFTER">
		    SELECT act_expence_application_Expenc.currval FROM DUAL
		</selectKey>
	</insert>
    
    
    <update id="updateExpApp" parameterType="cmap">
 	    /*
 	    	expenceApplication.updateExpApp
 	    	통합비용신청
 	    */
 	    
 	    UPDATE act_expence_application
 	    SET ApplicationTitle = #{ApplicationTitle}
 	    	, ApplicationStatus = #{ApplicationStatus}
 	    	, UR_Code = CASE WHEN #{ApplicationStatus}='S' THEN #{SessionUser} ELSE '' END
 	    	, RequestType = #{RequestType}
			, ModifierID = #{SessionUser}
			, ModifyDate = SYSDATE
			, ChargeJob = #{ChargeJob}
			, PayDateType = #{PayDateType}
			, RuleItemInfo = #{RuleItemInfo}
			, Sub_UR_Code = #{Sub_UR_Code}
			, Sub_UR_Info = #{Sub_UR_Info}
			, Note = CASE
					 	WHEN ApplicationStatus = 'T' THEN #{Note}
					 	ELSE Note
					 END
		WHERE ExpenceApplicationID = #{ExpenceApplicationID}
	</update>
	
	<update id="updateApvStatus" parameterType="cmap"> 	    
 	    UPDATE act_expence_application
 	    SET ApplicationStatus = #{ApplicationStatus}
 	    	<if test="ProcessID != 'CHARGE'">
			, ProcessID = #{ProcessID}
			</if>
			<if test="ApplicationStatus == 'D'.toString()">
			, ApplicationDate = SYSDATE
			</if>
			, UR_Code = #{UR_Code}
			, Comment_ = #{Comment}
		WHERE ExpenceApplicationID = #{ExpenceApplicationID}
	</update>
	
    <select id="selectUpdateActivityList" parameterType="cmap" resultType="cmap">
 	    /*
 	    	expenceApplication.selectUpdateActivityList
 	    	Active Update 목록
 	    */
		SELECT AEA.ExpenceApplicationID AS "ExpenceApplicationID"
		, AEAL.ExpenceApplicationListID AS "ExpenceApplicationListID"
		, AEAL.ProofCode AS "ProofCode"
		, CASE 
			WHEN AEAL.ProofCode = 'TaxBill'
				THEN TO_CHAR(AEAL.TaxUID)
			WHEN AEAL.ProofCode = 'CorpCard'
				THEN AEAL.CardUID
			WHEN AEAL.ProofCode = 'Receipt'
				THEN TO_CHAR(AEAL.ReceiptID)
		END AS "ReceiptID"
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEAL
		ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
		AND AEAL.ProofCode IN ('TaxBill', 'CorpCard', 'Receipt')
		WHERE AEA.ExpenceApplicationID = #{ExpenceApplicationID}
		
	</select>
	
    <update id="updateTaxBillActive" parameterType="cmap">
 	    /*
 	    	expenceApplication.updateTaxBillActive
 	    	전자세금계산서 상태변경
 	    */
 	    
 	    UPDATE act_taxinvoice
 	    SET ApproveStatus = #{Active}
		WHERE TaxInvoiceID = #{ReceiptID}
	</update>
	
    <update id="updateCardActive" parameterType="cmap">
 	    /*
 	    	expenceApplication.updateCardActive
 	    	카드 영수증 상태변경
 	    */
 	    
 	    UPDATE act_card_receipt
 	    SET Active = #{Active}
		WHERE ReceiptID = #{ReceiptID}
	</update>
	    
    <update id="updateMobileActive" parameterType="cmap">
 	    /*
 	    	expenceApplication.updateMobileActive
 	    	모바일 영수증 상태변경
 	    */
 	    
 	    UPDATE act_receipt
 	    SET Active = #{Active}
		WHERE ReceiptID = #{ReceiptID}
	</update>
	    
    <update id="updateApplicationStatus" parameterType="cmap">
 	    /*
 	    	expenceApplication.updateApplicationStatus
 	    	비용신청 상태 변경 및 결재 데이터 삭제
 	    */
 	    
 	    UPDATE act_expence_application
 	    SET 
 	    	ApplicationStatus = 'T'
 	    	, ProcessID = NULL
 	    	, UR_Code = ''
			, ModifierID = #{SessionUser}
			, ModifyDate = SYSDATE
		WHERE ExpenceApplicationID = #{ExpenceApplicationID}
	</update>
	    
    <update id="updateBizTripStatus" parameterType="cmap">
 	    /*
 	    	expenceApplication.updateBizTripStatus
 	    	출장정산 상태 변경 및 결재 데이터 삭제
 	    */
		UPDATE act_biztrip_application
		SET 
			ApplicationStatus = 'T'
			, ProcessID = NULL
			, UserID = NULL
			, ModifierID = #{SessionUser}
			, ModifyDate = SYSDATE
		WHERE ExpenceApplicationID = #{ExpenceApplicationID}
	</update>
	
    <update id="updateCapitalStatus" parameterType="cmap">
 	    UPDATE act_expence_application_list
 	    SET 
 	    	CapitalStatus = #{CapitalStatus}
 	    <if test="expAppListIDs != null">
 	    	<foreach collection="expAppListIDs" item="item" index="index" separator="," open="WHERE ExpenceApplicationListID IN (" close=")">
				#{item}
			</foreach>
 	    </if>
 	    <if test="expAppListIDs == null or expAppListIDs == ''">
		WHERE ExpenceApplicationID = #{ExpenceApplicationID}
		</if>
    </update>
    
    <update id="updateBusinessDataForApv" parameterType="cmap">
    	UPDATE jwf_processdescription
    	SET
    			BusinessData3 = #{AmountSum}
    		,	BusinessData4 = #{UsageComment}
    	WHERE	BusinessData2 = #{ExpenceApplicationID} 
    </update>
    
    <insert id="saveExpAppList" parameterType="cmap">
 	    /*
 	    	expenceApplication.saveExpAppList
 	    	통합비용신청 항목 목록
 	    */
		 MERGE INTO act_expence_application_list A
		 USING (
		 SELECT 
		       #{ExpenceApplicationID} AS ExpenceApplicationID
				, #{ProofDate ,jdbcType=VARCHAR} AS ProofDate
				, #{ProofCode ,jdbcType=VARCHAR} AS ProofCode
				, #{CardUID ,jdbcType=VARCHAR} AS CardUID
				, #{CashUID ,jdbcType=VARCHAR} AS CashUID
				, #{TaxUID ,jdbcType=VARCHAR} AS TaxUID
				, CASE WHEN #{ProofCode ,jdbcType=VARCHAR} ='Receipt' THEN #{ReceiptID ,jdbcType=VARCHAR} ELSE NULL END  AS ReceiptID
				, #{PostingDate ,jdbcType=VARCHAR} AS PostingDate
				, #{TaxType ,jdbcType=VARCHAR} AS TaxType
				, #{TaxCode ,jdbcType=VARCHAR} AS TaxCode
				, #{PayAdjustMethod ,jdbcType=VARCHAR} AS PayAdjustMethod
				, #{PayMethod ,jdbcType=VARCHAR} AS PayMethod
				, #{PayType ,jdbcType=VARCHAR} AS PayType
				, #{PayTarget ,jdbcType=VARCHAR} AS PayTarget
				, #{IsWithholdingTax ,jdbcType=VARCHAR} AS IsWithholdingTax
				, #{IncomeTax ,jdbcType=VARCHAR} AS IncomeTax
				, #{LocalTax ,jdbcType=VARCHAR} AS LocalTax
				, #{PayDate ,jdbcType=VARCHAR} AS PayDate
				, #{VendorNo ,jdbcType=VARCHAR} AS VendorNo
				, #{VendorName ,jdbcType=VARCHAR} AS VendorName
				, #{TotalAmount ,jdbcType=INTEGER} AS TotalAmount
				, #{RepAmount ,jdbcType=INTEGER} AS RepAmount
				, #{TaxAmount ,jdbcType=INTEGER} AS TaxAmount
				, #{PersonalCardNo ,jdbcType=VARCHAR} AS PersonalCardNo				
				, #{SessionUser ,jdbcType=VARCHAR} AS RegisterID
				, SYSDATE AS RegistDate				
				, #{ExpenceApplicationListID ,jdbcType=VARCHAR} AS ExpenceApplicationListID
				, #{AccountBank ,jdbcType=VARCHAR} AS AccountBank
				, #{AccountInfo ,jdbcType=VARCHAR} AS AccountInfo
				, #{AccountHolder ,jdbcType=VARCHAR} AS AccountHolder
				, #{ReservedStr1 ,jdbcType=VARCHAR} AS ReservedStr1
				, #{ReservedStr2 ,jdbcType=VARCHAR} AS ReservedStr2
				, #{ReservedStr3 ,jdbcType=VARCHAR} AS ReservedStr3
				, #{ReservedStr4 ,jdbcType=VARCHAR} AS ReservedStr4
				, #{ReservedStr5 ,jdbcType=VARCHAR} AS ReservedStr5
				, #{ReservedInt1 ,jdbcType=INTEGER} AS ReservedInt1
				, #{ReservedInt2 ,jdbcType=INTEGER} AS ReservedInt2
				, #{RealPayDate, jdbcType=VARCHAR} AS RealPayDate
				, #{RealPayAmount, jdbcType=INTEGER} AS RealPayAmount
				, #{AlterPayeeNo, jdbcType=VARCHAR} AS AlterPayeeNo
				, #{AlterPayeeName, jdbcType=VARCHAR} AS AlterPayeeName
				, #{CreditAccount, jdbcType=VARCHAR} AS CreditAccount
				, #{DebitAccount, jdbcType=VARCHAR} AS DebitAccount
				, #{ProviderName, jdbcType=VARCHAR} AS ProviderName
				, #{ProviderNo, jdbcType=VARCHAR} AS ProviderNo
				, #{Providee, jdbcType=VARCHAR} AS Providee
				, #{BillType, jdbcType=VARCHAR} AS BillType
				, #{ProofTime, jdbcType=VARCHAR} AS ProofTime
				, #{StoreName, jdbcType=VARCHAR} AS StoreName
				, #{Currency, jdbcType=VARCHAR} AS Currency
				, #{ExchangeRate, jdbcType=INTEGER} AS ExchangeRate
				, #{LocalAmount, jdbcType=INTEGER} AS LocalAmount
				, #{EmpInsurance ,jdbcType=INTEGER} AS EmpInsurance
				, #{AccidInsurance ,jdbcType=INTEGER} AS AccidInsurance
				, #{WorkingDay ,jdbcType=INTEGER} AS WorkingDay
				, #{ActualDay ,jdbcType=INTEGER} AS ActualDay
		    FROM DUAL
		 ) B
		 ON (A.ExpenceApplicationListID = B.ExpenceApplicationListID)
		 WHEN MATCHED THEN 
		 UPDATE SET 
		    A.ProofDate = B.ProofDate
		    , A.ProofCode = B.ProofCode
		    , A.CardUID = B.CardUID
		    , A.CashUID = B.CashUID
		    , A.TaxUID = B.TaxUID
		    , A.ReceiptID = B.ReceiptID
		    , A.PostingDate = B.PostingDate
		    , A.TaxType = B.TaxType
		    , A.TaxCode = B.TaxCode
		    , A.PayAdjustMethod = B.PayAdjustMethod
		    , A.PayMethod = B.PayMethod
			, A.PayType = B.PayType
			, A.PayTarget = B.PayTarget
		    , A.IsWithholdingTax = B.IsWithholdingTax
		    , A.IncomeTax = B.IncomeTax
		    , A.LocalTax = B.LocalTax
		    , A.PayDate = B.PayDate
		    , A.VendorNo = B.VendorNo
		    , A.VendorName = B.VendorName
		    , A.TotalAmount = B.TotalAmount
		    , A.RepAmount = B.RepAmount
		    , A.TaxAmount = B.TaxAmount
		    , A.PersonalCardNo = B.PersonalCardNo
		    , A.ModifierID = B.RegisterID
		    , A.ModifyDate = B.RegistDate
		    , A.BankCode = B.AccountBank
		    , A.BankAccountNo = B.AccountInfo
		    , A.BankAccountName = B.AccountHolder
		    , A.ReservedStr1 = B.ReservedStr1
		    , A.ReservedStr2 = B.ReservedStr2
		    , A.ReservedStr3 = B.ReservedStr3
		    , A.ReservedStr4 = B.ReservedStr4
		    , A.ReservedStr5 = B.ReservedStr5
		    , A.ReservedInt1 = B.ReservedInt1
		    , A.ReservedInt2 = B.ReservedInt2
		    , A.RealPayDate = B.RealPayDate
		    , A.RealPayAmount = B.RealPayAmount
			, A.AlterPayeeNo = B.AlterPayeeNo
			, A.AlterPayeeName = B.AlterPayeeName
			, A.CreditAccount = B.CreditAccount
			, A.DebitAccount = B.DebitAccount
			, A.ProviderName = B.ProviderName
			, A.ProviderNo = B.ProviderNo
			, A.Providee = B.Providee
			, A.BillType = B.BillType
			, A.ProofTime = B.ProofTime
			, A.StoreName = B.StoreName
			, A.Currency = B.Currency
			, A.ExchangeRate = B.ExchangeRate
			, A.LocalAmount = B.LocalAmount
			, A.EmpInsurance = B.EmpInsurance
			, A.AccidInsurance = B.AccidInsurance
			, A.WorkingDay = B.WorkingDay
			, A.ActualDay = B.ActualDay
		 WHEN NOT MATCHED THEN 
		 INSERT
		 (
		 	A.ExpenceApplicationID
		 	, A.ProofDate
		 	, A.ProofCode 
		 	, A.CardUID 
		 	, A.CashUID 
		 	, A.TaxUID
		 	, A.ReceiptID 
		 	, A.PostingDate 
		 	, A.TaxType 
		 	, A.TaxCode 
		 	, A.PayAdjustMethod
		 	, A.PayMethod
			, A.PayType
			, A.PayTarget
		 	, A.IsWithholdingTax
		 	, A.IncomeTax
		 	, A.LocalTax
		 	, A.PayDate
		 	, A.VendorNo
		 	, A.VendorName
		 	, A.TotalAmount
		 	, A.RepAmount
		 	, A.TaxAmount
		 	, A.PersonalCardNo
		    , A.BankCode
		    , A.BankAccountNo
		    , A.BankAccountName
		    , A.RegisterID
		    , A.RegistDate
		    , A.ModifierID
		    , A.ModifyDate
		    , A.ReservedStr1
		    , A.ReservedStr2
		    , A.ReservedStr3
		    , A.ReservedStr4
		    , A.ReservedStr5
		    , A.ReservedInt1
		    , A.ReservedInt2
		    , A.RealPayDate
		    , A.RealPayAmount
			, A.AlterPayeeNo
			, A.AlterPayeeName
			, A.CreditAccount
			, A.DebitAccount
			, A.ProviderName
			, A.ProviderNo
			, A.Providee
			, A.BillType
			, A.ProofTime
			, A.StoreName
			, A.Currency
			, A.ExchangeRate
			, A.LocalAmount
			, A.EmpInsurance
			, A.AccidInsurance
			, A.WorkingDay
			, A.ActualDay
		 )
		 VALUES
		 (
		 	B.ExpenceApplicationID
		 	, B.ProofDate 
		    , B.ProofCode
		    , B.CardUID
		    , B.CashUID
		    , B.TaxUID
		    , B.ReceiptID
		    , B.PostingDate
		    , B.TaxType
		    , B.TaxCode
		    , B.PayAdjustMethod
		    , B.PayMethod
		    , B.PayType
		    , B.PayTarget
		    , B.IsWithholdingTax
		    , B.IncomeTax
		    , B.LocalTax
		    , B.PayDate
		    , B.VendorNo
		    , B.VendorName
		    , B.TotalAmount
		    , B.RepAmount
		    , B.TaxAmount
		    , B.PersonalCardNo
		    , B.AccountBank
		    , B.AccountInfo
		    , B.AccountHolder
		    , B.RegisterID
		    , B.RegistDate
		    , B.RegisterID
		    , B.RegistDate
		    , B.ReservedStr1
		    , B.ReservedStr2
		    , B.ReservedStr3
		    , B.ReservedStr4
		    , B.ReservedStr5
		    , B.ReservedInt1
		    , B.ReservedInt2
		    , B.RealPayDate
		    , B.RealPayAmount
			, B.AlterPayeeNo
			, B.AlterPayeeName
			, B.CreditAccount
			, B.DebitAccount
			, B.ProviderName
			, B.ProviderNo
			, B.Providee
			, B.BillType
			, B.ProofTime
			, B.StoreName
			, B.Currency
			, B.ExchangeRate
			, B.LocalAmount
			, B.EmpInsurance
			, B.AccidInsurance
			, B.WorkingDay
			, B.ActualDay
		 )
		<selectKey keyProperty="InsertedExpenceApplicationListID" resultType="Integer" order="AFTER">
		    <if test="ExpenceApplicationListID == null or ExpenceApplicationListID == ''">
				SELECT act_expence_application_list_e.currval  FROM DUAL
			</if>
			<if test="ExpenceApplicationListID != null and ExpenceApplicationListID != ''">
			    SELECT #{ExpenceApplicationListID ,jdbcType=VARCHAR} AS currval FROM DUAL 
			</if>
		</selectKey>
	</insert>
    
    <insert id="updateCRInfo" parameterType="cmap">
 	    /*
 	    	expenceApplication.updateCRInfo
 	    	카드 부가세/공급가액 수정
 	    */
		
		 MERGE INTO act_card_receipt A
		 USING (
		 SELECT 
		     #{TaxAmount ,jdbcType=INTEGER} AS TaxAmount
		    , #{RepAmount ,jdbcType=INTEGER} AS RepAmount
		    <if test="ServiceAmount != null and ServiceAmount != ''">
		    , #{ServiceAmount}    AS ServiceAmount 
		    </if>
		    , #{CardUID ,jdbcType=INTEGER} AS ReceiptID
		    FROM DUAL
		 ) B
		 ON (A.ReceiptID = B.ReceiptID)
		 WHEN MATCHED THEN UPDATE SET A.TaxAmount = B.TaxAmount, A.RepAmount = B.RepAmount
		<if test="ServiceAmount != null and ServiceAmount != ''">
		, A.ServiceAmount = B.ServiceAmount    
		</if>		
	</insert>
    
	<delete id="deleteExpAppList" parameterType="cmap">
 	    /*
 	    	expenceApplication.deleteExpAppList
 	    	증빙목록 삭제
 	    */
	    DELETE FROM act_expence_application_list
	    WHERE ExpenceApplicationListID = #{ExpenceApplicationListID}
    </delete>
    
	<!-- 임시함 JWF_PrivateDomainData 삭제 -->
	<delete id="deletePrivateDomainData" parameterType="cmap">
		DELETE FROM JWF_PrivateDomainData
		WHERE OWNERID = #{OwnerID}
	</delete>
	
	
	
	
    <insert id="insertCorpCardIFData" parameterType="cmap">
 	    /*
 	    	expenceApplication.insertCorpCardIFData
 	    	인터페이스 데이터 삽입
 	    */
		
		INSERT INTO act_card_receipt (
			ReceiptID
			, ApproveStatus
			, DataIndex
			, SendDate
			, ItemNo
			, CardNo
			, InfoIndex
			, InfoType
			, CardCompIndex
			, CardRegType
			, CardType
			, BizPlaceNo
			, Dept
			, CardUserCode
			, UseDate
			, ApproveDate
			, ApproveTime
			, ApproveNo
			, WithdrawDate
			, CountryIndex
			, AmountSign
			, AmountWon
			, ForeignCurrency
			, AmountForeign
			, StoreRegNo
			, StoreName
			, StoreNo
			, StoreRepresentative
			, StoreCondition
			, StoreCategory
			, StoreZipCode
			, StoreAddress1
			, StoreAddress2
			, StoreTel
			, RepAmount
			, TaxAmount
			, ServiceAmount
			, Active
			, IntDate
			, CollNo
			, TaxType
			, TaxTypeDate
			, MerchCessDate
			, Class
			, TossUserCode
			, TossSenderUserCode
			, TossDate
			, TossComment
			, IsPersonalUse
		)VALUES (
			#{ReceiptID}
			, #{ApproveStatus}
			, #{DataIndex}
			, #{SendDate}
			, #{ItemNo}
			, #{CardNo}
			, #{InfoIndex}
			, #{InfoType}
			, #{CardCompIndex}
			, #{CardRegType}
			, #{CardType}
			, #{BizPlaceNo}
			, #{Dept}
			, #{CardUserCode}
			, #{UseDate}
			, #{ApproveDate}
			, #{ApproveTime}
			, #{ApproveNo}
			, #{WithdrawDate}
			, #{CountryIndex}
			, #{AmountSign}
			, #{AmountWon}
			, #{ForeignCurrency}
			, #{AmountForeign}
			, #{StoreRegNo}
			, #{StoreName}
			, #{StoreNo}
			, #{StoreRepresentative}
			, #{StoreCondition}
			, #{StoreCategory}
			, #{StoreZipCode}
			, #{StoreAddress1}
			, #{StoreAddress2}
			, #{StoreTel}
			, #{RepAmount}
			, #{TaxAmount}
			, #{ServiceAmount}
			, #{Active}
			, #{IntDate}
			, #{CollNo}
			, #{TaxType}
			, #{TaxTypeDate}
			, #{MerchCessDate}
			, #{Class}
			, #{TossUserCode}
			, #{TossSenderUserCode}
			, #{TossDate}
			, #{TossComment}
			, #{IsPersonalUse}
		)
	</insert>
	
    <insert id="insertTaxBillIFData" parameterType="cmap">
 	    /*
 	    	expenceApplication.insertTaxBillIFData
 	    	통합비용신청 세부비용
 	    */
		INSERT INTO act_taxinvoice (
				CompanyCode
			,	DataIndex
			,	WriteDate
			,	IssueDT
			,	InvoiceType
			,	TaxType
			,	TaxTotal
			,	SupplyCostTotal
			,	TotalAmount
			,	PurposeType
			,	SerialNum
			,	Cash
			,	ChkBill
			,	Credit
			,	Note
			,	Remark1
			,	Remark2
			,	Remark3
			,	NTSConfirmNum
			,	ModifyCode
			,	OrgNTSConfirmNum
			,	InvoicerCorpNum
			,	InvoicerMgtKey
			,	InvoicerTaxRegID
			,	InvoicerCorpName
			,	InvoicerCEOName
			,	InvoicerAddr
			,	InvoicerBizType
			,	InvoicerBizClass
			,	InvoicerContactName
			,	InvoicerDeptName
			,	InvoicerTel
			,	InvoicerEmail
			,	InvoiceeCorpNum
			,	InvoiceeType
			,	InvoiceeMgtKey
			,	InvoiceeTaxRegID
			,	InvoiceeCorpName
			,	InvoiceeCEOName
			,	InvoiceeAddr
			,	InvoiceeBizType
			,	InvoiceeBizClass
			,	InvoiceeContactName1
			,	InvoiceeDeptName1
			,	InvoiceeTel1
			,	InvoiceeEmail1
			,	InvoiceeContactName2
			,	InvoiceDeptName2
			,	InvoiceTel2
			,	InvoiceEmail2
			,	TrusteeCorpNum
			,	TrusteeMgtKey
			,	TrusteeTaxRegID
			,	TrusteeCorpName
			,	TrusteeCEOName
			,	TrusteeAddr
			,	TrusteeBizType
			,	TrusteeBizClass
			,	TrusteeContactName
			,	TrusteeDeptName
			,	TrusteeTel
			,	TrusteeEmail
			,	TossUserCode
			,	TossSenderUserCode
			,	TossDate
			,	TossComment
			,	RegistDate
			,	IntDate
			,	IsOffset
			,	CONVERSATION_ID
			,	SUPBUY_TYPE
			,	DIRECTION
		) VALUES (
				#{CompanyCode}
			,	#{DataIndex}
			,	#{WriteDate}
			,	#{IssueDT}
			,	#{InvoiceType}
			,	#{TaxType}
			,	#{TaxTotal}
			,	#{SupplyCostTotal}
			,	#{TotalAmount}
			,	#{PurposeType}
			,	#{SerialNum}
			,	#{Cash}
			,	#{ChkBill}
			,	#{Credit}
			,	#{Note}
			,	#{Remark1}
			,	#{Remark2}
			,	#{Remark3}
			,	#{NTSConfirmNum}
			,	#{ModifyCode}
			,	#{OrgNTSConfirmNum}
			,	#{InvoicerCorpNum}
			,	#{InvoicerMgtKey}
			,	#{InvoicerTaxRegID}
			,	#{InvoicerCorpName}
			,	#{InvoicerCEOName}
			,	#{InvoicerAddr}
			,	#{InvoicerBizType}
			,	#{InvoicerBizClass}
			,	#{InvoicerContactName}
			,	#{InvoicerDeptName}
			,	#{InvoicerTel}
			,	#{InvoicerEmail}
			,	#{InvoiceeCorpNum}
			,	#{InvoiceeType}
			,	#{InvoiceeMgtKey}
			,	#{InvoiceeTaxRegID}
			,	#{InvoiceeCorpName}
			,	#{InvoiceeCEOName}
			,	#{InvoiceeAddr}
			,	#{InvoiceeBizType}
			,	#{InvoiceeBizClass}
			,	#{InvoiceeContactName1}
			,	#{InvoiceeDeptName1}
			,	#{InvoiceeTel1}
			,	#{InvoiceeEmail1}
			,	#{InvoiceeContactName2}
			,	#{InvoiceDeptName2}
			,	#{InvoiceTel2}
			,	#{InvoiceEmail2}
			,	#{TrusteeCorpNum}
			,	#{TrusteeMgtKey}
			,	#{TrusteeTaxRegID}
			,	#{TrusteeCorpName}
			,	#{TrusteeCEOName}
			,	#{TrusteeAddr}
			,	#{TrusteeBizType}
			,	#{TrusteeBizClass}
			,	#{TrusteeContactName}
			,	#{TrusteeDeptName}
			,	#{TrusteeTel}
			,	#{TrusteeEmail}
			,	#{TossUserCode}
			,	#{TossSenderUserCode}
			,	#{TossDate}
			,	#{TossComment}
			,	SYSDATE
			,	SYSDATE
			,	#{IsOffset}
			,	#{CONVERSATION_ID}
			,	#{SUPBUY_TYPE}
			,	#{DIRECTION}
		) 
		<selectKey keyProperty="TaxInvoiceID" resultType="Integer" order="AFTER">
		    SELECT act_taxinvoice_TaxInvoiceID_SE.currval  FROM DUAL
		</selectKey>
	</insert>
	
    <insert id="insertTaxBillItemIFData" parameterType="cmap">
 	    /*
 	    	expenceApplication.insertTaxBillItemIFData
 	    	통합비용신청 세부비용 item
 	    */
 	    INSERT INTO act_taxinvoice_item
 	    (
		TaxInvoiceID
		, PurchaseDT
		, ItemName
		, Spec
		, Qty
		, UnitCost
		, SupplyCost
		, Tax
		, Remark
		, RegistDate
 	    )
 	    VALUES
 	    (
		#{TaxInvoiceID}
		, #{PurchaseDT}
		, #{ItemName}
		, #{Spec}
		, #{Qty}
		, #{UnitCost}
		, #{SupplyCost}
		, #{Tax}
		, #{Remark}
		, SYSDATE
 	    )
	</insert>
	
    
    
    
	<delete id="deleteIFCorpCardReceiptFromExpAppList" parameterType="cmap">
 	    /*
 	    	expenceApplication.deleteCorpCardReceiptFromExpAppList
 	    	증빙 삭제시 법인카드 사용내역 삭제
 	    	사용내역을 DB에서 조회 한게 아니라 증빙을 생성시 입력하는 구조일시 사용
 	    */
 	    DELETE FROM act_card_receipt
		WHERE ReceiptID = #{CardUID}
    </delete>
	<delete id="deleteIFTaxBillFromExpAppList" parameterType="cmap">
 	    /*
 	    	expenceApplication.deleteTaxBillFromExpAppList
 	    	증빙 삭제시 세금계산서 삭제
 	    	세금계산서를 DB에서 조회 한게 아니라 증빙을 생성시 입력하는 구조일시 사용
 	    */
 	    DELETE FROM act_taxinvoice
		WHERE TaxInvoiceID = #{TaxUID}
    </delete>
	
	
	<select id="deleteExpAppCntList" resultType="java.lang.Long">
 	    /*
 	    	expenceApplication.deleteExpAppCntList
 	    	증빙전표 삭제용 리스트 카운트 체크
 	    */
		SELECT COUNT(*) 
		FROM act_expence_application EA
		INNER JOIN act_expence_application_list EAL
		ON EA.ExpenceApplicationID = EAL.ExpenceApplicationID
		WHERE EA.ExpenceApplicationID = #{ExpenceApplicationID}
    </select>
    
	<delete id="deleteExpApp" parameterType="cmap">
 	    /*
 	    	expenceApplication."deleteExpApp"
 	    	증빙 전표 삭제
 	    */
	    DELETE FROM act_expence_application
	    WHERE ExpenceApplicationID = #{ExpenceApplicationID}
    </delete>
    
    
    <insert id="insertExpAppListDiv" parameterType="cmap">
 	    /*
 	    	expenceApplication.insertExpAppListDiv
 	    	통합비용신청 세부비용
 	    */
		INSERT INTO act_expence_application_div
		(
			ExpenceApplicationListID
			, AccountCode
			, AccountName
			, CostCenterCode
			, CostCenterName
			, IOCode
			, IOName
			, Amount
			, UsageComment
			, StandardBriefID
			, StandardBriefName
			, RegisterID
			, RegistDate
			, ReservedStr1
			, ReservedStr2
			, ReservedStr3
			, ReservedStr4
			, ReservedStr5
			, ReservedInt1
			, ReservedInt2		
		)
		VALUES
		(
			#{ExpenceApplicationListID ,jdbcType=INTEGER}
			, #{AccountCode ,jdbcType=VARCHAR}
			, #{AccountName ,jdbcType=VARCHAR}
			, #{CostCenterCode ,jdbcType=VARCHAR}
			, #{CostCenterName ,jdbcType=VARCHAR}
			, #{IOCode ,jdbcType=VARCHAR}
			, #{IOName ,jdbcType=VARCHAR}
			, #{Amount ,jdbcType=INTEGER}
			, #{UsageComment ,jdbcType=VARCHAR}
			, #{StandardBriefID ,jdbcType=VARCHAR}
			, #{StandardBriefName ,jdbcType=VARCHAR}
			, #{SessionUser ,jdbcType=VARCHAR}
			, SYSDATE
			, #{ReservedStr1_Div ,jdbcType=VARCHAR}
			, #{ReservedStr2_Div ,jdbcType=VARCHAR}
			, #{ReservedStr3_Div ,jdbcType=VARCHAR}
			, #{ReservedStr4_Div ,jdbcType=VARCHAR}
			, #{ReservedStr5_Div ,jdbcType=VARCHAR}
			, #{ReservedInt1_Div ,jdbcType=INTEGER}
			, #{ReservedInt2_Div ,jdbcType=INTEGER}
		)
	</insert>
	<delete id="deleteExpAppDiv" parameterType="cmap">
 	    /*
 	    	expenceApplication.deleteExpAppDiv
 	    	세부증빙 삭제
 	    */
	    DELETE FROM act_expence_application_div
	    WHERE ExpenceApplicationListID = #{ExpenceApplicationListID}
    </delete>
    
    <insert id="insertExpAppFile" parameterType="cmap">
 	    /*
 	    	expenceApplication.insertExpAppFile
 	    	통합비용신청
 	    */
		INSERT INTO act_expence_application_file
		(
			FileID
			, ExpenceApplicationListID
			, RegisterID
			, RegistDate

		)
		VALUES
		(
			#{FileID ,jdbcType=INTEGER}
			, #{ExpenceApplicationListID ,jdbcType=INTEGER}
			, #{SessionUser ,jdbcType=VARCHAR}
			, SYSDATE
		)
		
	</insert>
	
    
	
    <select id="selectExpAppListForDelete" parameterType="cmap" resultType="cmap">
 	    /*
 	    	expenceApplication.selectExpAppListForDelete
 	    	app삭제를 위해 하위 list 조회
 	    */
	    SELECT ExpenceApplicationListID  AS "ExpenceApplicationListID"
	    , ExpenceApplicationID AS "ExpenceApplicationID"
	    , ProofCode AS "ProofCode"
	    , CardUID AS "CardUID"
	    , CashUID AS "CashUID"
	    , TaxUID AS "TaxUID"
	    FROM act_expence_application_list
	    WHERE ExpenceApplicationID = #{ExpenceApplicationID}
    </select>
    <select id="selectExpAppFileForDelete" parameterType="cmap" resultType="cmap">
 	    /*
 	    	expenceApplication.selectExpAppFileForDelete
 	    	파일매핑 삭제를 위한 조회
 	    */
	    SELECT FileID AS "FileID" FROM act_expence_application_file
	    WHERE ExpenceApplicationListID = #{ExpenceApplicationListID}
    </select>
	<delete id="deleteFileDbByID" parameterType="cmap">
 	    /*
 	    	expenceApplication.deleteFileDbByID
 	    	파일db삭제
 	    */
		<![CDATA[
			DELETE FROM sys_file
			WHERE FileID = #{FileID}
		]]>
	</delete>
	<delete id="deleteExpAppFile" parameterType="cmap">
 	    /*
 	    	expenceApplication.deleteExpAppFile
 	    	파일매핑 삭제
 	    */
	    DELETE FROM act_expence_application_file
	    WHERE ExpenceApplicationListID = #{ExpenceApplicationListID}
    </delete>
	<delete id="deleteExpAppFileOne" parameterType="cmap">
 	    /*
 	    	expenceApplication.deleteExpAppFileOne
 	    	파일매핑 1건 삭제
 	    */
	    DELETE FROM act_expence_application_file
	    WHERE ExpenceApplicationListID = #{ExpenceApplicationListID}
	    AND FileID = #{FileID}
    </delete>
    
    
    <insert id="insertExpAppDoc" parameterType="cmap">
 	    /*
 	    	expenceApplication.insertExpAppDoc
 	    	통합비용신청
 	    */
		INSERT INTO act_expence_application_ref
		(
			ProcessID
			, ExpenceApplicationListID
			, bstored
			, BusinessData1
			, BusinessData2
			, RegisterID
			, RegistDate

		)
		VALUES
		(
			#{ProcessID ,jdbcType=INTEGER}
			, #{ExpenceApplicationListID ,jdbcType=INTEGER}
			, #{bstored ,jdbcType=VARCHAR}
			, #{BusinessData1 ,jdbcType=VARCHAR}
			, #{BusinessData2 ,jdbcType=VARCHAR}
			, #{SessionUser ,jdbcType=VARCHAR}
			, SYSDATE
		)
	</insert>
	
	<delete id="deleteExpAppDoc" parameterType="cmap">
 	    /*
 	    	expenceApplication.deleteExpAppDoc
 	    	문서 매핑 삭제
 	    */
	    DELETE FROM act_expence_application_ref
	    WHERE ExpenceApplicationListID = #{ExpenceApplicationListID}
    </delete>
    
	<select id="getCashBillInfo" parameterType="cmap" resultType="cmap">
	    /*
		    expenceApplication.getCashBillInfo
	    */
	    
	    SELECT CashBillID AS "CashBillID"
				, CashBillID AS "CashUID"
				, NTSConfirmNum AS "CashNTSConfirmNum"
				, TradeDT AS "TradeDT"
				, TO_CHAR(TO_DATE(TradeDT, 'YYYYMMDD'), 'YYYYMMDD') AS "ProofDate"
				, TO_CHAR(TO_DATE(TradeDT, 'YYYYMMDD'), 'YYYY.MM.DD') AS "ProofDateStr"
				, TradeType AS "TradeType"
				, SupplyCost AS "SupplyCost"
				, Tax AS "Tax"
				, ServiceFree AS "ServiceFree"
				, TotalAmount AS "TotalAmount"
				, FranchiseCorpNum AS "FranchiseCorpNum"
				, FranchiseCorpName AS "FranchiseCorpName"
				, CashBillID AS "CashBillID"
				, VD.VendorNo AS "VendorNo"
				, NVL(VD.VendorName, CB.FranchiseCorpName) AS "VendorName"
		FROM act_cashbill CB
		LEFT OUTER JOIN act_vendor VD
			ON CB.FranchiseCorpNum = VD.VendorNo
		WHERE
			<choose>
				<when test="cashBillIDList != null">
					<foreach collection="cashBillIDList" item="item" index="index" separator="," open="CashBillID IN (" close=")">
						#{item}
					</foreach>
				</when>
				<otherwise>
					1=2
				</otherwise>
			</choose> 
    </select>
    
    <select id="getApplicationListCopy" parameterType="cmap" resultType="cmap">
    	/*
    		expenceApplication.getApplicationListCopy
    		전표복사용 데이터 가져오기
    	*/
    	SELECT AEAL.*, AEAD.*
    	FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEAL
		ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
		INNER JOIN act_expence_application_div AEAD
		ON AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
		WHERE AEAL.ExpenceApplicationListID = #{ListID}
    </select>
    
	<select id="getTaxBillInfo" parameterType="cmap" resultType="cmap">
 	    /*
 	    	expenceApplication.getTaxBillInfo
 	    	세금계산서 정보
 	    */
		SELECT	ATI.TaxInvoiceID AS "TaxInvoiceID"
	    	,	ATI.TaxInvoiceID AS "TaxUID"
	    	,	ATI.NTSConfirmNum AS "TaxNTSConfirmNum"
	    	,	ATI.CONVERSATION_ID AS "CONVERSATION_ID"
			,	ATI.WriteDate AS "WriteDate"
			,	ATI.InvoicerCorpNum AS "InvoicerCorpNum"
			,	ATI.InvoicerCorpName AS "InvoicerCorpName"
			,	ATI.InvoicerCEOName AS "InvoicerCEOName"
			,	ATI.InvoicerAddr AS "InvoicerAddr"
			,	ATI.InvoicerBizType AS "InvoicerBizType"
			,	ATI.InvoicerBizClass AS "InvoicerBizClass"
			,	ATI.InvoiceeCorpNum AS "InvoiceeCorpNum"
			,	ATI.InvoiceeCorpName AS "InvoiceeCorpName"
			,	ATI.InvoiceeCEOName AS "InvoiceeCEOName"
			,	ATI.InvoiceeAddr AS "InvoiceeAddr"
			,	ATI.InvoiceeBizType AS "InvoiceeBizType"
			,	ATI.InvoiceeBizClass AS "InvoiceeBizClass"
			,	ATI.TotalAmount AS "TotalAmount"
			,	ATI.TaxTotal AS "Tax"
			,	ATI.SupplyCostTotal AS "SupplyCost"
			,	ATI.Remark1 AS "Remark"
			,	ATI.PurposeType AS "PurposeType"
			,	TO_CHAR(TO_DATE(ATI.WriteDate, 'YYYYMMDD'),'YYYY.MM.DD')				AS "FormatWriteDate"
			,	TO_CHAR(ATI.TotalAmount,'999,999,999,999,999,999,999,999')				AS "FormatTotalAmount"
			,	TO_CHAR(ATI.TaxTotal,'999,999,999,999,999,999,999,999')					AS "FormatTaxTotal"
			,	TO_CHAR(ATI.SupplyCostTotal,'999,999,999,999,999,999,999,999')			AS "FormatSupplyCostTotal"
			,	VD.VendorID AS "VendorID"
			,	NVL(VD.VendorName, ATI.InvoicerCorpName) AS "VendorName"
			,	NVL(VD.VendorNo, ATI.InvoicerCorpNum) AS "VendorNo"
			,	NVL(VD.BusinessNumber, ATI.InvoicerCorpNum) AS "BusinessNumber"
			,	VD.PaymentMethod AS "PayMethod"
			,	VD.PaymentCondition AS "PayType"
			, ( SELECT LISTAGG(VDB.BankCode, ',') within group (order by VDB.BankAccountNo) FROM act_vendor_bank VDB WHERE VendorID = VD.VendorID ) AS "BankCode"
			, ( SELECT LISTAGG(VDB.BankName, ',') within group (order by VDB.BankAccountNo) FROM act_vendor_bank VDB WHERE VendorID = VD.VendorID ) AS "BankName"
			, ( SELECT LISTAGG(VDB.BankAccountNo, ',') within group (order by VDB.BankAccountNo) FROM act_vendor_bank VDB WHERE VendorID = VD.VendorID ) AS "BankAccountNo"
			, ( SELECT LISTAGG(VDB.BankAccountNo, ',') within group (order by VDB.BankAccountNo) FROM act_vendor_bank VDB WHERE VendorID = VD.VendorID ) AS "BankAccountInfo"
      		, ( SELECT LISTAGG(VDB.BankAccountName, ',') within group (order by VDB.BankAccountNo) FROM act_vendor_bank VDB WHERE VendorID = VD.VendorID ) AS "BankAccountName"
		    , ( SELECT ATII.ItemName FROM act_taxinvoice_item ATII WHERE ati.taxinvoiceid = ATII.taxinvoiceid AND ROWNUM = 1) AS "ItemName"
		    , ( SELECT COUNT(*) FROM act_vendor SBV WHERE SBV.businessnumber = ATI.InvoicerCorpNum) AS "BusinessNumberCnt"
		FROM	act_taxinvoice ATI
		LEFT OUTER JOIN act_vendor VD ON REPLACE(ATI.InvoicerCorpNum, '-', '') = REPLACE(VD.BusinessNumber, '-', '')
		WHERE	1=1
		AND		ATI.TaxInvoiceID =  #{taxBillID}
		AND		ROWNUM = 1
	</select>

	<select id="getVdCheck" parameterType="cmap" resultType="cmap">
 	    /*
 	    	expenceApplication.getVdCheck
 	    	업체 존재유무 체크
 	    */
		SELECT	
			
			VD.VendorID AS "VendorID"
			, VD.VendorName AS "VendorName"
			, VD.VendorNo AS "VendorNo"
			, VD.CEOName AS "CEOName"
			, VD.Address AS "Address"
			, VD.Industry AS "Industry"
			, VD.Sector AS "Sector"
			, ( SELECT LISTAGG(VDB.BankCode, ',') within group (order by VDB.BankAccountNo) FROM act_vendor_bank VDB WHERE VendorID = VD.VendorID ) AS "BankCode"
			, ( SELECT LISTAGG(VDB.BankName, ',') within group (order by VDB.BankAccountNo) FROM act_vendor_bank VDB WHERE VendorID = VD.VendorID ) AS "BankName"
			, ( SELECT LISTAGG(VDB.BankAccountNo, ',') within group (order by VDB.BankAccountNo) FROM act_vendor_bank VDB WHERE VendorID = VD.VendorID ) AS "BankAccountNo"
			, ( SELECT LISTAGG(VDB.BankAccountNo, ',') within group (order by VDB.BankAccountNo) FROM act_vendor_bank VDB WHERE VendorID = VD.VendorID ) AS "BankAccountInfo"
      		, ( SELECT LISTAGG(VDB.BankAccountName, ',') within group (order by VDB.BankAccountNo) FROM act_vendor_bank VDB WHERE VendorID = VD.VendorID ) AS "BankAccountName"
      		, VD.PaymentCondition AS "PayType"
			, VD.PaymentMethod AS "PayMethod"
		FROM act_vendor VD
		WHERE	1=1
		AND		REPLACE(VD.BusinessNumber, '-', '') = #{VendorNo}
	</select>
	
	
	
	<select id="selectExpenceApplicationApp" parameterType="cmap" resultType="cmap">
		/*
			expenceApplication.selectExpenceApplicationApp
		*/		
		<include refid="oracle.include.pagingHeader" />
		SELECT A.ExpenceApplicationID  AS "ExpenceApplicationID"
				, A.CompanyCode AS "CompanyCode"
				, A.CompanyName AS "CompanyName"
				, A.ApplicationTitle AS "ApplicationTitle"
				, A.ApplicationType AS "ApplicationType"
				, A.ApplicationTypeName AS "ApplicationTypeName"
				, A.ApplicationStatus AS "ApplicationStatus"
				, A.ApplicationStatusName AS "ApplicationStatusName"
				, A.ApplicationDate AS "ApplicationDate"
				, A.RequestType AS "RequestType"
				, A.RequestTypeName AS "RequestTypeName"
				, A.ProcessID AS "ProcessID"
				, A.RegisterID AS "RegisterID"
				, A.RegisterName AS "RegisterName"
				, A.RegistDate AS "RegistDate"
				, A.ChargeJob AS "ChargeJob"
				, A.TotalAmountSum AS "TotalAmountSum"
				, A.TotalAmountSumNum AS "TotalAmountSumNum"
				, A.AmountSum AS "AmountSum"
				, A.AmountSumNum AS "AmountSumNum"
				, A.DocNo AS "DocNo"
				, A.unDocNo AS "unDocNo"
		FROM
		(
			SELECT  A.ExpenceApplicationID 
					, A.CompanyCode
					, FN_GETACTBASECODENAME('CompanyCode', A.CompanyCode, #{CompanyCode}) CompanyName
					, A.ApplicationTitle
					, A.ApplicationType
					, FN_GETACTBASECODENAME('ExpAppType', A.ApplicationType, #{CompanyCode}) ApplicationTypeName
					, A.ApplicationStatus
					, FN_GETACTBASECODENAME('ExpenceApplicationStatus', A.ApplicationStatus, #{CompanyCode}) ApplicationStatusName
					, A.ApplicationDate
					, A.RequestType
					, A.RequestTypeName
					, A.ProcessID
					, A.RegisterID
					, A.RegisterName
					, A.RegistDate
					, A.ChargeJob
					, TO_CHAR(SUM(A.TotalAmount),'999,999,999,999,999,999,999,999.00')				AS TotalAmountSum
					, SUM(A.TotalAmount)		AS TotalAmountSumNum
					, TO_CHAR(SUM(A.Amount),'999,999,999,999,999,999,999,999.00')				AS AmountSum
					, SUM(A.Amount)		AS AmountSumNum
					, A.DocNo
					, A.unDocNo
			FROM
			(
				SELECT AEA.ExpenceApplicationID 
					, AEA.CompanyCode
					, AEA.ApplicationTitle
					, AEA.ApplicationType
					, AEA.ApplicationStatus
					, AEA.RegisterID
					, USR.DisplayName RegisterName
					, AEA.ProcessID					
					, TO_CHAR( NVL(AEA.ApplicationDate, AEA.RegistDate), 'YYYY.MM.DD') AS ApplicationDate
					, AEA.RequestType
					, AEF.FormName AS RequestTypeName
					, AEA.RegistDate	
					, AEA.ChargeJob				
					, AEAL.ExpenceApplicationListID
					, AEAL.ExpenceApplicationListID cdRownum
					, TO_CHAR( AEAL.ProofDate, 'YYYY.MM.DD') AS ProofDate
					, TO_CHAR( AEAL.PostingDate, 'YYYY.MM.DD') AS PostingDate
					, AEAL.ProofCode			
					, AEAL.CardUID
					, AEAL.CashUID
					, AEAL.TaxUID
					, AEAL.TaxType
					, AEAL.TaxCode
					, AEAL.PayAdjustMethod
					, AEAL.PayMethod
					, AEAL.IsWithholdingTax
					, AEAL.IncomeTax
					, AEAL.LocalTax
					, AEAL.PayDate
					, AEAL.VendorNo
					, NVL(VD.VendorName, ATI.InvoicerCorpName) AS VendorName
					, AEAL.TotalAmount					
					, (
						SELECT  
							CASE 
								WHEN (AEAL.ProofCode = 'TaxBill' AND SUM(AEAD.Amount) != AEAL.TotalAmount) THEN SUM(AEAD.Amount) + AEAL.TaxAmount 
								ELSE SUM(AEAD.Amount) 
							END  
						FROM act_expence_application_div AEAD
						WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
					  ) AS Amount				
					, (SELECT L.DocNo FROM act_expence_application_list L WHERE L.ExpenceApplicationID = AEA.ExpenceApplicationID AND ROWNUM = 1) AS DocNo
					, (SELECT L.unDocNo FROM act_expence_application_list L WHERE L.ExpenceApplicationID = AEA.ExpenceApplicationID AND ROWNUM = 1) AS unDocNo
				FROM act_expence_application AEA
				INNER JOIN act_expence_application_list AEAL
				ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
				LEFT OUTER JOIN act_vendor VD
				ON AEAL.VendorNo = VD.VendorNo and AEA.CompanyCode = VD.CompanyCode
				LEFT OUTER JOIN sys_object_user USR
				ON AEA.RegisterID = USR.UserCode
				LEFT OUTER JOIN act_expence_forms AEF
				ON AEA.RequestType = AEF.FormCode and AEF.CompanyCode = AEA.CompanyCode
				LEFT OUTER JOIN act_card_receipt CR
				ON AEAL.CardUID = CR.ReceiptID
				LEFT OUTER JOIN act_taxinvoice ATI
				ON AEAL.TaxUID = ATI.TaxInvoiceID
				LEFT OUTER JOIN act_cashbill ACB
				ON AEAL.CashUID = ACB.CashBillID
				WHERE 1=1
				AND AEA.ApplicationStatus != 'DELETE'
			
			  	<if test="DocNo != null and DocNo != ''">
			  	    AND AEAL.DocNo LIKE '%' || #{DocNo} || '%' 
				</if>
				
			  	<if test="ApplicationStatus != null and ApplicationStatus != ''">
				 	AND AEA.ApplicationStatus = #{ApplicationStatus}
				</if>
			  	
			  	<if test="ApplicationTitle != null and ApplicationTitle != ''">
				 	AND UPPER(AEA.ApplicationTitle) LIKE UPPER('%' || #{ApplicationTitle} || '%')
				</if>
			  	
			  	<if test="ChargeJob != null and ChargeJob != ''">
				 	AND AEA.ChargeJob LIKE #{ChargeJob} || '%' 
				</if>
				
				<if test="RequestType != null and RequestType != ''">
				 	AND AEA.RequestType = #{RequestType}
				</if>
			  	
			  	<if test="ProofCode != null and ProofCode != ''">
				 	AND AEAL.ProofCode = #{ProofCode}
				</if>
			  	
			  	<if test="CompanyCode != null and CompanyCode != ''">
				 	AND AEA.CompanyCode = #{CompanyCode}
				</if>
				
			  	<if test="ProofDateSt != null and ProofDateSt != ''">
					<![CDATA[
					 	AND AEAL.ProofDate >= #{ProofDateSt}
					]]>
				</if>
			  	<if test="ProofDateEd != null and ProofDateEd != ''">
					<![CDATA[
					 	AND AEAL.ProofDate <= #{ProofDateEd}
					]]>
				</if>
			  	
			  	<if test="ApplicationDateSt != null and ApplicationDateSt != ''">
					<![CDATA[
					 	AND NVL(AEA.ApplicationDate, AEA.RegistDate) >= TO_DATE(#{ApplicationDateSt}, 'YYYY-MM-DD HH24:MI:SS')
					]]>
				</if>
			  	<if test="ApplicationDateEd != null and ApplicationDateEd != ''">
					<![CDATA[
					 	AND NVL(AEA.ApplicationDate, AEA.RegistDate) <= TO_DATE(#{ApplicationDateEd}, 'YYYY-MM-DD HH24:MI:SS')
					]]>
				</if>
			  	
			  	
			  	<if test="RegisterNm != null and RegisterNm != ''">
				 	AND UPPER(USR.DisplayName) LIKE UPPER('%' || #{RegisterNm} || '%')
				</if>
			  	
			  	<if test="VendorName != null and VendorName != ''">
				 	AND (
				 		UPPER(VD.VendorName) LIKE UPPER('%' || #{VendorName} || '%') 
				 		OR UPPER(ATI.InvoicerCorpName) LIKE UPPER('%' || #{VendorName} || '%')
				 	)
				</if>
			  	
				<choose>
					<when test="SessionUser != null and SessionUser != ''">
				 		AND AEA.RegisterID = #{SessionUser}
					</when>
					<otherwise>
					    AND AEA.ApplicationStatus NOT IN ('T')
					</otherwise>
				</choose>
			) A
			GROUP BY  A.ExpenceApplicationID 
				, A.CompanyCode
				, A.ApplicationTitle
				, A.ApplicationType
				, A.ApplicationStatus
                , A.ApplicationDate
				, A.RequestType
				, A.RequestTypeName
                , A.ProcessID
				, A.RegisterID
				, A.RegisterName
				, A.RegistDate
				, A.ChargeJob
				, A.DocNo
				, A.unDocNo
					
			<trim prefix="ORDER BY"  prefixOverrides =",">
				<if test = "sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
						, A.RegistDate DESC
						, A.ApplicationTitle
						, A.ExpenceApplicationID 
			    </if>
			  	<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
		 			<choose>
						<when test='sortColumn.equalsIgnoreCase("CompanyCode")'>CompanyCode</when>
						<when test='sortColumn.equalsIgnoreCase("ApplicationTitle")'>ApplicationTitle</when>
						<when test='sortColumn.equalsIgnoreCase("RegisterName")'>RegisterName</when>
						<when test='sortColumn.equalsIgnoreCase("ApplicationStatusName")'>ApplicationStatusName</when>
						<when test='sortColumn.equalsIgnoreCase("RequestTypeName")'>RequestTypeName</when>
						<when test='sortColumn.equalsIgnoreCase("TotalAmountSum")'>TotalAmountSum</when>
						<when test='sortColumn.equalsIgnoreCase("AmountSum")'>AmountSum</when>
						<otherwise>ApplicationDate</otherwise>
					</choose>
					<choose>
						<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
						<otherwise> DESC</otherwise>
					</choose>
				</if>
			</trim>				
		) A
		WHERE 1=1
	  	<if test="SearchAmtSt != null and SearchAmtSt != ''">
	  	    <![CDATA[
		 	AND A.TotalAmountSumNum >= #{SearchAmtSt}
			]]>
		</if>
	  	<if test="SearchAmtEd != null and SearchAmtEd != ''">
	  		<![CDATA[
		 	AND A.TotalAmountSumNum <= #{SearchAmtEd}
			]]>
		</if>
		<include refid="oracle.include.pagingFooter" />
	</select>
	
	<select id="selectExpenceApplicationAppExcel" parameterType="cmap" resultType="cmap">
		/*
			expenceApplication.selectExpenceApplicationAppExcel
		*/
		SELECT A.ExpenceApplicationID  AS "ExpenceApplicationID"
				, A.CompanyCode AS "CompanyCode"
				, A.CompanyName AS "CompanyName"
				, A.ApplicationTitle AS "ApplicationTitle"
				, A.ApplicationType AS "ApplicationType"
				, A.ApplicationTypeName AS "ApplicationTypeName"
				, A.ApplicationStatus AS "ApplicationStatus"
				, A.ApplicationStatusName AS "ApplicationStatusName"
				, A.ApplicationDate AS "ApplicationDate"
				, A.RequestType AS "RequestType"
				, A.RequestTypeName AS "RequestTypeName"
				, A.RegisterID AS "RegisterID"
				, A.RegisterName AS "RegisterName"
				, A.RegistDate AS "RegistDate"
				, A.ChargeJob AS "ChargeJob"
				, A.TotalAmountSum AS "TotalAmountSum"
				, A.TotalAmountSumNum AS "TotalAmountSumNum"
				, A.AmountSum AS "AmountSum"
				, A.AmountSumNum AS "AmountSumNum"
				, A.DocNo AS "DocNo"
				, A.unDocNo AS "unDocNo"
		FROM
		(
			SELECT  A.ExpenceApplicationID 
					, A.CompanyCode
					, FN_GETACTBASECODENAME('CompanyCode', A.CompanyCode, null) CompanyName
					, A.ApplicationTitle
					, A.ApplicationType
					, FN_GETACTBASECODENAME('ExpAppType', A.ApplicationType, null) ApplicationTypeName
					, A.ApplicationStatus
					, FN_GETACTBASECODENAME('ExpenceApplicationStatus', A.ApplicationStatus, null) ApplicationStatusName
					, A.ApplicationDate
					, A.RequestType
					, A.RequestTypeName
					, A.ProcessID
					, A.RegisterID
					, A.RegisterName
					, A.RegistDate
					, A.ChargeJob
					, TO_CHAR(SUM(A.TotalAmount),'999,999,999,999,999,999,999,999.00')				AS TotalAmountSum
					, SUM(A.TotalAmount)		AS TotalAmountSumNum
					, TO_CHAR(SUM(A.Amount),'999,999,999,999,999,999,999,999.00')				AS AmountSum
					, SUM(A.Amount)		AS AmountSumNum
					, A.DocNo
					, A.unDocNo
			FROM
			(
				SELECT AEA.ExpenceApplicationID 
					, AEA.CompanyCode
					, AEA.ApplicationTitle
					, AEA.ApplicationType
					, AEA.ApplicationStatus
					, AEA.RegisterID
					, USR.DisplayName RegisterName
					, AEA.ProcessID
					, TO_CHAR( NVL(AEA.ApplicationDate, AEA.RegistDate), 'YYYY.MM.DD') AS ApplicationDate
					, AEA.RequestType
					, AEF.FormName AS RequestTypeName
					, AEA.RegistDate	
					, AEA.ChargeJob				
					, AEAL.ExpenceApplicationListID
					, AEAL.ExpenceApplicationListID cdRownum
					, TO_CHAR( AEAL.ProofDate, 'YYYY.MM.DD') AS ProofDate
					, TO_CHAR( AEAL.PostingDate, 'YYYY.MM.DD') AS PostingDate
					, AEAL.ProofCode				
					, AEAL.CardUID
					, AEAL.CashUID
					, AEAL.TaxUID
					, AEAL.TaxType
					, AEAL.TaxCode
					, AEAL.PayAdjustMethod
					, AEAL.PayMethod
					, AEAL.IsWithholdingTax
					, AEAL.IncomeTax
					, AEAL.LocalTax
					, AEAL.PayDate
					, AEAL.VendorNo
					, NVL(VD.VendorName, ATI.InvoicerCorpName) AS VendorName
					, AEAL.TotalAmount			
					, (
						SELECT 
							CASE 
								WHEN (AEAL.ProofCode = 'TaxBill' AND SUM(AEAD.Amount) != AEAL.TotalAmount) THEN SUM(AEAD.Amount) + AEAL.TaxAmount 
								ELSE SUM(AEAD.Amount) 
							END
						FROM act_expence_application_div AEAD
						WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
					  ) AS Amount	
					, (SELECT L.DocNo FROM act_expence_application_list L WHERE L.ExpenceApplicationID = AEA.ExpenceApplicationID AND ROWNUM = 1) AS DocNo
					, (SELECT L.unDocNo FROM act_expence_application_list L WHERE L.ExpenceApplicationID = AEA.ExpenceApplicationID AND ROWNUM = 1) AS unDocNo
				FROM act_expence_application AEA
				INNER JOIN act_expence_application_list AEAL
				ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
				LEFT OUTER JOIN act_vendor VD
				ON AEAL.VendorNo = VD.VendorNo and AEA.CompanyCode = VD.CompanyCode
				LEFT OUTER JOIN sys_object_user USR
				ON AEA.RegisterID = USR.UserCode
				LEFT OUTER JOIN act_expence_forms AEF
				ON AEA.RequestType = AEF.FormCode and AEF.CompanyCode = AEA.CompanyCode
				LEFT OUTER JOIN act_card_receipt CR
				ON AEAL.CardUID = CR.ReceiptID
				LEFT OUTER JOIN act_taxinvoice ATI
				ON AEAL.TaxUID = ATI.TaxInvoiceID
				LEFT OUTER JOIN act_cashbill ACB
				ON AEAL.CashUID = ACB.CashBillID
				WHERE 1=1
				AND AEA.ApplicationStatus != 'DELETE'
			
			  	<if test="DocNo != null and DocNo != ''">
			  	    AND AEAL.DocNo LIKE '%' || #{DocNo} || '%'
				</if>
				
			  	<if test="ApplicationStatus != null and ApplicationStatus != ''">
				 	AND AEA.ApplicationStatus = #{ApplicationStatus}
				</if>
			  	
			  	<if test="ApplicationTitle != null and ApplicationTitle != ''">
				 	AND UPPER(AEA.ApplicationTitle) LIKE UPPER('%' || #{ApplicationTitle} || '%')
				</if>
			  	
			  	<if test="ChargeJob != null and ChargeJob != ''">
				 	AND AEA.ChargeJob LIKE #{ChargeJob} || '%'
				</if>
				
				<if test="RequestType != null and RequestType != ''">
				 	AND AEA.RequestType = #{RequestType}
				</if>
			  	
			  	<if test="ProofCode != null and ProofCode != ''">
				 	AND AEAL.ProofCode = #{ProofCode}
				</if>
			  	
			  	<if test="CompanyCode != null and CompanyCode != ''">
				 	AND AEA.CompanyCode = #{CompanyCode}
				</if>
				
			  	<if test="ProofDateSt != null and ProofDateSt != ''">
					<![CDATA[
					 	AND AEAL.ProofDate >= #{ProofDateSt}
					]]>
				</if>
			  	<if test="ProofDateEd != null and ProofDateEd != ''">
					<![CDATA[
					 	AND AEAL.ProofDate <= #{ProofDateEd}
					]]>
				</if>
			  	
			  	<if test="ApplicationDateSt != null and ApplicationDateSt != ''">
					<![CDATA[
					 	AND NVL(AEA.ApplicationDate, AEA.RegistDate) >= TO_DATE(#{ApplicationDateSt}, 'YYYY-MM-DD HH24:MI:SS')
					]]>
				</if>
			  	<if test="ApplicationDateEd != null and ApplicationDateEd != ''">
					<![CDATA[
					 	AND NVL(AEA.ApplicationDate, AEA.RegistDate) <= TO_DATE(#{ApplicationDateEd}, 'YYYY-MM-DD HH24:MI:SS')
					]]>
				</if>
			  	
			  	
			  	<if test="RegisterNm != null and RegisterNm != ''">
				 	AND UPPER(USR.DisplayName) LIKE UPPER('%' || #{RegisterNm} || '%')
				</if>
			  	
			  	<if test="VendorName != null and VendorName != ''">
				 	AND (
				 		UPPER(VD.VendorName) LIKE UPPER('%' || #{VendorName} || '%')
				 		OR UPPER(ATI.InvoicerCorpName) LIKE UPPER('%' || #{VendorName} || '%')
				 	)
				</if>
				<choose>
					<when test="SessionUser != null and SessionUser != ''">
				 		AND AEA.RegisterID = #{SessionUser}
					</when>
					<otherwise>
					    AND AEA.ApplicationStatus NOT IN ('T')
					</otherwise>
				</choose>
			) A
			GROUP BY  A.ExpenceApplicationID 
				, A.CompanyCode
				, A.ApplicationTitle
				, A.ApplicationType
				, A.ApplicationStatus
                , A.ApplicationDate
                , A.RequestType
                , A.RequestTypeName
                , A.ProcessID
				, A.RegisterID
				, A.RegisterName
				, A.RegistDate
				, A.ChargeJob
				, A.DocNo
				, A.unDocNo
			<trim prefix="ORDER BY"  prefixOverrides =",">
				<if test = "sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
						, A.RegistDate DESC
						, A.ApplicationTitle
						, A.ExpenceApplicationID 
			    </if>
			  	<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
		 			<choose>
						<when test='sortColumn.equalsIgnoreCase("CompanyCode")'>CompanyCode</when>
						<when test='sortColumn.equalsIgnoreCase("ApplicationTitle")'>ApplicationTitle</when>
						<when test='sortColumn.equalsIgnoreCase("RegisterName")'>RegisterName</when>
						<when test='sortColumn.equalsIgnoreCase("ApplicationStatusName")'>ApplicationStatusName</when>
						<when test='sortColumn.equalsIgnoreCase("RequestTypeName")'>RequestTypeName</when>
						<when test='sortColumn.equalsIgnoreCase("TotalAmountSum")'>TotalAmountSum</when>
						<when test='sortColumn.equalsIgnoreCase("AmountSum")'>AmountSum</when>
						<otherwise>ApplicationDate</otherwise>
					</choose>
					<choose>
						<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
						<otherwise> DESC</otherwise>
					</choose>
				</if>
			</trim>	
		) A
		
		WHERE 1=1
	  	<if test="SearchAmtSt != null and SearchAmtSt != ''">
	  	    <![CDATA[
		 	AND A.TotalAmountSumNum >= #{SearchAmtSt}
			]]>
		</if>
	  	<if test="SearchAmtEd != null and SearchAmtEd != ''">
	  		<![CDATA[
		 	AND A.TotalAmountSumNum <= #{SearchAmtEd}
			]]>
		</if>
	</select>
	<select id="selectExpenceApplicationAppCnt" resultType="java.lang.Long">
		/*
			expenceApplication.selectExpenceApplicationDetailAppCnt
		*/
		SELECT COUNT(*)
		FROM
		(
			SELECT  A.ExpenceApplicationID
					, SUM(A.TotalAmount)	AS TotalAmountSumNum
					, SUM(A.Amount)			AS AmountSumNum
			FROM
			(
				SELECT AEA.ExpenceApplicationID 
					, AEA.CompanyCode
					, AEA.ApplicationTitle
					, AEA.ApplicationType
					, AEA.ApplicationStatus
					, AEA.RegisterID
					, USR.DisplayName RegisterName
					, AEA.ProcessID					
					, TO_CHAR( NVL(AEA.ApplicationDate, AEA.RegistDate), 'YYYY.MM.DD') AS ApplicationDate
					, AEA.RequestType
					, AEF.FormName AS RequestTypeName
					, AEA.RegistDate	
					, AEA.ChargeJob				
					, AEAL.ExpenceApplicationListID
					, AEAL.ExpenceApplicationListID cdRownum
					, TO_CHAR( AEAL.ProofDate, 'YYYY.MM.DD') AS ProofDate
					, TO_CHAR( AEAL.PostingDate, 'YYYY.MM.DD') AS PostingDate
					, AEAL.ProofCode				
					, AEAL.CardUID
					, AEAL.CashUID
					, AEAL.TaxUID
					, AEAL.TaxType
					, AEAL.TaxCode
					, AEAL.PayAdjustMethod
					, AEAL.PayMethod
					, AEAL.IsWithholdingTax
					, AEAL.IncomeTax
					, AEAL.LocalTax
					, AEAL.PayDate
					, AEAL.VendorNo
					, NVL(VD.VendorName, ATI.InvoicerCorpName) AS VendorName
					, AEAL.TotalAmount			
					, (
						SELECT 
							CASE 
								WHEN (AEAL.ProofCode = 'TaxBill' AND SUM(AEAD.Amount) != AEAL.TotalAmount) THEN SUM(AEAD.Amount) + AEAL.TaxAmount 
								ELSE SUM(AEAD.Amount) 
							END
						FROM act_expence_application_div AEAD
						WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
					  ) AS Amount	
					, (SELECT L.DocNo FROM act_expence_application_list L WHERE L.ExpenceApplicationID = AEA.ExpenceApplicationID AND ROWNUM = 1) AS DocNo
					, (SELECT L.unDocNo FROM act_expence_application_list L WHERE L.ExpenceApplicationID = AEA.ExpenceApplicationID AND ROWNUM = 1) AS unDocNo
				FROM act_expence_application AEA
				INNER JOIN act_expence_application_list AEAL
				ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
				LEFT OUTER JOIN act_vendor VD
				ON AEAL.VendorNo = VD.VendorNo and AEA.CompanyCode = VD.CompanyCode
				LEFT OUTER JOIN sys_object_user USR
				ON AEA.RegisterID = USR.UserCode
				LEFT OUTER JOIN act_expence_forms AEF
				ON AEA.RequestType = AEF.FormCode and AEF.CompanyCode = AEA.CompanyCode
				LEFT OUTER JOIN act_card_receipt CR
				ON AEAL.CardUID = CR.ReceiptID
				LEFT OUTER JOIN act_taxinvoice ATI
				ON AEAL.TaxUID = ATI.TaxInvoiceID
				LEFT OUTER JOIN act_cashbill ACB
				ON AEAL.CashUID = ACB.CashBillID
				WHERE 1=1
				AND AEA.ApplicationStatus != 'DELETE'
			
			  	<if test="DocNo != null and DocNo != ''">
			  	    AND AEAL.DocNo LIKE '%' || #{DocNo} || '%'
				</if>
				
			  	<if test="ApplicationStatus != null and ApplicationStatus != ''">
				 	AND AEA.ApplicationStatus = #{ApplicationStatus}
				</if>
			  	
			  	<if test="ApplicationTitle != null and ApplicationTitle != ''">
				 	AND UPPER(AEA.ApplicationTitle) LIKE UPPER('%' || #{ApplicationTitle} || '%') 
				</if>
			  	
			  	<if test="ChargeJob != null and ChargeJob != ''">
				 	AND AEA.ChargeJob LIKE #{ChargeJob} || '%'
				</if>
				
				<if test="RequestType != null and RequestType != ''">
				 	AND AEA.RequestType = #{RequestType}
				</if>
			  	
			  	<if test="ProofCode != null and ProofCode != ''">
				 	AND AEAL.ProofCode = #{ProofCode}
				</if>
			  	
			  	<if test="CompanyCode != null and CompanyCode != ''">
				 	AND AEA.CompanyCode = #{CompanyCode}
				</if>
				
			  	<if test="ProofDateSt != null and ProofDateSt != ''">
					<![CDATA[
					 	AND AEAL.ProofDate >= #{ProofDateSt}
					]]>
				</if>
			  	<if test="ProofDateEd != null and ProofDateEd != ''">
					<![CDATA[
					 	AND AEAL.ProofDate <= #{ProofDateEd}
					]]>
				</if>
			  	
			  	<if test="ApplicationDateSt != null and ApplicationDateSt != ''">
					<![CDATA[
					 	AND NVL(AEA.ApplicationDate, AEA.RegistDate) >= TO_DATE(#{ApplicationDateSt}, 'YYYY-MM-DD HH24:MI:SS')
					]]>
				</if>
			  	<if test="ApplicationDateEd != null and ApplicationDateEd != ''">
					<![CDATA[
					 	AND NVL(AEA.ApplicationDate, AEA.RegistDate) <= TO_DATE(#{ApplicationDateEd}, 'YYYY-MM-DD HH24:MI:SS')
					]]>
				</if>
			  	
			  	
			  	<if test="RegisterNm != null and RegisterNm != ''">
				 	AND UPPER(USR.DisplayName) LIKE UPPER('%' || #{RegisterNm} || '%') 
				</if>
			  	
			  	<if test="VendorName != null and VendorName != ''">
				 	AND (
				 		UPPER(VD.VendorName) LIKE UPPER('%' || #{VendorName} || '%')
				 		OR UPPER(ATI.InvoicerCorpName) LIKE UPPER('%' || #{VendorName} || '%')
				 	)
				</if>
			  	
				<choose>
					<when test="SessionUser != null and SessionUser != ''">
				 		AND AEA.RegisterID = #{SessionUser}
					</when>
					<otherwise>
					    AND AEA.ApplicationStatus NOT IN ('T')
					</otherwise>
				</choose>
			) A 
			GROUP BY  A.ExpenceApplicationID 
		)A
		WHERE 1=1
	  	<if test="SearchAmtSt != null and SearchAmtSt != ''">
	  	    <![CDATA[
		 	AND A.TotalAmountSumNum >= #{SearchAmtSt}
			]]>
		</if>
	  	<if test="SearchAmtEd != null and SearchAmtEd != ''">
	  		<![CDATA[
		 	AND A.TotalAmountSumNum <= #{SearchAmtEd}
			]]>
		</if>
	</select>
	
	
	<select id="selectAuditUseYN" parameterType="cmap" resultType="cmap">
		/*
			expenceApplication.selectAuditUseYN
		*/
	    
		SELECT MAX(CASE WHEN AA.RuleCode = 'amount' AND AA.RuleInfo LIKE '%"' || #{displayType} || '"%' THEN AA.IsUse ELSE null END) AS "AmountUse" 
			, MAX(CASE WHEN AA.RuleCode = 'weekend' AND AA.RuleInfo LIKE '%"' || #{displayType} || '"%' THEN AA.IsUse ELSE null END) AS "WeekendUse"
			, MAX(CASE WHEN AA.RuleCode = 'holiday' AND AA.RuleInfo LIKE '%"' || #{displayType} || '"%' THEN AA.IsUse ELSE null END) AS "HolidayUse" 
			, MAX(CASE WHEN AA.RuleCode = 'vacation' AND AA.RuleInfo LIKE '%"' || #{displayType} || '"%' THEN AA.IsUse ELSE null END) AS "VacationUse" 
			, MAX(CASE WHEN AA.RuleCode = 'midnight' AND AA.RuleInfo LIKE '%"' || #{displayType} || '"%' THEN AA.IsUse ELSE null END) AS "MidnightUse" 
			, MAX(CASE WHEN AA.RuleCode = 'limit' AND AA.RuleInfo LIKE '%"' || #{displayType} || '"%' THEN AA.IsUse ELSE null END) AS "LimitSectorUse" 
			, MAX(CASE WHEN AA.RuleCode = 'outside' AND AA.RuleInfo LIKE '%"' || #{displayType} || '"%' THEN AA.IsUse ELSE null END) AS "OutsideUse" 
		FROM act_audit AA
	</select>
	
	<select id="selectExpenceApplicationList" parameterType="cmap" resultType="cmap">
		/*
			expenceApplication.selectExpenceApplicationList
		*/
		
		<include refid="oracle.include.pagingHeader" />
		SELECT A.ExpenceApplicationID AS "ExpenceApplicationID"
			, A.CompanyCode AS "CompanyCode"
			, FN_GETACTBASECODENAME('CompanyCode', A.CompanyCode, #{CompanyCode}) AS "CompanyName"
			, A.ApplicationTitle AS "ApplicationTitle"
			, A.ApplicationType AS "ApplicationType"
			, FN_GETACTBASECODENAME('ExpAppType', A.ApplicationType, #{CompanyCode}) AS "ApplicationTypeName"
			, A.ApplicationStatus AS "ApplicationStatus"
			, FN_GETACTBASECODENAME('ExpenceApplicationStatus', A.ApplicationStatus, #{CompanyCode}) AS "ApplicationStatusName"
			, A.RegisterID AS "RegisterID"
			, A.RegisterName AS "RegisterName"
			, A.ApplicationDate AS "ApplicationDate"
			, A.RequestType AS "RequestType"
			, A.RequestTypeName AS "RequestTypeName"
			, A.RegistDate AS "RegistDate"
			, A.ChargeJob AS "ChargeJob"
			, A.ProcessID AS "ProcessID"
			, A.ExpenceApplicationListID AS "ExpenceApplicationListID"
			, A.ExpenceApplicationListID AS "cdRownum"
			, A.ProofDate AS "ProofDate"
			, A.PostingDate AS "PostingDate"
			, A.ProofCode AS "ProofCode"
			, FN_GETACTBASECODENAME('ProofCode', A.ProofCode, #{CompanyCode}) AS "ProofCodeName"
			, A.CardUID AS "CardUID"
			, A.CashUID AS "CashUID"
			, A.TaxUID AS "TaxUID"
			, A.ReceiptID AS "ReceiptID"
			, A.TaxType AS "TaxType"
			, A.TaxCode AS "TaxCode"
			, A.PayAdjustMethod AS "PayAdjustMethod"
			, A.PayMethod AS "PayMethod"
			, A.IsWithholdingTax AS "IsWithholdingTax"
			, A.IncomeTax AS "IncomeTax"
			, A.LocalTax AS "LocalTax"
			, A.PayDate AS "PayDate"
			, A.VendorNo AS "VendorNo"
			, A.VendorName AS "VendorName"
			, A.CardReceiptID AS "CardReceiptID"
			, A.CardApproveNo AS "CardApproveNo"
			, A.TaxInvoiceID AS "TaxInvoiceID"
			, A.TaxNTSConfirmNum AS "TaxNTSConfirmNum"
			, A.CashNTSConfirmNum AS "CashNTSConfirmNum"
			, A.FileCnt AS "FileCnt"
			, A.AppCnt AS "AppCnt"
			, A.TotalAmount AS "TotalAmount"
			, A.TotalAmountNum AS "TotalAmountNum"
			, A.TaxAmount AS "TaxAmount"
			, A.TaxAmountNum AS "TaxAmountNum"
			, A.RepAmount AS "RepAmount"
			, A.RepAmountNum AS "RepAmountNum"
			, A.AmountSum AS "AmountSum"
			, A.AmountSumNum AS "AmountSumNum"
			, A.DocNo AS "DocNo"
			, A.DocPostingDate AS "DocPostingDate"
			, A.DocPayDate AS "DocPayDate"
			, A.ReceiptFileID AS "ReceiptFileID"      
			, A.ProofTime AS "ProofTime" 
			, A.ProofHour AS "ProofHour" 
			, A.UsageComment AS "UsageComment" 
	  	<if test="AmountUse == 'Y'.toString()">
			, AAA.ApplicationColor AS "AmountSumColor"
		</if>
	  	<if test="WeekendUse == 'Y'.toString()">
			, AAW.ApplicationColor AS "WeekendColorS"
		</if>
	  	<if test="HolidayUse == 'Y'.toString()">
			, AAH.ApplicationColor AS "HolidayColor"
		</if>
	  	<if test="VacationUse == 'Y'.toString()">
			, AAV.ApplicationColor AS "VacationColor"
		</if>
	  	<if test="MidnightUse == 'Y'.toString()">
			, AAM.ApplicationColor AS "MidnightColor"
		</if>
		FROM
		(
			SELECT AEA.ExpenceApplicationID AS ExpenceApplicationID
				, AEA.CompanyCode AS CompanyCode
				, AEA.ApplicationTitle AS ApplicationTitle
				, AEA.ApplicationType AS ApplicationType
				, AEA.ApplicationStatus AS ApplicationStatus
				, AEA.RegisterID AS RegisterID
				, USR.DisplayName AS RegisterName
				, TO_CHAR(TO_DATE(NVL(AEA.ApplicationDate, AEA.RegistDate), 'YY/MM/DD'), 'YYYY.MM.DD') AS ApplicationDate			
				, AEA.RequestType AS RequestType	
				, AEF.FormName AS RequestTypeName
				, AEA.RegistDate AS RegistDate		
				, AEA.ChargeJob AS ChargeJob		
				, AEA.ProcessID	AS ProcessID
				, AEAL.ExpenceApplicationListID AS ExpenceApplicationListID
				, TO_CHAR(TO_DATE(AEAL.ProofDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS ProofDate
				, TO_CHAR(TO_DATE(AEAL.PostingDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS PostingDate
				, AEAL.ProofCode AS ProofCode
				, AEAL.CardUID AS CardUID
				, AEAL.CashUID AS CashUID	
				, AEAL.TaxUID AS TaxUID
				, AEAL.ReceiptID AS ReceiptID	
				, AEAL.TaxType AS TaxType
				, AEAL.TaxCode AS TaxCode	
				, AEAL.PayAdjustMethod AS PayAdjustMethod	
				, AEAL.PayMethod AS PayMethod	
				, AEAL.IsWithholdingTax AS IsWithholdingTax
				, AEAL.IncomeTax AS IncomeTax	
				, AEAL.LocalTax AS LocalTax	
				, TO_CHAR(TO_DATE(AEAL.PayDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS PayDate
				, AEAL.VendorNo AS VendorNo	
				, VD.VendorName AS VendorName	
				, CR.ReceiptID AS CardReceiptID	
				, CR.ApproveNo AS CardApproveNo
				, ATI.TaxInvoiceID AS TaxInvoiceID
				, ATI.NTSConfirmNum AS TaxNTSConfirmNum
				, ACB.NTSConfirmNum AS CashNTSConfirmNum
            
				, (SELECT COUNT(*) FROM  act_expence_application_file AEAF
					WHERE AEAL.ExpenceApplicationListID = AEAF.ExpenceApplicationListID
					) AS FileCnt
				, (SELECT COUNT(*) 
					FROM  act_expence_application_list AEALD
					WHERE AEAL.ExpenceApplicationID = AEALD.ExpenceApplicationID
					) AS AppCnt
				, TO_CHAR(AEAL.TotalAmount,'999,999,999,999,999,999,999,999.00')				AS TotalAmount
				, AEAL.TotalAmount AS TotalAmountNum
				, CASE 
					WHEN AEAL.ProofCode = 'CorpCard' THEN TO_CHAR(CR.TaxAmount, '999,999,999,999,999,999,999,999.00')
					WHEN AEAL.ProofCode = 'TaxBill' THEN TO_CHAR(ATI.TaxTotal, '999,999,999,999,999,999,999,999.00')
					WHEN AEAL.ProofCode = 'CashBill' THEN TO_CHAR(ACB.Tax, '999,999,999,999,999,999,999,999.00')
					ELSE ''
					END AS TaxAmount
				, CASE 
					WHEN AEAL.ProofCode = 'CorpCard' THEN TO_CHAR(CR.TaxAmount)
					WHEN AEAL.ProofCode = 'TaxBill' THEN TO_CHAR(ATI.TaxTotal)
					WHEN AEAL.ProofCode = 'CashBill' THEN TO_CHAR(ACB.Tax)
					ELSE ''
					END AS TaxAmountNum
				, CASE 
					WHEN AEAL.ProofCode = 'CorpCard' THEN TO_CHAR(CR.RepAmount, '999,999,999,999,999,999,999,999.00')
					WHEN AEAL.ProofCode = 'TaxBill' THEN TO_CHAR(ATI.SupplyCostTotal, '999,999,999,999,999,999,999,999.00')
					WHEN AEAL.ProofCode = 'CashBill' THEN TO_CHAR(ACB.SupplyCost, '999,999,999,999,999,999,999,999.00')
					ELSE ''
					END AS RepAmount
				, CASE 
					WHEN AEAL.ProofCode = 'CorpCard' THEN TO_CHAR(CR.RepAmount)
					WHEN AEAL.ProofCode = 'TaxBill' THEN TO_CHAR(ATI.SupplyCostTotal)
					WHEN AEAL.ProofCode = 'CashBill' THEN TO_CHAR(ACB.SupplyCost)
					ELSE ''
					END AS RepAmountNum
				, (
					SELECT 
						CASE 
							WHEN (AEAL.ProofCode = 'TaxBill' AND SUM(AEAD.Amount) != AEAL.TotalAmount) THEN TO_CHAR(SUM(AEAD.Amount) + AEAL.TaxAmount,'999,999,999,999,999,999,999,999.00') 
							ELSE TO_CHAR(SUM(AEAD.AMOUNT),'999,999,999,999,999,999,999,999.00')
						END
					FROM act_expence_application_div AEAD
					WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
				) AS AmountSum
				, (
					SELECT 
						CASE 
							WHEN (AEAL.ProofCode = 'TaxBill' AND SUM(AEAD.Amount) != AEAL.TotalAmount) THEN SUM(AEAD.Amount) + AEAL.TaxAmount 
							ELSE SUM(AEAD.AMOUNT)
						END
					FROM act_expence_application_div AEAD
					WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
				) AS AmountSumNum
				
				, AEAL.DocNo AS DocNo
				, CASE WHEN AEAL.DocNo IS NULL 
						THEN 
							TO_CHAR(TO_DATE(AEAL.PostingDate, 'YYYYMMDD'), 'YYYY.MM.DD')
						ELSE 
							TO_CHAR(TO_DATE(AEAL.DocPostingDate, 'YYYYMMDD'), 'YYYY.MM.DD')
					END AS DocPostingDate
				, CASE WHEN AEAL.DocNo IS NULL 
						THEN 
							TO_CHAR(TO_DATE(AEAL.PayDate, 'YYYYMMDD'), 'YYYY.MM.DD')
						ELSE 
							TO_CHAR(TO_DATE(AEAL.DocPayDate, 'YYYYMMDD'), 'YYYY.MM.DD')
					END AS DocPayDate
				, AR.ReceiptFileID AS ReceiptFileID
				, CASE 
					WHEN AEAL.ProofCode = 'CorpCard' THEN TO_CHAR(TO_DATE(CR.ApproveTime, 'HH24:MI:SS'), 'HH24:MI:SS') 
					WHEN AEAL.ProofCode = 'Receipt' THEN (AR.UseTime || ':00')
					WHEN AEAL.ProofCode = 'EtcEvid' THEN (CASE WHEN AEAL.ProofTime IS NOT NULL THEN (AEAL.ProofTime || ':00') ELSE NULL END)
					ELSE NULL 
				  END AS ProofTime
				, CASE 
					WHEN AEAL.ProofCode = 'CorpCard' THEN SUBSTR(CR.ApproveTime, 1, 2) 
					WHEN AEAL.ProofCode = 'Receipt' THEN SUBSTR(AR.UseTime, 1, 2)
					WHEN AEAL.ProofCode = 'EtcEvid' THEN (CASE WHEN AEAL.ProofTime IS NOT NULL THEN SUBSTR(AEAL.ProofTime, 1, 2) ELSE NULL END) 
					ELSE NULL 
				  END AS ProofHour
				, (SELECT LISTAGG(AEAD.UsageComment, ',') WITHIN GROUP (ORDER BY ExpenceApplicationListID) FROM act_expence_application_div AEAD WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID) AS UsageComment
			FROM act_expence_application AEA
			INNER JOIN act_expence_application_list AEAL
			ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
			LEFT OUTER JOIN act_vendor VD
			ON AEAL.VendorNo = VD.VendorNo and AEA.CompanyCode = VD.CompanyCode
			LEFT OUTER JOIN sys_object_user USR
			ON AEA.RegisterID = USR.UserCode
			LEFT OUTER JOIN act_expence_forms AEF
			ON AEA.RequestType = AEF.FormCode and AEF.CompanyCode = AEA.CompanyCode
			LEFT OUTER JOIN act_card_receipt CR
			ON AEAL.CardUID = CR.ReceiptID
			LEFT OUTER JOIN act_taxinvoice ATI
			ON AEAL.TaxUID = ATI.TaxInvoiceID
			LEFT OUTER JOIN act_cashbill ACB
			ON AEAL.CashUID = ACB.CashBillID
			LEFT OUTER JOIN act_receipt AR
			ON AEAL.ReceiptID = AR.ReceiptID
			WHERE 1=1
			AND AEA.ApplicationStatus != 'DELETE'
			
		  	<if test="DocNo != null and DocNo != ''">
		  	    AND AEAL.DocNo LIKE '%' || #{DocNo} || '%' 
			</if>
			
		  	<if test="ApplicationStatus != null and ApplicationStatus != ''">
			 	AND AEA.ApplicationStatus = #{ApplicationStatus}
			</if>
		  	
		  	<if test="ApplicationTitle != null and ApplicationTitle != ''">
			 	AND UPPER(AEA.ApplicationTitle) LIKE UPPER('%' || #{ApplicationTitle} || '%')
			</if>
			  	
		  	<if test="ChargeJob != null and ChargeJob != ''">
			 	AND AEA.ChargeJob LIKE #{ChargeJob} || '%'
			</if>
				
			<if test="RequestType != null and RequestType != ''">
			 	AND AEA.RequestType = #{RequestType}
			</if>
		  	
		  	<if test="ProofCode != null and ProofCode != ''">
			 	AND AEAL.ProofCode = #{ProofCode}
			</if>
			  	
		  	<if test="CompanyCode != null and CompanyCode != ''">
			 	AND AEA.CompanyCode = #{CompanyCode}
			</if>
			
		  	<if test="ProofDateSt != null and ProofDateSt != ''">
				<![CDATA[
				 	AND AEAL.ProofDate >= #{ProofDateSt}
				]]>
			</if>
		  	<if test="ProofDateEd != null and ProofDateEd != ''">
				<![CDATA[
				 	AND AEAL.ProofDate <= #{ProofDateEd}
				]]>
			</if>
		  	
		  	<if test="ApplicationDateSt != null and ApplicationDateSt != ''">
				<![CDATA[
				 	AND NVL(AEA.ApplicationDate, AEA.RegistDate) >= TO_DATE(#{ApplicationDateSt}, 'YYYY-MM-DD HH24:MI:SS')
				]]>
			</if>
		  	<if test="ApplicationDateEd != null and ApplicationDateEd != ''">
				<![CDATA[
				 	AND NVL(AEA.ApplicationDate, AEA.RegistDate) <= TO_DATE(#{ApplicationDateEd}, 'YYYY-MM-DD HH24:MI:SS')
				]]>
			</if>
		  	
		  	
		  	<if test="RegisterNm != null and RegisterNm != ''">
			 	AND UPPER(USR.DisplayName) LIKE UPPER('%' || #{RegisterNm} || '%')
			</if>
		  	
		  	<if test="VendorName != null and VendorName != ''">
			 	AND (
			 		UPPER(VD.VendorName) LIKE UPPER('%' || #{VendorName} || '%')
			 		OR UPPER(ATI.InvoicerCorpName) LIKE UPPER('%' || #{VendorName} || '%')
			 	)
			</if>
			
		  	<if test="SearchAmtSt != null and SearchAmtSt != ''">
		  	    <![CDATA[
			 	AND AEAL.TotalAmount > #{SearchAmtSt}
				]]>
			</if>
		  	<if test="SearchAmtEd != null and SearchAmtEd != ''">
		  		<![CDATA[
			 	AND AEAL.TotalAmount < #{SearchAmtEd}
				]]>
			</if>
		  	<if test="StandardBriefID != null and StandardBriefID != ''">
		  		AND #{StandardBriefID} IN (
		  			SELECT StandardBriefID 
		  			FROM act_expence_application_div AEAD
		  			WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
		  		)
			</if>
			<if test="PayDate != null and PayDate != ''">
			    AND AEAL.PayDate = #{PayDate}
			</if>
			<choose>
				<when test="SessionUser != null and SessionUser != ''">
			 		AND AEA.RegisterID = #{SessionUser}
				</when>
				<otherwise>
				    AND AEA.ApplicationStatus NOT IN ('T')
				</otherwise>
			</choose>
		) A
	  	<if test="AmountUse == 'Y'.toString()">
			LEFT OUTER JOIN act_audit AAA
				ON AAA.RuleCode = 'amount'
				AND AAA.IsUse = 'Y'
				AND AAA.RuleInfo LIKE '%"' || #{displayType} || '"%' 
				AND A.AmountSumNum > (AAA.StdValue * 10000)
				AND A.ApplicationType != 'CO'
		</if>
	  	<if test="WeekendUse == 'Y'.toString()">
			LEFT OUTER JOIN act_audit AAW
				ON AAW.RuleCode = 'weekend'
				AND AAW.IsUse = 'Y'
				AND AAW.RuleInfo LIKE '%"' || #{displayType} || '"%'
				AND TO_CHAR(TO_DATE(A.PostingDate), 'd') IN (1, 7)
				AND A.ApplicationType != 'CO'
		</if>
	  	<if test="HolidayUse == 'Y'.toString()">
			LEFT OUTER JOIN sys_calendar SC
				ON SC.SolarDate = REGEXP_REPLACE(A.PostingDate, '(.{4})(.{2})(.{2})', '\1-\2-\3')
				AND SC.Anniversary IS NOT NULL
			LEFT OUTER JOIN act_audit AAH
				ON AAH.RuleCode = 'holiday'
				AND AAH.IsUse = 'Y'
				AND AAH.RuleInfo LIKE '%"' || #{displayType} || '"%'
				AND SC.SolarDate IS NOT NULL
				AND A.ApplicationType != 'CO'
		</if>
		<if test="VacationUse == 'Y'.toString()">
			LEFT OUTER JOIN vm_vacationinfo VI
				ON (TO_DATE(A.ProofDate, 'YYYY.MM.DD') BETWEEN VI.Sdate AND VI.Edate)
				AND VI.GUBUN NOT IN ('VACATION_CANCEL', 'VACATION_PUBLIC_CANCEL') 
				AND VI.UR_Code = A.RegisterID
				AND SDate NOT IN (
					SELECT SDate 
					FROM vm_vacationinfo VVI
					WHERE VVI.GUBUN IN ('VACATION_CANCEL', 'VACATION_PUBLIC_CANCEL')
					AND VI.VacFlag = VVI.VacFlag
					AND VI.VacDay = VVI.VacDay * -1
					AND VVI.UR_Code = A.RegisterID
				)
			LEFT OUTER JOIN act_audit AAV
				ON AAV.RuleCode = 'vacation'
				AND AAV.IsUse = 'Y'
				AND AAV.RuleInfo LIKE '%"' || #{displayType} || '"%'
				AND VI.Sdate IS NOT NULL
				AND A.ApplicationType != 'CO'
		</if>
	  	<if test="MidnightUse == 'Y'.toString()">
			LEFT OUTER JOIN act_audit AAM
				ON AAM.RuleCode = 'midnight'
				AND AAM.IsUse = 'Y'
				AND AAM.RuleInfo LIKE '%"' || #{displayType} || '"%'
				<![CDATA[
				AND (A.ProofHour >= AAM.StdStartTime OR A.ProofHour <= AAM.StdEndTime)
				]]> 
				AND A.ApplicationType != 'CO'
		</if>
		<trim prefix="ORDER BY"  prefixOverrides =",">
		    <if test = "sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
				, A.RegistDate DESC  
				, A.ApplicationTitle
				, A.ProofCode
				, A.ExpenceApplicationListID
		    </if>
		  	<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
			 	<choose>
					<when test='sortColumn.equalsIgnoreCase("CompanyCode")'>"CompanyCode"</when>
					<when test='sortColumn.equalsIgnoreCase("ApplicationTitle")'>"ApplicationTitle"</when>
					<when test='sortColumn.equalsIgnoreCase("RegisterName")'>"RegisterName"</when>
					<when test='sortColumn.equalsIgnoreCase("ApplicationStatusName")'>"ApplicationStatusName"</when>
					<when test='sortColumn.equalsIgnoreCase("RequestTypeName")'>"RequestTypeName"</when>
					<when test='sortColumn.equalsIgnoreCase("PayDate")'>"PayDate"</when>
					<when test='sortColumn.equalsIgnoreCase("ProofDate")'>"ProofDate"</when>
					<when test='sortColumn.equalsIgnoreCase("ProofTime")'>"ProofTime"</when>
					<when test='sortColumn.equalsIgnoreCase("ProofCodeName")'>"ProofCodeName"</when>
					<when test='sortColumn.equalsIgnoreCase("VendorName")'>"VendorName"</when>
					<when test='sortColumn.equalsIgnoreCase("UsageComment")'>"UsageComment"</when>
					<when test='sortColumn.equalsIgnoreCase("TaxAmount")'>"TaxAmount"</when>
					<when test='sortColumn.equalsIgnoreCase("RepAmount")'>"RepAmount"</when>
					<when test='sortColumn.equalsIgnoreCase("TotalAmount")'>"TotalAmount"</when>
					<when test='sortColumn.equalsIgnoreCase("AmountSum")'>"AmountSum"</when>
					<when test='sortColumn.equalsIgnoreCase("DocNo")'>"DocNo"</when>
					<otherwise>"ApplicationDate"</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if>
		</trim>
		<include refid="oracle.include.pagingFooter" />
	</select>
	
	
	<select id="selectExpenceApplicationListExcel" parameterType="cmap" resultType="cmap">
		/*
			expenceApplication.selectExpenceApplicationListExcel
		*/
		
		SELECT A.ExpenceApplicationID AS "ExpenceApplicationID"
			, A.CompanyCode AS "CompanyCode"
			, FN_GETACTBASECODENAME('CompanyCode', A.CompanyCode, #{CompanyCode}) AS "CompanyName"
			, A.ApplicationTitle AS "ApplicationTitle"
			, A.ApplicationType AS "ApplicationType"
			, FN_GETACTBASECODENAME('ExpAppType', A.ApplicationType, #{CompanyCode}) AS "ApplicationTypeName"
			, A.ApplicationStatus AS "ApplicationStatus"
			, FN_GETACTBASECODENAME('ExpenceApplicationStatus', A.ApplicationStatus, #{CompanyCode}) AS "ApplicationStatusName"
			, A.RegisterID AS "RegisterID"
			, A.RegisterName AS "RegisterName"
			, A.ApplicationDate AS "ApplicationDate"
			, A.RequestType AS "RequestType"
			, A.RequestTypeName AS "RequestTypeName"
			, A.RegistDate AS "RegistDate"
			, A.ChargeJob AS "ChargeJob"
			, A.ProcessID AS "ProcessID"	
			, A.ExpenceApplicationListID AS "ExpenceApplicationListID"
			, A.ExpenceApplicationListID AS "cdRownum"
			, A.ProofDate AS "ProofDate"
			, A.PostingDate AS "PostingDate"
			, A.ProofCode AS "ProofCode"
			, FN_GETACTBASECODENAME('ProofCode', A.ProofCode, #{CompanyCode}) AS "ProofCodeName"
			, A.CardUID AS "CardUID"
			, A.CashUID AS "CashUID"
			, A.TaxUID AS "TaxUID"
			, A.ReceiptID AS "ReceiptID"
			, A.TaxType AS "TaxType"
			, A.TaxCode AS "TaxCode"
			, A.PayAdjustMethod AS "PayAdjustMethod"
			, A.PayMethod AS "PayMethod"
			, A.IsWithholdingTax AS "IsWithholdingTax"
			, A.IncomeTax AS "IncomeTax"
			, A.LocalTax AS "LocalTax"
			, A.PayDate AS "PayDate"
			, A.VendorNo AS "VendorNo"
			, A.VendorName AS "VendorName"
			, A.CardReceiptID AS "CardReceiptID"
			, A.CardApproveNo AS "CardApproveNo"
			, A.TaxInvoiceID AS "TaxInvoiceID"
			, A.TaxNTSConfirmNum AS "TaxNTSConfirmNum"
			, A.CashNTSConfirmNum AS "CashNTSConfirmNum"
			, A.FileCnt AS "FileCnt"
			, A.AppCnt AS "AppCnt"
			, A.TotalAmount AS "TotalAmount"
			, A.TotalAmountNum AS "TotalAmountNum"
			, A.TaxAmount AS "TaxAmount"
			, A.TaxAmountNum AS "TaxAmountNum"
			, A.RepAmount AS "RepAmount"
			, A.RepAmountNum AS "RepAmountNum"
			, A.AmountSum AS "AmountSum"
			, A.AmountSumNum AS "AmountSumNum"
			, A.DocNo AS "DocNo"
			, A.DocPostingDate AS "DocPostingDate"
			, A.DocPayDate AS "DocPayDate"
			, A.ReceiptFileID AS "ReceiptFileID"       
			, A.ProofTime AS "ProofTime"
			, A.ProofHour AS "ProofHour"
			, A.UsageComment AS "UsageComment"
	  	<if test="AmountUse == 'Y'.toString()">
			, AAA.ApplicationColor AS "AmountSumColor"
		</if>
	  	<if test="WeekendUse == 'Y'.toString()">
			, AAW.ApplicationColor AS "WeekendColor"
		</if>
	  	<if test="HolidayUse == 'Y'.toString()">
			, AAH.ApplicationColor AS "HolidayColor"
		</if>
	  	<if test="VacationUse == 'Y'.toString()">
			, AAV.ApplicationColor AS "VacationColor"
		</if>
	  	<if test="MidnightUse == 'Y'.toString()">
			, AAM.ApplicationColor AS "MidnightColor"
		</if>
		FROM
		(
			SELECT AEA.ExpenceApplicationID AS ExpenceApplicationID
				, AEA.CompanyCode AS CompanyCode
				, AEA.ApplicationTitle AS ApplicationTitle
				, AEA.ApplicationType AS ApplicationType
				, AEA.ApplicationStatus AS ApplicationStatus
				, AEA.RegisterID AS RegisterID
				, USR.DisplayName AS RegisterName
				, TO_CHAR(TO_DATE(NVL(AEA.ApplicationDate, AEA.RegistDate), 'YY/MM/DD'), 'YYYY.MM.DD') AS ApplicationDate		
				, AEA.RequestType AS RequestType		
				, AEF.FormName AS RequestTypeName
				, AEA.RegistDate AS RegistDate		
				, AEA.ChargeJob AS ChargeJob	
				, AEA.ProcessID	AS ProcessID	
				, AEAL.ExpenceApplicationListID AS ExpenceApplicationListID
				, TO_CHAR(TO_DATE(AEAL.ProofDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS ProofDate
				, TO_CHAR(TO_DATE(AEAL.PostingDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS PostingDate
				, AEAL.ProofCode AS ProofCode
				, AEAL.CardUID AS CardUID
				, AEAL.CashUID AS CashUID	
				, AEAL.TaxUID AS TaxUID
				, AEAL.ReceiptID AS ReceiptID	
				, AEAL.TaxType AS TaxType
				, AEAL.TaxCode AS TaxCode	
				, AEAL.PayAdjustMethod AS PayAdjustMethod	
				, AEAL.PayMethod AS PayMethod	
				, AEAL.IsWithholdingTax AS IsWithholdingTax
				, AEAL.IncomeTax AS IncomeTax	
				, AEAL.LocalTax AS LocalTax	
				, TO_CHAR(TO_DATE(AEAL.PayDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS PayDate
				, AEAL.VendorNo AS VendorNo	
				, NVL(VD.VendorName, ATI.InvoicerCorpName) AS VendorName
				, CR.ReceiptID AS CardReceiptID	
				, CR.ApproveNo AS CardApproveNo
				, ATI.TaxInvoiceID AS TaxInvoiceID
				, ATI.NTSConfirmNum AS TaxNTSConfirmNum
				, ACB.NTSConfirmNum AS CashNTSConfirmNum
            
				, (SELECT COUNT(*) FROM  act_expence_application_file AEAF
					WHERE AEAL.ExpenceApplicationListID = AEAF.ExpenceApplicationListID
					) AS FileCnt
				, (SELECT COUNT(*) 
					FROM  act_expence_application_list AEALD
					WHERE AEAL.ExpenceApplicationID = AEALD.ExpenceApplicationID
					) AS AppCnt
				, TO_CHAR(AEAL.TotalAmount,'999,999,999,999,999,999,999,999.00')				AS TotalAmount
				, AEAL.TotalAmount AS TotalAmountNum
				, CASE 
					WHEN AEAL.ProofCode = 'CorpCard' THEN TO_CHAR(CR.TaxAmount, '999,999,999,999,999,999,999,999.00')
					WHEN AEAL.ProofCode = 'TaxBill' THEN TO_CHAR(ATI.TaxTotal, '999,999,999,999,999,999,999,999.00')
					WHEN AEAL.ProofCode = 'CashBill' THEN TO_CHAR(ACB.Tax, '999,999,999,999,999,999,999,999.00')
					ELSE ''
					END AS TaxAmount
				, CASE 
					WHEN AEAL.ProofCode = 'CorpCard' THEN TO_CHAR(CR.TaxAmount)
					WHEN AEAL.ProofCode = 'TaxBill' THEN TO_CHAR(ATI.TaxTotal)
					WHEN AEAL.ProofCode = 'CashBill' THEN TO_CHAR(ACB.Tax)
					ELSE ''
					END AS TaxAmountNum
				, CASE 
					WHEN AEAL.ProofCode = 'CorpCard' THEN TO_CHAR(CR.RepAmount, '999,999,999,999,999,999,999,999.00')
					WHEN AEAL.ProofCode = 'TaxBill' THEN TO_CHAR(ATI.SupplyCostTotal, '999,999,999,999,999,999,999,999.00')
					WHEN AEAL.ProofCode = 'CashBill' THEN TO_CHAR(ACB.SupplyCost, '999,999,999,999,999,999,999,999.00')
					ELSE ''
					END AS RepAmount
				, CASE 
					WHEN AEAL.ProofCode = 'CorpCard' THEN TO_CHAR(CR.RepAmount)
					WHEN AEAL.ProofCode = 'TaxBill' THEN TO_CHAR(ATI.SupplyCostTotal)
					WHEN AEAL.ProofCode = 'CashBill' THEN TO_CHAR(ACB.SupplyCost)
					ELSE ''
					END AS RepAmountNum
				, (
					SELECT 
						CASE 
							WHEN (AEAL.ProofCode = 'TaxBill' AND SUM(AEAD.Amount) != AEAL.TotalAmount) THEN TO_CHAR(SUM(AEAD.Amount) + AEAL.TaxAmount,'999,999,999,999,999,999,999,999.00') 
							ELSE TO_CHAR(SUM(AEAD.AMOUNT),'999,999,999,999,999,999,999,999.00')
						END
					FROM act_expence_application_div AEAD
					WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
				) AS AmountSum
				, (
					SELECT 
						CASE 
							WHEN (AEAL.ProofCode = 'TaxBill' AND SUM(AEAD.Amount) != AEAL.TotalAmount) THEN SUM(AEAD.Amount) + AEAL.TaxAmount 
							ELSE SUM(AEAD.AMOUNT)
						END
					FROM act_expence_application_div AEAD
					WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
				) AS AmountSumNum
				
				, AEAL.DocNo AS DocNo
				, CASE WHEN AEAL.DocNo IS NULL 
						THEN 
							TO_CHAR(TO_DATE(AEAL.PostingDate, 'YYYYMMDD'), 'YYYY.MM.DD')
						ELSE 
							TO_CHAR(TO_DATE(AEAL.DocPostingDate, 'YYYYMMDD'), 'YYYY.MM.DD')
					END AS DocPostingDate
				, CASE WHEN AEAL.DocNo IS NULL 
						THEN 
							TO_CHAR(TO_DATE(AEAL.PayDate, 'YYYYMMDD'), 'YYYY.MM.DD')
						ELSE 
							TO_CHAR(TO_DATE(AEAL.DocPayDate, 'YYYYMMDD'), 'YYYY.MM.DD')
					END AS DocPayDate
				, AR.ReceiptFileID AS ReceiptFileID
				, CASE 
					WHEN AEAL.ProofCode = 'CorpCard' THEN TO_CHAR(TO_DATE(CR.ApproveTime, 'HH24:MI:SS'), 'HH24:MI:SS') 
					WHEN AEAL.ProofCode = 'Receipt' THEN (AR.UseTime || ':00')
					WHEN AEAL.ProofCode = 'EtcEvid' THEN (CASE WHEN AEAL.ProofTime IS NOT NULL THEN (AEAL.ProofTime || ':00') ELSE NULL END)
					ELSE NULL 
				  END AS ProofTime
				, CASE 
					WHEN AEAL.ProofCode = 'CorpCard' THEN SUBSTR(CR.ApproveTime, 1, 2) 
					WHEN AEAL.ProofCode = 'Receipt' THEN SUBSTR(AR.UseTime, 1, 2) 
					WHEN AEAL.ProofCode = 'EtcEvid' THEN (CASE WHEN AEAL.ProofTime IS NOT NULL THEN SUBSTR(AEAL.ProofTime, 1, 2) ELSE NULL END)
					ELSE NULL 
				  END AS ProofHour
				, (SELECT LISTAGG(AEAD.UsageComment, ',') WITHIN GROUP (ORDER BY ExpenceApplicationListID) FROM act_expence_application_div AEAD WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID) AS UsageComment
			FROM act_expence_application AEA
			INNER JOIN act_expence_application_list AEAL
			ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
			LEFT OUTER JOIN act_vendor VD
			ON AEAL.VendorNo = VD.VendorNo and AEA.CompanyCode = VD.CompanyCode
			LEFT OUTER JOIN sys_object_user USR
			ON AEA.RegisterID = USR.UserCode
			LEFT OUTER JOIN act_expence_forms AEF
			ON AEA.RequestType = AEF.FormCode and AEF.CompanyCode = AEA.CompanyCode
			LEFT OUTER JOIN act_card_receipt CR
			ON AEAL.CardUID = CR.ReceiptID
			LEFT OUTER JOIN act_taxinvoice ATI
			ON AEAL.TaxUID = ATI.TaxInvoiceID
			LEFT OUTER JOIN act_cashbill ACB
			ON AEAL.CashUID = ACB.CashBillID
			LEFT OUTER JOIN act_receipt AR
			ON AEAL.ReceiptID = AR.ReceiptID
			WHERE 1=1
			AND AEA.ApplicationStatus != 'DELETE'
			
	  	<if test="DocNo != null and DocNo != ''">
	  	    AND AEAL.DocNo LIKE '%' || #{DocNo} || '%'
		</if>
		
	  	<if test="ApplicationStatus != null and ApplicationStatus != ''">
		 	AND AEA.ApplicationStatus = #{ApplicationStatus}
		</if>
	  	
	  	<if test="ApplicationTitle != null and ApplicationTitle != ''">
		 	AND UPPER(AEA.ApplicationTitle) LIKE UPPER('%' || #{ApplicationTitle} || '%')
		</if>
			  	
	  	<if test="ChargeJob != null and ChargeJob != ''">
		 	AND AEA.ChargeJob LIKE #{ChargeJob} || '%'
		</if>
				
		<if test="RequestType != null and RequestType != ''">
		 	AND AEA.RequestType = #{RequestType}
		</if>
	  	
	  	<if test="ProofCode != null and ProofCode != ''">
		 	AND AEAL.ProofCode = #{ProofCode}
		</if>
			  	
	  	<if test="CompanyCode != null and CompanyCode != ''">
		 	AND AEA.CompanyCode = #{CompanyCode}
		</if>
		
	  	<if test="ProofDateSt != null and ProofDateSt != ''">
			<![CDATA[
			 	AND AEAL.ProofDate >= #{ProofDateSt}
			]]>
		</if>
	  	<if test="ProofDateEd != null and ProofDateEd != ''">
			<![CDATA[
			 	AND AEAL.ProofDate <= #{ProofDateEd}
			]]>
		</if>
	  	
	  	<if test="ApplicationDateSt != null and ApplicationDateSt != ''">
			<![CDATA[
			 	AND NVL(AEA.ApplicationDate, AEA.RegistDate) >= TO_DATE(#{ApplicationDateSt}, 'YYYY-MM-DD HH24:MI:SS')
			]]>
		</if>
	  	<if test="ApplicationDateEd != null and ApplicationDateEd != ''">
			<![CDATA[
			 	AND NVL(AEA.ApplicationDate, AEA.RegistDate) <= TO_DATE(#{ApplicationDateEd}, 'YYYY-MM-DD HH24:MI:SS')
			]]>
		</if>
	  	
	  	
	  	<if test="RegisterNm != null and RegisterNm != ''">
		 	AND UPPER(USR.DisplayName) LIKE UPPER('%' || #{RegisterNm} || '%')
		</if>
	  	
	  	<if test="VendorName != null and VendorName != ''">
		 	AND (
		 		UPPER(VD.VendorName) LIKE UPPER('%' || #{VendorName} || '%')
		 		OR UPPER(ATI.InvoicerCorpName) LIKE UPPER('%' || #{VendorName} || '%')
		 	)
		</if>
	  	<if test="SearchAmtSt != null and SearchAmtSt != ''">
	  	    <![CDATA[
		 	AND AEAL.TotalAmount > #{SearchAmtSt}
			]]>
		</if>
	  	<if test="SearchAmtEd != null and SearchAmtEd != ''">
	  		<![CDATA[
		 	AND AEAL.TotalAmount < #{SearchAmtEd}
			]]>
		</if>
	  	<if test="StandardBriefID != null and StandardBriefID != ''">
	  		AND #{StandardBriefID} IN (
	  			SELECT StandardBriefID 
	  			FROM act_expence_application_div AEAD
	  			WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
	  		)
		</if>
		<if test="PayDate != null and PayDate != ''">
		    AND AEAL.PayDate = #{PayDate}
		</if>
		<choose>
			<when test="SessionUser != null and SessionUser != ''">
		 		AND AEA.RegisterID = #{SessionUser}
			</when>
			<otherwise>
			    AND AEA.ApplicationStatus NOT IN ('T')
			</otherwise>
		</choose>
		) A
	  	<if test="AmountUse == 'Y'.toString()">
			LEFT OUTER JOIN act_audit AAA
				ON AAA.RuleCode = 'amount'
				AND AAA.IsUse = 'Y'
				AND AAA.RuleInfo LIKE '%"' || #{displayType} || '"%'
				AND A.AmountSumNum > (AAA.StdValue * 10000)
				AND A.ApplicationType != 'CO'
		</if>
	  	<if test="WeekendUse == 'Y'.toString()">
			LEFT OUTER JOIN act_audit AAW
				ON AAW.RuleCode = 'weekend'
				AND AAW.IsUse = 'Y'
				AND AAW.RuleInfo LIKE '%"' || #{displayType} || '"%'
				AND TO_CHAR(TO_DATE(A.PostingDate), 'd') IN (1, 7)
				AND A.ApplicationType != 'CO'
		</if>
	  	<if test="HolidayUse == 'Y'.toString()">
			LEFT OUTER JOIN sys_calendar SC
				ON SC.SolarDate = REGEXP_REPLACE(A.PostingDate, '(.{4})(.{2})(.{2})', '\1-\2-\3')
				AND SC.Anniversary IS NOT NULL
			LEFT OUTER JOIN act_audit AAH
				ON AAH.RuleCode = 'holiday'
				AND AAH.IsUse = 'Y'
				AND AAH.RuleInfo LIKE '%"' || #{displayType} || '"%'
				AND SC.SolarDate IS NOT NULL
				AND A.ApplicationType != 'CO'
		</if>
	  	<if test="VacationUse == 'Y'.toString()">
			LEFT OUTER JOIN vm_vacationinfo VI
				ON (TO_DATE(A.ProofDate, 'YYYY.MM.DD') BETWEEN VI.Sdate AND VI.Edate)
				AND VI.GUBUN NOT IN ('VACATION_CANCEL', 'VACATION_PUBLIC_CANCEL') 
				AND VI.UR_Code = A.RegisterID
				AND SDate NOT IN (
					SELECT SDate 
					FROM vm_vacationinfo VVI 
					WHERE VVI.GUBUN IN ('VACATION_CANCEL', 'VACATION_PUBLIC_CANCEL')
					AND VI.VacFlag = VVI.VacFlag
					AND VI.VacDay = VVI.VacDay * -1
					AND VVI.UR_Code = A.RegisterID
				)
			LEFT OUTER JOIN act_audit AAV
				ON AAV.RuleCode = 'vacation'
				AND AAV.IsUse = 'Y'
				AND AAV.RuleInfo LIKE '%"' || #{displayType} || '"%'
				AND VI.Sdate IS NOT NULL
				AND A.ApplicationType != 'CO'
		</if>
	  	<if test="MidnightUse == 'Y'.toString()">
			LEFT OUTER JOIN act_audit AAM
				ON AAM.RuleCode = 'midnight'
				AND AAM.IsUse = 'Y'
				AND AAM.RuleInfo LIKE '%"' || #{displayType} || '"%'
				<![CDATA[
				AND (A.ProofHour >= AAM.StdStartTime OR A.ProofHour <= AAM.StdEndTime)
				]]> 
				AND A.ApplicationType != 'CO'
		</if>
		<trim prefix="ORDER BY"  prefixOverrides =",">
		    <if test = "sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
				, A.RegistDate DESC  
				, A.ApplicationTitle
				, A.ProofCode
				, A.ExpenceApplicationListID
		    </if>
		  	<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
			 	<choose>
					<when test='sortColumn.equalsIgnoreCase("CompanyCode")'>"CompanyCode"</when>
					<when test='sortColumn.equalsIgnoreCase("ApplicationTitle")'>"ApplicationTitle"</when>
					<when test='sortColumn.equalsIgnoreCase("RegisterName")'>"RegisterName"</when>
					<when test='sortColumn.equalsIgnoreCase("ApplicationStatusName")'>"ApplicationStatusName"</when>
					<when test='sortColumn.equalsIgnoreCase("RequestTypeName")'>"RequestTypeName"</when>
					<when test='sortColumn.equalsIgnoreCase("PayDate")'>"PayDate"</when>
					<when test='sortColumn.equalsIgnoreCase("ProofDate")'>"ProofDate"</when>
					<when test='sortColumn.equalsIgnoreCase("ProofTime")'>"ProofTime"</when>
					<when test='sortColumn.equalsIgnoreCase("ProofCodeName")'>"ProofCodeName"</when>
					<when test='sortColumn.equalsIgnoreCase("VendorName")'>"VendorName"</when>
					<when test='sortColumn.equalsIgnoreCase("UsageComment")'>"UsageComment"</when>
					<when test='sortColumn.equalsIgnoreCase("TaxAmount")'>"TaxAmount"</when>
					<when test='sortColumn.equalsIgnoreCase("RepAmount")'>"RepAmount"</when>
					<when test='sortColumn.equalsIgnoreCase("TotalAmount")'>"TotalAmount"</when>
					<when test='sortColumn.equalsIgnoreCase("AmountSum")'>"AmountSum"</when>
					<when test='sortColumn.equalsIgnoreCase("DocNo")'>"DocNo"</when>
					<otherwise>"ApplicationDate"</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if>
		</trim>
	</select>
	
	<select id="selectExpenceApplicationListCnt" resultType="java.lang.Long">
		/*
			expenceApplication.selectExpenceApplicationListCnt
		*/
		
		SELECT COUNT(*)
		FROM
		(
			SELECT A.ExpenceApplicationListID
			FROM
			(
				SELECT AEAL.ExpenceApplicationListID
		
				FROM act_expence_application AEA
				INNER JOIN act_expence_application_list AEAL
				ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
				LEFT OUTER JOIN act_vendor VD
				ON AEAL.VendorNo = VD.VendorNo and AEA.CompanyCode = VD.CompanyCode
				LEFT OUTER JOIN sys_object_user USR
				ON AEA.RegisterID = USR.UserCode
				LEFT OUTER JOIN act_expence_forms AEF
				ON AEA.RequestType = AEF.FormCode and AEF.CompanyCode = AEA.CompanyCode
				LEFT OUTER JOIN act_card_receipt CR
				ON AEAL.CardUID = CR.ReceiptID
				LEFT OUTER JOIN act_taxinvoice ATI
				ON AEAL.TaxUID = ATI.TaxInvoiceID
				LEFT OUTER JOIN act_cashbill ACB
				ON AEAL.CashUID = ACB.CashBillID
				LEFT OUTER JOIN act_receipt AR
				ON AEAL.ReceiptID = AR.ReceiptID
				WHERE 1=1
				AND AEA.ApplicationStatus != 'DELETE'
			
			  	<if test="DocNo != null and DocNo != ''">
			  	    AND AEAL.DocNo LIKE '%' || #{DocNo} || '%'
				</if>
				
			  	<if test="ApplicationStatus != null and ApplicationStatus != ''">
				 	AND AEA.ApplicationStatus = #{ApplicationStatus}
				</if>
			  	
			  	<if test="ApplicationTitle != null and ApplicationTitle != ''">
				 	AND UPPER(AEA.ApplicationTitle) LIKE UPPER('%' || #{ApplicationTitle} || '%')
				</if>
			  	
			  	<if test="ChargeJob != null and ChargeJob != ''">
				 	AND AEA.ChargeJob LIKE #{ChargeJob} || '%'
				</if>
				
				<if test="RequestType != null and RequestType != ''">
				 	AND AEA.RequestType = #{RequestType}
				</if>
			  	
			  	<if test="ProofCode != null and ProofCode != ''">
				 	AND AEAL.ProofCode = #{ProofCode}
				</if>
			  	
			  	<if test="CompanyCode != null and CompanyCode != ''">
				 	AND AEA.CompanyCode = #{CompanyCode}
				</if>
				
			  	<if test="ProofDateSt != null and ProofDateSt != ''">
					<![CDATA[
					 	AND AEAL.ProofDate >= #{ProofDateSt}
					]]>
				</if>
			  	<if test="ProofDateEd != null and ProofDateEd != ''">
					<![CDATA[
					 	AND AEAL.ProofDate <= #{ProofDateEd}
					]]>
				</if>
			  	
			  	<if test="ApplicationDateSt != null and ApplicationDateSt != ''">
					<![CDATA[
					 	AND NVL(AEA.ApplicationDate, AEA.RegistDate) >= TO_DATE(#{ApplicationDateSt}, 'YYYY-MM-DD HH24:MI:SS')
					]]>
				</if>
			  	<if test="ApplicationDateEd != null and ApplicationDateEd != ''">
					<![CDATA[
					 	AND NVL(AEA.ApplicationDate, AEA.RegistDate) <= TO_DATE(#{ApplicationDateEd}, 'YYYY-MM-DD HH24:MI:SS')
					]]>
				</if>
			  	
			  	
			  	<if test="RegisterNm != null and RegisterNm != ''">
				 	AND UPPER(USR.DisplayName) LIKE UPPER('%' || #{RegisterNm} || '%')
				</if>
			  	
			  	<if test="VendorName != null and VendorName != ''">
				 	AND (
				 		UPPER(VD.VendorName) LIKE UPPER('%' || #{VendorName} || '%')
				 		OR UPPER(ATI.InvoicerCorpName) LIKE UPPER('%' || #{VendorName} || '%')
				 	)
				</if>
			  	<if test="SearchAmtSt != null and SearchAmtSt != ''">
			  	    <![CDATA[
				 	AND AEAL.TotalAmount > #{SearchAmtSt}
					]]>
				</if>
			  	<if test="SearchAmtEd != null and SearchAmtEd != ''">
			  		<![CDATA[
				 	AND AEAL.TotalAmount < #{SearchAmtEd}
					]]>
				</if>
			  	<if test="StandardBriefID != null and StandardBriefID != ''">
			  		AND #{StandardBriefID} IN (
			  			SELECT StandardBriefID 
			  			FROM act_expence_application_div AEAD
			  			WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
			  		)
				</if>
				<if test="PayDate != null and PayDate != ''">
				    AND AEAL.PayDate = #{PayDate}
				</if>
				<choose>
					<when test="SessionUser != null and SessionUser != ''">
				 		AND AEA.RegisterID = #{SessionUser}
					</when>
					<otherwise>
					    AND AEA.ApplicationStatus NOT IN ('T')
					</otherwise>
				</choose>
			) A
			GROUP BY A.ExpenceApplicationListID
		) A
	</select>
	
	<select id="selectExpenceApplicationManDiv" parameterType="cmap" resultType="cmap">
		/*
			expenceApplication.selectExpenceApplicationManDiv
		*/
		<include refid="oracle.include.pagingHeader" />
		SELECT AEA.ExpenceApplicationID  AS "ExpenceApplicationID"
			, AEA.CompanyCode AS "CompanyCode"
			, FN_GETACTBASECODENAME('CompanyCode', AEA.CompanyCode, #{CompanyCode}) AS "CompanyName"
			, AEA.ApplicationTitle AS "ApplicationTitle"
			, AEA.ApplicationType AS "ApplicationType"
			, FN_GETACTBASECODENAME('ExpAppType', AEA.ApplicationType, #{CompanyCode}) AS "ApplicationTypeName"
			, AEA.ApplicationStatus AS "ApplicationStatus"
			, FN_GETACTBASECODENAME('ExpenceApplicationStatus', AEA.ApplicationStatus, #{CompanyCode}) AS "ApplicationStatusName"
			, AEA.RegisterID AS "RegisterID"
			, USR.DisplayName AS "RegisterName"
			, TO_CHAR(TO_DATE(NVL(AEA.ApplicationDate, AEA.RegistDate), 'YY/MM/DD'), 'YYYY.MM.DD') AS "ApplicationDate"		
			, AEA.RequestType AS "RequestType"	
			, AEF.FormName AS "RequestTypeName"
			, AEA.RegistDate  AS "RegistDate"
			, AEA.ChargeJob AS "ChargeJob" 		
			, AEA.ProcessID	AS "ProcessID"
			, AEAL.ExpenceApplicationListID AS "ExpenceApplicationListID"
			, AEAL.ExpenceApplicationListID AS "cdRownum"
			, TO_CHAR(TO_DATE(AEAL.ProofDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "ProofDate"
			, TO_CHAR(TO_DATE(AEAL.PostingDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "PostingDate"
			, AEAL.ProofCode AS "ProofCode"
			, FN_GETACTBASECODENAME('ProofCode', AEAL.ProofCode, #{CompanyCode}) AS "ProofCodeName"			
			, AEAL.CardUID AS "CardUID"
			, AEAL.CashUID AS "CashUID"
			, AEAL.TaxUID AS "TaxUID"
			, AEAL.TaxType AS "TaxType"
			, AEAL.TaxCode AS "TaxCode"
			, AEAL.PayAdjustMethod AS "PayAdjustMethod"
			, AEAL.PayMethod AS "PayMethod"
			, AEAL.IsWithholdingTax AS "IsWithholdingTax"
			, AEAL.IncomeTax AS "IncomeTax"
			, AEAL.LocalTax AS "LocalTax"
			, TO_CHAR(TO_DATE(AEAL.PayDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "PayDate"
			, AEAL.VendorNo AS "VendorNo"
			, NVL(VD.VendorName, ATI.InvoicerCorpName) AS "VendorName"
			, CR.ReceiptID AS "CardReceiptID"
			, CR.ApproveNo AS "CardApproveNo"
			, ATI.TaxInvoiceID AS "TaxInvoiceID"
			, ATI.NTSConfirmNum AS "TaxNTSConfirmNum"
			, ACB.NTSConfirmNum AS "CashNTSConfirmNum"		
			, (SELECT COUNT(*) FROM  act_expence_application_file AEAF
				WHERE AEAL.ExpenceApplicationListID = AEAF.ExpenceApplicationListID
				) AS "FileCnt"				
			, AEAD.AccountCode AS "AccountCode"
			, AEAD.AccountName AS "AccountName"
			, AEAD.CostCenterCode AS "CostCenterCode"
			, AEAD.CostCenterName AS "CostCenterName"
			, AEAD.IOCode AS "IOCode"
			, AEAD.IOName AS "IOName"
			, AEAD.StandardBriefID AS "StandardBriefID"
			, AEAD.StandardBriefName AS "StandardBriefName"
			, TO_CHAR(AEAL.TotalAmount, '999,999,999,999,999,999,999,999.00')	AS "TotalAmount"			
			, AEAL.TotalAmount AS "TotalAmountNum"		
			, CASE 
				WHEN AEAL.ProofCode = 'CorpCard' THEN TO_CHAR(CR.TaxAmount, '999,999,999,999,999,999,999,999.00')
				WHEN AEAL.ProofCode = 'TaxBill' THEN TO_CHAR(ATI.TaxTotal, '999,999,999,999,999,999,999,999.00')
				WHEN AEAL.ProofCode = 'CashBill' THEN TO_CHAR(ACB.Tax, '999,999,999,999,999,999,999,999.00')
				ELSE ''
				END AS "TaxAmount"
			, CASE 
				WHEN AEAL.ProofCode = 'CorpCard' THEN TO_CHAR(CR.TaxAmount)
				WHEN AEAL.ProofCode = 'TaxBill' THEN TO_CHAR(ATI.TaxTotal)
				WHEN AEAL.ProofCode = 'CashBill' THEN TO_CHAR(ACB.Tax)
				ELSE ''
				END AS "TaxAmountNum"
			, CASE 
				WHEN AEAL.ProofCode = 'CorpCard' THEN TO_CHAR(CR.RepAmount, '999,999,999,999,999,999,999,999.00')
				WHEN AEAL.ProofCode = 'TaxBill' THEN TO_CHAR(ATI.SupplyCostTotal, '999,999,999,999,999,999,999,999.00')
				WHEN AEAL.ProofCode = 'CashBill' THEN TO_CHAR(ACB.SupplyCost, '999,999,999,999,999,999,999,999.00')
				ELSE ''
				END AS "RepAmount"
			, CASE 
				WHEN AEAL.ProofCode = 'CorpCard' THEN TO_CHAR(CR.RepAmount)
				WHEN AEAL.ProofCode = 'TaxBill' THEN TO_CHAR(ATI.SupplyCostTotal)
				WHEN AEAL.ProofCode = 'CashBill' THEN TO_CHAR(ACB.SupplyCost)
				ELSE ''
				END AS "RepAmountNum"			
			, TO_CHAR(AEAD.Amount,'999,999,999,999,999,999,999,999.00') AS "Amount"
			, AEAD.Amount AS "AmountNum"	
			, AEAD.UsageComment AS "UsageComment"	
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEAL
		ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
		INNER JOIN act_expence_application_div AEAD
		ON AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
		LEFT OUTER JOIN act_vendor VD
		ON AEAL.VendorNo = VD.VendorNo and AEA.CompanyCode = VD.CompanyCode
		LEFT OUTER JOIN sys_object_user USR
		ON AEA.RegisterID = USR.UserCode
		LEFT OUTER JOIN act_expence_forms AEF
		ON AEA.RequestType = AEF.FormCode and AEF.CompanyCode = AEA.CompanyCode
		LEFT OUTER JOIN act_card_receipt CR
		ON AEAL.CardUID = CR.ReceiptID
		LEFT OUTER JOIN act_taxinvoice ATI
		ON AEAL.TaxUID = ATI.TaxInvoiceID
		LEFT OUTER JOIN act_cashbill ACB
		ON AEAL.CashUID = ACB.CashBillID
		WHERE 1=1
		AND AEA.ApplicationStatus != 'DELETE'
			
	  	<if test="DocNo != null and DocNo != ''">
	  	    AND AEAL.DocNo LIKE '%' || #{DocNo} || '%'
		</if>
		
	  	<if test="ApplicationStatus != null and ApplicationStatus != ''">
		 	AND AEA.ApplicationStatus = #{ApplicationStatus}
		</if>
	  	
	  	<if test="ApplicationTitle != null and ApplicationTitle != ''">
		 	AND UPPER(AEA.ApplicationTitle) LIKE UPPER('%' || #{ApplicationTitle} || '%')
		</if>
			  	
	  	<if test="ChargeJob != null and ChargeJob != ''">
		 	AND AEA.ChargeJob LIKE #{ChargeJob} || '%'
		</if>
				
		<if test="RequestType != null and RequestType != ''">
		 	AND AEA.RequestType = #{RequestType}
		</if>
	  	
	  	<if test="ProofCode != null and ProofCode != ''">
		 	AND AEAL.ProofCode = #{ProofCode}
		</if>
			  	
	  	<if test="CompanyCode != null and CompanyCode != ''">
		 	AND AEA.CompanyCode = #{CompanyCode}
		</if>
		
	  	<if test="ProofDateSt != null and ProofDateSt != ''">
			<![CDATA[
			 	AND AEAL.ProofDate >= #{ProofDateSt}
			]]>
		</if>
	  	<if test="ProofDateEd != null and ProofDateEd != ''">
			<![CDATA[
			 	AND AEAL.ProofDate <= #{ProofDateEd}
			]]>
		</if>
	  	
	  	<if test="ApplicationDateSt != null and ApplicationDateSt != ''">
			<![CDATA[
			 	AND NVL(AEA.ApplicationDate, AEA.RegistDate) >= TO_DATE(#{ApplicationDateSt}, 'YYYY-MM-DD HH24:MI:SS')
			]]>
		</if>
	  	<if test="ApplicationDateEd != null and ApplicationDateEd != ''">
			<![CDATA[
			 	AND NVL(AEA.ApplicationDate, AEA.RegistDate) <= TO_DATE(#{ApplicationDateEd}, 'YYYY-MM-DD HH24:MI:SS')
			]]>
		</if>
	  	
	  	
	  	<if test="RegisterNm != null and RegisterNm != ''">
		 	AND UPPER(USR.DisplayName) LIKE UPPER('%' || #{RegisterNm} || '%')
		</if>
	  	
	  	<if test="VendorName != null and VendorName != ''">
		 	AND (
			 		UPPER(VD.VendorName) LIKE UPPER('%' || #{VendorName} || '%')
			 		OR UPPER(ATI.InvoicerCorpName) LIKE UPPER('%' || #{VendorName} || '%')
			 	)
		</if>
		
	  	<if test="SearchAmtSt != null and SearchAmtSt != ''">
	  	    <![CDATA[
		 	AND AEAD.Amount > #{SearchAmtSt}
			]]>
		</if>
	  	<if test="SearchAmtEd != null and SearchAmtEd != ''">
	  		<![CDATA[
		 	AND AEAD.Amount < #{SearchAmtEd}
			]]>
		</if>
	  	<if test="AccountCode != null and AccountCode != ''">
		 	AND AEAD.AccountCode = #{AccountCode}
		</if>
	  	<if test="CostCenterCode != null and CostCenterCode != ''">
		 	AND AEAD.CostCenterCode = #{CostCenterCode}
		</if>
	  	<if test="IOCode != null and IOCode != ''">
		 	AND AEAD.IOCode = #{IOCode}
		</if>
	  	<if test="StandardBriefID != null and StandardBriefID != ''">
		 	AND AEAD.StandardBriefID = #{StandardBriefID}
		</if>
		<if test="PayDate != null and PayDate != ''">
		    AND AEAL.PayDate = #{PayDate}
		</if>
		
		<choose>
			<when test="SessionUser != null and SessionUser != ''">
		 		AND AEA.RegisterID = #{SessionUser}
			</when>
			<otherwise>
			    AND AEA.ApplicationStatus NOT IN ('T')
			</otherwise>
		</choose>
		<trim prefix="ORDER BY"  prefixOverrides =",">
		    <if test = "sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
				,AEA.RegistDate DESC
				, AEA.ApplicationTitle
				, AEAL.ProofCode
				, AEAL.ExpenceApplicationListID 
		    </if>
		  	<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
			 	<choose>
					<when test='sortColumn.equalsIgnoreCase("CompanyCode")'>"CompanyCode"</when>
					<when test='sortColumn.equalsIgnoreCase("ApplicationTitle")'>"ApplicationTitle"</when>
					<when test='sortColumn.equalsIgnoreCase("RegisterName")'>"RegisterName"</when>
					<when test='sortColumn.equalsIgnoreCase("ApplicationStatusName")'>"ApplicationStatusName"</when>
					<when test='sortColumn.equalsIgnoreCase("RequestTypeName")'>"RequestTypeName"</when>
					<when test='sortColumn.equalsIgnoreCase("PayDate")'>"PayDate"</when>
					<when test='sortColumn.equalsIgnoreCase("ProofDate")'>"ProofDate"</when>
					<when test='sortColumn.equalsIgnoreCase("ProofCodeName")'>"ProofCodeName"</when>
					<when test='sortColumn.equalsIgnoreCase("VendorName")'>"VendorName"</when>
					<when test='sortColumn.equalsIgnoreCase("UsageComment")'>"UsageComment"</when>
					<when test='sortColumn.equalsIgnoreCase("TaxAmount")'>"TaxAmount"</when>
					<when test='sortColumn.equalsIgnoreCase("RepAmount")'>"RepAmount"</when>
					<when test='sortColumn.equalsIgnoreCase("TotalAmount")'>"TotalAmount"</when>
					<when test='sortColumn.equalsIgnoreCase("Amount")'>"Amount"</when>
					<when test='sortColumn.equalsIgnoreCase("CostCenterName")'>"CostCenterName"</when>
					<when test='sortColumn.equalsIgnoreCase("IOName")'>"IOName"</when>
					<when test='sortColumn.equalsIgnoreCase("AccountName")'>"AccountName"</when>
					<when test='sortColumn.equalsIgnoreCase("StandardBriefName")'>"StandardBriefName"</when>
					<otherwise>"ApplicationDate"</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if>
		</trim>
		<include refid="oracle.include.pagingFooter" />
	</select>
	<select id="selectExpenceApplicationManDivExcel" parameterType="cmap" resultType="cmap">
		/*
			expenceApplication.selectExpenceApplicationManDivExcel
		*/
		
		SELECT AEA.ExpenceApplicationID  AS "ExpenceApplicationID"
			, AEA.CompanyCode AS "CompanyCode"
			, FN_GETACTBASECODENAME('CompanyCode', AEA.CompanyCode, #{CompanyCode}) AS "CompanyName"
			, AEA.ApplicationTitle AS "ApplicationTitle"
			, AEA.ApplicationType AS "ApplicationType"
			, FN_GETACTBASECODENAME('ExpAppType', AEA.ApplicationType, #{CompanyCode}) AS "ApplicationTypeName"
			, AEA.ApplicationStatus AS "ApplicationStatus"
			, FN_GETACTBASECODENAME('ExpenceApplicationStatus', AEA.ApplicationStatus, #{CompanyCode}) AS "ApplicationStatusName"
			, AEA.RegisterID AS "RegisterID"
			, USR.DisplayName AS "RegisterName"
			, TO_CHAR(TO_DATE(NVL(AEA.ApplicationDate, AEA.RegistDate), 'YY/MM/DD'), 'YYYY.MM.DD') AS "ApplicationDate"		
			, AEA.RequestType AS "RequestType"	
			, AEF.FormName AS "RequestTypeName"
			, AEA.RegistDate AS "RegistDate"
			, AEA.ChargeJob	AS "ChargeJob"
			, AEA.ProcessID	AS "ProcessID"
			, AEAL.ExpenceApplicationListID AS "ExpenceApplicationListID"
			, AEAL.ExpenceApplicationListID AS "cdRownum"
			, TO_CHAR(TO_DATE(AEAL.ProofDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "ProofDate"
			, TO_CHAR(TO_DATE(AEAL.PostingDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "PostingDate"
			, AEAL.ProofCode AS "ProofCode"
			, FN_GETACTBASECODENAME('ProofCode', AEAL.ProofCode, #{CompanyCode}) AS "ProofCodeName"			
			, AEAL.CardUID AS "CardUID"
			, AEAL.CashUID AS "CashUID"
			, AEAL.TaxUID AS "TaxUID"
			, AEAL.TaxType AS "TaxType"
			, AEAL.TaxCode AS "TaxCode"
			, AEAL.PayAdjustMethod AS "PayAdjustMethod"
			, AEAL.PayMethod AS "PayMethod"
			, AEAL.IsWithholdingTax AS "IsWithholdingTax"
			, AEAL.IncomeTax AS "IncomeTax"
			, AEAL.LocalTax AS "LocalTax"
			, TO_CHAR(TO_DATE(AEAL.PayDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "PayDate"
			, AEAL.VendorNo AS "VendorNo"
			, VD.VendorName AS "VendorName"
			, CR.ReceiptID AS "CardReceiptID"
			, CR.ApproveNo AS "CardApproveNo"
			, ATI.TaxInvoiceID AS "TaxInvoiceID"
			, ATI.NTSConfirmNum AS "TaxNTSConfirmNum"
			, ACB.NTSConfirmNum AS "CashNTSConfirmNum"		
			, (SELECT COUNT(*) FROM  act_expence_application_file AEAF
				WHERE AEAL.ExpenceApplicationListID = AEAF.ExpenceApplicationListID
				) AS "FileCnt"				
			, AEAD.AccountCode AS "AccountCode"
			, AEAD.AccountName AS "AccountName"
			, AEAD.CostCenterCode AS "CostCenterCode"
			, AEAD.CostCenterName AS "CostCenterName"
			, AEAD.IOCode AS "IOCode"
			, AEAD.IOName AS "IOName"
			, AEAD.StandardBriefID AS "StandardBriefID"
			, AEAD.StandardBriefName AS "StandardBriefName"
			, TO_CHAR(AEAL.TotalAmount, '999,999,999,999,999,999,999,999.00')	AS "TotalAmount"	
			, AEAL.TotalAmount AS "TotalAmountNum"				
			, CASE 
				WHEN AEAL.ProofCode = 'CorpCard' THEN TO_CHAR(CR.TaxAmount, '999,999,999,999,999,999,999,999.00')
				WHEN AEAL.ProofCode = 'TaxInvoice' THEN TO_CHAR(ATI.TaxTotal, '999,999,999,999,999,999,999,999.00')
				WHEN AEAL.ProofCode = 'CashBill' THEN TO_CHAR(ACB.Tax, '999,999,999,999,999,999,999,999.00')
				ELSE ''
				END AS "TaxAmount"
			, CASE 
				WHEN AEAL.ProofCode = 'CorpCard' THEN TO_CHAR(CR.TaxAmount)
				WHEN AEAL.ProofCode = 'TaxInvoice' THEN TO_CHAR(ATI.TaxTotal)
				WHEN AEAL.ProofCode = 'CashBill' THEN TO_CHAR(ACB.Tax)
				ELSE ''
				END AS "TaxAmountNum"
			, CASE 
				WHEN AEAL.ProofCode = 'CorpCard' THEN TO_CHAR(CR.RepAmount, '999,999,999,999,999,999,999,999.00')
				WHEN AEAL.ProofCode = 'TaxInvoice' THEN TO_CHAR(ATI.SupplyCostTotal, '999,999,999,999,999,999,999,999.00')
				WHEN AEAL.ProofCode = 'CashBill' THEN TO_CHAR(ACB.SupplyCost, '999,999,999,999,999,999,999,999.00')
				ELSE ''
				END AS "RepAmount"
			, CASE 
				WHEN AEAL.ProofCode = 'CorpCard' THEN TO_CHAR(CR.RepAmount)
				WHEN AEAL.ProofCode = 'TaxInvoice' THEN TO_CHAR(ATI.SupplyCostTotal)
				WHEN AEAL.ProofCode = 'CashBill' THEN TO_CHAR(ACB.SupplyCost)
				ELSE ''
				END AS "RepAmountNum"			
			, TO_CHAR(AEAD.Amount,'999,999,999,999,999,999,999,999.00') AS "Amount"
			, AEAD.Amount AS "AmountNum"		
			, AEAD.UsageComment AS "UsageComment"	
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEAL
		ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
		INNER JOIN act_expence_application_div AEAD
		ON AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
		LEFT OUTER JOIN act_vendor VD
		ON AEAL.VendorNo = VD.VendorNo and AEA.CompanyCode = VD.CompanyCode
		LEFT OUTER JOIN sys_object_user USR
		ON AEA.RegisterID = USR.UserCode
		LEFT OUTER JOIN act_expence_forms AEF
		ON AEA.RequestType = AEF.FormCode and AEF.CompanyCode = AEA.CompanyCode
		LEFT OUTER JOIN act_card_receipt CR
		ON AEAL.CardUID = CR.ReceiptID
		LEFT OUTER JOIN act_taxinvoice ATI
		ON AEAL.TaxUID = ATI.TaxInvoiceID
		LEFT OUTER JOIN act_cashbill ACB
		ON AEAL.CashUID = ACB.CashBillID
		WHERE 1=1
		AND AEA.ApplicationStatus != 'DELETE'
			
	  	<if test="DocNo != null and DocNo != ''">
	  	    AND AEAL.DocNo LIKE '%' || #{DocNo} || '%'
		</if>
		
	  	<if test="ApplicationStatus != null and ApplicationStatus != ''">
		 	AND AEA.ApplicationStatus = #{ApplicationStatus}
		</if>
	  	
	  	<if test="ApplicationTitle != null and ApplicationTitle != ''">
		 	AND UPPER(AEA.ApplicationTitle) LIKE UPPER('%' || #{ApplicationTitle} || '%')
		</if>
			  	
	  	<if test="ChargeJob != null and ChargeJob != ''">
		 	AND AEA.ChargeJob LIKE #{ChargeJob} || '%'
		</if>
				
		<if test="RequestType != null and RequestType != ''">
		 	AND AEA.RequestType = #{RequestType}
		</if>
	  	
	  	<if test="ProofCode != null and ProofCode != ''">
		 	AND AEAL.ProofCode = #{ProofCode}
		</if>
			  	
	  	<if test="CompanyCode != null and CompanyCode != ''">
		 	AND AEA.CompanyCode = #{CompanyCode}
		</if>
		
	  	<if test="ProofDateSt != null and ProofDateSt != ''">
			<![CDATA[
			 	AND AEAL.ProofDate >= #{ProofDateSt}
			]]>
		</if>
	  	<if test="ProofDateEd != null and ProofDateEd != ''">
			<![CDATA[
			 	AND AEAL.ProofDate <= #{ProofDateEd}
			]]>
		</if>
	  	
	  	<if test="ApplicationDateSt != null and ApplicationDateSt != ''">
			<![CDATA[
			 	AND NVL(AEA.ApplicationDate, AEA.RegistDate) >= TO_DATE(#{ApplicationDateSt}, 'YYYY-MM-DD HH24:MI:SS')
			]]>
		</if>
	  	<if test="ApplicationDateEd != null and ApplicationDateEd != ''">
			<![CDATA[
			 	AND NVL(AEA.ApplicationDate, AEA.RegistDate) <= TO_DATE(#{ApplicationDateEd}, 'YYYY-MM-DD HH24:MI:SS')
			]]>
		</if>
	  	
	  	
	  	<if test="RegisterNm != null and RegisterNm != ''">
		 	AND UPPER(USR.DisplayName) LIKE UPPER('%' || #{RegisterNm} || '%')
		</if>
	  	
	  	<if test="VendorName != null and VendorName != ''">
		 	AND (
		 		UPPER(VD.VendorName) LIKE UPPER('%' || #{VendorName} || '%') 
		 		OR UPPER(ATI.InvoicerCorpName) LIKE UPPER('%' || #{VendorName} || '%')
		 	)
		</if>
	  	<if test="SearchAmtSt != null and SearchAmtSt != ''">
	  	    <![CDATA[
		 	AND AEAD.Amount > #{SearchAmtSt}
			]]>
		</if>
	  	<if test="SearchAmtEd != null and SearchAmtEd != ''">
	  		<![CDATA[
		 	AND AEAD.Amount < #{SearchAmtEd}
			]]>
		</if>
	  	<if test="AccountCode != null and AccountCode != ''">
		 	AND AEAD.AccountCode = #{AccountCode}
		</if>
	  	<if test="CostCenterCode != null and CostCenterCode != ''">
		 	AND AEAD.CostCenterCode = #{CostCenterCode}
		</if>
	  	<if test="IOCode != null and IOCode != ''">
		 	AND AEAD.IOCode = #{IOCode}
		</if>
	  	<if test="StandardBriefID != null and StandardBriefID != ''">
		 	AND AEAD.StandardBriefID = #{StandardBriefID}
		</if>
		<if test="PayDate != null and PayDate != ''">
		    AND AEAL.PayDate = #{PayDate}
		</if>
		<choose>
			<when test="SessionUser != null and SessionUser != ''">
		 		AND AEA.RegisterID = #{SessionUser}
			</when>
			<otherwise>
			    AND AEA.ApplicationStatus NOT IN ('T')
			</otherwise>
		</choose>
		<trim prefix="ORDER BY"  prefixOverrides =",">
		    <if test = "sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
				, AEA.RegistDate DESC
				, AEA.ApplicationTitle
				, AEAL.ProofCode
				, AEAL.ExpenceApplicationListID 
		    </if>
		  	<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
		  		<choose>
					<when test='sortColumn.equalsIgnoreCase("CompanyCode")'>"CompanyCode"</when>
					<when test='sortColumn.equalsIgnoreCase("ApplicationTitle")'>"ApplicationTitle"</when>
					<when test='sortColumn.equalsIgnoreCase("RegisterName")'>"RegisterName"</when>
					<when test='sortColumn.equalsIgnoreCase("ApplicationStatusName")'>"ApplicationStatusName"</when>
					<when test='sortColumn.equalsIgnoreCase("RequestTypeName")'>"RequestTypeName"</when>
					<when test='sortColumn.equalsIgnoreCase("PayDate")'>"PayDate"</when>
					<when test='sortColumn.equalsIgnoreCase("ProofDate")'>"ProofDate"</when>
					<when test='sortColumn.equalsIgnoreCase("ProofCodeName")'>"ProofCodeName"</when>
					<when test='sortColumn.equalsIgnoreCase("VendorName")'>"VendorName"</when>
					<when test='sortColumn.equalsIgnoreCase("UsageComment")'>"UsageComment"</when>
					<when test='sortColumn.equalsIgnoreCase("TaxAmount")'>"TaxAmount"</when>
					<when test='sortColumn.equalsIgnoreCase("RepAmount")'>"RepAmount"</when>
					<when test='sortColumn.equalsIgnoreCase("TotalAmount")'>"TotalAmount"</when>
					<when test='sortColumn.equalsIgnoreCase("Amount")'>"Amount"</when>
					<when test='sortColumn.equalsIgnoreCase("CostCenterName")'>"CostCenterName"</when>
					<when test='sortColumn.equalsIgnoreCase("IOName")'>"IOName"</when>
					<when test='sortColumn.equalsIgnoreCase("AccountName")'>"AccountName"</when>
					<when test='sortColumn.equalsIgnoreCase("StandardBriefName")'>"StandardBriefName"</when>
					<otherwise>"ApplicationDate"</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if>
		</trim>
	</select>
	
	<select id="selectExpenceApplicationManDivCnt" resultType="java.lang.Long">
		/*
			expenceApplication.selectExpenceApplicationManDivCnt
		*/
		
		SELECT Count(*)
		
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEAL
		ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
		INNER JOIN act_expence_application_div AEAD
		ON AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
		LEFT OUTER JOIN sys_object_user USR
		ON AEA.RegisterID = USR.UserCode
		LEFT OUTER JOIN act_expence_forms AEF
		ON AEA.RequestType = AEF.FormCode and AEF.CompanyCode = AEA.CompanyCode
		LEFT OUTER JOIN act_card_receipt CR
		ON AEAL.CardUID = CR.ReceiptID
		LEFT OUTER JOIN act_taxinvoice ATI
		ON AEAL.TaxUID = ATI.TaxInvoiceID
		LEFT OUTER JOIN act_cashbill ACB
		ON AEAL.CashUID = ACB.CashBillID
		LEFT OUTER JOIN act_vendor VD
		ON AEAL.VendorNo = VD.VendorNo and AEA.CompanyCode = VD.CompanyCode
		WHERE 1=1
		AND AEA.ApplicationStatus != 'DELETE'
			
	  	<if test="DocNo != null and DocNo != ''">
	  	    AND AEAL.DocNo LIKE '%' || #{DocNo} || '%'
		</if>
		
	  	<if test="ApplicationStatus != null and ApplicationStatus != ''">
		 	AND AEA.ApplicationStatus = #{ApplicationStatus}
		</if>
	  	
	  	<if test="ApplicationTitle != null and ApplicationTitle != ''">
		 	AND UPPER(AEA.ApplicationTitle) LIKE UPPER('%' || #{ApplicationTitle} || '%')
		</if>
			  	
	  	<if test="ChargeJob != null and ChargeJob != ''">
		 	AND AEA.ChargeJob LIKE #{ChargeJob} || '%'
		</if>
				
		<if test="RequestType != null and RequestType != ''">
		 	AND AEA.RequestType = #{RequestType}
		</if>
	  	
	  	<if test="ProofCode != null and ProofCode != ''">
		 	AND AEAL.ProofCode = #{ProofCode}
		</if>
			  	
	  	<if test="CompanyCode != null and CompanyCode != ''">
		 	AND AEA.CompanyCode = #{CompanyCode}
		</if>
		
	  	<if test="ProofDateSt != null and ProofDateSt != ''">
			<![CDATA[
			 	AND AEAL.ProofDate >= #{ProofDateSt}
			]]>
		</if>
	  	<if test="ProofDateEd != null and ProofDateEd != ''">
			<![CDATA[
			 	AND AEAL.ProofDate <= #{ProofDateEd}
			]]>
		</if>
	  	
	  	<if test="ApplicationDateSt != null and ApplicationDateSt != ''">
			<![CDATA[
			 	AND NVL(AEA.ApplicationDate, AEA.RegistDate) >= TO_DATE(#{ApplicationDateSt}, 'YYYY-MM-DD HH24:MI:SS')
			]]>
		</if>
	  	<if test="ApplicationDateEd != null and ApplicationDateEd != ''">
			<![CDATA[
			 	AND NVL(AEA.ApplicationDate, AEA.RegistDate) <= TO_DATE(#{ApplicationDateEd}, 'YYYY-MM-DD HH24:MI:SS')
			]]>
		</if>
	  	
	  	
	  	<if test="RegisterNm != null and RegisterNm != ''">
		 	AND UPPER(USR.DisplayName) LIKE UPPER('%' || #{RegisterNm} || '%') 
		</if>
	  	
	  	<if test="VendorName != null and VendorName != ''">
		 	AND (
		 		UPPER(VD.VendorName) LIKE UPPER('%' || #{VendorName} || '%')
		 		OR UPPER(ATI.InvoicerCorpName) LIKE UPPER('%' || #{VendorName} || '%')
		 	)
		</if>
	  	<if test="SearchAmtSt != null and SearchAmtSt != ''">
	  	    <![CDATA[
		 	AND AEAD.Amount > #{SearchAmtSt}
			]]>
		</if>
	  	<if test="SearchAmtEd != null and SearchAmtEd != ''">
	  		<![CDATA[
		 	AND AEAD.Amount < #{SearchAmtEd}
			]]>
		</if>
	  	<if test="AccountCode != null and AccountCode != ''">
		 	AND AEAD.AccountCode = #{AccountCode}
		</if>
	  	<if test="CostCenterCode != null and CostCenterCode != ''">
		 	AND AEAD.CostCenterCode = #{CostCenterCode}
		</if>
	  	<if test="IOCode != null and IOCode != ''">
		 	AND AEAD.IOCode = #{IOCode}
		</if>
	  	<if test="StandardBriefID != null and StandardBriefID != ''">
		 	AND AEAD.StandardBriefID = #{StandardBriefID}
		</if>
		<if test="PayDate != null and PayDate != ''">
		    AND AEAL.PayDate = #{PayDate}
		</if>
	  	
		<choose>
			<when test="SessionUser != null and SessionUser != ''">
		 		AND AEA.RegisterID = #{SessionUser}
			</when>
			<otherwise>
			    AND AEA.ApplicationStatus NOT IN ('T')
			</otherwise>
		</choose>
	</select>
	
	<select id="selectExpenceApplication" parameterType="cmap" resultType="cmap">
		/*
			expenceApplication.selectExpenceApplication
		*/
		
		SELECT A.ExpenceApplicationID AS "ExpenceApplicationID"
			, A.CompanyCode AS "CompanyCode"
			, FN_GETACTBASECODENAME('CompanyCode', A.CompanyCode, #{companyCode}) AS "CompanyName"
			, A.ApplicationTitle AS "ApplicationTitle"
			, A.ApplicationType AS "ApplicationType"
			, A.ApplicationStatus AS "ApplicationStatus"
			, A.RequestType AS "RequestType"
			, A.RequestTypeName AS "RequestTypeName"
			, A.ProcessID AS "ProcessID"
			, A.RegisterID AS "RegisterID"
			, A.RegisterName AS "RegisterName"
			, A.maxCdRownum AS "maxCdRownum"
			, A.TotalAmountSum AS "TotalAmountSum"
			, A.ExpenceApplicationDivID AS "ExpenceApplicationDivID"
			, A.ChargeJob AS "ChargeJob"
			, A.PayDateType AS "PayDateType"
			, A.AuditReason AS "AuditReason"
			, A.RuleItemInfo AS "RuleItemInfo"
			, DV.IOCode AS "IOCode"
			, DV.IOName AS "IOName"
			, DV.CostCenterCode AS "CostCenterCode"
			, DV.CostCenterName AS "CostCenterName"
			, A.Sub_UR_Code AS "Sub_UR_Code"
			, A.Sub_UR_Info AS "Sub_UR_Info"
			, A.Sub_UR_Name AS "Sub_UR_Name"
			, A.Note AS "Note"
		FROM 
		(
			SELECT AEA.ExpenceApplicationID 
				, AEA.CompanyCode
				, AEA.ApplicationTitle
				, AEA.ApplicationType
				, AEA.ApplicationStatus
				, AEA.RequestType
				, AEF.FormName AS RequestTypeName
				, AEA.ProcessID
				, AEA.RegisterID
				, USR.MultiDisplayName as RegisterName
				, (SELECT MAX(ExpenceApplicationListID) FROM act_expence_application_list AEAL WHERE AEAL.ExpenceApplicationID = AEA.ExpenceApplicationID) maxCdRownum
				, (SELECT SUM(AEAL.TotalAmount) TotalAmount
						FROM act_expence_application_list AEAL
						WHERE AEAL.ExpenceApplicationID = AEA.ExpenceApplicationID
					) TotalAmountSum
				, CASE WHEN AEA.ApplicationType ='SC'
					THEN (
						SELECT MAX(AEAD.ExpenceApplicationDivID) ExpenceApplicationDivID
						FROM act_expence_application_list AEAL
						INNER JOIN act_expence_application_div AEAD
						ON AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
						WHERE AEAL.ExpenceApplicationID = AEA.ExpenceApplicationID
					)
					ELSE NULL 
					END AS ExpenceApplicationDivID
				, AEA.ChargeJob
				, AEA.PayDateType
				, AEA.AuditReason
				, AEA.RuleItemInfo
				, AEA.Sub_UR_Code AS Sub_UR_Code
				, AEA.Sub_UR_Info AS Sub_UR_Info
				, SUB_USR.MultiDisplayName AS Sub_UR_Name
				, AEA.Note
			FROM act_expence_application AEA
			LEFT OUTER JOIN sys_object_user USR
			ON AEA.RegisterID = USR.UserCode
			LEFT OUTER JOIN act_expence_forms AEF
			ON AEA.RequestType = AEF.FormCode and AEF.CompanyCode = AEA.CompanyCode
			LEFT OUTER JOIN sys_object_user SUB_USR
			ON AEA.Sub_UR_Code = SUB_USR.UserCode
			WHERE ExpenceApplicationID = #{ExpenceApplicationID}
		) A
		LEFT OUTER JOIN act_expence_application_div DV
			ON A.ExpenceApplicationDivID = DV.ExpenceApplicationDivID
	</select>
	
	<select id="selectExpenceApplicationDetailListAll" parameterType="cmap" resultType="cmap">
		/* expenceApplication.selectExpenceApplicationDetailListAll */
		SELECT
			AEA.ApplicationType AS "ApplicationType",
			AEAL.ExpenceApplicationID AS "ExpenceApplicationID",
			AEAL.ExpenceApplicationListID AS "ExpenceApplicationListID",
			AEAL.ExpenceApplicationListID AS "cdRownum",
			AEAL.ExpenceApplicationListID AS "PaperBillID",
			TO_CHAR(TO_DATE(AEAL.ProofDate, 'YYYYMMDD'), 'YYYYMMDD') AS "ProofDate", 
			TO_CHAR(TO_DATE(AEAL.ProofDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "ProofDateStr", 
			TO_CHAR(TO_DATE(AEAL.PostingDate, 'YYYYMMDD'), 'YYYYMMDD') AS "PostingDate", 
			TO_CHAR(TO_DATE(AEAL.PostingDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "PostingDateStr",
			AEAL.ProofCode AS "ProofCode",
			AEAL.CardUID AS "CardUID",
			AEAL.TaxUID AS "TaxUID",
			AEAL.CashUID AS "CashUID",
			AEAL.TaxType AS "TaxType",
			AEAL.TaxCode AS "TaxCode",
			AEAL.PayAdjustMethod AS "PayAdjustMethod",
			AEAL.PayMethod AS "PayMethod",
			AEAL.PayType AS "PayType",
			AEAL.PayTarget AS "PayTarget",
			AEAL.IncomeTax AS "IncomeTax",
			AEAL.LocalTax AS "LocalTax",
			TO_CHAR(TO_DATE(AEAL.PayDate, 'YYYYMMDD'), 'YYYYMMDD') AS "PayDate", 
			TO_CHAR(TO_DATE(AEAL.PayDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "PayDateStr",
			AEAL.VendorNo AS "VendorNo",
			AEAL.TotalAmount AS "TotalAmount",
			AEAL.PersonalCardNo AS "PersonalCardNo",
			('**********'||	SUBSTR(AEAL.PersonalCardNo, 11)) AS "PersonalCardNoView",
			AEAL.DocNo AS "DocNo",
			AEAL.BankCode AS "AccountBank",
			AEAL.BankAccountNo AS "AccountInfo",
			AEAL.BankAccountName AS "AccountHolder",
			AEAL.ReservedStr1 AS "ReservedStr1",
			AEAL.ReservedStr2 AS "ReservedStr2",
			AEAL.ReservedStr3 AS "ReservedStr3",
			AEAL.ReservedStr4 AS "ReservedStr4",
			AEAL.ReservedStr5 AS "ReservedStr5",
			AEAL.ReservedInt1 AS "ReservedInt1",
			AEAL.ReservedInt2 AS "ReservedInt2",
			TO_CHAR(TO_DATE(NVL(AEAL.RealPayDate, AEAL.PayDate), 'YYYYMMDD'), 'YYYY.MM.DD') AS "RealPayDate",
			AEAL.RealPayAmount AS "RealPayAmount",
			AEAL.AlterPayeeNo AS "AlterPayeeNo",
			AEAL.AlterPayeeName AS "AlterPayeeName",
			AEAL.CreditAccount AS "CreditAccount",
			AEAL.DebitAccount AS "DebitAccount",
			AEAL.ProviderNo AS "ProviderNo",
			AEAL.ProviderName AS "ProviderName",
			AEAL.Providee AS "Providee",
			AEAL.BillType AS "BillType",
			AEAL.TaxAmount AS "Tax",
			AEAL.RepAmount AS "SupplyCost",
			NVL(CR.RepAmount, AEAL.RepAmount) AS "RepAmount", 
			NVL(CR.TaxAmount, AEAL.TaxAmount) AS "TaxAmount",
			(
				SELECT 
					MAX(ExpenceApplicationDivID) 
				FROM 
					act_expence_application_div AEAD 
				WHERE 
					AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
			) AS "maxDivRownum",
			(
				SELECT 
					CASE 
						WHEN (AEAL.ProofCode = 'TaxBill' AND SUM(AEAD.Amount) != AEAL.TotalAmount) THEN SUM(AEAD.Amount) + AEAL.TaxAmount 
						ELSE SUM(AEAD.Amount) 
					END
				FROM 
					act_expence_application_div AEAD 
				WHERE 
					AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
			) AS "divSum",
			'N' AS "IsNewStr",
			/* 법인카드 */
			CR.ServiceAmount AS "ServiceAmount",
			CR.ApproveNo AS "CardApproveNo",
			TO_CHAR(TO_DATE(CR.ApproveTime, 'HH24:MI:SS'), 'HH24MISS') AS "ProofTime", 
			TO_CHAR(TO_DATE(CR.ApproveTime, 'HH24:MI:SS'), 'HH24:MI:SS') AS "ProofTimeStr",
			CR.ReceiptID AS "ReceiptID",
			CR.ItemNo AS "ItemNo",
			CR.CardNo AS "CardNo",
			CR.StoreName AS "StoreName",
			CR.StoreNo AS "StoreNo",
			CR.StoreCondition AS "StoreCondition",
			CR.StoreAddress1 || CR.StoreAddress2 AS "StoreAddress",
			CR.StoreTel AS "StoreTel",
			CR.StoreCategory AS "StoreCategory",
			/* 전자세금계산서 */
			ATI.NTSConfirmNum AS "TaxNTSConfirmNum",
			ATI.TaxInvoiceID AS "TaxInvoiceID", 
			ATI.TaxInvoiceID AS "TaxUID",
			ATI.InvoicerCorpNum AS "InvoicerCorpNum",
			ATI.InvoicerCorpName AS "InvoicerCorpName",
			ATI.InvoicerCEOName AS "InvoicerCEOName",
			ATI.InvoicerAddr AS "InvoicerAddr",
			ATI.InvoicerBizType AS "InvoicerBizType",
			ATI.InvoicerBizClass AS "InvoicerBizClass",
			ATI.InvoiceeCorpNum AS "InvoiceeCorpNum",
			ATI.InvoiceeCorpName AS "InvoiceeCorpName",
			ATI.InvoiceeCEOName AS "InvoiceeCEOName",
			ATI.InvoiceeAddr AS "InvoiceeAddr",
			ATI.InvoiceeBizType AS "InvoiceeBizType",
			ATI.InvoiceeBizClass AS "InvoiceeBizClass",
			ATI.TotalAmount AS "TotalAmount",
			ATI.Remark1 AS "Remark",
			ATI.PurposeType AS "PurposeType",
			TO_CHAR(TO_DATE(ATI.WriteDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "FormatWriteDate",
			( 
				SELECT 
					ATII.ItemName 
				FROM 
					act_taxinvoice_item ATII 
				WHERE 
					ATI.TaxInvoiceID = ATII.TaxInvoiceID 
					AND ROWNUM = 1
			) AS "ItemName",
			/* 현금영수증 */
			CB.NTSConfirmNum AS "CashNTSConfirmNum",
			CB.TradeDT AS "TradeDT",
			CB.TradeType AS "TradeType",
			CB.SupplyCost AS "SupplyCost",
			CB.Tax AS "Tax",
			CB.ServiceFree AS "ServiceFree",
			CB.TotalAmount AS "TotalAmount",
			CB.FranchiseCorpName AS "FranchiseCorpName",
			CB.CashBillID AS "CashBillID",
			/* 모바일영수증 */
			AR.CompanyCode AS "CompanyCode", 
			AR.ExpenceMgmtCode AS "ExpenceMgmtCode", 
			SF.FileID AS "FileID", 
			SF.SavedName AS "SavedName", 
			SF.FilePath AS "FilePath", 
			SF.FileName AS "FileName", 
			(REPLACE(ST.FilePath,'{0}', SF.CompanyCode) || SF.FilePath|| SF.SavedName) AS "FullPath",
			/* 거래처 */
			VD.VendorID AS "VendorID",
			CASE 
				WHEN AEAL.ProofCode = 'TaxBill' THEN NVL(VD.VendorName, ATI.InvoicerCorpName)
				WHEN AEAL.ProofCode = 'CashBill'THEN NVL(VD.VendorName, CB.FranchiseCorpName)
				ELSE VD.VendorName
			END AS "VendorName",
			CASE 
				WHEN AEAL.ProofCode = 'TaxBill' THEN NVL(VD.VendorNo, ATI.InvoicerCorpNum)
				WHEN AEAL.ProofCode = 'CashBill'THEN NVL(VD.VendorNo, CB.FranchiseCorpNum)
				ELSE VD.VendorName
			END AS "VendorNo",
			CASE 
				WHEN AEAL.ProofCode = 'TaxBill' THEN NVL(VD.BusinessNumber, ATI.InvoicerCorpNum)
				WHEN AEAL.ProofCode = 'CashBill'THEN NVL(VD.BusinessNumber, CB.FranchiseCorpNum)
				ELSE VD.VendorName
			END AS "BusinessNumber",
			VD.CorporateNo AS "CorporateNo",
			VD.CEOName AS "CEOName",
			VD.Address AS "Address",
			VD.Industry AS "Industry",
			VD.Sector AS "Sector",
			AEAL.BankCode AS "BankCode",
			Fn_GetBaseCodeName('Bank', AEAL.BankCode, #{companyCode}) AS "BankName",
			AEAL.BankAccountNo AS "BankAccountNo",
			AEAL.BankAccountName AS "BankAccountName",
			(AEAL.BankAccountName || '/' || AEAL.BankAccountNo) AS "BankAccountInfo",
			VD.PaymentCondition AS "PaymentCondition",
			Fn_GetBaseCodeName('PayType', VD.PaymentCondition, #{companyCode}) "PaymentConditionName",
			(
				SELECT 
					COUNT(*) 
				FROM 
					act_vendor SBV 
				WHERE 
					SBV.BusinessNumber = ATI.InvoicerCorpNum
			) AS "BusinessNumberCnt"
		FROM
			act_expence_application AEA
		INNER JOIN
			act_expence_application_list AEAL
		ON
			AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
		LEFT OUTER JOIN 
			act_card_receipt CR
		ON 
			AEAL.CardUID = CR.ReceiptID
		LEFT OUTER JOIN 
			act_taxinvoice ATI
		ON 
			AEAL.TaxUID = ATI.TaxInvoiceID
		LEFT OUTER JOIN 
			act_cashbill CB
		ON 
			AEAL.CashUID = CB.CashBillID
		LEFT OUTER JOIN 
			act_receipt AR
		ON 
			AEAL.ReceiptID = AR.ReceiptID
		LEFT OUTER JOIN 
			sys_file SF
		ON 
			AR.ReceiptFileID = SF.FileID
		LEFT OUTER JOIN 
			sys_storage ST 
		ON 
			ST.StorageID = SF.StorageID
		LEFT OUTER JOIN 
			act_vendor VD
		ON 
			AEAL.VendorNo = VD.VendorNo AND AEA.CompanyCode = VD.CompanyCode
		WHERE 
			1 = 1
			<if test="ExpenceApplicationID != null and ExpenceApplicationID != ''">
				AND AEA.ExpenceApplicationID = #{ExpenceApplicationID}
			</if>	
			<if test="expAppListIDs != null">
				AND 
				<foreach collection="expAppListIDs" item="item" index="index" separator="," open="AEALTB.ExpenceApplicationListID IN (" close=")">
					#{item}
				</foreach>
			</if>
	</select>
	 
	<!-- 미사용 -->
	<select id="selectExpenceApplicationDetailList" parameterType="cmap" resultType="cmap">
		/*
			expenceApplication.selectExpenceApplicationDetailList
		*/
		SELECT AEAL.ExpenceApplicationListID AS "ExpenceApplicationListID"
			, AEAL.ExpenceApplicationListID AS "cdRownum"
			, AEAL.ExpenceApplicationID AS "ExpenceApplicationID"
			, AEAL.ProofDate AS "ProofDate"
			, AEAL.ProofCode AS "ProofCode"
			, AEAL.CardUID AS "CardUID"
			, AEAL.CashUID AS "CashUID"
			, AEAL.TaxUID AS "TaxUID"
			, AEAL.PostingDate AS "PostingDate"
			, AEAL.TaxType AS "TaxType"
			, AEAL.TaxCode AS "TaxCode"
			, AEAL.PayAdjustMethod AS "PayAdjustMethod"
			, AEAL.PayMethod AS "PayMethod"
			, AEAL.IsWithholdingTax AS "IsWithholdingTax"
			, AEAL.IncomeTax AS "IncomeTax"
			, AEAL.LocalTax AS "LocalTax"
			, AEAL.PayDate AS "PayDate"
			, AEAL.VendorNo AS "VendorNo"
			, AEAL.TotalAmount AS "TotalAmount"
			, (SELECT MAX(ExpenceApplicationDivID) FROM act_expence_application_div AEAD WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID) AS "maxDivRownum"
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEAL
		ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
		WHERE AEA.ExpenceApplicationID = #{ExpenceApplicationID}
	</select>

	<select id="selectExpenceApplicationDetailListCC" parameterType="cmap" resultType="cmap">
		/*
			expenceApplication.selectExpenceApplicationDetailListCC
		*/
				
		SELECT AEALCC.ExpenceApplicationListID AS "ExpenceApplicationListID"
			, AEALCC.ExpenceApplicationListID AS "cdRownum"
			, AEALCC.ExpenceApplicationID AS "ExpenceApplicationID"
			, AEA.ApplicationType AS "ApplicationType"
			, TO_CHAR(TO_DATE(AEALCC.ProofDate, 'YYYYMMDD'), 'YYYYMMDD') AS "ProofDate" 
			, TO_CHAR(TO_DATE(AEALCC.ProofDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "ProofDateStr"
			, TO_CHAR(TO_DATE(AEALCC.PostingDate, 'YYYYMMDD'), 'YYYYMMDD') AS "PostingDate"
			, TO_CHAR(TO_DATE(AEALCC.PostingDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "PostingDateStr"
			, AEALCC.ProofCode AS "ProofCode"
			, AEALCC.CardUID AS "CardUID"
			, AEALCC.TaxType AS "TaxType"
			, AEALCC.TaxCode AS "TaxCode"
			, FN_GETACTBASECODENAME('TaxType', AEALCC.TaxType, #{companyCode}) AS "TaxTypeName"
			, FN_GETACTBASECODENAME('TaxCode', AEALCC.TaxCode, #{companyCode}) AS "TaxCodeName"
			, AEALCC.PayAdjustMethod AS "PayAdjustMethod"
			, AEALCC.PayMethod AS "PayMethod"
			, AEALCC.IsWithholdingTax AS "IsWithholdingTax"
			, AEALCC.IncomeTax AS "IncomeTax"
			, AEALCC.LocalTax AS "LocalTax"
			, TO_CHAR(TO_DATE(AEALCC.PayDate, 'YYYYMMDD'), 'YYYYMMDD') AS "PayDate"
			, TO_CHAR(TO_DATE(AEALCC.PayDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "PayDateStr"
			, AEALCC.VendorNo AS "VendorNo" 
			, AEALCC.TotalAmount AS "TotalAmount"
			, AEALCC.DocNo AS "DocNo"
			, AEALCC.BankCode AS "AccountBank"
			, AEALCC.BankAccountNo AS "AccountInfo"
			, AEALCC.BankAccountName AS "AccountHolder"
			, AEALCC.ReservedStr1 AS "ReservedStr1"
			, AEALCC.ReservedStr2 AS "ReservedStr2"
			, AEALCC.ReservedStr3 AS "ReservedStr3"
			, AEALCC.ReservedStr4 AS "ReservedStr4"
			, AEALCC.ReservedStr5 AS "ReservedStr5"
			, AEALCC.ReservedInt1 AS "ReservedInt1"
			, AEALCC.ReservedInt2 AS "ReservedInt2"
			, TO_CHAR(TO_DATE(NVL(AEALCC.RealPayDate, AEALCC.PayDate), 'YYYYMMDD'), 'YYYY.MM.DD') AS "RealPayDate"
			, AEALCC.RealPayAmount AS "RealPayAmount"
			
			, NVL(CR.RepAmount, AEALCC.RepAmount) AS "RepAmount"
			, NVL(CR.TaxAmount, AEALCC.TaxAmount) AS "TaxAmount"
			, CR.ServiceAmount AS "ServiceAmount"
			, CR.ApproveNo AS "CardApproveNo"			
			, TO_CHAR(TO_DATE(CR.ApproveTime, 'HH24:MI:SS'), 'HH24MISS') AS "ProofTime"
			, TO_CHAR(TO_DATE(CR.ApproveTime, 'HH24:MI:SS'), 'HH24:MI:SS') AS "ProofTimeStr"
			, CR.ReceiptID AS "ReceiptID"
			, CR.ItemNo AS "ItemNo"
			, CR.CardNo AS "CardNo"
			, CR.StoreName AS "StoreName"
			, CR.StoreNo AS "StoreNo"
			, CR.StoreCondition AS "StoreCondition"
			, CR.StoreAddress1 || CR.StoreAddress2 AS "StoreAddress"
			, CR.StoreTel AS "StoreTel"
			, CR.StoreCategory AS "StoreCategory"
			, (SELECT MAX(ExpenceApplicationDivID) 
				FROM act_expence_application_div AEAD 
				WHERE AEALCC.ExpenceApplicationListID = AEAD.ExpenceApplicationListID) AS "maxDivRownum"
			, (SELECT SUM(AEAD.Amount) 
				FROM act_expence_application_div AEAD 
				WHERE AEALCC.ExpenceApplicationListID = AEAD.ExpenceApplicationListID)  AS "divSum"
			, 'N' AS "IsNewStr" 
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEALCC
		ON AEA.ExpenceApplicationID = AEALCC.ExpenceApplicationID
		LEFT OUTER JOIN act_card_receipt CR
		ON AEALCC.CardUID = CR.ReceiptID
		WHERE 1=1
		<if test="ExpenceApplicationID != null and ExpenceApplicationID != ''">
			AND AEA.ExpenceApplicationID = #{ExpenceApplicationID}
		</if>
		<if test="expAppListIDs != null">
			AND 
			<foreach collection="expAppListIDs" item="item" index="index" separator="," open="AEALCC.ExpenceApplicationListID IN (" close=")">
				#{item}
			</foreach>
		</if>
		AND AEALCC.ProofCode = 'CorpCard'
	</select>	
	<select id="selectExpenceApplicationDetailListTB" parameterType="cmap" resultType="cmap">
		/*
			expenceApplication.selectExpenceApplicationDetailListTB
		*/
		SELECT AEALTB.ExpenceApplicationListID AS "ExpenceApplicationListID"
			, AEALTB.ExpenceApplicationListID AS "cdRownum"
			, AEALTB.ExpenceApplicationID AS "ExpenceApplicationID"
			, AEA.ApplicationType AS "ApplicationType"
			, TO_CHAR(TO_DATE(AEALTB.ProofDate, 'YYYYMMDD'), 'YYYYMMDD') AS "ProofDate" 
			, TO_CHAR(TO_DATE(AEALTB.ProofDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "ProofDateStr"
			, TO_CHAR(TO_DATE(AEALTB.PostingDate, 'YYYYMMDD'), 'YYYYMMDD') AS "PostingDate"
			, TO_CHAR(TO_DATE(AEALTB.PostingDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "PostingDateStr"
			, AEALTB.ProofCode AS "ProofCode"
			, AEALTB.TaxUID AS "TaxUID"
			, AEALTB.TaxType AS "TaxType"
			, AEALTB.TaxCode AS "TaxCode"
			, AEALTB.PayAdjustMethod AS "PayAdjustMethod"
			, AEALTB.PayMethod AS "PayMethod"
			, AEALTB.PayType AS "PayType"
			, AEALTB.PayTarget AS "PayTarget"
			, AEALTB.IsWithholdingTax AS "IsWithholdingTax"
			, AEALTB.IncomeTax AS "IncomeTax"
			, AEALTB.LocalTax AS "LocalTax"
			, TO_CHAR(TO_DATE(AEALTB.PayDate, 'YYYYMMDD'), 'YYYYMMDD') AS "PayDate"
			, TO_CHAR(TO_DATE(AEALTB.PayDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "PayDateStr"
			, AEALTB.VendorNo AS "VendorNo"
			, AEALTB.TotalAmount AS "TotalAmount"
			, AEALTB.DocNo AS "DocNo"
			, AEALTB.BankCode AS "AccountBank"
			, AEALTB.BankAccountNo AS "AccountInfo"
			, AEALTB.BankAccountName AS "AccountHolder"
			, AEALTB.ReservedStr1 AS "ReservedStr1"
			, AEALTB.ReservedStr2 AS "ReservedStr2"
			, AEALTB.ReservedStr3 AS "ReservedStr3"
			, AEALTB.ReservedStr4 AS "ReservedStr4"
			, AEALTB.ReservedStr5 AS "ReservedStr5"
			, AEALTB.ReservedInt1 AS "ReservedInt1"
			, AEALTB.ReservedInt2 AS "ReservedInt2"
			, TO_CHAR(TO_DATE(NVL(AEALTB.RealPayDate, AEALTB.PayDate), 'YYYYMMDD'), 'YYYY.MM.DD') AS "RealPayDate"
			, AEALTB.RealPayAmount AS "RealPayAmount"
			, AEALTB.AlterPayeeNo AS "AlterPayeeNo"
			, AEALTB.AlterPayeeName AS "AlterPayeeName"
			, AEALTB.CreditAccount AS "CreditAccount"
			, AEALTB.DebitAccount AS "DebitAccount"
			
			, ATI.NTSConfirmNum AS "TaxNTSConfirmNum"
			, ATI.TaxInvoiceID AS "TaxInvoiceID"
			, ATI.TaxInvoiceID AS "TaxUID"
			, ATI.InvoicerCorpNum AS "InvoicerCorpNum"
			, ATI.InvoicerCorpName AS "InvoicerCorpName"
			, ATI.InvoicerCEOName AS "InvoicerCEOName"
			, ATI.InvoicerAddr AS "InvoicerAddr"
			, ATI.InvoicerBizType AS "InvoicerBizType"
			, ATI.InvoicerBizClass AS "InvoicerBizClass"
			, ATI.InvoiceeCorpNum AS "InvoiceeCorpNum"
			, ATI.InvoiceeCorpName AS "InvoiceeCorpName"
			, ATI.InvoiceeCEOName AS "InvoiceeCEOName"
			, ATI.InvoiceeAddr AS "InvoiceeAddr"
			, ATI.InvoiceeBizType AS "InvoiceeBizType"
			, ATI.InvoiceeBizClass AS "InvoiceeBizClass"
			, ATI.TotalAmount AS "TotalAmount"
			, ATI.Remark1 AS "Remark"
			, ATI.PurposeType AS "PurposeType"
			, TO_CHAR(TO_DATE(ATI.WriteDate, 'YYYYMMDD'),'YYYY.MM.DD')				AS "FormatWriteDate"
			, ( SELECT ATII.ItemName FROM act_taxinvoice_item ATII WHERE ATI.taxinvoiceid = ATII.taxinvoiceid AND ROWNUM = 1) AS "ItemName"
			, AEALTB.TaxAmount AS "Tax"
			, AEALTB.RepAmount AS "SupplyCost"
			, AEALTB.TaxAmount AS "TaxAmount"
			, AEALTB.RepAmount AS "RepAmount"
			, VD.VendorID AS "VendorID"
			, VD.BusinessNumber AS "BusinessNumber"
			, NVL(VD.VendorName, ATI.InvoicerCorpName) AS "VendorName"
			, NVL(VD.VendorNo, ATI.InvoicerCorpNum) AS "VendorNo"
			, NVL(VD.BusinessNumber, ATI.InvoicerCorpNum) AS "BusinessNumber"
			, VD.CEOName AS "CEOName"
			, VD.Address AS "Address"
			, VD.Industry AS "Industry"
			, VD.Sector AS "Sector"
			, AEALTB.BankCode AS "BankCode"
			, FN_GETACTBASECODENAME('Bank', AEALTB.BankCode, #{companyCode}) AS "BankName"
			, AEALTB.BankAccountNo AS "BankAccountNo"
			, AEALTB.BankAccountName AS "BankAccountName"
			, VD.PaymentCondition AS "PaymentCondition"
			, FN_GETACTBASECODENAME('PayType', VD.PaymentCondition, #{companyCode}) AS "PaymentConditionName"
			, (SELECT MAX(ExpenceApplicationDivID) 
				FROM act_expence_application_div AEAD 
				WHERE AEALTB.ExpenceApplicationListID = AEAD.ExpenceApplicationListID) AS "maxDivRownum"
			, (SELECT 
					CASE 
						WHEN (AEALTB.ProofCode = 'TaxBill' AND SUM(AEAD.Amount) != AEALTB.TotalAmount) THEN SUM(AEAD.Amount) + AEALTB.TaxAmount 
						ELSE SUM(AEAD.AMOUNT)
					END 
				FROM act_expence_application_div AEAD 
				WHERE AEALTB.ExpenceApplicationListID = AEAD.ExpenceApplicationListID) AS "divSum"
			, 'N' AS "IsNewStr"
		    , ( SELECT COUNT(*) FROM act_vendor SBV WHERE SBV.businessnumber = ATI.InvoicerCorpNum) AS "BusinessNumberCnt"
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEALTB
		ON AEA.ExpenceApplicationID = AEALTB.ExpenceApplicationID
		LEFT OUTER JOIN act_taxinvoice ATI
		ON AEALTB.TaxUID = ATI.TaxInvoiceID
		LEFT OUTER JOIN act_vendor VD
		ON AEALTB.VendorNo = VD.VendorNo and AEA.CompanyCode = VD.CompanyCode
		WHERE 1=1
		<if test="ExpenceApplicationID != null and ExpenceApplicationID != ''">
			AND AEA.ExpenceApplicationID = #{ExpenceApplicationID}
		</if>	
		<if test="expAppListIDs != null">
			AND 
			<foreach collection="expAppListIDs" item="item" index="index" separator="," open="AEALTB.ExpenceApplicationListID IN (" close=")">
				#{item}
			</foreach>
		</if>
		AND AEALTB.ProofCode = 'TaxBill'
	</select>	
	
	<select id="selectExpenceApplicationDetailListPB" parameterType="cmap" resultType="cmap">
		/*
			expenceApplication.selectExpenceApplicationDetailListPB
		*/
			
		SELECT AEALPB.ExpenceApplicationListID
			, AEALPB.ExpenceApplicationListID cdRownum
			, AEALPB.ExpenceApplicationListID PaperBillID
			, AEALPB.ExpenceApplicationID
			, AEA.ApplicationType
			, TO_CHAR(TO_DATE(AEALPB.ProofDate, 'YYYYMMDD'), 'YYYYMMDD') AS "ProofDate" 
			, TO_CHAR(TO_DATE(AEALPB.ProofDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "ProofDateStr"
			, TO_CHAR(TO_DATE(AEALPB.PostingDate, 'YYYYMMDD'), 'YYYYMMDD') AS "PostingDate"
			, TO_CHAR(TO_DATE(AEALPB.PostingDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "PostingDateStr"
			, AEALPB.ProofCode
			, AEALPB.TaxType
			, AEALPB.TaxCode
			, AEALPB.PayAdjustMethod
			, AEALPB.PayMethod
			, AEALPB.PayType
			, AEALPB.PayTarget
			, TO_CHAR(TO_DATE(AEALPB.PayDate, 'YYYYMMDD'), 'YYYYMMDD') AS "PayDate"
			, TO_CHAR(TO_DATE(AEALPB.PayDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "PayDateStr"
			, AEALPB.VendorNo
			, AEALPB.TotalAmount
			, AEALPB.RepAmount
			, AEALPB.TaxAmount
			, AEALPB.DocNo
			, AEALPB.BankCode AS AccountBank
			, AEALPB.BankAccountNo AS AccountInfo
			, AEALPB.BankAccountName AS AccountHolder
			, AEALPB.ReservedStr1
			, AEALPB.ReservedStr2
			, AEALPB.ReservedStr3
			, AEALPB.ReservedStr4
			, AEALPB.ReservedStr5
			, AEALPB.ReservedInt1
			, AEALPB.ReservedInt2
			, TO_CHAR(TO_DATE(NVL(AEALPB.RealPayDate, AEALPB.PayDate), 'YYYYMMDD'), 'YYYY.MM.DD') AS "RealPayDate"
			, AEALPB.AlterPayeeNo
			, AEALPB.AlterPayeeName
			, AEALPB.CreditAccount
			, AEALPB.DebitAccount
			, AEALPB.RealPayAmount
			, AEALPB.ProviderNo
			, AEALPB.ProviderName
			, AEALPB.Providee
			, AEALPB.BillType
			
			, VD.VendorID
			, VD.VendorNo
			, VD.BusinessNumber
			, VD.CorporateNo
			, VD.VendorName
			, VD.CEOName
			, VD.Industry
			, VD.Sector
			, VD.Address
			, AEALPB.BankCode AS "BankCode"
			, FN_GETACTBASECODENAME('Bank', AEALPB.BankCode, #{companyCode}) AS "BankName"
			, AEALPB.BankAccountNo AS "BankAccountNo"
			, AEALPB.BankAccountName AS "BankAccountName"
			, (AEALPB.BankAccountName || '/' || AEALPB.BankAccountNo) AS "BankAccountInfo"
			, VD.PaymentCondition
			, FN_GETACTBASECODENAME('PayType', VD.PaymentCondition, #{companyCode}) PaymentConditionName
			, (SELECT MAX(ExpenceApplicationDivID) 
				FROM act_expence_application_div AEAD 
				WHERE AEALPB.ExpenceApplicationListID = AEAD.ExpenceApplicationListID) AS "maxDivRownum"
			, (SELECT SUM(AEAD.AMOUNT)
				FROM act_expence_application_div AEAD 
				WHERE AEALPB.ExpenceApplicationListID = AEAD.ExpenceApplicationListID) AS "divSum"
			, 'N' AS "IsNewStr"
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEALPB
		ON AEA.ExpenceApplicationID = AEALPB.ExpenceApplicationID
		LEFT OUTER JOIN act_vendor VD
		ON AEALPB.VendorNo = VD.VendorNo and AEA.CompanyCode = VD.CompanyCode
		WHERE 1=1
		<if test="ExpenceApplicationID != null and ExpenceApplicationID != ''">
			AND AEA.ExpenceApplicationID = #{ExpenceApplicationID}
		</if>
		<if test="expAppListIDs != null">
			AND 
			<foreach collection="expAppListIDs" item="item" index="index" separator="," open="AEALPB.ExpenceApplicationListID IN (" close=")">
				#{item}
			</foreach>
		</if>
		AND AEALPB.ProofCode = 'PaperBill'
	</select>	
				
	<select id="selectExpenceApplicationDetailListCB" parameterType="cmap" resultType="cmap">
		/*
			expenceApplication.selectExpenceApplicationDetailListCB
		*/
		SELECT AEALCB.ExpenceApplicationListID AS "ExpenceApplicationListID"
			, AEALCB.ExpenceApplicationListID AS "cdRownum"
			, AEALCB.ExpenceApplicationID AS "ExpenceApplicationID"
			, AEA.ApplicationType AS "ApplicationType"
			, TO_CHAR(TO_DATE(AEALCB.ProofDate, 'YYYYMMDD'), 'YYYYMMDD') AS "ProofDate" 
			, TO_CHAR(TO_DATE(AEALCB.ProofDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "ProofDateStr"
			, TO_CHAR(TO_DATE(AEALCB.PostingDate, 'YYYYMMDD'), 'YYYYMMDD') AS "PostingDate"
			, TO_CHAR(TO_DATE(AEALCB.PostingDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "PostingDateStr"
			, AEALCB.ProofCode AS "ProofCode"
			, AEALCB.CashUID AS "CashUID"
			, AEALCB.TaxType AS "TaxType"
			, AEALCB.TaxCode AS "TaxCode"
			, AEALCB.PayAdjustMethod AS "PayAdjustMethod"
			, AEALCB.PayMethod AS "PayMethod"
			, AEALCB.PayType AS "PayType"
			, AEALCB.PayTarget AS "PayTarget"
			, AEALCB.IsWithholdingTax AS "IsWithholdingTax"
			, AEALCB.IncomeTax AS "IncomeTax"
			, AEALCB.LocalTax AS "LocalTax"
			, TO_CHAR(TO_DATE(AEALCB.PayDate, 'YYYYMMDD'), 'YYYYMMDD') AS "PayDate"
			, TO_CHAR(TO_DATE(AEALCB.PayDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "PayDateStr"
			, AEALCB.VendorNo AS "VendorNo"
			, AEALCB.TotalAmount AS "TotalAmount"
			, AEALCB.DocNo AS "DocNo"
			, AEALCB.BankCode AS "AccountBank"
			, AEALCB.BankAccountNo AS "AccountInfo"
			, AEALCB.BankAccountName AS "AccountHolder"
			, AEALCB.ReservedStr1 AS "ReservedStr1"
			, AEALCB.ReservedStr2 AS "ReservedStr2"
			, AEALCB.ReservedStr3 AS "ReservedStr3"
			, AEALCB.ReservedStr4 AS "ReservedStr4"
			, AEALCB.ReservedStr5 AS "ReservedStr5"
			, AEALCB.ReservedInt1 AS "ReservedInt1"
			, AEALCB.ReservedInt2 AS "ReservedInt2"
			, TO_CHAR(TO_DATE(NVL(AEALCB.RealPayDate, AEALCB.PayDate), 'YYYYMMDD'), 'YYYY.MM.DD') AS "RealPayDate"
			, AEALCB.RealPayAmount AS "RealPayAmount"
			, AEALCB.AlterPayeeNo AS "AlterPayeeNo"
			, AEALCB.AlterPayeeName AS "AlterPayeeName"
			, AEALCB.CreditAccount AS "CreditAccount"
			, AEALCB.DebitAccount AS "DebitAccount"
			
			, CB.NTSConfirmNum AS "CashNTSConfirmNum"
			, CB.TradeDT AS "TradeDT"
			, CB.TradeType AS "TradeType"
			, CB.SupplyCost AS "SupplyCost"
			, CB.Tax AS "Tax"
			, CB.ServiceFree AS "ServiceFree"
			, CB.TotalAmount AS "TotalAmount"
			, CB.FranchiseCorpName AS "FranchiseCorpName"
			, CB.CashBillID AS "CashBillID"
			
			, VD.CorporateNo AS "CorporateNo"
			, NVL(VD.VendorName, CB.FranchiseCorpName) AS "VendorName"
			, NVL(VD.VendorNo, CB.FranchiseCorpNum) AS "VendorNo"
			, NVL(VD.BusinessNumber, CB.FranchiseCorpNum) AS "BusinessNumber"
			, VD.VendorName AS "VendorName"
			, VD.CEOName AS "CEOName"
			, VD.Industry AS "Industry"
			, VD.Sector AS "Sector"
			, VD.Address AS "Address"
			, AEALCB.BankCode AS "BankCode"
			, FN_GETACTBASECODENAME('Bank', AEALCB.BankCode, #{companyCode}) AS "BankName"
			, AEALCB.BankAccountNo AS "BankAccountNo"
			, AEALCB.BankAccountName AS "BankAccountName"
			, VD.PaymentCondition AS "PaymentCondition"
			, FN_GETACTBASECODENAME('PayType', VD.PaymentCondition, #{companyCode}) AS "PaymentConditionName"
			, (SELECT MAX(ExpenceApplicationDivID) 
				FROM act_expence_application_div AEAD 
				WHERE AEALCB.ExpenceApplicationListID = AEAD.ExpenceApplicationListID) AS "maxDivRownum"
			, (SELECT SUM(AEAD.AMOUNT)
				FROM act_expence_application_div AEAD 
				WHERE AEALCB.ExpenceApplicationListID = AEAD.ExpenceApplicationListID) AS "divSum"
			, 'N' AS "IsNewStr"
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEALCB
		ON AEA.ExpenceApplicationID = AEALCB.ExpenceApplicationID
		LEFT OUTER JOIN act_cashbill CB
		ON AEALCB.CashUID = CB.CashBillID
		LEFT OUTER JOIN act_vendor VD
		ON AEALCB.VendorNo = VD.VendorNo
		WHERE 1=1
		<if test="ExpenceApplicationID != null and ExpenceApplicationID != ''">
			AND AEA.ExpenceApplicationID = #{ExpenceApplicationID}
		</if>
		<if test="expAppListIDs != null">
			AND 
			<foreach collection="expAppListIDs" item="item" index="index" separator="," open="AEALCB.ExpenceApplicationListID IN (" close=")">
				#{item}
			</foreach>
		</if>
		AND AEALCB.ProofCode = 'CashBill'
	</select>	
			
	<select id="selectExpenceApplicationDetailListPC" parameterType="cmap" resultType="cmap">
		/*
			expenceApplication.selectExpenceApplicationDetailListPC
		*/
			
		SELECT AEALPC.ExpenceApplicationListID AS "ExpenceApplicationListID"
			, AEALPC.ExpenceApplicationListID AS "cdRownum"
			, AEALPC.ExpenceApplicationListID AS "ExpAppPrivID"
			, AEALPC.ExpenceApplicationID AS "ExpenceApplicationID"
			, AEA.ApplicationType AS "ApplicationType"
			, TO_CHAR(TO_DATE(AEALPC.ProofDate, 'YYYYMMDD'), 'YYYYMMDD') AS "ProofDate" 
			, TO_CHAR(TO_DATE(AEALPC.ProofDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "ProofDateStr"
			, TO_CHAR(TO_DATE(AEALPC.PostingDate, 'YYYYMMDD'), 'YYYYMMDD') AS "PostingDate"
			, TO_CHAR(TO_DATE(AEALPC.PostingDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "PostingDateStr"
			, AEALPC.ProofCode AS "ProofCode"
			, AEALPC.TaxType AS "TaxType"
			, AEALPC.TaxCode AS "TaxCode"
			, AEALPC.PayAdjustMethod AS "PayAdjustMethod"
			, AEALPC.PayMethod AS "PayMethod"
			, AEALPC.PayType AS "PayType"
			, AEALPC.PayTarget AS "PayTarget"
			, TO_CHAR(TO_DATE(AEALPC.PayDate, 'YYYYMMDD'), 'YYYYMMDD') AS "PayDate"
			, TO_CHAR(TO_DATE(AEALPC.PayDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "PayDateStr"
			, AEALPC.VendorNo AS "VendorNo"
			, AEALPC.TotalAmount AS "TotalAmount"
			, AEALPC.PersonalCardNo AS "PersonalCardNo"
			, ('**********'||	SUBSTR(AEALPC.PersonalCardNo,11))	AS "PersonalCardNoView"
			, AEALPC.DocNo AS "DocNo"
			, AEALPC.BankCode AS "AccountBank"
			, AEALPC.BankAccountNo AS "AccountInfo"
			, AEALPC.BankAccountName AS "AccountHolder"
			, AEALPC.ReservedStr1 AS "ReservedStr1"
			, AEALPC.ReservedStr2 AS "ReservedStr2"
			, AEALPC.ReservedStr3 AS "ReservedStr3"
			, AEALPC.ReservedStr4 AS "ReservedStr4"
			, AEALPC.ReservedStr5 AS "ReservedStr5"
			, AEALPC.ReservedInt1 AS "ReservedInt1"
			, AEALPC.ReservedInt2 AS "ReservedInt2"
			, TO_CHAR(TO_DATE(NVL(AEALPC.RealPayDate, AEALPC.PayDate), 'YYYYMMDD'), 'YYYY.MM.DD') AS "RealPayDate"
			, AEALPC.RealPayAmount AS "RealPayAmount"
			, AEALPC.AlterPayeeNo AS "AlterPayeeNo"
			, AEALPC.AlterPayeeName AS "AlterPayeeName"
			, AEALPC.CreditAccount AS "CreditAccount"
			, AEALPC.DebitAccount AS "DebitAccount"
			
			, VD.VendorID AS "VendorID"
			, VD.VendorNo AS "VendorNo"
			, VD.VendorName AS "VendorName"
			, VD.BusinessNumber AS "BusinessNumber"
			, VD.CorporateNo AS "CorporateNo"
			, VD.CEOName AS "CEOName"
			, VD.Industry AS "Industry"
			, VD.Sector AS "Sector"
			, VD.Address AS "Address"
			, AEALPC.BankCode AS "BankCode"
			, FN_GETACTBASECODENAME('Bank', AEALPC.BankCode, #{companyCode}) AS "BankName"
			, AEALPC.BankAccountNo AS "BankAccountNo"
			, AEALPC.BankAccountName AS "BankAccountName"
			, VD.PaymentCondition AS "PaymentCondition"
			, FN_GETACTBASECODENAME('PayType', VD.PaymentCondition, #{companyCode}) AS "PaymentConditionName"
			, (SELECT MAX(ExpenceApplicationDivID) 
				FROM act_expence_application_div AEAD 
				WHERE AEALPC.ExpenceApplicationListID = AEAD.ExpenceApplicationListID) AS "maxDivRownum"
			, (SELECT SUM(AEAD.AMOUNT)
				FROM act_expence_application_div AEAD 
				WHERE AEALPC.ExpenceApplicationListID = AEAD.ExpenceApplicationListID) AS "divSum"
			, 'N' AS "IsNewStr"
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEALPC
			ON AEA.ExpenceApplicationID = AEALPC.ExpenceApplicationID
		LEFT OUTER JOIN act_vendor VD
			ON AEALPC.VendorNo = VD.VendorNo and AEA.CompanyCode = VD.CompanyCode
		WHERE 1=1
		<if test="ExpenceApplicationID != null and ExpenceApplicationID != ''">
			AND AEA.ExpenceApplicationID = #{ExpenceApplicationID}
		</if>
		<if test="expAppListIDs != null">
			AND 
			<foreach collection="expAppListIDs" item="item" index="index" separator="," open="AEALPC.ExpenceApplicationListID IN (" close=")">
				#{item}
			</foreach>
		</if>
		AND AEALPC.ProofCode = 'PrivateCard'
	</select>	
		
			
	<select id="selectExpenceApplicationDetailListEE" parameterType="cmap" resultType="cmap">
		/*
			expenceApplication.selectExpenceApplicationDetailListEE
		*/
			
		SELECT AEALEE.ExpenceApplicationListID AS "ExpenceApplicationListID"
			, AEALEE.ExpenceApplicationListID AS "cdRownum"
			, AEALEE.ExpenceApplicationListID AS "ExpAppEtcID"
			, AEALEE.ExpenceApplicationID AS "ExpenceApplicationID"
			, AEA.ApplicationType AS "ApplicationType"
			, TO_CHAR(TO_DATE(AEALEE.ProofDate, 'YYYYMMDD'), 'YYYYMMDD') AS "ProofDate" 
			, TO_CHAR(TO_DATE(AEALEE.ProofDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "ProofDateStr"
			, TO_CHAR(TO_DATE(AEALEE.PostingDate, 'YYYYMMDD'), 'YYYYMMDD') AS "PostingDate"
			, TO_CHAR(TO_DATE(AEALEE.PostingDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "PostingDateStr"
			, AEALEE.ProofCode AS "ProofCode"
			, AEALEE.TaxType AS "TaxType"
			, AEALEE.TaxCode AS "TaxCode"
			, AEALEE.PayAdjustMethod AS "PayAdjustMethod"
			, AEALEE.PayMethod AS "PayMethod"
			, AEALEE.PayType AS "PayType"
			, AEALEE.PayTarget AS "PayTarget"
			, AEALEE.IsWithholdingTax AS "IsWithholdingTax"
			, AEALEE.IncomeTax AS "IncomeTax"
			, AEALEE.LocalTax AS "LocalTax"
			, TO_CHAR(TO_DATE(AEALEE.PayDate, 'YYYYMMDD'), 'YYYYMMDD') AS "PayDate"
			, TO_CHAR(TO_DATE(AEALEE.PayDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "PayDateStr"
			, AEALEE.VendorNo AS "VendorNo"
			, AEALEE.TotalAmount AS "TotalAmount"
			, AEALEE.RepAmount AS "RepAmount"
			, AEALEE.TaxAmount AS "TaxAmount"
			, AEALEE.DocNo AS "DocNo"
			, AEALEE.BankCode AS "AccountBank"
			, AEALEE.BankAccountNo AS "AccountInfo"
			, AEALEE.BankAccountName AS "AccountHolder"
			, AEALEE.ReservedStr1 AS "ReservedStr1"
			, AEALEE.ReservedStr2 AS "ReservedStr2"
			, AEALEE.ReservedStr3 AS "ReservedStr3"
			, AEALEE.ReservedStr4 AS "ReservedStr4"
			, AEALEE.ReservedStr5 AS "ReservedStr5"
			, AEALEE.ReservedInt1 AS "ReservedInt1"
			, AEALEE.ReservedInt2 AS "ReservedInt2"
			, TO_CHAR(TO_DATE(NVL(AEALEE.RealPayDate, AEALEE.PayDate), 'YYYYMMDD'), 'YYYY.MM.DD') AS "RealPayDate"
			, AEALEE.RealPayAmount AS "RealPayAmount"
			, AEALEE.AlterPayeeNo AS "AlterPayeeNo"
			, AEALEE.AlterPayeeName AS "AlterPayeeName"
			, AEALEE.CreditAccount AS "CreditAccount"
			, AEALEE.DebitAccount AS "DebitAccount"
			, AEALEE.ProofTime AS "ProofTime"
			, AEALEE.ProofTime AS "ProofTimeStr"
			, AEALEE.StoreName AS "StoreName"
			, AEALEE.Currency AS "Currency"
			, AEALEE.ExchangeRate AS "ExchangeRate"
			, AEALEE.LocalAmount AS "LocalAmount"
			
			
			, VD.VendorID AS "VendorID"
			, VD.VendorNo AS "VendorNo"
			, VD.VendorName AS "VendorName"
			, VD.BusinessNumber AS "BusinessNumber"
			, VD.CorporateNo AS "CorporateNo"
			, VD.CEOName AS "CEOName"
			, VD.Industry AS "Industry"
			, VD.Sector AS "Sector"
			, VD.Address AS "Address"
			, AEALEE.BankCode AS "BankCode"
			, FN_GETACTBASECODENAME('Bank', AEALEE.BankCode, #{companyCode}) AS "BankName"
			, AEALEE.BankAccountNo AS "BankAccountNo"
			, AEALEE.BankAccountName AS "BankAccountName"
			, (AEALEE.BankAccountName || '/' || AEALEE.BankAccountNo) AS "BankAccountInfo"
			, VD.PaymentCondition AS "PaymentCondition"
			, FN_GETACTBASECODENAME('PayType', VD.PaymentCondition, #{companyCode}) AS "PaymentConditionName"
			, (SELECT MAX(ExpenceApplicationDivID) 
				FROM act_expence_application_div AEAD 
				WHERE AEALEE.ExpenceApplicationListID = AEAD.ExpenceApplicationListID) AS "maxDivRownum"
			, (SELECT SUM(AEAD.AMOUNT)
				FROM act_expence_application_div AEAD 
				WHERE AEALEE.ExpenceApplicationListID = AEAD.ExpenceApplicationListID) AS "divSum"
			, 'N' AS "IsNewStr"
			, AEALEE.EmpInsurance AS "EmpInsurance"
			, AEALEE.AccidInsurance AS "AccidInsurance"
			, AEALEE.WorkingDay AS "WorkingDay"
			, AEALEE.ActualDay AS "ActualDay"
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEALEE
		ON AEA.ExpenceApplicationID = AEALEE.ExpenceApplicationID
		LEFT OUTER JOIN act_vendor VD
		ON AEALEE.VendorNo = VD.VendorNo and AEA.CompanyCode = VD.CompanyCode
		WHERE 1=1
		<if test="ExpenceApplicationID != null and ExpenceApplicationID != ''">
			AND AEA.ExpenceApplicationID = #{ExpenceApplicationID}
		</if>
		<if test="expAppListIDs != null">
			AND 
			<foreach collection="expAppListIDs" item="item" index="index" separator="," open="AEALEE.ExpenceApplicationListID IN (" close=")">
				#{item}
			</foreach>
		</if>
		AND AEALEE.ProofCode = 'EtcEvid'
	</select>	
		
	<select id="selectExpenceApplicationDetailListMR" parameterType="cmap" resultType="cmap">
		/*
			expenceApplication.selectExpenceApplicationDetailListMR
		*/
			
		SELECT AEALMR.ExpenceApplicationListID AS "ExpenceApplicationListID"
			, AEALMR.ExpenceApplicationListID AS "cdRownum"
			, AEALMR.ExpenceApplicationListID AS "ExpAppRcptID"
			, AEALMR.ExpenceApplicationID AS "ExpenceApplicationID"
			, AEA.ApplicationType AS "ApplicationType"
			, TO_CHAR(TO_DATE(AEALMR.ProofDate, 'YYYYMMDD'), 'YYYYMMDD') AS "ProofDate" 
			, TO_CHAR(TO_DATE(AEALMR.ProofDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "ProofDateStr"
			, TO_CHAR(TO_DATE(AEALMR.PostingDate, 'YYYYMMDD'), 'YYYYMMDD') AS "PostingDate"
			, TO_CHAR(TO_DATE(AEALMR.PostingDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "PostingDateStr"
			, AEALMR.ProofCode AS "ProofCode"
			, AEALMR.TaxType AS "TaxType"
			, AEALMR.TaxCode AS "TaxCode"
			, AEALMR.PayAdjustMethod AS "PayAdjustMethod"
			, AEALMR.PayMethod AS "PayMethod"
			, AEALMR.PayType AS "PayType"
			, AEALMR.PayTarget AS "PayTarget"
			, AEALMR.IsWithholdingTax AS "IsWithholdingTax"
			, AEALMR.IncomeTax AS "IncomeTax"
			, AEALMR.LocalTax AS "LocalTax"
			, TO_CHAR(TO_DATE(AEALMR.PayDate, 'YYYYMMDD'), 'YYYYMMDD') AS "PayDate"
			, TO_CHAR(TO_DATE(AEALMR.PayDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "PayDateStr"
			, AEALMR.VendorNo AS "VendorNo"
			, AEALMR.TotalAmount AS "TotalAmount"
			, AEALMR.ReceiptID AS "ReceiptID"
			, AEALMR.PersonalCardNo AS "PersonalCardNo"
			, ('**********'||	SUBSTR(AEALMR.PersonalCardNo,11))	AS "PersonalCardNoView"
			, AEALMR.DocNo AS "DocNo"
			, AEALMR.BankCode AS "AccountBank"
			, AEALMR.BankAccountNo AS "AccountInfo"
			, AEALMR.BankAccountName AS "AccountHolder"
			, AEALMR.ReservedStr1 AS "ReservedStr1"
			, AEALMR.ReservedStr2 AS "ReservedStr2"
			, AEALMR.ReservedStr3 AS "ReservedStr3"
			, AEALMR.ReservedStr4 AS "ReservedStr4"
			, AEALMR.ReservedStr5 AS "ReservedStr5"
			, AEALMR.ReservedInt1 AS "ReservedInt1"
			, AEALMR.ReservedInt2 AS "ReservedInt2"
			, TO_CHAR(TO_DATE(NVL(AEALMR.RealPayDate, AEALMR.PayDate), 'YYYYMMDD'), 'YYYY.MM.DD') AS "RealPayDate"
			, AEALMR.RealPayAmount AS "RealPayAmount"
			, AEALMR.AlterPayeeNo AS "AlterPayeeNo"
			, AEALMR.AlterPayeeName AS "AlterPayeeName"
			, AEALMR.CreditAccount AS "CreditAccount"
			, AEALMR.DebitAccount AS "DebitAccount"
			
		
			, AR.CompanyCode AS "CompanyCode"
			, AR.ExpenceMgmtCode AS "ExpenceMgmtCode"
			, AR.StoreName AS "StoreName"
						
			, VD.VendorID AS "VendorID"
			, VD.VendorNo AS "VendorNo"
			, VD.VendorName AS "VendorName"
			, VD.BusinessNumber AS "BusinessNumber"
			, VD.CorporateNo AS "CorporateNo"
			, VD.CEOName AS "CEOName"
			, VD.Industry AS "Industry"
			, VD.Sector AS "Sector"
			, VD.Address AS "Address"
			, AEALMR.BankCode AS "BankCode"
			, FN_GETACTBASECODENAME('Bank', AEALMR.BankCode, #{companyCode}) AS "BankName"
			, AEALMR.BankAccountNo AS "BankAccountNo"
			, AEALMR.BankAccountName AS "BankAccountName"
			, (AEALMR.BankAccountName || '/' || AEALMR.BankAccountNo) AS "BankAccountInfo"
			, VD.PaymentCondition AS "PaymentCondition"
			, FN_GETACTBASECODENAME('PayType', VD.PaymentCondition, #{companyCode}) AS "PaymentConditionName"
			
			, SF.FileID AS "FileID"
			, SF.SavedName AS "SavedName"
			, SF.FilePath AS "FilePath"
			, SF.FileName AS "FileName"
			, (REPLACE(ST.FilePath,'{0}',SF.CompanyCode) || SF.FilePath|| SF.SavedName) AS "FullPath"
		
			, (SELECT MAX(ExpenceApplicationDivID) 
				FROM act_expence_application_div AEAD 
				WHERE AEALMR.ExpenceApplicationListID = AEAD.ExpenceApplicationListID) AS "maxDivRownum"
			, (SELECT SUM(AEAD.AMOUNT)
				FROM act_expence_application_div AEAD 
				WHERE AEALMR.ExpenceApplicationListID = AEAD.ExpenceApplicationListID) AS "divSum"
			, 'N' AS "IsNewStr"
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEALMR
		ON AEA.ExpenceApplicationID = AEALMR.ExpenceApplicationID
		LEFT OUTER JOIN act_vendor VD
		ON AEALMR.VendorNo = VD.VendorNo and AEA.CompanyCode = VD.CompanyCode
		LEFT OUTER JOIN act_receipt AR
		ON AEALMR.ReceiptID = AR.ReceiptID
		LEFT OUTER JOIN sys_file SF
		ON AR.ReceiptFileID = SF.FileID
		LEFT OUTER JOIN sys_storage ST ON ST.StorageID = SF.StorageID
		WHERE 1=1
		<if test="ExpenceApplicationID != null and ExpenceApplicationID != ''">
			AND AEA.ExpenceApplicationID = #{ExpenceApplicationID}
		</if>
		<if test="expAppListIDs != null">
			AND 
			<foreach collection="expAppListIDs" item="item" index="index" separator="," open="AEALMR.ExpenceApplicationListID IN (" close=")">
				#{item}
			</foreach>
		</if>
		AND AEALMR.ProofCode = 'Receipt'
	</select>	
	
	
	
	<select id="selectExpenceApplicationDailyList" parameterType="cmap" resultType="cmap">
		SELECT ABD.BizTripDailyID AS "BizTripDailyID"
			, AEAL.ExpenceApplicationListID AS "ExpenceApplicationListID"
			, AEAL.ExpenceApplicationID AS "ExpenceApplicationID"
			, ABD.BizTripDateSt AS "BizTripDateSt"
			, ABD.BizTripDateEd AS "BizTripDateEd"
			, ABD.DailyType AS "DailyType"
			, ABD.DailyAmount AS "DailyAmount"
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEAL
		ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
		INNER JOIN act_biztrip_daily ABD
		ON AEAL.ExpenceApplicationListID = ABD.ExpenceApplicationListID
		WHERE AEA.ExpenceApplicationID = #{ExpenceApplicationID}
		ORDER BY AEAL.ExpenceApplicationListID, ABD.BizTripDailyID
	</select>
	
	<select id="selectExpenceApplicationFuelList" parameterType="cmap" resultType="cmap">
		SELECT ABF.BizTripFuelID AS "BizTripFuelID"
			, AEAL.ExpenceApplicationListID AS "ExpenceApplicationListID"
			, AEAL.ExpenceApplicationID AS "ExpenceApplicationID"
			, ABF.BizTripDate AS "BizTripDate"
			, TO_CHAR(TO_DATE(ABF.BizTripDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "BizTripDateStr"
			, ABF.StartPoint AS "StartPoint"
			, ABF.EndPoint AS "EndPoint"
			, ABF.FuelType AS "FuelType"
			, ABF.Distance AS "Distance"
			, ABF.UnitPrice AS "FuelUnitPrice"
			, ABF.RealPrice AS "FuelRealPrice"
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEAL
		ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
		INNER JOIN act_biztrip_fuel ABF
		ON AEAL.ExpenceApplicationListID = ABF.ExpenceApplicationListID
		WHERE AEA.ExpenceApplicationID = #{ExpenceApplicationID}
		ORDER BY AEAL.ExpenceApplicationListID, ABF.BizTripFuelID
	</select>
	
	 
	<select id="selectExpenceApplicationDiv" parameterType="cmap" resultMap="ReservedStrCLOB">
		/*
			expenceApplication.selectExpenceApplicationDiv
		*/
		SELECT AEAD.ExpenceApplicationDivID AS "ExpenceApplicationDivID"
			, AEAD.ExpenceApplicationDivID AS "Rownum"
			, AEAL.ExpenceApplicationListID AS "ExpenceApplicationListID"
			, AEAL.ExpenceApplicationID AS "ExpenceApplicationID"
			, AEAL.DocNo AS "DocNo"
			, AEAL.ProofDate AS "ProofDate"
			, AEAD.AccountCode AS "AccountCode"
			, AEAD.AccountName AS "AccountName"
			, AEAD.CostCenterCode AS "CostCenterCode"
			, AEAD.CostCenterName AS "CostCenterName"
			, AEAD.IOCode AS "IOCode"
			, AEAD.IOName AS "IOName"
			, AEAD.Amount AS "Amount"
			, AEAD.UsageComment AS "UsageComment"
			, AEAD.StandardBriefID AS "StandardBriefID"
			, AEAD.StandardBriefName AS "StandardBriefName"
			, AEAD.ReservedStr1 AS "ReservedStr1_Div"
			, AEAD.ReservedStr2 AS "ReservedStr2_Div"
			, AEAD.ReservedStr3 AS "ReservedStr3_Div"
			, AEAD.ReservedStr4 AS "ReservedStr4_Div"
			, AEAD.ReservedStr5 AS "ReservedStr5_Div"
			, AEAD.ReservedInt1 AS "ReservedInt1_Div"
			, AEAD.ReservedInt2 AS "ReservedInt2_Div"
			, AEA.RequestType AS "RequestType"
			, AEA.RegisterID AS "RegisterID"
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEAL
			ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
		INNER JOIN  act_expence_application_div AEAD
			ON AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
		/*
		LEFT OUTER JOIN act_account AA
			ON AEAD.AccountCode = AA.AccountCode
		LEFT OUTER JOIN act_cost_center CC
			 ON AEAD.CostCenterCode = CC.CostCenterCode
		LEFT OUTER JOIN act_standard_brief SB
			 ON AEAD.StandardBriefID = SB.StandardBriefID
		*/
		WHERE 1=1
		<if test="ExpenceApplicationID != null and ExpenceApplicationID != ''">
			AND AEA.ExpenceApplicationID = #{ExpenceApplicationID}
		</if>
		<if test="expAppListIDs != null">
			AND 
			<foreach collection="expAppListIDs" item="item" index="index" separator="," open="AEAL.ExpenceApplicationListID IN (" close=")">
				#{item}
			</foreach>
		</if>
		ORDER BY AEAL.ExpenceApplicationListID, AEAD.ExpenceApplicationDivID
		
	</select>
	
	<select id="selectExpenceApplicationFile" parameterType="cmap" resultType="cmap">
		/*
			expenceApplication.selectExpenceApplicationFile
		*/
		SELECT AEAL.ExpenceApplicationListID AS "ExpenceApplicationListID"
			, AEAL.ExpenceApplicationID AS "ExpenceApplicationID"
			, AEAF.FileID AS "FileID"
			, SF.StorageID AS "StorageID"
			, SF.ServiceType AS "ServiceType"
			, SF.ObjectID AS "ObjectID"
			, SF.ObjectType AS "ObjectType"
			, SF.MessageID AS "MessageID"
			, SF.Version AS "Version"
			, SF.SaveType AS "SaveType"
			, SF.LastSeq AS "LastSeq"
			, SF.Seq AS "Seq"
			, SF.FilePath AS "FilePath"
			, SF.FileName AS "FileName"
			, SF.SavedName AS "SavedName"
			, SF.Extention AS "Extention"
			, SF.Size_ AS "Size"
			, SF.CompanyCode AS "CompanyCode"
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEAL
			ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
		INNER JOIN  act_expence_application_file AEAF
			ON AEAL.ExpenceApplicationListID = AEAF.ExpenceApplicationListID
		INNER JOIN sys_file SF
			ON AEAF.FileID = SF.FileID
		WHERE 1=1
		<if test="ExpenceApplicationID != null and ExpenceApplicationID != ''">
			AND AEA.ExpenceApplicationID = #{ExpenceApplicationID}
		</if>
		<if test="expAppListIDs != null">
			AND 
			<foreach collection="expAppListIDs" item="item" index="index" separator="," open="AEAL.ExpenceApplicationListID IN (" close=")">
				#{item}
			</foreach>
		</if>	
	</select>
	<select id="selectExpenceApplicationFileByListID" parameterType="cmap" resultType="cmap">
		/*
			expenceApplication.selectExpenceApplicationFileByListID
		*/
		SELECT AEAL.ExpenceApplicationListID AS "ExpenceApplicationListID"
			, AEAL.ExpenceApplicationID AS "ExpenceApplicationID"
			, AEAF.FileID AS "FileID"
			, SF.StorageID AS "StorageID"
			, SF.ServiceType AS "ServiceType"
			, SF.ObjectID AS "ObjectID"
			, SF.ObjectType AS "ObjectType"
			, SF.MessageID AS "MessageID"
			, SF.Version AS "Version"
			, SF.SaveType AS "SaveType"
			, SF.LastSeq AS "LastSeq"
			, SF.Seq AS "Seq"
			, SF.FilePath AS "FilePath"
			, SF.FileName AS "FileName"
			, SF.SavedName AS "SavedName"
			, SF.Extention AS "Extention"
			, SF.Size_ AS "Size"
			, SF.CompanyCode AS "CompanyCode"
		FROM act_expence_application_list AEAL
		INNER JOIN  act_expence_application_file AEAF
			ON AEAL.ExpenceApplicationListID = AEAF.ExpenceApplicationListID
		INNER JOIN sys_file SF
			ON AEAF.FileID = SF.FileID
		
		WHERE AEAL.ExpenceApplicationListID = #{ExpenceApplicationListID}
	</select>
	<select id="selectExpenceApplicationFileByListIDCnt" resultType="java.lang.Long">
		/*
			expenceApplication.selectExpenceApplicationFileByListIDCnt
		*/
		SELECT COUNT(*) 
		FROM act_expence_application_list AEAL
		INNER JOIN  act_expence_application_file AEAF
			ON AEAL.ExpenceApplicationListID = AEAF.ExpenceApplicationListID
		INNER JOIN sys_file SF
			ON AEAF.FileID = SF.FileID
		
		WHERE AEAL.ExpenceApplicationListID = #{ExpenceApplicationListID}
	</select>
	<select id="selectExpenceApplicationRef" parameterType="cmap" resultType="cmap">
		/*
			expenceApplication.selectExpenceApplicationRef
		*/
				
		SELECT 
			AEAL.ExpenceApplicationListID AS "ExpenceApplicationListID"
			, AEAR.ProcessID AS "ProcessID"
			, AEAR.bstored AS "bstored"
			, AEAR.BusinessData1 AS "BusinessData1"
			, AEAR.BusinessData2 AS "BusinessData2"
			, PA.DocSubject AS "Subject"
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEAL
			ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
		INNER JOIN act_expence_application_ref AEAR
			ON AEAL.ExpenceApplicationListID = AEAR.ExpenceApplicationListID
		INNER JOIN jwf_process PA 
			ON AEAR.ProcessID = PA.ProcessID
		WHERE 1=1
		<if test="ExpenceApplicationID != null and ExpenceApplicationID != ''">
			AND AEA.ExpenceApplicationID = #{ExpenceApplicationID}
		</if>
		<if test="expAppListIDs != null">
			AND 
			<foreach collection="expAppListIDs" item="item" index="index" separator="," open="AEAL.ExpenceApplicationListID IN (" close=")">
				#{item}
			</foreach>
		</if>
	</select>
	
	<select id="selectExpenceApplicationAuditEvid" parameterType="cmap" resultType="cmap">
		SELECT		
		<trim prefixOverrides =",">
			<if test="AmountUse != null and AmountUse != '' and AmountUse == 'Y'.toString()">
			, AAA.ApplicationColor AS "amountColor", AAA.RuleCode AS "amountRuleCode", AAA.RuleName AS "amountRuleName", AAA.RuleInfo AS "amountRuleInfo", AAA.StdType AS "amountStdType"  
			</if>
			<if test="WeekendUse != null and WeekendUse != '' and WeekendUse == 'Y'.toString()">
			, AAW.ApplicationColor AS "weekendColor", AAW.RuleCode AS "weekendRuleCode", AAW.RuleName AS "weekendRuleName", AAW.RuleInfo AS "weekendRuleInfo", AAW.StdType AS "weekendStdType"
			</if>
			<if test="HolidayUse != null and HolidayUse != '' and HolidayUse == 'Y'.toString()">
			, AAH.ApplicationColor AS "holidayColor", AAH.RuleCode AS "holidayRuleCode", AAH.RuleName AS "holidayRuleName", AAH.RuleInfo AS "holidayRuleInfo", AAH.StdType AS "holidayStdType"
			</if>
			<if test="VacationUse != null and VacationUse != '' and VacationUse == 'Y'.toString()">
			, AAV.ApplicationColor AS "vacationColor", AAV.RuleCode AS "vacationRuleCode", AAV.RuleName AS "vacationRuleName", AAV.RuleInfo AS "vacationRuleInfo", AAV.StdType AS "vacationStdType"
			</if>
			<if test="MidnightUse != null and MidnightUse != '' and MidnightUse == 'Y'.toString()">
			, AAM.ApplicationColor AS "midnightColor", AAM.RuleCode AS "midnightRuleCode", AAM.RuleName AS "midnightRuleName", AAM.RuleInfo AS "midnightRuleInfo", AAM.StdType AS "midnightStdType"
			</if>
			, A.RegisterID AS "RegisterID"
			, A.ExpenceApplicationListID AS "ExpenceApplicationListID"
			, A.ProofCode AS "ProofCode"
			, A.ProofDate AS "ProofDate"
			, A.ProofDateStr AS "ProofDateStr"
			, A.CardUID AS "CardUID"
			, A.ReceiptID AS "ReceiptID"
			, A.AmountSumNum AS "AmountSumNum"
			, A.ProofHour AS "ProofHour"
			, A.ProofTime AS "ProofTime"
		</trim>
		FROM (
			SELECT
				AEA.RegisterID,
				AEAL.ExpenceApplicationListID,
				AEAL.ProofCode,
				AEAL.ProofDate,
				TO_CHAR(TO_DATE(AEAL.ProofDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS ProofDateStr,
				AEAL.CardUID,
				AEAL.ReceiptID,
				(
					SELECT SUM(AEAD.Amount)
					FROM act_expence_application_div AEAD
					WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
				) AS AmountSumNum
				, CASE 
					WHEN AEAL.ProofCode = 'CorpCard' THEN SUBSTR(CR.ApproveTime, 1, 2) 
					WHEN AEAL.ProofCode = 'Receipt' THEN SUBSTR(AR.UseTime, 1, 2) 
					WHEN AEAL.ProofCode = 'EtcEvid' THEN (CASE WHEN AEAL.ProofTime IS NOT NULL THEN SUBSTR(AEAL.ProofTime, 1, 2) ELSE NULL END)
					ELSE NULL 
				  END AS ProofHour
				, CASE 
					WHEN AEAL.ProofCode = 'CorpCard' THEN TO_CHAR(TO_DATE(CR.ApproveTime, 'HH24:MI:SS'), 'HH24:MI:SS') 
					WHEN AEAL.ProofCode = 'Receipt' THEN (AR.UseTime || ':00')
					WHEN AEAL.ProofCode = 'EtcEvid' THEN (CASE WHEN AEAL.ProofTime IS NOT NULL THEN (AEAL.ProofTime || ':00') ELSE NULL END)
					ELSE NULL 
				  END AS ProofTime
			FROM act_expence_application AEA
			INNER JOIN act_expence_application_list AEAL
			ON AEAL.ExpenceApplicationID = AEA.ExpenceApplicationID
			LEFT OUTER JOIN act_card_receipt CR
			ON AEAL.CardUID = CR.ReceiptID
			LEFT OUTER JOIN act_receipt AR
			ON AEAL.ReceiptID = AR.ReceiptID
			WHERE AEA.ExpenceApplicationID = #{ExpenceApplicationID}
		) A
		<if test="AmountUse != null and AmountUse != '' and AmountUse == 'Y'.toString()">
		LEFT OUTER JOIN act_audit AAA
			ON AAA.RuleCode = 'amount'
			AND AAA.IsUse = 'Y'
			AND AAA.RuleInfo LIKE '%"' || #{displayType} || '"%'
			<if test="displayType = 'DocDisplay'.toString()"> 
			AND AAA.RuleInfo LIKE '%"Evid"%'
			</if>
			AND A.AmountSumNum > (AAA.StdValue * 10000)
		</if>
		<if test="WeekendUse != null and WeekendUse != '' and WeekendUse == 'Y'.toString()">
		LEFT OUTER JOIN act_audit AAW
			ON AAW.RuleCode = 'weekend'
			AND AAW.IsUse = 'Y'
			AND AAW.RuleInfo LIKE '%"' || #{displayType} || '"%'
			<if test="displayType = 'DocDisplay'.toString()"> 
			AND AAW.RuleInfo LIKE '%"Evid"%'
			</if>
			AND TO_CHAR(TO_DATE(A.ProofDate), 'd') IN (1, 7)
		</if>
		<if test="HolidayUse != null and HolidayUse != '' and HolidayUse == 'Y'.toString()">
		LEFT OUTER JOIN sys_calendar SC 
			ON SC.SolarDate = TO_CHAR(TO_DATE(A.ProofDate, 'YYYYMMDD'), 'YYYY-MM-DD')
			AND SC.Anniversary IS NOT NULL
		LEFT OUTER JOIN act_audit AAH
			ON AAH.RuleCode = 'holiday'
			AND AAH.IsUse = 'Y'
			AND AAH.RuleInfo LIKE '%"' || #{displayType} || '"%'
			<if test="displayType = 'DocDisplay'.toString()"> 
			AND AAH.RuleInfo LIKE '%"Evid"%'
			</if>
			AND SC.SolarDate IS NOT NULL
		</if>
		<if test="VacationUse != null and VacationUse != '' and VacationUse == 'Y'.toString()">
		LEFT OUTER JOIN vm_vacationinfo VI 
			ON (TO_CHAR(TO_DATE(A.ProofDate, 'YYYYMMDD'), 'YYYY-MM-DD') BETWEEN VI.Sdate AND VI.Edate)
			AND VI.GUBUN NOT IN ('VACATION_CANCEL', 'VACATION_PUBLIC_CANCEL') 
			AND VI.UR_Code = A.RegisterID
			AND SDate NOT IN (
				SELECT SDate 
				FROM vm_vacationinfo VVI
				WHERE VVI.GUBUN IN ('VACATION_CANCEL', 'VACATION_PUBLIC_CANCEL')
				AND VI.VacFlag = VVI.VacFlag
				AND VI.VacDay = VVI.VacDay * -1
				AND VVI.UR_Code = A.RegisterID
			)
		LEFT OUTER JOIN act_audit AAV
			ON AAV.RuleCode = 'vacation'
			AND AAV.IsUse = 'Y'
			AND AAV.RuleInfo LIKE '%"' || #{displayType} || '"%'
			<if test="displayType = 'DocDisplay'.toString()"> 
			AND AAV.RuleInfo LIKE '%"Evid"%'
			</if>
			AND VI.Sdate IS NOT NULL
		</if>
		<if test="MidnightUse != null and MidnightUse != '' and MidnightUse == 'Y'.toString()">
		LEFT OUTER JOIN act_audit AAM
			ON AAM.RuleCode = 'midnight'
			AND AAM.IsUse = 'Y'
			AND AAM.RuleInfo LIKE '%"' || #{displayType} || '"%'
			<if test="displayType = 'DocDisplay'.toString()"> 
			AND AAM.RuleInfo LIKE '%"Evid"%'
			</if>
			<![CDATA[
			AND (A.ProofHour >= AAM.StdStartTime OR A.ProofHour <= AAM.StdEndTime)
			]]>
		</if>
		<trim prefix="WHERE" prefixOverrides="OR">
			<if test="AmountUse != null and AmountUse != '' and AmountUse == 'Y'.toString()">
			OR
			AAA.RuleCode IS NOT NULL
			</if>
			<if test="WeekendUse != null and WeekendUse != '' and WeekendUse == 'Y'.toString()">
			OR
			AAW.RuleCode IS NOT NULL
			</if>
			<if test="HolidayUse != null and HolidayUse != '' and HolidayUse == 'Y'.toString()">
			OR
			AAH.RuleCode IS NOT NULL
			</if>
			<if test="VacationUse != null and VacationUse != '' and VacationUse == 'Y'.toString()">
			OR
			AAV.RuleCode IS NOT NULL
			</if>
			<if test="MidnightUse != null and MidnightUse != '' and MidnightUse == 'Y'.toString()">
			OR
			AAM.RuleCode IS NOT NULL
			</if>
		</trim>
	</select>
	
	<select id="selectExpenceApplicationAuditCnt" parameterType="cmap" resultType="cmap">
		SELECT		
		<trim prefixOverrides =",">
			<if test="AmountUse != null and AmountUse != '' and AmountUse == 'Y'.toString()">
			, MAX(AAA.RuleName) AS "AmountRuleName", COUNT(AAA.RuleCode) AS "AmountCnt"
			</if>
			<if test="WeekendUse != null and WeekendUse != '' and WeekendUse == 'Y'.toString()">
			, MAX(AAW.RuleName) AS "WeekendRuleName", COUNT(AAW.RuleCode) AS "WeekendCnt"
			</if>
			<if test="HolidayUse != null and HolidayUse != '' and HolidayUse == 'Y'.toString()">
			, MAX(AAH.RuleName) AS "HolidayRuleName", COUNT(AAH.RuleCode) AS "HolidayCnt"
			</if>
			<if test="VacationUse != null and VacationUse != '' and VacationUse == 'Y'.toString()">
			, MAX(AAV.RuleName) AS "VacationRuleName", COUNT(AAV.RuleCode) AS "VacationCnt" 
			</if>
			<if test="MidnightUse != null and MidnightUse != '' and MidnightUse == 'Y'.toString()">
			, MAX(AAM.RuleName) AS "MidnightRuleName", COUNT(AAM.RuleCode) AS "MidnightCnt"
			</if>
		</trim>
		FROM (
			SELECT 
				AEA.RegisterID,
				AEAL.ProofDate,
				(
					SELECT SUM(AEAD.Amount)
					FROM act_expence_application_div AEAD
					WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
				) AS AmountSumNum
				, CASE 
					WHEN AEAL.ProofCode = 'CorpCard' THEN SUBSTR(CR.ApproveTime, 1, 2) 
					WHEN AEAL.ProofCode = 'Receipt' THEN SUBSTR(AR.UseTime, 1, 2) 
					WHEN AEAL.ProofCode = 'EtcEvid' THEN (CASE WHEN AEAL.ProofTime IS NOT NULL THEN SUBSTR(AEAL.ProofTime, 1, 2) ELSE NULL END)
					ELSE NULL 
				  END AS ProofHour
			FROM act_expence_application AEA
			INNER JOIN act_expence_application_list AEAL
			ON AEAL.ExpenceApplicationID = AEA.ExpenceApplicationID
			LEFT OUTER JOIN act_card_receipt CR
			ON AEAL.CardUID = CR.ReceiptID
			LEFT OUTER JOIN act_receipt AR
			ON AEAL.ReceiptID = AR.ReceiptID
			WHERE AEA.ExpenceApplicationID = #{ExpenceApplicationID}
		) A
		<if test="AmountUse != null and AmountUse != '' and AmountUse == 'Y'.toString()">
		LEFT OUTER JOIN act_audit AAA
			ON AAA.RuleCode = 'amount'
			AND AAA.IsUse = 'Y'
			AND AAA.RuleInfo LIKE '%"' || #{displayType} || '"%' AND AAA.RuleInfo LIKE '%TopCount%'
			AND A.AmountSumNum > (AAA.StdValue * 10000)
		</if>
		<if test="WeekendUse != null and WeekendUse != '' and WeekendUse == 'Y'.toString()">
		LEFT OUTER JOIN act_audit AAW
			ON AAW.RuleCode = 'weekend'
			AND AAW.IsUse = 'Y'
			AND AAW.RuleInfo LIKE '%"' || #{displayType} || '"%' AND AAW.RuleInfo LIKE '%TopCount%'
			AND TO_CHAR(TO_DATE(A.ProofDate), 'd') IN (1, 7)
		</if>
		<if test="HolidayUse != null and HolidayUse != '' and HolidayUse == 'Y'.toString()">
		LEFT OUTER JOIN sys_calendar SC 
			ON SC.SolarDate = TO_CHAR(TO_DATE(A.ProofDate, 'YYYYMMDD'), 'YYYY-MM-DD')
			AND SC.Anniversary IS NOT NULL
		LEFT OUTER JOIN act_audit AAH
			ON AAH.RuleCode = 'holiday'
			AND AAH.IsUse = 'Y'
			AND AAH.RuleInfo LIKE '%"' || #{displayType} || '"%' AND AAH.RuleInfo LIKE '%TopCount%'
			AND SC.SolarDate IS NOT NULL
		</if>
		<if test="VacationUse != null and VacationUse != '' and VacationUse == 'Y'.toString()">
		LEFT OUTER JOIN vm_vacationinfo VI 
			ON (TO_CHAR(TO_DATE(A.ProofDate, 'YYYYMMDD'), 'YYYY-MM-DD') BETWEEN VI.Sdate AND VI.Edate)
			AND VI.GUBUN NOT IN ('VACATION_CANCEL', 'VACATION_PUBLIC_CANCEL') 
			AND VI.UR_Code = A.RegisterID
			AND SDate NOT IN (
				SELECT SDate 
				FROM vm_vacationinfo VVI
				WHERE VVI.GUBUN IN ('VACATION_CANCEL', 'VACATION_PUBLIC_CANCEL')
				AND VI.VacFlag = VVI.VacFlag
				AND VI.VacDay = VVI.VacDay * -1
				AND VVI.UR_Code = A.RegisterID
			)
		LEFT OUTER JOIN act_audit AAV
			ON AAV.RuleCode = 'vacation'
			AND AAV.IsUse = 'Y'
			AND AAV.RuleInfo LIKE '%"' || #{displayType} || '"%' AND AAV.RuleInfo LIKE '%TopCount%'
			AND VI.Sdate IS NOT NULL
		</if>
		<if test="MidnightUse != null and MidnightUse != '' and MidnightUse == 'Y'.toString()">
		LEFT OUTER JOIN act_audit AAM
			ON AAM.RuleCode = 'midnight'
			AND AAM.IsUse = 'Y'
			AND AAM.RuleInfo LIKE '%"' || #{displayType} || '"%' AND AAM.RuleInfo LIKE '%TopCount%'
			<![CDATA[
			AND (A.ProofHour >= AAM.StdStartTime OR A.ProofHour <= AAM.StdEndTime)
			]]>
		</if>
	</select>
	
	<select id="selectBriefList" parameterType="cmap" resultType="cmap">
		/*
			expenceApplication.selectBriefList
		*/
		
		SELECT	SB.StandardBriefID AS "StandardBriefID"
			, SB.StandardBriefName AS "StandardBriefName"
			, TO_CHAR(TO_DATE(SB.RegistDate, 'YY/MM/DD'), 'YYYY.MM.DD') AS "RegistDate"
			, AC.AccountID AS "AccountID"
			, AC.AccountCode AS "AccountCode"
			, AC.AccountName AS "AccountName"
			, SB.StandardBriefDesc AS "StandardBriefDesc"
			, AC.TaxCode AS "TaxCode"
	    	, FN_GETACTBASECODENAME('TaxCode',AC.TaxCode,#{companyCode})		AS "TaxCodeName"
			, AC.TaxType AS "TaxType"
	    	, FN_GETACTBASECODENAME('TaxType',AC.TaxType,#{companyCode})		AS "TaxTypeName"
	    	, SB.CtrlCode AS "CtrlCode"
	    	, SB.IsFile AS "IsFile"
	    	, SB.IsDocLink AS "IsDocLink"
		FROM act_standard_brief	SB
		LEFT OUTER JOIN
			act_account		AC
			ON		SB.AccountID	= AC.AccountID
		WHERE	1=1
		AND		AC.ISUSE		= 'Y'
		AND		SB.ISUSE		= 'Y'
		<if test ="isSimp != null and isSimp !='' and isSimp != 'N'.toString()">
		AND		SB.ISUSESIMP	= #{isSimp}
		</if>
		<if test ="StandardBriefSearchStr != null">
			AND 
			<foreach collection="StandardBriefSearchStr" item="item" index="index" separator="," open="SB.StandardBriefID IN (" close=")">
				#{item}
			</foreach>
		</if>
		AND		AC.CompanyCode = #{companyCode}
		ORDER BY AC.AccountID,SB.StandardBriefID
	</select>
	
	<select id="selectUserBriefList" parameterType="cmap" resultType="cmap">
		/*
			expenceApplication.selectUserBriefList
		*/
		
		SELECT	SB.StandardBriefID AS "StandardBriefID"
			, SB.StandardBriefName AS "StandardBriefName"
			, TO_CHAR(TO_DATE(SB.RegistDate, 'YY/MM/DD'), 'YYYY.MM.DD') AS "RegistDate"
			, AC.AccountID AS "AccountID"
			, AC.AccountCode AS "AccountCode"
			, AC.AccountName AS "AccountName"
			, SB.StandardBriefDesc AS "StandardBriefDesc"
			, AC.TaxCode AS "TaxCode"
	    	, FN_GETACTBASECODENAME('TaxCode',AC.TaxCode,#{companyCode})		AS "TaxCodeName"
			, AC.TaxType AS "TaxType"
	    	, FN_GETACTBASECODENAME('TaxType',AC.TaxType,#{companyCode})		AS "TaxTypeName"
	    	, SB.CtrlCode AS "CtrlCode"
	    	, SB.IsFile AS "IsFile"
	    	, SB.IsDocLink AS "IsDocLink"
		FROM act_user_standard_brief USB
		INNER JOIN act_standard_brief SB
		ON		USB.StandardBriefID = SB.StandardBriefID
		INNER JOIN act_account AC
		ON		SB.AccountID	= AC.AccountID
		WHERE	1=1
		AND		USB.UserCode	= #{UR_Code}
		AND		AC.ISUSE		= 'Y'
		AND		SB.ISUSE		= 'Y'
		<if test ="isSimp != null and isSimp !='' and isSimp != 'N'.toString()">
			AND		SB.ISUSESIMP	= #{isSimp}
		</if>
		<if test ="StandardBriefSearchStr != null">
			AND 
			<foreach collection="StandardBriefSearchStr" item="item" index="index" separator="," open="SB.StandardBriefID IN (" close=")">
				#{item}
			</foreach>
		</if>
		AND		AC.CompanyCode = #{companyCode}
		ORDER BY AC.AccountID, SB.StandardBriefID
	</select>
	
	<select id="selectCardReceiptList" parameterType="cmap" resultType="cmap">
		/*
			expenceApplication.selectCardReceiptList
		*/
		<include refid="oracle.include.pagingHeader" />
		SELECT 		
			CR.ReceiptID AS "ReceiptID"
			, CR.ItemNo AS "ItemNo"
			, 'CorpCard' AS "ProofCode"
			, CR.CardNo AS "CardNo"
			, TO_CHAR(TO_DATE(CR.UseDate, 'YYYYMMDD'), 'YYYYMMDD') AS "ProofDate"
			, TO_CHAR(TO_DATE(CR.UseDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "ProofDateStr"
			, TO_CHAR(TO_DATE(CR.ApproveTime, 'HH24:MI:SS'), 'HH24MISS') AS "ProofTime"
			, TO_CHAR(TO_DATE(CR.ApproveTime, 'HH24:MI:SS'), 'HH24:MI:SS') AS "ProofTimeStr"
			, CR.ReceiptID AS "CardUID"
			, CR.ApproveNo AS "CardApproveNo"
			, CR.AmountWon AS "TotalAmount"
			, CR.StoreName AS "StoreName"
			, CR.StoreNo AS "StoreNo"
			, CR.StoreCondition AS "StoreCondition"
			, (CR.StoreAddress1|| CR.StoreAddress2) AS "StoreAddress"
			, CR.StoreTel AS "StoreTel"
			
			, (CASE WHEN SC.AccountCode IS NOT NULL AND SC.AccountCode != '' THEN SC.AccountCode ELSE CR.AccountCode END) AS "AccountCode"
			, (SELECT AccountName FROM act_account AA WHERE AA.AccountCode
				= CASE WHEN SC.AccountCode IS NOT NULL AND SC.AccountCode != '' THEN SC.AccountCode ELSE CR.AccountCode END) AS "AccountName"
			, (CASE WHEN SC.StandardBriefID IS NOT NULL AND SC.StandardBriefID != '' THEN SC.StandardBriefID ELSE CR.StandardBriefID END) AS "StandardBriefID"
			, (SELECT StandardBriefName FROM act_standard_brief ASB WHERE ASB.StandardBriefID
				= CASE WHEN SC.StandardBriefID IS NOT NULL AND SC.StandardBriefID != '' THEN SC.StandardBriefID ELSE CR.StandardBriefID END) AS "StandardBriefName"
			
			, (SELECT TaxCode FROM act_account AA WHERE AA.AccountCode = SC.AccountCode) AS "TaxCode"
			, (SELECT TaxType FROM act_account AA WHERE AA.AccountCode = SC.AccountCode) AS "TaxType"
			
			, CR.CostCenterCode AS "CostCenterCode"
			, (SELECT CostCenterName FROM act_cost_center ACC WHERE ACC.CostCenterCode = CR.CostCenterCode) AS "CostCenterName"
			, CR.UsageText AS "UsageText"
			, CR.Amount AS "Amount" 
			, AL.ExpenceApplicationListID AS "ExpenceApplicationListID"
			, CR.StoreCategory AS "StoreCategory"
			, (CASE WHEN AL.ExpenceApplicationListID IS NULL THEN 'N' ELSE 'Y' END ) AS "IsDuplicate" 
		FROM act_card_receipt CR
		INNER JOIN act_corp_card CC
			ON CR.CardNo = CC.CardNo
		LEFT OUTER JOIN (
							SELECT MAX(AL.ExpenceApplicationListID) ExpenceApplicationListID
								, AL.CardUID
								, AL.ExpenceApplicationID
							FROM act_expence_application_list AL
							INNER JOIN act_expence_application AA
								ON AL.ExpenceApplicationID = AA.ExpenceApplicationID
							WHERE AA.ApplicationStatus NOT IN ('R', 'C', 'DELETE')
							GROUP BY  AL.CardUID      ,AL.ExpenceApplicationListID  ,AL.ExpenceApplicationID
							) AL
			ON CR.ReceiptID = AL.CardUID
		LEFT
		JOIN	act_corp_card_return RET
		ON		CC.CardNo = RET.CardNo
		AND		(CR.UseDate||CR.APPROVETIME)<![CDATA[>=]]> TO_CHAR( RET.ReleaseDate, 'YYYYMMDDHH24MISS' ) 
		AND		(CR.UseDate||CR.APPROVETIME)<![CDATA[<=]]> CASE WHEN RET.ReturnDate IS NULL THEN '29991231235959' ELSE TO_CHAR( RET.ReturnDate, 'YYYYMMDDHH24MISS' )  END
		LEFT JOIN act_store_category SC
		ON	CR.StoreCategory = SC.CategoryCode
		AND CC.COMPANYCODE = SC.COMPANYCODE
		WHERE 1=1
			<if test ="CardID != null and CardID !=''">
				AND CC.CorpCardID =#{CardID}
			</if>
			AND		CR.ApproveStatus	= 'A'
			AND		CR.InfoIndex		IN ('A','C','D')
			AND		CR.Class			IN ('A','B','D')
			AND (TRIM(AL.ExpenceApplicationListID) IS NULL
				OR AL.ExpenceApplicationID = #{ExpenceApplicationID})
			
			AND ( (NVL(TRIM(CR.TossUserCode),'NODATA') = 'NODATA' AND CC.OwnerUserCode	= #{SessionUser})
				OR (CR.TossUserCode	= #{SessionUser})
				OR (RET.ReleaseUserCode	= #{SessionUser})
				OR (CC.CorpCardID IN (SELECT	ACCSU.CorpCardID
										FROM	act_corp_card_search_user	ACCSU
										WHERE	ACCSU.OwnerUserCode = #{SessionUser})
					)
			)
		
			AND	NVL(TRIM(CR.IsPersonalUse),'N') = 'N'
			
			<if test="addPageList != null">
				AND 
				<foreach collection="addPageList" item="item" index="index" separator="," open="CR.ReceiptID NOT IN (" close=")">
					#{item}
				</foreach>
			</if>
			
			<if test ="StartDate != null and StartDate !=''">
				<![CDATA[
				 	AND CR.UseDate >= #{StartDate}
				]]>
			</if>
			<if test ="EndDate != null and EndDate !=''">
				<![CDATA[
				 	AND CR.UseDate <= #{EndDate}
				]]>
			</if>
		ORDER BY "ProofDate" ASC, "ProofTime" ASC
		<include refid="oracle.include.pagingFooter" />
	</select>
	
	
	<select id="selectCardReceiptListCnt" resultType="java.lang.Long">
		/*
			expenceApplication.selectCardReceiptListCnt
		*/
		SELECT COUNT(CR.ReceiptID) 
		FROM act_card_receipt CR
		INNER JOIN act_corp_card CC
			ON CR.CardNo = CC.CardNo
		LEFT OUTER JOIN (
							SELECT MAX(AL.ExpenceApplicationListID) ExpenceApplicationListID
								, AL.CardUID
								, AL.ExpenceApplicationID
							FROM act_expence_application_list AL
							INNER JOIN act_expence_application AA
								ON AL.ExpenceApplicationID = AA.ExpenceApplicationID
							WHERE AA.ApplicationStatus NOT IN ('R', 'C', 'DELETE')
							GROUP BY  AL.CardUID      ,AL.ExpenceApplicationListID  ,AL.ExpenceApplicationID
							) AL
			ON CR.ReceiptID = AL.CardUID
		LEFT
		JOIN	act_corp_card_return RET
		ON		CC.CardNo = RET.CardNo
		AND		(CR.UseDate||CR.APPROVETIME)<![CDATA[>=]]> TO_CHAR( RET.ReleaseDate, 'YYYYMMDDHH24MISS' ) 
		AND		(CR.UseDate||CR.APPROVETIME)<![CDATA[<=]]> CASE WHEN RET.ReturnDate IS NULL THEN '29991231235959' ELSE TO_CHAR( RET.ReturnDate, 'YYYYMMDDHH24MISS' )  END
		WHERE 1=1
			<if test ="CardID != null and CardID !=''">
				AND CC.CorpCardID =#{CardID}
			</if>
			AND	CR.ApproveStatus	= 'A'
			AND	CR.InfoIndex		IN ('A','C','D')
			AND	CR.Class			IN ('A','B','D')
			AND (TRIM(AL.ExpenceApplicationListID) IS NULL
				OR AL.ExpenceApplicationID = #{ExpenceApplicationID})
			
			AND ( (NVL(TRIM(CR.TossUserCode),'NODATA') = 'NODATA' AND CC.OwnerUserCode	= #{SessionUser})
				OR (CR.TossUserCode	= #{SessionUser})
				OR (RET.ReleaseUserCode	= #{SessionUser})
				OR (CC.CorpCardID IN (SELECT	ACCSU.CorpCardID
										FROM	act_corp_card_search_user	ACCSU
										WHERE	ACCSU.OwnerUserCode = #{SessionUser})
					)
			)
		
			AND	NVL(TRIM(CR.IsPersonalUse),'N') = 'N'
			
			<if test="addPageList != null">
				AND 
				<foreach collection="addPageList" item="item" index="index" separator="," open="CR.ReceiptID NOT IN (" close=")">
					#{item}
				</foreach>
			</if>
			
			<if test ="StartDate != null and StartDate !=''">
				<![CDATA[
				 	AND CR.UseDate >= #{StartDate}
				]]>
			</if>
			<if test ="EndDate != null and EndDate !=''">
				<![CDATA[
				 	AND CR.UseDate <= #{EndDate}
				]]>
			</if>
	</select>
	
	
	<select id="getCardReceiptDetail" parameterType="cmap" resultType="cmap">
 	    /*
 	    	expenceApplication.getCardReceiptDetail
 	    	법인카드 사용내역 상세
 	    */
		SELECT 		
			CR.ReceiptID AS "ReceiptID"
			, CR.ItemNo AS "ItemNo"
			, CR.CardNo AS "CardNo"
			, CR.ApproveNo AS "ApproveNo"
			, TO_CHAR(TO_DATE(CR.UseDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "UseDate"
			, TO_CHAR(TO_DATE(CR.ApproveTime, 'HH24:MI:SS'), 'HH24:MI:SS') AS "ProofTimeStr"
			, CR.StoreName AS "StoreName"
			, CR.StoreNo AS "StoreNo"
			, CR.StoreRepresentative AS "StoreRepresentative"
			, CR.StoreRegNo AS "StoreRegNo"
			, CR.StoreTel AS "StoreTel"
			, CR.StoreAddress1 || CR.StoreAddress2 AS "StoreAddress"
			, CR.StoreCondition AS "StoreCondition"
			, CR.RepAmount AS "RepAmount"
			, CR.TaxAmount AS "TaxAmount"
			, CR.ServiceAmount AS "ServiceAmount"
			, CR.AmountWon AS "AmountWon"
			, CR.InfoIndex AS "InfoIndex"
		FROM act_card_receipt CR
		WHERE CR.ReceiptID = #{receiptID}
	</select>
	
	<select id="getUserCC" parameterType="cmap" resultType="cmap">
 	    /*
 	    	expenceApplication.getUserCC
 	    	법인카드 사용내역 상세
 	    */
		SELECT UCC.CostCenterCode AS "CostCenterCode"
			, CC.CostCenterID AS "CostCenterID"
			, CC.CostCenterName AS "CostCenterName"
			, CC.CompanyCode AS "CompanyCode"
			, FN_GETACTBASECODENAME('CompanyCode', CC.CompanyCode, CC.CompanyCode) AS "CompanyName"
		FROM act_user_cost_center  UCC
		LEFT OUTER JOIN act_cost_center CC
			ON UCC.CostCenterCode = CC.CostCenterCode
		WHERE UserCode = #{UserCode}
	</select>
	
	
	
	<select id="makeSlipNo" parameterType="cmap" resultType="cmap">
 	    /*
 	    	expenceApplication.makeSlipNo
 	    	전표번호 생성
 	    */
		SELECT 
			AEAL.ExpenceApplicationListID AS "ExpenceApplicationListID"
			,(
				SELECT 
					CASE WHEN LPAD(MAX(SUBSTR(DocNo, 9,3))+1, 3, '0') IS NOT NULL 
						 THEN TO_CHAR(SYSTIMESTAMP, 'YYYYMMDD') || LPAD(MAX(SUBSTR(DocNo, 9,3))+1, 3, '0')
						 ELSE TO_CHAR(SYSTIMESTAMP, 'YYYYMMDD') || '001'
					END
				FROM act_expence_application_list 
				WHERE SUBSTR(DocNo, 1,8) = TO_CHAR(SYSTIMESTAMP, 'YYYYMMDD')
			) AS "DocNo"
			, AEAL.ProofCode AS "ProofCode"
			, AEAL.PostingDate AS "PostingDate"
			, AEAL.PayDate AS "PayDay"
		FROM act_expence_application_list AEAL
		WHERE AEAL.ExpenceApplicationListID = #{ExpenceApplicationListID}
	</select>
	
	<select id="makeSlipNo_BACKUP" resultType="java.lang.Long">
 	    /*
 	    	expenceApplication.makeSlipNo_BACKUP
 	    	전표번호 생성 수정전 백업
 	    */
		SELECT CASE WHEN LPAD(MAX(SUBSTR(DocNo, 9,3))+1, 3, '0') IS NOT NULL 
						 THEN TO_CHAR(SYSTIMESTAMP, 'YYYYMMDD') || LPAD(MAX(SUBSTR(DocNo, 9,3))+1, 3, '0')
						 ELSE TO_CHAR(SYSTIMESTAMP, 'YYYYMMDD') || '001'
					END
		FROM act_expence_application_list 
		WHERE SUBSTR(DocNo, 1,8) = TO_CHAR(SYSDATE, 'YYYYMMDD')
	</select>
	
	<select id="makeSlipInfoList" parameterType="cmap" resultType="cmap">
 	    /*
 	    	expenceApplication.makeSlipInfoList
 	    	전표발행 정보 - 증빙
 	    */
		SELECT 
			AEA.CompanyCode AS "CompanyCode"
			, AEA.ExpenceApplicationID AS "ExpenceApplicationID"
			, AEA.ApplicationTitle AS "ApplicationTitle"
			, TO_CHAR(AEA.ModifyDate, 'YYYY-MM-DD') AS "ModifyDate"
			, AEAL.ExpenceApplicationListID AS "ExpenceApplicationListID"
			, AEAL.ProofCode AS "ProofCode"
			, TO_CHAR(TO_DATE(NVL(AEAL.DocPostingDate, AEAL.PostingDate), 'YYYYMMDD'), 'YYYY-MM-DD') AS "PostingDate"
			, TO_CHAR(TO_DATE(NVL(AEAL.DocPayDate, AEAL.PayDate), 'YYYYMMDD'), 'YYYY-MM-DD') AS "PayDate"
			, TO_CHAR(TO_DATE(AEAL.ProofDate, 'YYYYMMDD'), 'YYYY-MM-DD') AS "ProofDate"
			, AEAL.TaxCode AS "TaxCode"
			, CASE 
				WHEN AEAL.ProofCode = 'CorpCard' THEN TO_CHAR(CR.TaxAmount)
				WHEN AEAL.ProofCode = 'TaxBill' THEN TO_CHAR(NVL(AEAL.TaxAmount,ATI.TaxTotal))
				WHEN AEAL.ProofCode = 'CashBill' THEN TO_CHAR(ACB.Tax)
                WHEN AEAL.ProofCode = 'EtcEvid' THEN TO_CHAR(AEAL.taxamount)
			ELSE '0'
			END AS "TaxAmount"
			, CASE 
				WHEN AEAL.ProofCode = 'CorpCard' THEN TO_CHAR(CR.RepAmount)
				WHEN AEAL.ProofCode = 'TaxBill' THEN TO_CHAR(NVL(AEAL.RepAmount,ATI.SupplyCostTotal))
				WHEN AEAL.ProofCode = 'CashBill' THEN TO_CHAR(ACB.SupplyCost)
                WHEN AEAL.ProofCode = 'EtcEvid' THEN TO_CHAR(AEAL.repamount)
			ELSE TO_CHAR(AEAL.TotalAmount)
			END AS "RepAmount"
			, NVL(AEAL.VendorNo, (SELECT VendorNo FROM act_corp_card WHERE CardNo = (SELECT CardNo FROM act_card_receipt WHERE ReceiptID = AEAL.CardUID))) AS "VendorNo"
			, NVL(VD.VendorName, (SELECT VendorName FROM act_vendor WHERE VendorNo = (SELECT VendorNo FROM act_corp_card WHERE CardNo = (SELECT CardNo FROM act_card_receipt WHERE ReceiptID = AEAL.CardUID)))) AS "VendorName"
			, AEAL.TotalAmount AS "TotalAmount"
			, NVL(VD.CurrencyCode, 'KRW') AS "CurrencyCode"
			, AEAL.RegisterID AS "RegisterID"
			, ATI.NTSConfirmNum AS "NTSConfirmNum"
			, ATI.ISSUEDT AS "ISSUE_DATE"
		FROM act_expence_application_list AEAL
		LEFT OUTER JOIN act_expence_application AEA 
		ON AEAL.ExpenceApplicationID = AEA.ExpenceApplicationID
		LEFT OUTER JOIN act_card_receipt CR
		ON AEAL.CardUID = CR.ReceiptID
		LEFT OUTER JOIN act_taxinvoice ATI
		ON AEAL.TaxUID = ATI.TaxInvoiceID
		LEFT OUTER JOIN act_cashbill ACB
		ON AEAL.CashUID = ACB.CashBillID
		LEFT OUTER JOIN act_vendor VD
		ON AEAL.VendorNo = VD.VendorNo and AEA.CompanyCode = VD.CompanyCode
		WHERE AEAL.ExpenceApplicationListID = #{ExpenceApplicationListID}
	</select>
	
	<select id="makeSlipInfoDiv" parameterType="cmap" resultType="cmap">
 	    /*
 	    	expenceApplication.makeSlipInfoDiv
 	    	전표발행 정보 - 세부증빙
 	    */
		SELECT 
			AEAD.ExpenceApplicationDivID AS "ExpenceApplicationDivID"
			, AEAL.ExpenceApplicationListID AS "ExpenceApplicationListID"
			, AEAL.TaxCode AS "TaxCode"
			, CASE 
				WHEN AEAL.ProofCode = 'CorpCard' THEN TO_CHAR(CR.TaxAmount)
				WHEN AEAL.ProofCode = 'TaxBill' THEN TO_CHAR(NVL(AEAL.TaxAmount,ATI.TaxTotal))
				WHEN AEAL.ProofCode = 'CashBill' THEN TO_CHAR(ACB.Tax)
                WHEN AEAL.ProofCode = 'EtcEvid' THEN TO_CHAR(AEAL.taxamount)
			ELSE '0'
			END AS "TaxAmount"
			, CASE 
				WHEN AEAL.ProofCode = 'CorpCard' THEN TO_CHAR(CR.RepAmount)
				WHEN AEAL.ProofCode = 'TaxBill' THEN TO_CHAR(NVL(AEAL.RepAmount,ATI.SupplyCostTotal))
				WHEN AEAL.ProofCode = 'CashBill' THEN TO_CHAR(ACB.SupplyCost)
                WHEN AEAL.ProofCode = 'EtcEvid' THEN TO_CHAR(AEAL.repamount)
			ELSE TO_CHAR(AEAL.TotalAmount)
			END AS "RepAmount"
			, AEAL.TotalAmount AS "TotalAmount"
			, AEAD.AccountCode AS "AccountCode"
			, AEAD.CostCenterCode AS "CostCenterCode"
			, AEAD.IOCode AS "IOCode"
			, AEAD.Amount AS "Amount"
			, AEAD.UsageComment AS "UsageComment"
		FROM act_expence_application_div AEAD
		LEFT OUTER JOIN act_expence_application_list AEAL 
		ON AEAD.ExpenceApplicationListID = AEAL.ExpenceApplicationListID
		LEFT OUTER JOIN act_card_receipt CR
		ON AEAL.CardUID = CR.ReceiptID
		LEFT OUTER JOIN act_taxinvoice ATI
		ON AEAL.TaxUID = ATI.TaxInvoiceID
		LEFT OUTER JOIN act_cashbill ACB
		ON AEAL.CashUID = ACB.CashBillID
		WHERE AEAD.ExpenceApplicationListID = #{ExpenceApplicationListID}
	</select>
	
	<select id="selectAutoSlipMakeList" parameterType="cmap" resultType="cmap">
 	    /*
 	    	expenceApplication.selectAutoSlipMakeList
 	    	전표 자동생성 타겟 목록
 	    */
		SELECT 
			AEAL.ExpenceApplicationListID AS "ExpenceApplicationListID"
			, AEA.ProcessID AS "ProcessID"
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list  AEAL
		ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
		WHERE AEA.ExpenceApplicationID = #{ExpenceApplicationID}
		AND AEA.ApplicationStatus = 'E'
	</select>
	
	
    <update id="updateSlipInfo" parameterType="cmap">
 	    /*
 	    	expenceApplication.updateSlipInfo
 	    	전표작성
 	    */
 	    UPDATE act_expence_application_list
 	    SET 
 	    <choose>
 	        <when test='flag == "Y"'>
	 	    	DocNo = #{DocNo ,jdbcType=VARCHAR}
 	        </when>
			<otherwise>
	 	    	unDocNo = #{DocNo ,jdbcType=VARCHAR}
			</otherwise> 	        
 	    </choose>
 	    	, DocPostingDate = (CASE WHEN 'Y'= #{PostingDateCk ,jdbcType=VARCHAR} THEN PostingDate ELSE TO_CHAR(TO_DATE(#{SetPostingDate ,jdbcType=VARCHAR}, 'YYYY.MM.DD'), 'YYYYMMDD') END )
			, DocPayDate = (CASE WHEN 'Y'= #{PayDayCk ,jdbcType=VARCHAR} THEN PayDate ELSE TO_CHAR(TO_DATE(#{SetPayDay ,jdbcType=VARCHAR}, 'YYYY.MM.DD'), 'YYYYMMDD') END )			
		WHERE ExpenceApplicationListID = #{ExpenceApplicationListID ,jdbcType=INTEGER}
	</update>
	
	<update id="updateUnSlipInfo" parameterType="cmap">
 	    /*
 	    	expenceApplication."updateUnSlipInfo"
 	    	전표취소
 	    */
 	    UPDATE act_expence_application_list
 	    	SET unDocNo = #{unDocNo ,jdbcType=VARCHAR}
			, DocPostingDate = ''
			, DocPayDate = ''	
		WHERE ExpenceApplicationListID = #{ExpenceApplicationListID ,jdbcType=INTEGER}
	</update>
    
	 <select id="statCheckExpenceApplication" resultType="java.lang.Long">
 		/*
 			expenceApplication.statCheckExpenceApplication
			결재 처리전 상태체크
 		*/
 			SELECT	COUNT(*)
			FROM act_expence_application AEA
			WHERE 1=1
			 	AND 
			 	<choose>
					<when test="ExpenceApplicationIDList != null">
						<foreach collection="ExpenceApplicationIDList" item="item" index="index" separator="," open="AEA.ExpenceApplicationID IN (" close=")">
							#{item}
						</foreach>
					</when>
					<otherwise>
						1=2
					</otherwise>
				</choose>
				
			 	<choose>
					<when test="ckStatList != null">
						AND 
						<foreach collection="ckStatList" item="item" index="index" separator="," open="AEA.ApplicationStatus NOT IN (" close=")">
							#{item}
						</foreach>
					</when>
				</choose>
	</select>	
    <update id="statChangeExpenceApplicationManList" parameterType="cmap">
 	    /*
 	    	expenceApplication.statChangeExpenceApplicationManList
 	    	상태 변경
 	    */
 	    
 	    UPDATE act_expence_application
 	    SET ApplicationStatus = #{ApplicationStatus ,jdbcType=VARCHAR}
			, ModifierID = #{SessionUser ,jdbcType=VARCHAR}
			, ModifyDate = SYSDATE
		WHERE ExpenceApplicationID = #{ExpenceApplicationID ,jdbcType=INTEGER}
		
	</update>
    
	<select id="getWorkItemArchiveIDForDelMarking" parameterType="cmap" resultType="java.lang.String">
		 SELECT LISTAGG(WorkItemID, ',') WITHIN GROUP(ORDER BY WorkItemID) AS "WorkItemID"
		 FROM jwf_workitem WA
		 INNER JOIN jwf_process PA
		 ON WA.ProcessID = PA.ProcessID
		 INNER JOIN act_expence_application AEA
		 ON PA.ProcessID = AEA.ProcessID
		 WHERE ExpenceApplicationID = #{ExpenceApplicationID}
	</select>
    
    
	
	
	<select id="getMobileReceiptList" parameterType="cmap" resultType="cmap">
	<include refid="oracle.include.pagingHeader" />
		SELECT	AR.ReceiptID AS "ReceiptID", 
				AR.CompanyCode AS "CompanyCode",
				AR.ExpenceMgmtCode AS "ExpenceMgmtCode",
				'Receipt' AS "ProofCode",
				TO_CHAR(TO_DATE(AR.PhotoDate, 'YYYY.MM.DD HH24:MI:SS'), 'YYYYMMDD') AS "PhotoDate",
				TO_CHAR(TO_DATE(AR.PhotoDate, 'YYYY/MM/DD HH24:MI:SS'), 'YYYY.MM.DD') AS "PhotoDateYMD",
				TO_CHAR(TO_DATE(AR.PhotoDate, 'YYYY/MM/DD HH24:MI:SS'), 'HH24:MI:SS') AS "PhotoDateHMS",
				TO_CHAR(TO_DATE(AR.PhotoDate, 'YYYY.MM.DD HH24:MI:SS'), 'YYYY.MM.DD HH24:MI') AS "PhotoDateStr",
				AR.ReceiptType AS "ReceiptType",
				AR.ReceiptFileID AS "ReceiptFileID",
				AR.Active AS "Active",
				FN_GETACTBASECODENAME('Active', AR.Active, #{companyCode}) AS "ActiveName",
				AR.RegisterID AS "RegisterID",
				TO_CHAR(AR.RegistDate, 'YYYYMMDD') AS "RegistDate",
				TO_CHAR(AR.RegistDate, 'YYYY.MM.DD HH24:MI') AS "RegistDateStr",
				
				SF.FileID AS "FileID",
				SF.SavedName AS "SavedName",
				SF.FilePath AS "FilePath",
				SF.FileName AS "FileName",
				(REPLACE(ST.FilePath,'{0}',SF.CompanyCode)||SF.FilePath||SF.SavedName) AS "FullPath",	
				
				AR.TotalAmount AS "TotalAmount",
				AR.StoreName AS "StoreName",
				AR.StoreAddress AS "StoreAddress",
				TO_CHAR(AR.UseDate, 'YYYY.MM.DD') AS "UseDate",		
				TO_CHAR(AR.UseDate, 'YYYYMMDD') AS "ProofDate",
				TO_CHAR(AR.UseDate, 'YYYY.MM.DD') AS "ProofDateStr",
				TO_CHAR(TO_DATE(AR.UseTime, 'HH24:MI:SS'), 'HH24MISS') AS "ProofTime",
				TO_CHAR(TO_DATE(AR.UseTime, 'HH24:MI:SS'), 'HH24:MI:SS') AS "ProofTimeStr",
				AR.UsageText AS "UsageText",
				AR.Amount AS "Amount",
				AR.AccountCode AS "AccountCode",
				(SELECT AccountName FROM act_account AA WHERE AA.AccountCode = AR.AccountCode) AS "AccountName",
				AR.StandardBriefID AS "StandardBriefID",
				(SELECT StandardBriefName FROM act_standard_brief ASB WHERE ASB.StandardBriefID = AR.StandardBriefID) AS "StandardBriefName",
				AR.CostCenterCode AS "CostCenterCode",
				(SELECT CostCenterName FROM act_cost_center ACC WHERE ACC.CostCenterCode = AR.CostCenterCode) AS "CostCenterName",
				
				AL.ExpenceApplicationListID AS "ExpenceApplicationListID"
		FROM act_receipt AR
		INNER JOIN sys_file SF
		ON AR.ReceiptFileID = SF.FileID
		INNER JOIN sys_storage ST ON ST.StorageID = SF.StorageID
		LEFT OUTER JOIN (
							SELECT MAX(AL.ExpenceApplicationListID) ExpenceApplicationListID
									, AL.ReceiptID
									, AL.ExpenceApplicationID
							FROM act_expence_application_list AL
							INNER JOIN act_expence_application AA
							ON AL.ExpenceApplicationID = AA.ExpenceApplicationID
							WHERE AA.ApplicationStatus NOT IN ('R', 'C', 'DELETE')
							GROUP BY ReceiptID, AL.ExpenceApplicationID
		) AL
		ON AR.ReceiptID = AL.ReceiptID
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			AND (
				AL.ExpenceApplicationListID IS NULL
				<if test ="ExpenceApplicationID != null and ExpenceApplicationID !=''">
				OR AL.ExpenceApplicationID = #{ExpenceApplicationID}
				</if>
			)
			<if test ="addPageList != null and addPageList !=''">
			AND AR.ReceiptID NOT IN 
			<foreach collection="addPageList" item="item" open="(" close=")" separator=",">
				#{item}
			</foreach>
			</if>		
			<if test ="SDate != null and SDate !=''">
			AND AR.RegistDate <![CDATA[>=]]> TO_DATE(#{SDate}, 'YYYY-MM-DD HH24:MI:SS')
			</if>
			<if test ="EDate != null and EDate !=''">
			AND AR.RegistDate <![CDATA[<=]]> TO_DATE(#{EDate}, 'YYYY-MM-DD HH24:MI:SS')
			</if>
			<if test ="UR_Code != null and UR_Code !=''">
			AND AR.RegisterID = #{UR_Code}
			</if>
		</trim>
		ORDER BY AR.ReceiptID ASC
		<include refid="oracle.include.pagingFooter" />
	</select>
	
	<select id="getMobileReceiptListCnt" resultType="java.lang.Long">
		SELECT	COUNT(AR.ReceiptID)		
		FROM	act_receipt AR
		LEFT OUTER JOIN (
							SELECT MAX(AL.ExpenceApplicationListID) ExpenceApplicationListID
									, AL.ReceiptID
									, AL.ExpenceApplicationID
							FROM act_expence_application_list AL
							INNER JOIN act_expence_application AA
							ON AL.ExpenceApplicationID = AA.ExpenceApplicationID
							WHERE AA.ApplicationStatus NOT IN ('R', 'C', 'DELETE')
							GROUP BY ReceiptID, AL.ExpenceApplicationID
		) AL
		ON AR.ReceiptID = AL.ReceiptID
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			AND (
				AL.ExpenceApplicationListID IS NULL
				<if test ="ExpenceApplicationID != null and ExpenceApplicationID !=''">
				OR AL.ExpenceApplicationID = #{ExpenceApplicationID}
				</if>
			)
			<if test ="addPageList != null and addPageList !=''">
			AND AR.ReceiptID NOT IN 
			<foreach collection="addPageList" item="item" open="(" close=")" separator=",">
				#{item}
			</foreach>
			</if>		
			<if test ="SDate != null and SDate !=''">
			AND AR.RegistDate <![CDATA[>=]]> TO_DATE(#{SDate}, 'YYYY-MM-DD HH24:MI:SS')
			</if>
			<if test ="EDate != null and EDate !=''">
			AND AR.RegistDate <![CDATA[<=]]> TO_DATE(#{EDate}, 'YYYY-MM-DD HH24:MI:SS')
			</if>
			<if test ="UR_Code != null and UR_Code !=''">
			AND AR.RegisterID = #{UR_Code}
			</if>
		</trim>
	</select>
	
	<select id="getMobileReceipt" parameterType="cmap" resultType="cmap">
		SELECT	AR.ReceiptID AS "ReceiptID", 
				'Receipt' AS "ProofCode",
				AR.CompanyCode AS "CompanyCode",
				AR.ExpenceMgmtCode AS "ExpenceMgmtCode",
				AR.UsageText AS "UsageText",
				AR.UseDate AS "UseDate",
				AR.UseTime AS "UseTime",
				AR.StoreName AS "StoreName",
				AR.StoreAddress AS "StoreAddress",
				TO_CHAR(AR.TotalAmount,'999,999,999,999,999,999,999,999') AS "TotalAmount",
				TO_CHAR(AR.UseDate, 'YYYY.MM.DD') AS "ProofDateStr",
				TO_CHAR(TO_DATE(AR.PhotoDate, 'YYYY.MM.DD HH24:MI:SS'), 'YYYYMMDD') AS "PhotoDate",
				TO_CHAR(TO_DATE(AR.PhotoDate, 'YYYY.MM.DD HH24:MI:SS'), 'YYYY.MM.DD HH24:MI') AS "PhotoDateStr",
				AR.PhotoDate AS "PhotoDateFull",
				AR.ReceiptType AS "ReceiptType",
				AR.ReceiptFileID AS "ReceiptFileID",
				AR.Active AS "Active",
				FN_GETACTBASECODENAME('Active', AR.Active, #{companyCode}) AS "ActiveName",
				AR.RegisterID AS "RegisterID",
				TO_CHAR(AR.RegistDate, 'YYYYMMDD') AS "RegistDate",
				TO_CHAR(AR.RegistDate, 'YYYY.MM.DD HH24:MI') AS "RegistDateStr",
				SB.StandardBriefID AS "StandardBriefID",
				SB.StandardBriefName AS "StandardBriefName"
		FROM	act_receipt AR
		LEFT OUTER JOIN
				act_standard_brief SB
		ON		AR.StandardBriefID	= SB.StandardBriefID
		WHERE 1=1
			AND 
			<choose>
				<when test="receiptIDList != null">
					<foreach collection="receiptIDList" item="item" index="index" separator="," open="AR.ReceiptID IN (" close=")">
						#{item}
					</foreach>
				</when>
				<otherwise>
					1=2
				</otherwise>
			</choose>
	</select>
	
	<delete id="deleteMobileReceipt" parameterType="cmap">
	    DELETE FROM act_receipt		
		WHERE ReceiptID = #{receiptID}	
	</delete>
	
	<insert id="insertMobileReceipt" parameterType="cmap">
	    INSERT INTO act_receipt
		(
			CompanyCode
			, ExpenceMgmtCode
			, StandardBriefID
			, AccountCode
			, UseDate
			, UseTime
			, UsageText
			, StoreName
			, StoreAddress
			, TotalAmount
			, PhotoDate
			, ReceiptType
			, ReceiptFileID
			, Active
			, RegisterID
			, RegistDate
		)
		VALUES
		(
			 #{CompanyCode ,jdbcType=VARCHAR}
			, #{ExpenceMgmtCode ,jdbcType=VARCHAR}
			, #{StandardBriefID ,jdbcType=INTEGER}
			, #{AccountCode ,jdbcType=VARCHAR}
			, #{UseDate ,jdbcType=DATE}
			, #{UseTime ,jdbcType=VARCHAR}
			, #{UsageText ,jdbcType=VARCHAR}
			, #{StoreName ,jdbcType=VARCHAR}
			, #{StoreAddress ,jdbcType=VARCHAR}
			, #{TotalAmount ,jdbcType=INTEGER}
			, #{PhotoDate ,jdbcType=VARCHAR}
			, #{ReceiptType ,jdbcType=VARCHAR}
			, #{ReceiptFileID ,jdbcType=INTEGER}
			, #{Active ,jdbcType=VARCHAR}
			, #{SessionUser ,jdbcType=VARCHAR}
			, SYSDATE
		)
	</insert>
	
	<update id="updateMobileReceipt" parameterType="cmap">
	    UPDATE act_receipt
		SET StandardBriefID = #{StandardBriefID ,jdbcType=INTEGER},
			AccountCode = #{AccountCode ,jdbcType=VARCHAR},
			TotalAmount = #{TotalAmount ,jdbcType=INTEGER},
			UseDate = #{UseDate ,jdbcType=DATE},
			UseTime = #{UseTime ,jdbcType=VARCHAR},
			UsageText = #{UsageText ,jdbcType=VARCHAR},
			StoreName = #{StoreName ,jdbcType=VARCHAR},
			ReceiptType = #{ReceiptType ,jdbcType=VARCHAR}
		WHERE ReceiptID = #{ReceiptID ,jdbcType=INTEGER}
	</update>
	
	<update id="updateCorpCardReceipt" parameterType="cmap">
	    UPDATE act_card_receipt
		SET StandardBriefID = #{StandardBriefID ,jdbcType=INTEGER},
			AccountCode = #{AccountCode ,jdbcType=VARCHAR},
			UsageText = #{UsageText ,jdbcType=VARCHAR}
		WHERE ReceiptID = #{ReceiptID ,jdbcType=INTEGER}
	</update>
	
	<select id="selectExpenceApplicationReviewList" parameterType="cmap" resultType="cmap">
		/*
			expenceApplication.selectExpenceApplicationReviewList
		*/
		
		<include refid="oracle.include.pagingHeader" />
		SELECT AEA.ExpenceApplicationID AS "ExpenceApplicationID"
			, AEA.CompanyCode AS "CompanyCode"
			, FN_GETACTBASECODENAME('CompanyCode', AEA.CompanyCode, #{companyCode}) AS "CompanyName"
			, AEA.ApplicationTitle AS "ApplicationTitle"
			, AEA.ApplicationType AS "ApplicationType"
			, AEA.ApplicationStatus AS "ApplicationStatus"
			, FN_GETACTBASECODENAME('ExpenceApplicationStatus', AEA.ApplicationStatus, #{companyCode}) AS "ApplicationStatusName"
			, AEA.RegisterID AS "RegisterID"
			, USR.DisplayName AS "RegisterName"
			, TO_CHAR(TO_DATE(NVL(AEA.ApplicationDate, AEA.RegistDate), 'YY/MM/DD'), 'YYYY.MM.DD') AS "ApplicationDate"
			, AEA.RequestType AS "RequestType"
			, AEA.RegistDate AS "RegistDate"	
			, AEAL.ExpenceApplicationListID AS "ExpenceApplicationListID"
			, AEAL.ExpenceApplicationListID AS "cdRownum"
			, TO_CHAR(TO_DATE(AEAL.ProofDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "ProofDate"
			, TO_CHAR(TO_DATE(AEAL.PostingDate, 'YYYYMMDD'), 'YYYY.MM.DD') AS "PostingDate"
			, AEAL.ProofCode AS "ProofCode"
			, FN_GETACTBASECODENAME('ProofCode', AEAL.ProofCode, #{companyCode}) AS "ProofCodeName"			
			, AEAL.CardUID AS "CardUID"
			, AEAL.CashUID AS "CashUID"
			, AEAL.TaxUID AS "TaxUID"
			, AEAL.ReceiptID AS "ReceiptID"
			, AEAL.TaxType AS "TaxType"
			, AEAL.TaxCode AS "TaxCode"
			, AEAL.PayAdjustMethod AS "PayAdjustMethod"
			, AEAL.PayMethod AS "PayMethod"
			, AEAL.IsWithholdingTax AS "IsWithholdingTax"			
			, AEAL.IncomeTax AS "IncomeTax"
			, AEAL.LocalTax AS "LocalTax"
			, AEAL.PayDate AS "PayDate"
			, AEAL.RealPayDate AS "RealPayDate"
			, AEAL.RealPayAmount AS "RealPayAmount"
			, AEAL.VendorNo AS "VendorNo"
			, VD.VendorName AS "VendorName"
			, ATI.TaxInvoiceID AS "TaxInvoiceID"			
			, (SELECT COUNT(*) FROM  act_expence_application_file AEAF
				WHERE AEAL.ExpenceApplicationListID = AEAF.ExpenceApplicationListID
				) AS "FileCnt"
			, (SELECT COUNT(*) 
				FROM  act_expence_application_list AEALD
				WHERE AEAL.ExpenceApplicationID = AEALD.ExpenceApplicationID
				) AS "AppCnt"		
			, TO_CHAR(AEAL.TotalAmount,'999,999,999,999,999,999,999,999')				AS "TotalAmount"
			, AEAL.TotalAmount AS "TotalAmountNum"			
			, CASE 
				WHEN AEAL.ProofCode = 'CorpCard' THEN TO_CHAR(CR.TaxAmount, '999,999,999,999,999,999,999,999')
				WHEN AEAL.ProofCode = 'TaxBill' THEN TO_CHAR(ATI.TaxTotal, '999,999,999,999,999,999,999,999')
				WHEN AEAL.ProofCode = 'CashBill' THEN TO_CHAR(ACB.Tax, '999,999,999,999,999,999,999,999')
				ELSE ''
				END AS "TaxAmount"
			, CASE 
				WHEN AEAL.ProofCode = 'CorpCard' THEN TO_CHAR(CR.TaxAmount)
				WHEN AEAL.ProofCode = 'TaxBill' THEN TO_CHAR(ATI.TaxTotal)
				WHEN AEAL.ProofCode = 'CashBill' THEN TO_CHAR(ACB.Tax)
				ELSE ''
				END AS "TaxAmountNum"
			, CASE 
				WHEN AEAL.ProofCode = 'CorpCard' THEN TO_CHAR(CR.RepAmount, '999,999,999,999,999,999,999,999')
				WHEN AEAL.ProofCode = 'TaxBill' THEN TO_CHAR(ATI.SupplyCostTotal, '999,999,999,999,999,999,999,999')
				WHEN AEAL.ProofCode = 'CashBill' THEN TO_CHAR(ACB.SupplyCost, '999,999,999,999,999,999,999,999')
				ELSE ''
				END AS "RepAmount"
			, CASE 
				WHEN AEAL.ProofCode = 'CorpCard' THEN TO_CHAR(CR.RepAmount)
				WHEN AEAL.ProofCode = 'TaxBill' THEN TO_CHAR(ATI.SupplyCostTotal)
				WHEN AEAL.ProofCode = 'CashBill' THEN TO_CHAR(ACB.SupplyCost)
				ELSE ''
				END AS "RepAmountNum"
			, (
				SELECT 
					CASE 
						WHEN (AEAL.ProofCode = 'TaxBill' AND SUM(AEAD.Amount) != AEAL.TotalAmount) THEN TO_CHAR(SUM(AEAD.Amount) + AEAL.TaxAmount,'999,999,999,999,999,999,999,999') 
						ELSE TO_CHAR(SUM(AEAD.AMOUNT),'999,999,999,999,999,999,999,999')
					END 
				FROM act_expence_application_div AEAD
				WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
			) AS "AmountSum"
			, (
				SELECT 
					CASE 
						WHEN (AEAL.ProofCode = 'TaxBill' AND SUM(AEAD.Amount) != AEAL.TotalAmount) THEN SUM(AEAD.Amount) + AEAL.TaxAmount 
						ELSE SUM(AEAD.AMOUNT)
					END 
				FROM act_expence_application_div AEAD
				WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
			) AS "AmountSumNum"
			, AEAL.DocNo AS "DocNo"
			, AEAL.UnDocNo AS "UnDocNo"
			, CASE WHEN AEAL.DocNo IS NULL 
					THEN 
						TO_CHAR(TO_DATE(AEAL.PostingDate, 'YYYYMMDD'), 'YYYY.MM.DD')
					ELSE 
						TO_CHAR(TO_DATE(AEAL.DocPostingDate, 'YYYYMMDD'), 'YYYY.MM.DD')
				END AS "DocPostingDate"
			, CASE WHEN AEAL.DocNo IS NULL 
					THEN 
						TO_CHAR(TO_DATE(AEAL.PayDate, 'YYYYMMDD'), 'YYYY.MM.DD')
					ELSE 
						TO_CHAR(TO_DATE(AEAL.DocPayDate, 'YYYYMMDD'), 'YYYY.MM.DD')
				END AS "DocPayDate"
			, AR.ReceiptFileID AS "ReceiptFileID"
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEAL
		ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
		LEFT OUTER JOIN act_vendor VD
		ON AEAL.VendorNo = VD.VendorNo
		LEFT OUTER JOIN sys_object_user USR
		ON AEA.RegisterID = USR.UserCode
		LEFT OUTER JOIN act_card_receipt CR
		ON AEAL.CardUID = CR.ReceiptID
		LEFT OUTER JOIN act_taxinvoice ATI
		ON AEAL.TaxUID = ATI.TaxInvoiceID
		LEFT OUTER JOIN act_cashbill ACB
		ON AEAL.CashUID = ACB.CashBillID
		LEFT OUTER JOIN act_receipt AR
		ON AEAL.ReceiptID = AR.ReceiptID
		WHERE 1=1
	 		AND AEA.ApplicationStatus = 'E'
		<choose>
			<when test="searchText != null and searchText !=''">
			    <choose>
				    <when test="searchType == 'title'.toString()">
			AND		AEA.ApplicationTitle		LIKE '%' || #{searchText} || '%'
				    </when>
				    <when test="searchType == 'user'.toString()">
			AND		USR.DisplayName		LIKE '%' || #{searchText} || '%'
				    </when>
				    <when test="searchType == 'docno'.toString()">
			AND		AEAL.DocNo			LIKE '%' || #{searchText} || '%'
				    </when>
				</choose>
			</when>
		</choose>
		<if test ="companyCode != null and companyCode !=''">
		AND		AEA.CompanyCode = #{companyCode}
		</if>
		<if test ="proofCode != null and proofCode !=''">
		AND		AEAL.ProofCode = #{proofCode}
		</if>
		<if test ="payDate != null and payDate !=''">
		AND		AEAL.PayDate = #{payDate}
		</if>
		<if test ="postingDate != null and postingDate !=''">
		AND		AEAL.PostingDate = #{postingDate}
		</if>
		<trim prefix="ORDER BY"  prefixOverrides =",">
		    <if test = "sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
		        , TO_CHAR(TO_DATE(NVL(AEA.ApplicationDate, AEA.RegistDate), 'YY/MM/DD'), 'YYYY.MM.DD') DESC
				, AEA.ExpenceApplicationID  DESC
				, AEAL.ProofCode
		    </if>
		  	<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
			 	, 	
				<choose>	
					<when test='sortColumn.equalsIgnoreCase("CompanyCode")'>"CompanyCode"</when>
					<when test='sortColumn.equalsIgnoreCase("ApplicationTitle")'>"ApplicationTitle"</when>
					<when test='sortColumn.equalsIgnoreCase("RegisterName")'>"RegisterName"</when>
					<when test='sortColumn.equalsIgnoreCase("ApplicationStatusName")'>"ApplicationStatusName"</when>
					<when test='sortColumn.equalsIgnoreCase("DocNo")'>"DocNo"</when>
					<when test='sortColumn.equalsIgnoreCase("ApplicationDate")'>"ApplicationDate"</when>
					<when test='sortColumn.equalsIgnoreCase("DocPayDate")'>"DocPayDate"</when>
					<when test='sortColumn.equalsIgnoreCase("DocPostingDate")'>"DocPostingDate"</when>
					<when test='sortColumn.equalsIgnoreCase("VendorName")'>"VendorName"</when>
					<when test='sortColumn.equalsIgnoreCase("TaxAmount")'>"TaxAmount"</when>
					<when test='sortColumn.equalsIgnoreCase("RepAmount")'>"RepAmount"</when>
					<when test='sortColumn.equalsIgnoreCase("AmountSum")'>"AmountSum"</when>
					<when test='sortColumn.equalsIgnoreCase("ProofCodeName")'>"ProofCodeName"</when>
					<when test='sortColumn.equalsIgnoreCase("DocCnt")'>"DocCnt"</when>
				</choose>	
				<choose>	
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>	
			</if>
		</trim>
		<include refid="oracle.include.pagingFooter" />
	</select>
	
	<select id="selectExpenceApplicationReviewListCnt" resultType="java.lang.Long">
		/*
			expenceApplication.selectExpenceApplicationReviewListCnt
		*/
		
		SELECT COUNT(*)
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEAL
		ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
		LEFT OUTER JOIN act_vendor VD
		ON AEAL.VendorNo = VD.VendorNo and AEA.CompanyCode = VD.CompanyCode
		LEFT OUTER JOIN sys_object_user USR
		ON AEA.RegisterID = USR.UserCode
		LEFT OUTER JOIN act_card_receipt CR
		ON AEAL.CardUID = CR.ReceiptID
		LEFT OUTER JOIN act_taxinvoice ATI
		ON AEAL.TaxUID = ATI.TaxInvoiceID
		LEFT OUTER JOIN act_receipt AR
		ON AEAL.ReceiptID = AR.ReceiptID
		WHERE 1=1
	 		AND AEA.ApplicationStatus = 'E'
		<choose>
			<when test="searchText != null and searchText !=''">
			    <choose>
				    <when test="searchType == 'title'.toString()">
			AND		AEA.ApplicationTitle		LIKE '%' || #{searchText} || '%'
				    </when>
				    <when test="searchType == 'user'.toString()">
			AND		USR.DisplayName		LIKE '%' || #{searchText} || '%'
				    </when>
				    <when test="searchType == 'docno'.toString()">
			AND		AEAL.DocNo			LIKE '%' || #{searchText} || '%'
				    </when>
				</choose>
			</when>
		</choose>
		<if test ="companyCode != null and companyCode !=''">
		AND		AEA.CompanyCode = #{companyCode}
		</if>
		<if test ="proofCode != null and proofCode !=''">
		AND		AEAL.ProofCode = #{proofCode}
		</if>
		<if test ="payDate != null and payDate !=''">
		AND		AEAL.PayDate = #{payDate}
		</if>
		<if test ="postingDate != null and postingDate !=''">
		AND		AEAL.PostingDate = #{postingDate}
		</if>
	</select>
		
	<select id="getExpenceApplicationSaveIDs" parameterType="cmap" resultType="cmap">
	    /*
 	    	expenceApplication.getExpenceApplicationSaveCnts
 	    */
		SELECT	COUNT(*) AS CNT
			,	EA.ExpenceApplicationID AS "ExpenceApplicationID"
			,	EL.ExpenceApplicationListID AS "ExpenceApplicationListID"
			,	ED.ExpenceApplicationDivID AS "ExpenceApplicationDivID"
		FROM	(	SELECT	ExpenceApplicationID
					FROM	act_expence_application
					WHERE	InterfaceKeyID	= #{interfaceKeyID}
					) EA
			,	(	SELECT	ExpenceApplicationListID
					FROM	act_expence_application_list
					WHERE	InterfaceKeyID	= #{interfaceKey_list}
					) EL
			,	(	SELECT	ExpenceApplicationDivID
					FROM	act_expence_application_div
					WHERE	InterfaceKeyID	= #{interfaceKey_Div}
					) ED
    	GROUP BY ExpenceApplicationID, ExpenceApplicationListID, ExpenceApplicationDivID
	</select>
	
	<insert id="expenceApplicationInterfaceInsert" parameterType="cmap">
	    /*
 	    	expenceApplication.expenceApplicationInterfaceInsert
 	    */
		INSERT INTO act_expence_application (
				CompanyCode
			,	ApplicationTitle
			,	ApplicationType
			,	ApplicationStatus
			,	ApplicationDate
			,	RequestType
			,	ProcessID
			,	Ur_code
			,	Comment
			,	InterfaceKeyID
			,	RegisterID
			,	RegistDate
			,	ModifierID
			,	ModifyDate
			, Sub_UR_Code
			, Sub_UR_Info
		)VALUES(
				#{companyCode}			/*회사코드*/
			,	#{applicationTitle}		/*신청제목*/
			,	#{applicationType}		/*신청유형*/ 
			,	#{applicationStatus}	/*신청상태*/
			,	#{applicationDate}		/*신청일*/
			,	#{requestType}			/*신청서구분*/
			,	#{processID}			/*결재 Process ID*/
			,	#{ur_code}				/*결재행위자*/
			,	#{comment}				/*결재내용(반려사유포함)*/
			,	#{interfaceKeyID}
			,	#{SessionUser}
			,	SYSDATE
			,	#{SessionUser}
			,	SYSDATE
			, #{Sub_UR_Code}
			, #{Sub_UR_Info}
		)
		<selectKey keyProperty="expenceApplicationID" resultType="Integer" order="AFTER">
		    SELECT act_expence_application_Expenc.currval  FROM DUAL
		</selectKey>
	</insert>
	
	<update id="expenceApplicationInterfaceUpdate" parameterType="cmap">
	    /*
 	    	expenceApplication.expenceApplicationInterfaceUpdate
 	    */
 	    UPDATE act_expence_application
 	    	SET
 	    		companyCode			= #{companyCode}		/*회사코드*/
			,	applicationTitle	= #{applicationTitle}	/*신청제목*/
			,	applicationType		= #{applicationType}	/*신청유형*/
			,	applicationStatus	= #{applicationStatus}	/*신청상태*/
			,	applicationDate		= #{applicationDate}	/*신청일*/
			,	processID			= #{processID}			/*결재 Process ID*/
			,	ur_code				= #{ur_code}			/*결재행위자*/
			,	comment				= #{comment}			/*결재내용(반려사유포함)*/
			,	ModifierID			= #{SessionUser}
			,	ModifyDate			= SYSDATE
 	    WHERE	InterfaceKeyID	= #{interfaceKeyID}
	</update>
	
	<insert id="expenceApplicationListInterfaceInsert" parameterType="cmap">
	    /*
 	    	expenceApplication.expenceApplicationListInterfaceInsert
 	    */
 	    INSERT INTO act_expence_application_list (
 	    		ExpenceApplicationID
	 	    ,	proofDate			/*증빙일자*/
			,	proofCode			/*증빙타입*/
			,	cardUID		/*카드승인번호*/
			,	cashUID	/*현금영수증승인번호*/
			,	taxUID	/*세금계산서승인번호*/
			,	receiptID			/*모바일영수증ID*/
			,	postingDate			/*전기일자*/
			,	taxType				/*세금유형*/
			,	taxCode				/*세금코드*/
			,	payAdjustMethod		/*정산방법*/
			,	payMethod			/*지급방법*/
			,	payDate				/*지급일자*/
			,	isWithholdingTax	/*원천세여부*/
			,	incomeTax			/*소득세유형*/
			,	localTax			/*지방세유형*/
			,	vendorNo			/*거래처등록번호*/
			,	personalCardNo		/*개인카드번호*/
			,	totalAmount			/*합계액*/
			,	docNo				/*전표번호*/
			,	docPostingDate		/*전표전기일자*/
			,	docPayDate			/*전표지급일자*/
			,	InterfaceKeyID
			,	RegisterID
			,	RegistDate
			,	ModifierID
			,	ModifyDate
			,	ReservedStr1
			,	ReservedStr2
			,	ReservedStr3
			,	ReservedStr4
			,	ReservedStr5
			,	ReservedInt1
			,	ReservedInt2
		)VALUES(
				#{expenceApplicationID}
			,	#{proofDate}			/*증빙일자*/
			,	#{proofCode}			/*증빙타입*/
			,	#{cardUID}		/*카드승인번호*/
			,	#{cashUID}	/*현금영수증승인번호*/
			,	#{taxUID}		/*세금계산서승인번호*/
			,	#{receiptID}			/*모바일영수증ID*/
			,	#{postingDate}			/*전기일자*/
			,	#{taxType}				/*세금유형*/
			,	#{taxCode}				/*세금코드*/
			,	#{payAdjustMethod}		/*정산방법*/
			,	#{payMethod}			/*지급방법*/
			,	#{payDate}				/*지급일자*/
			,	#{isWithholdingTax}		/*원천세여부*/
			,	#{incomeTax}			/*소득세유형*/
			,	#{localTax}				/*지방세유형*/
			,	#{vendorNo}				/*거래처등록번호*/
			,	#{personalCardNo}		/*개인카드번호*/
			,	#{totalAmount}			/*합계액*/
			,	#{docNo}				/*전표번호*/
			,	#{docPostingDate}		/*전표전기일자*/
			,	#{docPayDate}			/*전표지급일자*/
			,	#{interfaceKey_list}
			,	#{SessionUser}
			,	SYSDATE
			,	#{SessionUser}
			,	SYSDATE
			,	#{ReservedStr1}
			,	#{ReservedStr2}
			,	#{ReservedStr3}
			,	#{ReservedStr4}
			,	#{ReservedStr5}
			,	#{ReservedInt1}
			,	#{ReservedInt2}
		)
		<selectKey keyProperty="expenceApplicationListID" resultType="Integer" order="AFTER">
		    SELECT act_expence_application_list_E.currval  FROM DUAL
		</selectKey>
	</insert>
	
	<update id="expenceApplicationListInterfaceUpdate" parameterType="cmap">
	    /*
 	    	expenceApplication.expenceApplicationListInterfaceUpdate
 	    */
 	    UPDATE act_expence_application_list
 	    	SET
 	    		ProofDate			=	#{proofDate}			/*증빙일자*/
			,	ProofCode			=	#{proofCode}			/*증빙타입*/
			,	CardUID		=	#{cardUID}		/*카드승인번호*/
			,	CashUID	=	#{cashUID}	/*현금영수증승인번호*/
			,	TaxUID	=	#{taxUID}		/*세금계산서승인번호*/
			,	ReceiptID			=	#{receiptID}			/*모바일영수증ID*/
			,	PostingDate			=	#{postingDate}			/*전기일자*/
			,	TaxType				=	#{taxType}				/*세금유형*/
			,	TaxCode				=	#{taxCode}				/*세금코드*/
			,	PayAdjustMethod		=	#{payAdjustMethod}		/*정산방법*/
			,	PayMethod			=	#{payMethod}			/*지급방법*/
			,	PayDate				=	#{payDate}				/*지급일자*/
			,	IsWithholdingTax	=	#{isWithholdingTax}		/*원천세여부*/
			,	IncomeTax			=	#{incomeTax}			/*소득세유형*/
			,	LocalTax			=	#{localTax}				/*지방세유형*/
			,	VendorNo			=	#{vendorNo}				/*거래처등록번호*/
			,	PersonalCardNo		=	#{personalCardNo}		/*개인카드번호*/
			,	TotalAmount			=	#{totalAmount}			/*합계액*/
			,	DocNo				=	#{docNo}				/*전표번호*/
			,	DocPostingDate		=	#{docPostingDate}		/*전표전기일자*/
			,	DocPayDate			=	#{docPayDate}			/*전표지급일자*/
			,	ModifierID		= #{SessionUser}
			,	ModifyDate		= SYSDATE
			,	ReservedStr1		= 	#{ReservedStr1}
			,	ReservedStr2		= 	#{ReservedStr2}
			,	ReservedStr3		= 	#{ReservedStr3}
			,	ReservedStr4		= 	#{ReservedStr4}
			,	ReservedStr5		= 	#{ReservedStr5}
			,	ReservedInt1		= 	#{ReservedInt1}
			,	ReservedInt2		= 	#{ReservedInt2}
 	    WHERE	InterfaceKeyID	= #{interfaceKey_list}
	</update>
	
	<insert id="expenceApplicationDivInterfaceInsert" parameterType="cmap">
	    /*
 	    	expenceApplication.expenceApplicationDivInterfaceInsert
 	    */
 	    INSERT INTO act_expence_application_div (
 	    		ExpenceApplicationListID
 	    	,	AccountCode
			,	StandardBriefID
			,	CostCenterCode
			,	IOCode
			,	Amount
			,	UsageComment
			,	InterfaceKeyID
			,	RegisterID
			,	RegistDate
			,	ReservedStr1
			,	ReservedStr2
			,	ReservedStr3
			,	ReservedStr4
			,	ReservedStr5
			,	ReservedInt1
			,	ReservedInt2
		)VALUES(
				#{expenceApplicationListID}
			,	#{accountCode}		/*계정과목*/
			,	#{standardBriefID}	/*표준적요ID*/
			,	#{costCenterCode}	/*코스트센터코드*/
			,	#{iOCode}			/*IO코드*/
			,	#{amount}			/*금액*/
			,	#{usageComment}		/*사용내역*/
			,	#{interfaceKey_Div}
			,	#{SessionUser}
			,	SYSDATE
			,	#{ReservedStr1_Div}
			,	#{ReservedStr2_Div}
			,	#{ReservedStr3_Div}
			,	#{ReservedStr4_Div}
			,	#{ReservedStr5_Div}
			,	#{ReservedInt1_Div}
			,	#{ReservedInt2_Div}
		)
	</insert>
	
	<update id="expenceApplicationDivInterfaceUpdate" parameterType="cmap">
	    /*
 	    	expenceApplication.expenceApplicationDivInterfaceUpdate
 	    */
 	    UPDATE act_expence_application_div
 	    	SET
				AccountCode		= #{accountCode}		/*계정과목*/
			,	StandardBriefID	= #{standardBriefID}	/*표준적요ID*/
			,	CostCenterCode	= #{costCenterCode}		/*코스트센터코드*/
			,	IOCode			= #{iOCode}				/*IO코드*/
			,	Amount			= #{amount}				/*금액*/
			,	UsageComment	= #{usageComment}		/*사용내역*/
			,	ReservedStr1	= #{ReservedStr1_Div}
			,	ReservedStr2	= #{ReservedStr2_Div}
			,	ReservedStr3	= #{ReservedStr3_Div}
			,	ReservedStr4	= #{ReservedStr4_Div}
			,	ReservedStr5	= #{ReservedStr5_Div}
			,	ReservedInt1	= #{ReservedInt1_Div}
			,	ReservedInt2	= #{ReservedInt2_Div}
 	    WHERE	InterfaceKeyID	= #{interfaceKey_Div}
	</update>
	
	<select id="getInterFaceListEVIDENCE" parameterType="cmap" resultType="cmap">
		SELECT	#{interFaceSetType}	AS "InterFaceSetType"
			,	CASE	WHEN NVL(NULLIF(EA.InterfaceKeyID,''),'NODATA') = 'NODATA'
						THEN TO_CHAR(EA.ExpenceApplicationID)
						ELSE TO_CHAR(EA.InterfaceKeyID)
				END	AS "FORM_INST_ID"
			,	CASE	WHEN NVL(NULLIF(EL.InterfaceKeyID,''),'NODATA') = 'NODATA'
						THEN TO_CHAR(EL.ExpenceApplicationListID)
						ELSE SUBSTR(EL.InterfaceKeyID,LENGTH(EA.InterfaceKeyID)+1)
				END	AS "EVIDENCE_INDEX"
			/*act_expence_application*/
			,	EA.applicationTitle	AS "applicationTitle"			/*신청제목*/
			,	EA.applicationDate AS "applicationDate"				/*신청일*/
			,	EA.ur_code		AS "ur_code"				/*결재행위자*/
			
			/*act_expence_application_list*/
			,	EL.ExpenceApplicationID AS "ExpenceApplicationID"
			,	EL.ProofDate AS "ProofDate"					/*증빙일자*/
			,	EL.ProofCode AS "ProofCode"					/*증빙타입*/
			,	EL.CardUID AS "CardUID"			/*카드승인번호*/
			,	EL.TaxType AS "TaxType"			/*세금유형*/
			,	EL.TaxCode AS "TaxCode"			/*세금코드*/
			,	EL.PayAdjustMethod AS "PayAdjustMethod"				/*정산방법*/
			,	EL.PayMethod	AS "PayMethod"				/*지급방법*/
			,	EL.VendorNo		AS "VendorNo"				/*거래처등록번호*/
			,	EL.TotalAmount	AS "TotalAmount"				/*합계액*/
			,	EL.DocNo		AS "DocNo"				/*전표번호*/
		FROM	act_expence_application EA
		LEFT OUTER JOIN	act_expence_application_list	EL 
			ON EA.ExpenceApplicationID = EL.ExpenceApplicationID
		WHERE	
		<choose>
			<when test="keyIDs != null">
				<foreach collection="keyIDs" item="item" index="index" separator="," open="EA.ExpenceApplicationID IN (" close=")">
					#{item}
				</foreach>
			</when>
			<otherwise>
				1=2
			</otherwise>
		</choose>
	</select>
	
	<select id="getInterFaceListEVIDENCEDIVISION" parameterType="cmap" resultType="cmap">
		SELECT	#{interFaceSetType}	AS "InterFaceSetType"
			,	CASE	WHEN NVL(NULLIF(EA.InterfaceKeyID,''),'NODATA') = 'NODATA'
						THEN TO_CHAR(EA.ExpenceApplicationID)
						ELSE TO_CHAR(EA.InterfaceKeyID)
				END	AS "FORM_INST_ID"
			,	CASE	WHEN NVL(NULLIF(LD.EL_InterfaceKeyID,''),'NODATA') = 'NODATA'
						THEN TO_CHAR(LD.ExpenceApplicationListID)
						ELSE SUBSTR(LD.EL_InterfaceKeyID,LENGTH(EA.InterfaceKeyID)+1)
				END	AS "EVIDENCE_INDEX"
			,	CASE	WHEN NVL(NULLIF(LD.ED_InterfaceKeyID,''),'NODATA') = 'NODATA'
						THEN TO_CHAR(LD.ExpenceApplicationDivID)
						ELSE SUBSTR(LD.ED_InterfaceKeyID,LENGTH(EA.InterfaceKeyID)+1)
				END	AS "DIVISION_INDEX"
			/*act_expence_application*/
			,	EA.applicationTitle AS "applicationTitle"				/*신청제목*/
			,	EA.applicationDate AS "applicationDate"				/*신청일*/
			,	EA.ur_code		AS "ur_code"				/*결재행위자*/

			/*act_expence_application_list*/
			,	LD.proofDate	AS "proofDate"				/*증빙일자*/
			,	LD.proofCode	AS "proofCode"				/*증빙타입*/
			,	LD.cardUID		AS "cardUID"		/*카드승인번호*/
			,	LD.taxType		AS "taxType"				/*세금유형*/
			,	LD.taxCode		AS "taxCode"				/*세금코드*/
			,	LD.payAdjustMethod AS "payAdjustMethod"				/*정산방법*/
			,	LD.payMethod	AS "payMethod"				/*지급방법*/
			,	LD.vendorNo		AS "vendorNo"				/*거래처등록번호*/
			,	LD.totalAmount	AS "totalAmount"				/*합계액*/
			,	LD.docNo		AS "docNo"				/*전표번호*/

			/*act_expence_application_div*/
			,	LD.accountCode	AS "accountCode"				/*계정과목*/
			,	LD.costCenterCode AS "costCenterCode"				/*코스트센터코드*/
			,	LD.amount		AS "amount"				/*금액*/
			,	LD.usageComment	 AS "usageComment"			/*사용내역*/
		FROM	act_expence_application EA
		LEFT OUTER JOIN (	SELECT	/*act_expence_application_list*/
									EL.ExpenceApplicationID
								,	EL.ExpenceApplicationListID
								,	EL.ProofDate					/*증빙일자*/
								,	EL.ProofCode					/*증빙타입*/
								,	EL.CardUID				/*카드승인번호*/
								,	EL.TaxType						/*세금유형*/
								,	EL.TaxCode						/*세금코드*/
								,	EL.PayAdjustMethod				/*정산방법*/
								,	EL.PayMethod					/*지급방법*/
								,	EL.VendorNo						/*거래처등록번호*/
								,	EL.TotalAmount					/*합계액*/
								,	EL.DocNo						/*전표번호*/
								,	EL.InterfaceKeyID				AS EL_InterfaceKeyID
								/*act_expence_application_div*/
								,	ED.ExpenceApplicationDivID
								,	ED.accountCode					/*계정과목*/
								,	ED.costCenterCode				/*코스트센터코드*/
								,	ED.amount						/*금액*/
								,	ED.usageComment					/*사용내역*/
								,	ED.InterfaceKeyID				AS ED_InterfaceKeyID
							FROM	act_expence_application_list EL
							LEFT OUTER JOIN act_expence_application_div ED
								ON	EL.ExpenceApplicationListID	= ED.ExpenceApplicationListID
						)	LD
			ON EA.ExpenceApplicationID = LD.ExpenceApplicationID
		WHERE	
		<choose>
			<when test="keyIDs != null">
				<foreach collection="keyIDs" item="item" index="index" separator="," open="EA.ExpenceApplicationID IN (" close=")">
					#{item}
				</foreach>
			</when>
			<otherwise>
				1=2
			</otherwise>
		</choose>
	</select>
	
	
	<select id="selectCapitalSpendingStatus" parameterType="cmap" resultType="cmap">
		<include refid="oracle.include.pagingHeader" />
		SELECT 
			A.ExpenceApplicationID AS "ExpenceApplicationID"
			, A.CompanyCode AS "CompanyCode"
			, FN_GETACTBASECODENAME('CompanyCode', A.CompanyCode, #{companyCode}) AS "CompanyName"
			, A.ProcessID AS "ProcessID"
			, A.FormInstID AS "FormInstID"
			, A.RequestType AS "RequestType"
			, A.RequestTypeName AS "RequestTypeName"
			, A.ApplicationTitle AS "ApplicationTitle"
			, A.ApplicationDate AS "ApplicationDate"
			, A.RegistDate AS "RegistDate"
			, A.RegisterID AS "RegisterID"
			, A.RegisterName AS "RegisterName"
			, A.ExpenceApplicationListID AS "ExpenceApplicationListID"
			, A.ProofCode AS "ProofCode"
			, FN_GETACTBASECODENAME('ProofCode', A.ProofCode, #{companyCode}) AS "ProofCodeName"	
			, A.CardUID  AS "CardUID"
			, A.CashUID AS "CashUID"
			, A.TaxUID AS "TaxUID"
			, A.ReceiptID AS "ReceiptID"
			, A.VendorName AS "VendorName"
			, A.TotalAmount AS "TotalAmount"
			, A.AmountSum AS "AmountSum"
			, A.FileCnt AS "FileCnt"
			, A.RealPayDate AS "RealPayDate"
			, NVL(A.RealPayAmount, A.AmountSum) AS "RealPayAmount"  
			, A.CapitalStatus AS "CapitalStatus"
			, FN_GETACTBASECODENAME('CapitalStatus', A.CapitalStatus, #{companyCode}) AS "CapitalStatusName"	
			, A.CapitalProcessID AS "CapitalProcessID"
			, A.CapitalFormInstID AS "CapitalFormInstID"
			, A.ReceiptFileID AS "ReceiptFileID"
		FROM(
			SELECT
				AEA.ExpenceApplicationID
				, AEA.CompanyCode 
				, AEA.ProcessID
				, (SELECT FormInstID FROM jwf_process P WHERE AEA.ProcessID = P.ProcessID) AS FormInstID
				, AEA.RequestType
				, AEF.FormName AS RequestTypeName
				, AEA.ApplicationTitle
				, AEA.ApplicationDate
				, AEA.RegistDate
				, AEA.RegisterID
				, USR.DisplayName AS RegisterName
				, AEAL.ExpenceApplicationListID
				, AEAL.ProofCode			
				, AEAL.CardUID
				, AEAL.CashUID
				, AEAL.TaxUID
				, AEAL.ReceiptID
				, NVL(
					NVL(VD.VendorName, ATI.InvoicerCorpName), 
					(SELECT DisplayName FROM sys_object_user WHERE UserCode = (NVL(AEAL.VendorNo, AEA.RegisterID)))
				) AS VendorName		
				, AEAL.TotalAmount
				, (
					SELECT 
					CASE 
						WHEN (AEAL.ProofCode = 'TaxBill' AND SUM(AEAD.Amount) != AEAL.TotalAmount) THEN SUM(AEAD.Amount) + AEAL.TaxAmount 
						ELSE SUM(AEAD.Amount) 
					END
					FROM act_expence_application_div AEAD
					WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
				) AS AmountSum
				, (
					SELECT COUNT(*) 
					FROM act_expence_application_file AEAF
					WHERE AEAL.ExpenceApplicationListID = AEAF.ExpenceApplicationListID
				) AS FileCnt		
				, TO_CHAR(TO_DATE(NVL(AEAL.RealPayDate, AEAL.PayDate), 'YYYYMMDD'), 'YYYY.MM.DD') AS RealPayDate
				, AEAL.RealPayAmount
				, AEAL.CapitalStatus
				, AEAL.CapitalProcessID
				, (SELECT FormInstID FROM jwf_process P WHERE AEAL.CapitalProcessID = P.ProcessID) AS CapitalFormInstID
				, AR.ReceiptFileID
			FROM act_expence_application AEA
			INNER JOIN act_expence_application_list AEAL
			ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
			LEFT OUTER JOIN act_vendor VD
			ON AEAL.VendorNo = VD.VendorNo and AEA.CompanyCode = VD.CompanyCode
			LEFT OUTER JOIN sys_object_user USR
			ON AEA.RegisterID = USR.UserCode
			LEFT OUTER JOIN act_expence_forms AEF
			ON AEA.RequestType = AEF.FormCode and AEF.CompanyCode = AEA.CompanyCode
			LEFT OUTER JOIN act_taxinvoice ATI
			ON AEAL.TaxUID = ATI.TaxInvoiceID
			LEFT OUTER JOIN act_receipt AR
			ON AEAL.ReceiptID = AR.ReceiptID
			WHERE 1=1
			AND AEAL.CapitalStatus IS NOT NULL
			<if test ="companyCode != null and companyCode !=''">
				AND	AEA.CompanyCode = #{companyCode}
			</if>
		  	<if test="ApplicationTitle != null and ApplicationTitle != ''">
			 	AND UPPER(AEA.ApplicationTitle) LIKE UPPER('%' || #{ApplicationTitle} || '%')
			</if>		  	
		  	<if test="RegisterNm != null and RegisterNm != ''">
			 	AND UPPER(USR.DisplayName) LIKE UPPER('%' || #{RegisterNm} || '%')
			</if>
		  	<if test="ProofCode != null and ProofCode != ''">
			 	AND AEAL.ProofCode = #{ProofCode}
			</if>	
		  	<if test="RequestType != null and RequestType != ''">
			 	AND AEA.RequestType = #{RequestType}
			</if>	
		  	<if test="CapitalStatus != null and CapitalStatus != ''">
			 	AND AEAL.CapitalStatus = #{CapitalStatus}
			</if>	
			<if test="RealPayDate != null and RealPayDate != ''">
			    AND (CASE WHEN AEAL.RealPayDate IS NULL THEN AEAL.PayDate ELSE AEAL.RealPayDate END) = #{RealPayDate}
			</if>	
		  	<if test="VendorName != null and VendorName != ''">
			 	AND (
			 		UPPER(VD.VendorName) LIKE UPPER('%' || #{VendorName} || '%')
			 		OR UPPER(ATI.InvoicerCorpName) LIKE UPPER('%' || #{VendorName} || '%')
			 	)
			</if>
		  	<if test="CostCenterCode != null and CostCenterCode != ''">
		  		AND #{CostCenterCode} IN (
		  			SELECT CostCenterCode 
		  			FROM act_expence_application_div AEAD
		  			WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
		  		)
			</if>
		  	<if test="AccountCode != null and AccountCode != ''">
		  		AND #{AccountCode} IN (
		  			SELECT AccountCode 
		  			FROM act_expence_application_div AEAD
		  			WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
		  		)
			</if>
		  	<if test="StandardBriefID != null and StandardBriefID != ''">
		  		AND #{StandardBriefID} IN (
		  			SELECT StandardBriefID 
		  			FROM act_expence_application_div AEAD
		  			WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
		  		)
			</if>
		  	<if test="IOCode != null and IOCode != ''">
		  		AND #{IOCode} IN (
		  			SELECT IOCode 
		  			FROM act_expence_application_div AEAD
		  			WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
		  		)
			</if>
		) A
		<trim prefix="ORDER BY"  prefixOverrides =",">
			 <if test = "sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
		        NVL(A.ApplicationDate, A.RegistDate) DESC
				, A.ExpenceApplicationID DESC
				, A.RealPayDate 
		    </if>
		  	<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
				<choose>	
					<when test='sortColumn.equalsIgnoreCase("CompanyCode")'>"CompanyCode"</when>
					<when test='sortColumn.equalsIgnoreCase("ApplicationTitle")'>"ApplicationTitle"</when>
					<when test='sortColumn.equalsIgnoreCase("RegisterName")'>"RegisterName"</when>
					<when test='sortColumn.equalsIgnoreCase("RequestTypeName")'>"RequestTypeName"</when>
					<when test='sortColumn.equalsIgnoreCase("CapitalStatusName")'>"CapitalStatusName"</when>
					<when test='sortColumn.equalsIgnoreCase("RealPayDate")'>"RealPayDate"</when>
					<when test='sortColumn.equalsIgnoreCase("ProofCodeName")'>"ProofCodeName"</when>
					<when test='sortColumn.equalsIgnoreCase("VendorName")'>"VendorName"</when>
					<when test='sortColumn.equalsIgnoreCase("TotalAmount")'>"TotalAmount"</when>
					<when test='sortColumn.equalsIgnoreCase("AmountSum")'>"AmountSum"</when>
					<when test='sortColumn.equalsIgnoreCase("RealPayAmount")'>"RealPayAmount"</when>
					<when test='sortColumn.equalsIgnoreCase("FileCnt")'>"FileCnt"</when>
					<when test='sortColumn.equalsIgnoreCase("DocCnt")'>"DocCnt"</when>
				</choose>	
				<choose>	
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>	
			</if>
		</trim>
		<include refid="oracle.include.pagingFooter" />
	</select>
	
	<select id="selectCapitalSpendingStatusCnt" parameterType="cmap" resultType="java.lang.Long">
		SELECT COUNT(*)
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEAL
		ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
		LEFT OUTER JOIN act_vendor VD
		ON AEAL.VendorNo = VD.VendorNo and AEA.CompanyCode = VD.CompanyCode
		LEFT OUTER JOIN sys_object_user USR
		ON AEA.RegisterID = USR.UserCode
		LEFT OUTER JOIN act_expence_forms AEF
		ON AEA.RequestType = AEF.FormCode and AEF.CompanyCode = AEA.CompanyCode
		LEFT OUTER JOIN act_taxinvoice ATI
		ON AEAL.TaxUID = ATI.TaxInvoiceID
		LEFT OUTER JOIN act_receipt AR
		ON AEAL.ReceiptID = AR.ReceiptID
		WHERE 1=1
		AND AEAL.CapitalStatus IS NOT NULL
		<if test ="companyCode != null and companyCode !=''">
			AND	AEA.CompanyCode = #{companyCode}
		</if>
	  	<if test="ApplicationTitle != null and ApplicationTitle != ''">
		 	AND UPPER(AEA.ApplicationTitle) LIKE UPPER('%' || #{ApplicationTitle} || '%')
		</if>		  	
	  	<if test="RegisterNm != null and RegisterNm != ''">
		 	AND UPPER(USR.DisplayName) LIKE UPPER('%' || #{RegisterNm} || '%')
		</if>
	  	<if test="ProofCode != null and ProofCode != ''">
		 	AND AEAL.ProofCode = #{ProofCode}
		</if>	
	  	<if test="CapitalStatus != null and CapitalStatus != ''">
		 	AND AEAL.CapitalStatus = #{CapitalStatus}
		</if>	
		<if test="RealPayDate != null and RealPayDate != ''">
		    AND (CASE WHEN AEAL.RealPayDate IS NULL THEN AEAL.PayDate ELSE AEAL.RealPayDate END) = #{RealPayDate}
		</if>	
	  	<if test="VendorName != null and VendorName != ''">
		 	AND (
		 		UPPER(VD.VendorName) LIKE UPPER('%' || #{VendorName} || '%')
		 		OR UPPER(ATI.InvoicerCorpName) LIKE UPPER('%' || #{VendorName} || '%')
		 	)
		</if>
	  	<if test="CostCenterCode != null and CostCenterCode != ''">
	  		AND #{CostCenterCode} IN (
	  			SELECT CostCenterCode 
	  			FROM act_expence_application_div AEAD
	  			WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
	  		)
		</if>
	  	<if test="AccountCode != null and AccountCode != ''">
	  		AND #{AccountCode} IN (
	  			SELECT AccountCode 
	  			FROM act_expence_application_div AEAD
	  			WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
	  		)
		</if>
	  	<if test="StandardBriefID != null and StandardBriefID != ''">
	  		AND #{StandardBriefID} IN (
	  			SELECT StandardBriefID 
	  			FROM act_expence_application_div AEAD
	  			WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
	  		)
		</if>
	  	<if test="IOCode != null and IOCode != ''">
	  		AND #{IOCode} IN (
	  			SELECT IOCode 
	  			FROM act_expence_application_div AEAD
	  			WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
	  		)
		</if>
	</select>
	
	<select id="selectCapitalSpendingStatusExcel" parameterType="cmap" resultType="cmap">
		SELECT 
			A.ExpenceApplicationID AS "ExpenceApplicationID"
			, A.CompanyCode AS "CompanyCode"
			, FN_GETACTBASECODENAME('CompanyCode', A.CompanyCode, #{companyCode}) AS "CompanyName"
			, A.ProcessID AS "ProcessID"
			, A.RequestType AS "RequestType"
			, A.RequestTypeName AS "RequestTypeName"
			, A.ApplicationTitle AS "ApplicationTitle"
			, A.ApplicationDate AS "ApplicationDate"
			, A.RegistDate AS "RegistDate"
			, A.RegisterID AS "RegisterID"
			, A.RegisterName AS "RegisterName"
			, A.ExpenceApplicationListID AS "ExpenceApplicationListID"
			, A.ProofCode AS "ProofCode"
			, FN_GETACTBASECODENAME('ProofCode', A.ProofCode, #{companyCode}) AS "ProofCodeName"	
			, A.CardUID  AS "CardUID"
			, A.CashUID AS "CashUID"
			, A.TaxUID AS "TaxUID"
			, A.ReceiptID AS "ReceiptID"
			, A.VendorName AS "VendorName"
			, A.TotalAmount AS "TotalAmount"
			, A.AmountSum AS "AmountSum"
			, A.FileCnt AS "FileCnt"
			, A.RealPayDate AS "RealPayDate"
			, NVL(A.RealPayAmount, A.AmountSum) AS "RealPayAmount"  
			, A.CapitalStatus AS "CapitalStatus"
			, FN_GETACTBASECODENAME('CapitalStatus', A.CapitalStatus, #{companyCode}) AS "CapitalStatusName"	
			, A.CapitalProcessID AS "CapitalProcessID"
			, A.ReceiptFileID AS "ReceiptFileID"
		FROM(
			SELECT
				AEA.ExpenceApplicationID 
				, AEA.CompanyCode
				, AEA.ProcessID
				, AEA.RequestType
				, AEF.FormName AS RequestTypeName
				, AEA.ApplicationTitle
				, AEA.ApplicationDate
				, AEA.RegistDate
				, AEA.RegisterID
				, USR.DisplayName AS RegisterName
				, AEAL.ExpenceApplicationListID
				, AEAL.ProofCode			
				, AEAL.CardUID
				, AEAL.CashUID
				, AEAL.TaxUID
				, AEAL.ReceiptID
				, NVL(
					NVL(VD.VendorName, ATI.InvoicerCorpName), 
					(SELECT DisplayName FROM sys_object_user WHERE UserCode = (NVL(AEAL.VendorNo, AEA.RegisterID)))
				) AS VendorName		
				, AEAL.TotalAmount
				, (
					SELECT 
					CASE 
						WHEN (AEAL.ProofCode = 'TaxBill' AND SUM(AEAD.Amount) != AEAL.TotalAmount) THEN SUM(AEAD.Amount) + AEAL.TaxAmount 
						ELSE SUM(AEAD.Amount) 
					END
					FROM act_expence_application_div AEAD
					WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
				) AS AmountSum
				, (
					SELECT COUNT(*) 
					FROM act_expence_application_file AEAF
					WHERE AEAL.ExpenceApplicationListID = AEAF.ExpenceApplicationListID
				) AS FileCnt		
				, TO_CHAR(TO_DATE(NVL(AEAL.RealPayDate, AEAL.PayDate), 'YYYYMMDD'), 'YYYY.MM.DD') AS RealPayDate
				, AEAL.RealPayAmount
				, AEAL.CapitalStatus
				, AEAL.CapitalProcessID
				, AR.ReceiptFileID
			FROM act_expence_application AEA
			INNER JOIN act_expence_application_list AEAL
			ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
			LEFT OUTER JOIN act_vendor VD
			ON AEAL.VendorNo = VD.VendorNo and AEA.CompanyCode = VD.CompanyCode
			LEFT OUTER JOIN sys_object_user USR
			ON AEA.RegisterID = USR.UserCode
			LEFT OUTER JOIN act_expence_forms AEF
			ON AEA.RequestType = AEF.FormCode and AEF.CompanyCode = AEA.CompanyCode
			LEFT OUTER JOIN act_taxinvoice ATI
			ON AEAL.TaxUID = ATI.TaxInvoiceID
			LEFT OUTER JOIN act_receipt AR
			ON AEAL.ReceiptID = AR.ReceiptID
			WHERE 1=1
			AND AEAL.CapitalStatus IS NOT NULL
			<!-- <if test ="companyCode != null and companyCode !=''">
				AND	AEA.CompanyCode = #{companyCode}
			</if> -->
		  	<if test="ApplicationTitle != null and ApplicationTitle != ''">
			 	AND UPPER(AEA.ApplicationTitle) LIKE UPPER('%' || #{ApplicationTitle} || '%')
			</if>		  	
		  	<if test="RegisterNm != null and RegisterNm != ''">
			 	AND UPPER(USR.DisplayName) LIKE UPPER('%' || #{RegisterNm} || '%')
			</if>
		  	<if test="ProofCode != null and ProofCode != ''">
			 	AND AEAL.ProofCode = #{ProofCode}
			</if>	
		  	<if test="RequestType != null and RequestType != ''">
			 	AND AEA.RequestType = #{RequestType}
			</if>	
		  	<if test="CapitalStatus != null and CapitalStatus != ''">
			 	AND AEAL.CapitalStatus = #{CapitalStatus}
			</if>	
			<if test="RealPayDate != null and RealPayDate != ''">
			    AND (CASE WHEN AEAL.RealPayDate IS NULL THEN AEAL.PayDate ELSE AEAL.RealPayDate END) = #{RealPayDate}
			</if>	
		  	<if test="VendorName != null and VendorName != ''">
			 	AND (
			 		UPPER(VD.VendorName) LIKE UPPER('%' || #{VendorName} || '%')
			 		OR UPPER(ATI.InvoicerCorpName) LIKE UPPER('%' || #{VendorName} || '%')
			 	)
			</if>
		  	<if test="CostCenterCode != null and CostCenterCode != ''">
		  		AND #{CostCenterCode} IN (
		  			SELECT CostCenterCode 
		  			FROM act_expence_application_div AEAD
		  			WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
		  		)
			</if>
		  	<if test="AccountCode != null and AccountCode != ''">
		  		AND #{AccountCode} IN (
		  			SELECT AccountCode 
		  			FROM act_expence_application_div AEAD
		  			WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
		  		)
			</if>
		  	<if test="StandardBriefID != null and StandardBriefID != ''">
		  		AND #{StandardBriefID} IN (
		  			SELECT StandardBriefID 
		  			FROM act_expence_application_div AEAD
		  			WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
		  		)
			</if>
		  	<if test="IOCode != null and IOCode != ''">
		  		AND #{IOCode} IN (
		  			SELECT IOCode 
		  			FROM act_expence_application_div AEAD
		  			WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
		  		)
			</if>
		) A
		<trim prefix="ORDER BY"  prefixOverrides =",">
			 <if test = "sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
		        NVL(A.ApplicationDate, A.RegistDate) DESC
				, A.ExpenceApplicationID DESC
				, A.RealPayDate 
		    </if>
		  	<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
				<choose>	
					<when test='sortColumn.equalsIgnoreCase("CompanyCode")'>"CompanyCode"</when>
					<when test='sortColumn.equalsIgnoreCase("ApplicationTitle")'>"ApplicationTitle"</when>
					<when test='sortColumn.equalsIgnoreCase("RegisterName")'>"RegisterName"</when>
					<when test='sortColumn.equalsIgnoreCase("RequestTypeName")'>"RequestTypeName"</when>
					<when test='sortColumn.equalsIgnoreCase("CapitalStatusName")'>"CapitalStatusName"</when>
					<when test='sortColumn.equalsIgnoreCase("RealPayDate")'>"RealPayDate"</when>
					<when test='sortColumn.equalsIgnoreCase("ProofCodeName")'>"ProofCodeName"</when>
					<when test='sortColumn.equalsIgnoreCase("VendorName")'>"VendorName"</when>
					<when test='sortColumn.equalsIgnoreCase("TotalAmount")'>"TotalAmount"</when>
					<when test='sortColumn.equalsIgnoreCase("AmountSum")'>"AmountSum"</when>
					<when test='sortColumn.equalsIgnoreCase("RealPayAmount")'>"RealPayAmount"</when>
					<when test='sortColumn.equalsIgnoreCase("FileCnt")'>"FileCnt"</when>
					<when test='sortColumn.equalsIgnoreCase("DocCnt")'>"DocCnt"</when>
				</choose>	
				<choose>	
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>	
			</if>
		</trim>
	</select>
	
	<select id="selectCapitalEditData" parameterType="cmap" resultType="cmap">
		SELECT 
			RealPayDate AS "RealPayDate"
			, NVL(RealPayAmount, AmountSum) AS "RealPayAmount"
		FROM (
			SELECT
				TO_CHAR(TO_DATE(NVL(AEAL.RealPayDate, AEAL.PayDate), 'YYYYMMDD'), 'YYYY.MM.DD') AS RealPayDate
				, RealPayAmount
				, (
					SELECT 
					CASE 
						WHEN (AEAL.ProofCode = 'TaxBill' AND SUM(AEAD.Amount) != AEAL.TotalAmount) THEN SUM(AEAD.Amount) + AEAL.TaxAmount 
						ELSE SUM(AEAD.Amount) 
					END
					FROM act_expence_application_div AEAD
					WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
				) AS AmountSum
			FROM act_expence_application_list AEAL
			WHERE 1=1
			<if test="expAppListID != null and expAppListID != ''">
				AND ExpenceApplicationListID = #{expAppListID}
			</if>
		) A
	</select>
	
	<update id="updateCapitalEditInfo" parameterType="cmap">
		UPDATE act_expence_application_list
		SET
			RealPayDate = #{RealPayDate ,jdbcType=VARCHAR}
			<if test="expAppListID.length == 1">
			, RealPayAmount = #{RealPayAmount ,jdbcType=VARCHAR}
			</if>
		WHERE 1=1
		AND ExpenceApplicationListID IN
		<foreach collection="expAppListID" item="item" open="(" close=")" separator=",">
			#{item ,jdbcType=INTEGER}
		</foreach>
	</update>
    
    <insert id="insertCapitalReportInfo" parameterType="cmap">
    	INSERT INTO act_capital_report
    	(
    		ProcessID,
    		Subject,
    		expAppListIDs,
    		InitiatorCodeDisplay,
    		InitiatorDisplay,
    		RealPayDate,
    		RealPayAmount,
    		AccountCode,
    		AccountName,
    		StandardBriefID,
    		StandardBriefName
    	) VALUES (
    		#{ProcessID ,jdbcType=INTEGER},
    		#{Subject ,jdbcType=VARCHAR},
    		#{strExpAppListIDs ,jdbcType=VARCHAR},
    		#{InitiatorCodeDisplay ,jdbcType=VARCHAR},
    		#{InitiatorDisplay ,jdbcType=VARCHAR},
    		#{RealPayDate ,jdbcType=VARCHAR},
    		#{RealPayAmount ,jdbcType=INTEGER},
    		(SELECT AccountCode FROM act_account WHERE AccountID = (SELECT AccountID FROM act_standard_brief WHERE StandardBriefID = #{StandardBriefID ,jdbcType=INTEGER})),
    		(SELECT AccountName FROM act_account WHERE AccountID = (SELECT AccountID FROM act_standard_brief WHERE StandardBriefID = #{StandardBriefID ,jdbcType=INTEGER})),
    		#{StandardBriefID ,jdbcType=INTEGER},
    		(SELECT StandardBriefName FROM act_standard_brief WHERE StandardBriefID = #{StandardBriefID ,jdbcType=INTEGER})
    	)
    </insert>
    
    <update id="updateIsCapitalReport" parameterType="cmap">
    	UPDATE act_expence_application_list
    	SET ReservedStr5 = 'Y'
    	WHERE 
    	<choose>
			<when test="expAppListIDs != null">
				<foreach collection="expAppListIDs" item="item" index="index" separator="," open="ExpenceApplicationListID IN (" close=")">
					#{item}
				</foreach>
			</when>
			<otherwise>
				1=2
			</otherwise>
		</choose>
    </update>
	
	<select id="getCapitalSpendingList" parameterType="cmap" resultType="cmap">
		/*
			expenceApplication.getCapitalSpendingList
		*/
		
		SELECT A.ExpenceApplicationID AS "ExpenceApplicationID"
			, A.ApplicationTitle AS "ApplicationTitle"
			, A.ProcessID AS "ProcessID"
			, A.RequestType AS "RequestType"
			, A.RequestTypeName AS "RequestTypeName"
			, A.RegisterID AS "RegisterID"
			, A.RegisterName AS "RegisterName"
			, A.ExpenceApplicationListID AS "ExpenceApplicationListID"
			, A.ProofCode AS "ProofCode"
			, FN_GETACTBASECODENAME('ProofCode', A.ProofCode, #{companyCode}) AS "ProofCodeName"
			, A.RealPayDate AS "RealPayDate"
			, A.PayMethod AS "PayMethod"
			, FN_GETACTBASECODENAME('PayMethod', A.PayMethod, #{companyCode}) AS "PayMethodName"
			, A.VendorNo AS "VendorNo"
			, A.VendorName AS "VendorName"
			, A.TotalAmount AS "TotalAmount"
			, A.AmountSum AS "AmountSum"
			, NVL(A.RealPayAmount, A.AmountSum) AS "RealPayAmount"  
			, A.StandardBriefID AS "StandardBriefID"
			, A.StandardBriefName AS "StandardBriefName"
			, A.Amount AS "Amount"
			, A.UsageComment AS "UsageComment"
		FROM (
			SELECT AEA.ExpenceApplicationID 
				, AEA.ApplicationTitle
				, AEA.ProcessID
				, AEA.RequestType
				, AEF.FormName AS RequestTypeName
				, AEA.RegisterID
				, USR.DisplayName RegisterName
				, AEAL.ExpenceApplicationListID
				, AEAL.ProofCode
				, TO_CHAR(TO_DATE(NVL(AEAL.RealPayDate, AEAL.PayDate), 'YYYYMMDD'), 'YYYY.MM.DD') AS RealPayDate
				, CASE 
					WHEN AEAL.PayMethod IS NULL THEN CASE WHEN AEAL.ProofCode = 'CorpCard' THEN 'D' ELSE 'C' END
					ELSE AEAL.PayMethod
				  END AS PayMethod
				, NVL(AEAL.VendorNo, AEA.RegisterID) AS VendorNo
				, NVL(NVL(VD.VendorName, ATI.InvoicerCorpName), (SELECT DisplayName FROM sys_object_user WHERE UserCode = (NVL(AEAL.VendorNo, AEA.RegisterID)))) AS VendorName
				, AEAL.TotalAmount
				, (
					SELECT 
					CASE 
						WHEN (AEAL.ProofCode = 'TaxBill' AND SUM(AEAD.Amount) != AEAL.TotalAmount) THEN SUM(AEAD.Amount) + AEAL.TaxAmount 
						ELSE SUM(AEAD.Amount) 
					END
					FROM act_expence_application_div AEAD
					WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
				  ) AS AmountSum
				, AEAL.RealPayAmount
				, AEAD.StandardBriefID
				, AEAD.StandardBriefName
				, AEAD.Amount
				, AEAD.UsageComment
			FROM act_expence_application AEA
			INNER JOIN act_expence_application_list AEAL
			ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
			INNER JOIN act_expence_application_div AEAD
			ON AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
			LEFT OUTER JOIN sys_object_user USR
			ON AEA.RegisterID = USR.UserCode
			LEFT OUTER JOIN act_expence_forms AEF
			ON AEA.RequestType = AEF.FormCode and AEF.CompanyCode = AEA.CompanyCode
			LEFT OUTER JOIN act_vendor VD
			ON AEAL.VendorNo = VD.VendorNo and AEA.CompanyCode = VD.CompanyCode
			LEFT OUTER JOIN act_taxinvoice ATI
			ON AEAL.TaxUID = ATI.TaxInvoiceID
			WHERE 1=1
			AND AEAL.CapitalStatus = 'W'
			AND AEA.CompanyCode = #{CompanyCode}
		  	<if test="RealPayDate != null and RealPayDate != ''">
				<![CDATA[
				    AND (CASE WHEN AEAL.RealPayDate IS NULL THEN AEAL.PayDate ELSE AEAL.RealPayDate END) = #{RealPayDate}
				]]>
			</if>		
			<if test="expAppListIDs != null">
				AND 
				<foreach collection="expAppListIDs" item="item" index="index" separator="," open="AEAL.ExpenceApplicationListID IN (" close=")">
					#{item}
				</foreach>
			</if>
		  	<if test="StandardBriefID != null and StandardBriefID != ''">
				<![CDATA[
				 	AND AEAD.StandardBriefID = #{StandardBriefID}
				]]>
			</if>
		) A
		ORDER BY A.ExpenceApplicationListID
	</select>
	
	<select id="getCapitalSpendingListVendor" parameterType="cmap" resultType="cmap">
		SELECT SUM(A.RealPayAmount) AS "RealPayAmountSum"
				, SUM(A.TotalAmount) AS "TotalAmountSum"
				, COUNT(A.ExpenceApplicationID) AS "ListCnt"
				, A.ExpenceApplicationID AS "ExpenceApplicationID"
            	, LISTAGG(A.ExpenceApplicationListID, ',') within group (order by A.ExpenceApplicationListID) AS "expAppListIDs"
				, A.RegisterID AS "RegisterID"
				, MAX(A.RegisterName) AS "RegisterName"
				, A.PayMethod AS "PayMethod"
				, FN_GETACTBASECODENAME('PayMethod', A.PayMethod, #{companyCode}) AS "PayMethodName"
				, A.VendorNo AS "VendorNo"
				, MAX(A.VendorName) AS "VendorName"
				, MAX(A.RealPayDate) AS "RealPayDate"
				, A.StandardBriefID AS "StandardBriefID"
				, MAX(A.StandardBriefName) AS "StandardBriefName"
				, MIN(A.UsageComment) AS "UsageComment"
		FROM (
			SELECT 
				AEA.ExpenceApplicationID
				, AEA.RegisterID
				, USR.DisplayName RegisterName
				, AEAL.ExpenceApplicationListID
				, CASE 
					WHEN AEAL.PayMethod IS NULL THEN CASE WHEN AEAL.ProofCode = 'CorpCard' THEN 'D' ELSE 'C' END
					ELSE AEAL.PayMethod
					END AS PayMethod
				, CASE WHEN AEAL.RealPayAmount IS NULL
					THEN (
						SELECT 
						CASE 
							WHEN (AEAL.ProofCode = 'TaxBill' AND SUM(AEAD.Amount) != AEAL.TotalAmount) THEN SUM(AEAD.Amount) + AEAL.TaxAmount 
							ELSE SUM(AEAD.Amount) 
						END
						FROM act_expence_application_div AEAD
						WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
					)
					ELSE AEAL.RealPayAmount END AS RealPayAmount
				, AEAL.TotalAmount
				, NVL(AEAL.VendorNo, AEA.RegisterID) AS VendorNo
				, NVL(NVL(VD.VendorName, ATI.InvoicerCorpName), (SELECT DisplayName FROM sys_object_user WHERE UserCode = (NVL(AEAL.VendorNo, AEA.RegisterID)))) AS VendorName
				, TO_CHAR(TO_DATE(NVL(AEAL.RealPayDate, AEAL.PayDate), 'YYYYMMDD'), 'YYYY.MM.DD') AS RealPayDate
				, (SELECT StandardBriefID FROM act_expence_application_div AEAD WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID AND ROWNUM <![CDATA[<=]]> 1) StandardBriefID
				, (SELECT StandardBriefName FROM act_expence_application_div AEAD WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID AND ROWNUM <![CDATA[<=]]> 1) StandardBriefName
				, (SELECT UsageComment FROM act_expence_application_div AEAD WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID AND ROWNUM <![CDATA[<=]]> 1) UsageComment
			FROM act_expence_application AEA
			INNER JOIN act_expence_application_list AEAL 
			ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
			INNER JOIN sys_object_user USR 
			ON AEA.RegisterID = USR.UserCode
			INNER JOIN act_expence_forms AEF 
			ON AEA.RequestType = AEF.FormCode and AEF.CompanyCode = AEA.CompanyCode
			LEFT OUTER JOIN act_vendor VD
			ON AEAL.VendorNo = VD.VendorNo and AEA.CompanyCode = VD.CompanyCode
			LEFT OUTER JOIN act_taxinvoice ATI
			ON AEAL.TaxUID = ATI.TaxInvoiceID
			WHERE 1=1
			AND AEF.MenuType = 'V'
			AND AEA.RequestType IN ('VENDOR') 
			AND AEAL.CapitalStatus = 'W'
			AND AEA.CompanyCode = #{CompanyCode}
			<if test="RealPayDate != null and RealPayDate != ''">
				AND (CASE WHEN AEAL.RealPayDate IS NULL THEN AEAL.PayDate ELSE AEAL.RealPayDate END) = #{RealPayDate}
			</if>
			<if test="expAppListIDs != null">
				AND 
				<foreach collection="expAppListIDs" item="item" index="index" separator="," open="AEAL.ExpenceApplicationListID IN (" close=")">
					#{item}
				</foreach>
			</if>
		  	<if test="StandardBriefID != null and StandardBriefID != ''">
				<![CDATA[
				 	AND (SELECT StandardBriefID FROM act_expence_application_div AEAD WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID AND ROWNUM <= 1) = #{StandardBriefID}
				]]>
			</if>
		) A
		GROUP BY A.ExpenceApplicationID
				, A.RegisterID
				, A.PayMethod
				, A.VendorNo
				, A.StandardBriefID
	</select>
    
    <select id="getCapitalSpendingListReport" parameterType="cmap" resultType="cmap">
    	SELECT
    		CapitalReportID AS "CapitalReportID",
    		ProcessID AS "ProcessID",
    		Subject AS "Subject",
    		expAppListIDs AS "expAppListIDs",
    		InitiatorCodeDisplay AS "InitiatorCodeDisplay",
    		InitiatorDisplay AS "InitiatorDisplay",
    		RealPayDate AS "RealPayDate",
    		RealPayAmount AS "RealPayAmount",
    		AccountCode AS "AccountCode",
    		AccountName AS "AccountName",
    		StandardBriefID AS "StandardBriefID",
    		StandardBriefName AS "StandardBriefName"
    	FROM act_capital_report
    	WHERE 1=1
    	<if test="RealPayDate != null and RealPayDate != ''">
    		AND RealPayDate = #{RealPayDate}
    	</if> 
	  	<if test="StandardBriefID != null and StandardBriefID != ''">
			<![CDATA[
			 	AND StandardBriefID = #{StandardBriefID}
			]]>
		</if>	
    </select>
	
	<select id="getCapitalSpendingListEmployee" parameterType="cmap" resultType="cmap">
		SELECT SUM(A.RealPayAmount) AS "RealPayAmountSum"
			, A.RequestType AS "RequestType"
			, MAX(A.RequestTypeName) AS "RequestTypeName"
			, MAX(A.RealPayDate) AS "RealPayDate"
			, LISTAGG(A.ExpenceApplicationListID, ',') within group (order by A.ExpenceApplicationListID) AS "expAppListIDs"
		FROM (
			SELECT 
				AEA.RequestType
				, AEA.ExpenceApplicationID
				, AEF.FormName RequestTypeName
				, AEAL.ExpenceApplicationListID
				, CASE WHEN AEAL.RealPayAmount IS NULL
					THEN (
						SELECT 
						CASE 
							WHEN (AEAL.ProofCode = 'TaxBill' AND SUM(AEAD.Amount) != AEAL.TotalAmount) THEN SUM(AEAD.Amount) + AEAL.TaxAmount 
							ELSE SUM(AEAD.Amount) 
						END
						FROM act_expence_application_div AEAD
						WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
					)
					ELSE AEAL.RealPayAmount END AS RealPayAmount
				, TO_CHAR(TO_DATE(NVL(AEAL.RealPayDate, AEAL.PayDate), 'YYYYMMDD'), 'YYYY.MM.DD') AS RealPayDate
			FROM act_expence_application AEA
			INNER JOIN act_expence_application_list AEAL 
			ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
			INNER JOIN act_expence_forms AEF
			ON AEA.RequestType = AEF.FormCode and AEF.CompanyCode = AEA.CompanyCode
			WHERE 1=1
			AND AEF.MenuType = 'E'
			AND AEA.RequestType IN ('NORMAL', 'PROJECT', 'ENTERTAIN', 'BIZTRIP', 'OVERSEA') 
			AND AEAL.CapitalStatus = 'W'
			AND AEA.CompanyCode = #{CompanyCode}
			<if test="RealPayDate != null and RealPayDate != ''">
				AND (CASE WHEN AEAL.RealPayDate IS NULL THEN AEAL.PayDate ELSE AEAL.RealPayDate END) = #{RealPayDate}
			</if>
			<if test="expAppListIDs != null">
				AND 
				<foreach collection="expAppListIDs" item="item" index="index" separator="," open="AEAL.ExpenceApplicationListID IN (" close=")">
					#{item}
				</foreach>
			</if>
		  	<if test="StandardBriefID != null and StandardBriefID != ''">
				<![CDATA[
				 	AND (SELECT StandardBriefID FROM act_expence_application_div AEAD WHERE AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID AND ROWNUM <= 1) = #{StandardBriefID}
				]]>
			</if>
		) A
		GROUP BY A.RequestType
	</select>
	
	<select id="selectCapitalSummary" parameterType="cmap" resultType="cmap">
		SELECT
		 CASE WHEN RealPayDate = 'TOTAL' THEN RealPayDate ELSE TO_CHAR(TO_DATE(RealPayDate, 'YYYYMMDD'), 'YYYY-MM-DD') END AS "RealPayDate"
		    , ProcessId AS "ProcessId"
		    , FormInstID AS "FormInstID"
		    , Subject AS "Subject"
		    , NVL(TO_CHAR(C_Sum, '999,999,999,999'), '-') AS "C_Sum"
		    , NVL(TO_CHAR(A_Sum, '999,999,999,999'), '-') AS "A_Sum"
		    , NVL(TO_CHAR(D_Sum, '999,999,999,999'), '-') AS "D_Sum"
		    , NVL(TO_CHAR(G_Sum, '999,999,999,999'), '-') AS "G_Sum"
		    , NVL(TO_CHAR(T_Sum, '999,999,999,999'), '-') AS "T_Sum"
		    , NVL(TO_CHAR(TotalSum, '999,999,999,999'), '-') AS "TotalSum"
		FROM (
			SELECT 
			RealPayDate
			, LISTAGG(JF.FormInstId) WITHIN GROUP (ORDER BY RealPayDate) AS FormInstID
			, LISTAGG(JF.ProcessId) WITHIN GROUP (ORDER BY RealPayDate) AS ProcessId
			, LISTAGG(JF.Subject, '^^^') WITHIN GROUP (ORDER BY RealPayDate) AS Subject
			, SUM(CorpCardAmount) AS C_Sum
			, SUM(AutoAmount)AS A_Sum
			, SUM(NormalAmount) AS D_Sum
			, SUM(CashAmount) AS G_Sum
			, SUM(AccountAmount) AS T_Sum
			, SUM(RealPayAmount) AS TotalSum
			FROM act_capital_resolution ACR
			INNER JOIN jwf_forminstance JF ON ACR.FormInstId = JF.FormInstID
			WHERE 1=1
			<if test="CompanyCode != null and CompanyCode != ''">
			AND JF.EntCode = #{CompanyCode}
			</if>
			<if test="RealPayDateSt != null and RealPayDateSt != ''">
			AND ACR.RealPayDate <![CDATA[>=]]> #{RealPayDateSt}
			</if>
			<if test="RealPayDateEd != null and RealPayDateEd != ''">
			AND ACR.RealPayDate <![CDATA[<=]]> #{RealPayDateEd}
			</if>
			GROUP BY ACR.RealPayDate
			
			UNION ALL
			
			SELECT 
			'TOTAL' AS RealPayDate
			, NULL AS FormInstID
			, NULL AS ProcessId
			, NULL AS Subject
			, SUM(CorpCardAmount) AS C_Sum
			, SUM(AutoAmount)AS A_Sum
			, SUM(NormalAmount) AS D_Sum
			, SUM(CashAmount) AS G_Sum
			, SUM(AccountAmount) AS T_Sum
			, SUM(RealPayAmount) AS TotalSum
			FROM act_capital_resolution ACR
			INNER JOIN jwf_forminstance JF ON ACR.FormInstId = JF.FormInstID
			WHERE 1=1
			<if test="CompanyCode != null and CompanyCode != ''">
			AND JF.EntCode = #{CompanyCode}
			</if>
			<if test="RealPayDateSt != null and RealPayDateSt != ''">
			AND ACR.RealPayDate <![CDATA[>=]]> #{RealPayDateSt}
			</if>
			<if test="RealPayDateEd != null and RealPayDateEd != ''">
			AND ACR.RealPayDate <![CDATA[<=]]> #{RealPayDateEd}
			</if>
			<trim prefix="ORDER BY"  prefixOverrides =",">
			    <if test = "sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
					,RealPayDate ASC 
			    </if>
			  	<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
				 	, 	
					<choose>	
						<when test='sortColumn.equalsIgnoreCase("RealPayDate")'>RealPayDate</when>
						<when test='sortColumn.equalsIgnoreCase("A_Sum")'>A_Sum</when>
						<when test='sortColumn.equalsIgnoreCase("D_Sum")'>D_Sum</when>
						<when test='sortColumn.equalsIgnoreCase("C_Sum")'>C_Sum</when>
						<when test='sortColumn.equalsIgnoreCase("G_Sum")'>G_Sum</when>
						<when test='sortColumn.equalsIgnoreCase("T_Sum")'>T_Sum</when>
						<when test='sortColumn.equalsIgnoreCase("TotalSum")'>TotalSum</when>
					</choose>	
					<choose>	
						<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
						<otherwise> DESC</otherwise>
					</choose>	
				</if>
			</trim>
		) Result
	</select>
	
	<select id="selectCapitalSummaryCnt" parameterType="cmap" resultType="java.lang.Long">
		SELECT COUNT(*)
		FROM (
			SELECT 
			RealPayDate
			, LISTAGG(JF.FormInstId) WITHIN GROUP (ORDER BY RealPayDate) AS FormInstID
			, LISTAGG(JF.ProcessId) WITHIN GROUP (ORDER BY RealPayDate) AS ProcessId
			, LISTAGG(JF.Subject, '^^^') WITHIN GROUP (ORDER BY RealPayDate) AS Subject
			, SUM(CorpCardAmount) AS C_Sum
			, SUM(AutoAmount)AS A_Sum
			, SUM(NormalAmount) AS D_Sum
			, SUM(CashAmount) AS G_Sum
			, SUM(AccountAmount) AS T_Sum
			, SUM(RealPayAmount) AS TotalSum
			FROM act_capital_resolution ACR
			INNER JOIN jwf_forminstance JF ON ACR.FormInstId = JF.FormInstID
			WHERE 1=1
			<if test="CompanyCode != null and CompanyCode != ''">
			AND JF.EntCode = #{CompanyCode}
			</if>
			<if test="RealPayDateSt != null and RealPayDateSt != ''">
			AND ACR.RealPayDate <![CDATA[>=]]> #{RealPayDateSt}
			</if>
			<if test="RealPayDateEd != null and RealPayDateEd != ''">
			AND ACR.RealPayDate <![CDATA[<=]]> #{RealPayDateEd}
			</if>
			GROUP BY ACR.RealPayDate
		) A
	</select>
	
	<select id="selectExpenceApplicationDouzoneExcel" parameterType="cmap" resultType="cmap">
		/*
			expenceApplication.selectExpenceApplicationDouzoneExcel
		*/
		
		SELECT TO_CHAR(TO_DATE(AEAL.ProofDate, 'YYYYMMDD'), 'YYYY') AS "ProofYear"
			, TO_CHAR(TO_DATE(AEAL.ProofDate, 'YYYYMMDD'), 'MM') AS "ProofMonth"
			, TO_CHAR(TO_DATE(AEAL.ProofDate, 'YYYYMMDD'), 'DD') AS "ProofDay"
			, 
			CASE
				WHEN AEAL.ProofCode = 'TaxBill' THEN CASE WHEN ATI.DataIndex = 'AUT' THEN '1' WHEN ATI.DataIndex = 'BUY' THEN '2' ELSE '' END
				WHEN AEAL.ProofCode like '%Card' THEN CASE WHEN CR.DataIndex = 'AUT' THEN '1' WHEN CR.DataIndex = 'BUY' THEN '2' ELSE '2' END
				WHEN AEAL.ProofCode = 'CashBill' THEN CASE WHEN ACB.InvoiceType = 'AUT' THEN '1' WHEN ACB.InvoiceType = 'BUY' THEN '2' ELSE '2' END 
			END AS "BuyAutType"
			, 
			CASE 
				WHEN AEAL.ProofCode = 'TaxBill' THEN '51' 
				WHEN AEAL.ProofCode like '%Card' THEN '57' 
				WHEN AEAL.ProofCode = 'CashBill' THEN '61' 
			END AS "ProofTaxType"
			, '' AS "DeductReason"
			, CC.DouzoneCardID AS "DouzoneCardID"
			, CC.CardCompany AS "CardCompany"
			, CR.CardNo AS "CardNo"
			, 
			CASE
				WHEN AEAL.ProofCode = 'TaxBill' THEN ATI.InvoicerCorpName
				WHEN AEAL.ProofCode like '%Card' THEN CR.StoreName
				WHEN AEAL.ProofCode = 'CashBill' THEN ACB.FranchiseCorpName
			END AS "VendorName"
			, 
			CASE
				WHEN AEAL.ProofCode = 'TaxBill' THEN ATI.InvoicerCorpNum
				WHEN AEAL.ProofCode like '%Card' THEN CR.StoreRegNo
				WHEN AEAL.ProofCode = 'CashBill' THEN ACB.FranchiseCorpNum
			END AS "CorpRegNum"
			, 
			CASE
				WHEN AEAL.ProofCode = 'TaxBill' THEN ATI.SupplyCostTotal
				WHEN AEAL.ProofCode like '%Card' THEN CR.RepAmount
				WHEN AEAL.ProofCode = 'CashBill' THEN ACB.SupplyCost
			END AS "SupplyCost"
			, 
			CASE
				WHEN AEAL.ProofCode = 'TaxBill' THEN ATI.TaxTotal
				WHEN AEAL.ProofCode like '%Card' THEN CR.TaxAmount
				WHEN AEAL.ProofCode = 'CashBill' THEN ACB.Tax
			END AS "Tax"
			,(CASE WHEN AEAD.IOName IS NOT NULL THEN (AEAD.IOName|| ' '|| AEAD.StandardBriefName) ELSE AEAD.StandardBriefName END ) AS "ItemName"
			, (CASE WHEN AEAL.ProofCode = 'TaxInvoice' THEN '1' ELSE '' END ) AS "IsTaxInvoice"
			, AEAD.AccountCode AS "AccountCode"
			, '' AS "ContraAccountCode"
			, ACB.NTSConfirmNum AS "NTSConfirmNum"
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEAL
		ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
		INNER JOIN act_expence_application_div AEAD
		ON AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
		LEFT OUTER JOIN act_vendor VD
		ON AEAL.VendorNo = VD.VendorNo and AEA.CompanyCode = VD.CompanyCode
		LEFT OUTER JOIN sys_object_user USR
		ON AEA.RegisterID = USR.UserCode
		LEFT OUTER JOIN act_card_receipt CR
		ON AEAL.CardUID = CR.ReceiptID
		LEFT OUTER JOIN act_corp_card CC
		ON CR.CardNo = CC.CardNo
		LEFT OUTER JOIN act_taxinvoice ATI
		ON AEAL.TaxUID = ATI.TaxInvoiceID
		LEFT OUTER JOIN act_taxinvoice_item ATIT
		ON ATI.TaxInvoiceID = ATIT.TaxInvoiceID
		LEFT OUTER JOIN act_cashbill ACB
		ON AEAL.CashUID = ACB.CashBillID
		LEFT OUTER JOIN act_receipt AR
		ON AEAL.ReceiptID = AR.ReceiptID
		WHERE 1=1
		AND AEAL.ProofCode in ('CorpCard', 'TaxBill', 'CashBill')
			
	  	<if test="DocNo != null and DocNo != ''">
	  	    AND AEAL.DocNo LIKE '%' || #{DocNo} || '%'
		</if>
		
	  	<if test="ApplicationStatus != null and ApplicationStatus != ''">
		 	AND AEA.ApplicationStatus = #{ApplicationStatus}
		</if>
	  	
	  	<if test="ApplicationTitle != null and ApplicationTitle != ''">
		 	AND UPPER(AEA.ApplicationTitle) LIKE UPPER('%' || #{ApplicationTitle} || '%')
		</if>
			  	
	  	<if test="ChargeJob != null and ChargeJob != ''">
		 	AND AEA.ChargeJob LIKE #{ChargeJob} || '%' 
		</if>
				
		<if test="RequestType != null and RequestType != ''">
		 	AND AEA.RequestType = #{RequestType}
		</if>
	  	
	  	<if test="ProofCode != null and ProofCode != ''">
		 	AND AEAL.ProofCode = #{ProofCode}
		</if>
			  	
	  	<if test="CompanyCode != null and CompanyCode != ''">
		 	AND AEA.CompanyCode = #{CompanyCode}
		</if>
		
	  	<if test="ProofDateSt != null and ProofDateSt != ''">
			<![CDATA[
			 	AND AEAL.ProofDate >= #{ProofDateSt}
			]]>
		</if>
	  	<if test="ProofDateEd != null and ProofDateEd != ''">
			<![CDATA[
			 	AND AEAL.ProofDate <= #{ProofDateEd}
			]]>
		</if>
	  	
	  	<if test="ApplicationDateSt != null and ApplicationDateSt != ''">
			<![CDATA[
			 	AND NVL(AEA.ApplicationDate, AEA.RegistDate) >= TO_DATE(#{ApplicationDateSt}, 'YYYY-MM-DD HH24:MI:SS')
			]]>
		</if>
	  	<if test="ApplicationDateEd != null and ApplicationDateEd != ''">
			<![CDATA[
			 	AND NVL(AEA.ApplicationDate, AEA.RegistDate) <= TO_DATE(#{ApplicationDateEd}, 'YYYY-MM-DD HH24:MI:SS')
			]]>
		</if>
	  	
	  	
	  	<if test="RegisterNm != null and RegisterNm != ''">
		 	AND UPPER(USR.DisplayName) LIKE UPPER('%' || #{RegisterNm} || '%')
		</if>
	  	
	  	<if test="VendorName != null and VendorName != ''">
		 	AND (
		 		UPPER(VD.VendorName) LIKE UPPER('%' || #{VendorName} || '%')
		 		OR UPPER(ATI.InvoicerCorpName) LIKE UPPER('%' || #{VendorName} || '%')
		 	)
		</if>
	  	<if test="SearchAmtSt != null and SearchAmtSt != ''">
	  	    <![CDATA[
		 	AND AEAL.TotalAmount > #{SearchAmtSt}
			]]>
		</if>
	  	<if test="SearchAmtEd != null and SearchAmtEd != ''">
	  		<![CDATA[
		 	AND AEAL.TotalAmount < #{SearchAmtEd}
			]]>
		</if>
	  	<if test="StandardBriefID != null and StandardBriefID != ''">
		 	AND AEAD.StandardBriefID = #{StandardBriefID}
		</if>
		<if test="PayDate != null and PayDate != ''">
		    AND AEAL.PayDate = #{PayDate}
		</if>
		<choose>
			<when test="SessionUser != null and SessionUser != ''">
		 		AND AEA.RegisterID = #{SessionUser}
			</when>
			<otherwise>
			    AND AEA.ApplicationStatus NOT IN ('T')
			</otherwise>
		</choose>
		<trim prefix="ORDER BY"  prefixOverrides =",">
			<if test = "sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
					, AEA.RegistDate DESC
					, AEA.ApplicationTitle
					, AEAL.ProofCode
					, AEAL.ExpenceApplicationListID
		    </if>
		  	<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
			 		, 
					<choose>
						<when test='sortColumn.equalsIgnoreCase("CompanyCode")'>"CompanyCode"</when>
						<when test='sortColumn.equalsIgnoreCase("ApplicationTitle")'>"ApplicationTitle"</when>
						<when test='sortColumn.equalsIgnoreCase("RegisterName")'>"RegisterName"</when>
						<when test='sortColumn.equalsIgnoreCase("ApplicationStatusName")'>"ApplicationStatusName"</when>
						<when test='sortColumn.equalsIgnoreCase("RequestTypeName")'>"RequestTypeName"</when>
						<when test='sortColumn.equalsIgnoreCase("PayDate")'>"PayDate"</when>
						<when test='sortColumn.equalsIgnoreCase("ProofDate")'>"ProofDate"</when>
						<when test='sortColumn.equalsIgnoreCase("ProofTime")'>"ProofTime"</when>
						<when test='sortColumn.equalsIgnoreCase("ProofCodeName")'>"ProofCodeName"</when>
						<when test='sortColumn.equalsIgnoreCase("VendorName")'>"VendorName"</when>
						<when test='sortColumn.equalsIgnoreCase("UsageComment")'>"UsageComment"</when>
						<when test='sortColumn.equalsIgnoreCase("TaxAmount")'>"TaxAmount"</when>
						<when test='sortColumn.equalsIgnoreCase("RepAmount")'>"RepAmount"</when>
						<when test='sortColumn.equalsIgnoreCase("TotalAmount")'>"TotalAmount"</when>
						<when test='sortColumn.equalsIgnoreCase("AmountSum")'>"AmountSum"</when>
						<when test='sortColumn.equalsIgnoreCase("DocNo")'>"DocNo"</when>
						<otherwise>"ApplicationDate"</otherwise>
					</choose>
					<choose>
						<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
						<otherwise> DESC</otherwise>
					</choose>
			</if>
		</trim>
	</select>
	
	<select id="selectExpenceApplicationDouzoneExcelCnt" resultType="java.lang.Long">
		/*
			expenceApplication.selectExpenceApplicationDouzoneExcelCnt
		*/
		
		SELECT COUNT(*)
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEAL
		ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
		INNER JOIN act_expence_application_div AEAD
		ON AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
		LEFT OUTER JOIN act_vendor VD
		ON AEAL.VendorNo = VD.VendorNo and AEA.CompanyCode = VD.CompanyCode
		LEFT OUTER JOIN sys_object_user USR
		ON AEA.RegisterID = USR.UserCode
		LEFT OUTER JOIN act_card_receipt CR
		ON AEAL.CardUID = CR.ReceiptID
		LEFT OUTER JOIN act_corp_card CC
		ON CR.CardNo = CC.CardNo
		LEFT OUTER JOIN act_taxinvoice ATI
		ON AEAL.TaxUID = ATI.TaxInvoiceID
		LEFT OUTER JOIN act_taxinvoice_item ATIT
		ON ATI.TaxInvoiceID = ATIT.TaxInvoiceID
		LEFT OUTER JOIN act_cashbill ACB
		ON AEAL.CashUID = ACB.CashBillID
		LEFT OUTER JOIN act_receipt AR
		ON AEAL.ReceiptID = AR.ReceiptID
		WHERE 1=1
		AND AEAL.ProofCode in ('CorpCard', 'TaxBill', 'CashBill')
			
	  	<if test="DocNo != null and DocNo != ''">
	  	    AND AEAL.DocNo LIKE '%' || #{DocNo} || '%'
		</if>
		
	  	<if test="ApplicationStatus != null and ApplicationStatus != ''">
		 	AND AEA.ApplicationStatus = #{ApplicationStatus}
		</if>
	  	
	  	<if test="ApplicationTitle != null and ApplicationTitle != ''">
		 	AND UPPER(AEA.ApplicationTitle) LIKE UPPER('%' || #{ApplicationTitle} || '%') 
		</if>
			  	
	  	<if test="ChargeJob != null and ChargeJob != ''">
		 	AND AEA.ChargeJob LIKE #{ChargeJob} || '%'
		</if>
				
		<if test="RequestType != null and RequestType != ''">
		 	AND AEA.RequestType = #{RequestType}
		</if>
	  	
	  	<if test="ProofCode != null and ProofCode != ''">
		 	AND AEAL.ProofCode = #{ProofCode}
		</if>
			  	
	  	<if test="CompanyCode != null and CompanyCode != ''">
		 	AND AEA.CompanyCode = #{CompanyCode}
		</if>
		
	  	<if test="ProofDateSt != null and ProofDateSt != ''">
			<![CDATA[
			 	AND AEAL.ProofDate >= #{ProofDateSt}
			]]>
		</if>
	  	<if test="ProofDateEd != null and ProofDateEd != ''">
			<![CDATA[
			 	AND AEAL.ProofDate <= #{ProofDateEd}
			]]>
		</if>
	  	
	  	<if test="ApplicationDateSt != null and ApplicationDateSt != ''">
			<![CDATA[
			 	AND NVL(AEA.ApplicationDate, AEA.RegistDate) >= TO_DATE(#{ApplicationDateSt}, 'YYYY-MM-DD HH24:MI:SS')
			]]>
		</if>
	  	<if test="ApplicationDateEd != null and ApplicationDateEd != ''">
			<![CDATA[
			 	AND NVL(AEA.ApplicationDate, AEA.RegistDate) <= TO_DATE(#{ApplicationDateEd}, 'YYYY-MM-DD HH24:MI:SS')
			]]>
		</if>
	  	
	  	
	  	<if test="RegisterNm != null and RegisterNm != ''">
		 	AND UPPER(USR.DisplayName) LIKE UPPER('%' || #{RegisterNm} || '%')
		</if>
	  	
	  	<if test="VendorName != null and VendorName != ''">
		 	AND (
		 		UPPER(VD.VendorName) LIKE UPPER('%' || #{VendorName} || '%')
		 		OR UPPER(ATI.InvoicerCorpName) LIKE UPPER('%' || #{VendorName} || '%')
		 	)
		</if>
	  	<if test="SearchAmtSt != null and SearchAmtSt != ''">
	  	    <![CDATA[
		 	AND AEAL.TotalAmount > #{SearchAmtSt}
			]]>
		</if>
	  	<if test="SearchAmtEd != null and SearchAmtEd != ''">
	  		<![CDATA[
		 	AND AEAL.TotalAmount < #{SearchAmtEd}
			]]>
		</if>
	  	<if test="StandardBriefID != null and StandardBriefID != ''">
		 	AND AEAD.StandardBriefID = #{StandardBriefID}
		</if>
		<if test="PayDate != null and PayDate != ''">
		    AND AEAL.PayDate = #{PayDate}
		</if>
		<choose>
			<when test="SessionUser != null and SessionUser != ''">
		 		AND AEA.RegisterID = #{SessionUser}
			</when>
			<otherwise>
			    AND AEA.ApplicationStatus NOT IN ('T')
			</otherwise>
		</choose>
	</select>	
	
	<select id="selectExpenceApplicationTaxInvoiceExcel" parameterType="cmap" resultType="cmap">
		/*
			expenceApplication.selectExpenceApplicationTaxInvoiceExcel
		*/
		
		SELECT
			SOUB.DeptName,
			SOU.DisplayName,
			AEA.ApplicationTitle,
			TO_CHAR(AEA.ApplicationDate, 'YYYY-MM-DD') AS ApplicationDate,
			ATI.NTSConfirmNum,
			TO_CHAR(TO_DATE(ATI.WriteDate, 'YYYYMMDD'), 'YYYY-MM-DD') AS WriteDate,
			ATI.InvoicerCorpName,
			ATI.InvoicerCorpNum,
			ATI.InvoicerContactName,
			ATI.InvoiceeEmail1,
			ATII.Remark,
			ATI.SupplyCostTotal,
			ATI.TaxTotal,
			ATI.TotalAmount,
			AEAD.Amount,
			AEAD.AccountName,
			AEAD.StandardBriefName,
			AEAD.UsageComment
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEAL
		ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
		INNER JOIN act_expence_application_div AEAD
		ON AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
		INNER JOIN act_taxinvoice ATI
		ON AEAL.TaxUID = ATI.TaxInvoiceID
		INNER JOIN act_taxinvoice_item ATII
		ON ATI.TaxInvoiceID = ATII.TaxInvoiceID
		LEFT OUTER JOIN act_vendor VD
		ON AEAL.VendorNo = VD.VendorNo and AEA.CompanyCode = VD.CompanyCode
		LEFT OUTER JOIN sys_object_user SOU
		ON AEA.RegisterID = SOU.UserCode
		LEFT OUTER JOIN sys_object_user_basegroup SOUB
		ON SOU.UserCode = SOUB.UserCode AND SOUB.JobType = 'Origin'
		WHERE AEAL.ProofCode = 'TaxBill'
		AND AEA.ApplicationStatus = 'E'
		<if test="SessionUser != null and SessionUser != ''">
	 		AND AEA.RegisterID = #{SessionUser}
		</if>	
		<if test="RegisterNm != null and RegisterNm != ''">
		 	AND UPPER(SOU.DisplayName) LIKE UPPER('%'||#{RegisterNm}||'%')
		</if>	 
	  	<if test="CompanyCode != null and CompanyCode != ''">
			AND AEA.CompanyCode = #{CompanyCode}
		</if>		
	  	<if test="SearchAmtSt != null and SearchAmtSt != ''">
		 	AND AEAL.TotalAmount <![CDATA[>]]> #{SearchAmtSt}
		</if>
	  	<if test="SearchAmtEd != null and SearchAmtEd != ''">
		 	AND AEAL.TotalAmount <![CDATA[<]]> #{SearchAmtEd}
		</if>
	  	<if test="ApplicationTitle != null and ApplicationTitle != ''">
		 	AND UPPER(AEA.ApplicationTitle) LIKE UPPER('%'||#{ApplicationTitle}||'%')
		</if>
	  	<if test="ProofDateSt != null and ProofDateSt != ''">
			AND AEAL.ProofDate <![CDATA[>=]]> #{ProofDateSt}
		</if>
	  	<if test="ProofDateEd != null and ProofDateEd != ''">
			AND AEAL.ProofDate <![CDATA[<=]]> #{ProofDateEd}
		</if>	 
		<if test="RequestType != null and RequestType != ''">
		 	AND AEA.RequestType = #{RequestType}
		</if> 	
	  	<if test="ApplicationDateSt != null and ApplicationDateSt != ''">
			AND NVL(AEA.ApplicationDate, AEA.RegistDate) <![CDATA[>=]]> TO_DATE(#{ApplicationDateSt}, 'YYYY-MM-DD HH24:MI:SS')
		</if>
	  	<if test="ApplicationDateEd != null and ApplicationDateEd != ''">
			AND NVL(AEA.ApplicationDate, AEA.RegistDate) <![CDATA[<=]]> TO_DATE(#{ApplicationDateEd}, 'YYYY-MM-DD HH24:MI:SS')
		</if> 	
	  	<if test="VendorName != null and VendorName != ''">
		 	AND (
		 		UPPER(VD.VendorName) LIKE UPPER('%'||#{VendorName}||'%')
		 		OR UPPER(ATI.InvoicerCorpName) LIKE UPPER('%'||#{VendorName}||'%')
		 	)
		</if>
	  	<if test="StandardBriefID != null and StandardBriefID != ''">
		 	AND AEAD.StandardBriefID = #{StandardBriefID}
		</if>
		<if test="PayDate != null and PayDate != ''">
		    AND AEAL.PayDate = #{PayDate}
		</if>
		ORDER BY AEA.ApplicationDate DESC
	</select>
	
	<select id="selectExpenceApplicationTaxInvoiceExcelCnt" parameterType="cmap" resultType="java.lang.Long">
		/*
			expenceApplication.selectExpenceApplicationTaxInvoiceExcelCnt
		*/
		
		SELECT COUNT(*)
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEAL
		ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
		INNER JOIN act_expence_application_div AEAD
		ON AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
		INNER JOIN act_taxinvoice ATI
		ON AEAL.TaxUID = ATI.TaxInvoiceID
		INNER JOIN act_taxinvoice_item ATII
		ON ATI.TaxInvoiceID = ATII.TaxInvoiceID
		LEFT OUTER JOIN act_vendor VD
		ON AEAL.VendorNo = VD.VendorNo and AEA.CompanyCode = VD.CompanyCode
		LEFT OUTER JOIN sys_object_user SOU
		ON AEA.RegisterID = SOU.UserCode
		LEFT OUTER JOIN sys_object_user_basegroup SOUB
		ON SOU.UserCode = SOUB.UserCode AND SOUB.JobType = 'Origin'
		WHERE AEAL.ProofCode = 'TaxBill'
		AND AEA.ApplicationStatus = 'E'
		<if test="SessionUser != null and SessionUser != ''">
	 		AND AEA.RegisterID = #{SessionUser}
		</if>	
		<if test="RegisterNm != null and RegisterNm != ''">
		 	AND UPPER(SOU.DisplayName) LIKE UPPER('%'||#{RegisterNm}||'%')
		</if>	 
	  	<if test="CompanyCode != null and CompanyCode != ''">
			AND AEA.CompanyCode = #{CompanyCode}
		</if>		
	  	<if test="SearchAmtSt != null and SearchAmtSt != ''">
		 	AND AEAL.TotalAmount <![CDATA[>]]> #{SearchAmtSt}
		</if>
	  	<if test="SearchAmtEd != null and SearchAmtEd != ''">
		 	AND AEAL.TotalAmount <![CDATA[<]]> #{SearchAmtEd}
		</if>
	  	<if test="ApplicationTitle != null and ApplicationTitle != ''">
		 	AND UPPER(AEA.ApplicationTitle) LIKE UPPER('%'||#{ApplicationTitle}||'%')
		</if>
	  	<if test="ProofDateSt != null and ProofDateSt != ''">
			AND AEAL.ProofDate <![CDATA[>=]]> #{ProofDateSt}
		</if>
	  	<if test="ProofDateEd != null and ProofDateEd != ''">
			AND AEAL.ProofDate <![CDATA[<=]]> #{ProofDateEd}
		</if>	 
		<if test="RequestType != null and RequestType != ''">
		 	AND AEA.RequestType = #{RequestType}
		</if> 	
	  	<if test="ApplicationDateSt != null and ApplicationDateSt != ''">
			AND NVL(AEA.ApplicationDate, AEA.RegistDate) <![CDATA[>=]]> TO_DATE(#{ApplicationDateSt}, 'YYYY-MM-DD HH24:MI:SS')
		</if>
	  	<if test="ApplicationDateEd != null and ApplicationDateEd != ''">
			AND NVL(AEA.ApplicationDate, AEA.RegistDate) <![CDATA[<=]]> TO_DATE(#{ApplicationDateEd}, 'YYYY-MM-DD HH24:MI:SS')
		</if> 	
	  	<if test="VendorName != null and VendorName != ''">
		 	AND (
		 		UPPER(VD.VendorName) LIKE UPPER('%'||#{VendorName}||'%')
		 		OR UPPER(ATI.InvoicerCorpName) LIKE UPPER('%'||#{VendorName}||'%')
		 	)
		</if>
	  	<if test="StandardBriefID != null and StandardBriefID != ''">
		 	AND AEAD.StandardBriefID = #{StandardBriefID}
		</if>
		<if test="PayDate != null and PayDate != ''">
		    AND AEAL.PayDate = #{PayDate}
		</if>
	</select>
	
	<select id="selectExpenceApplicationCardReceiptExcel" parameterType="cmap" resultType="cmap">
		/*
			expenceApplication.selectExpenceApplicationCardReceiptExcel
		*/
		
		SELECT
			AEA.CompanyCode AS "CompanyCode",
			SOUB.DeptName AS "DeptName",
			SOU.DisplayName AS "DisplayName",
			AEA.ApplicationTitle AS "ApplicationTitle",
			TO_CHAR(AEA.RegistDate, 'YYYY-MM-DD') AS "ApplicationDate",
			ACR.CardNo AS "CardNo",
			ACR.ApproveNo AS "ApproveNo",
			(TO_CHAR(TO_DATE(ACR.ApproveDate, 'YYYYMMDD'), 'YYYY-MM-DD') || ' (' || TO_CHAR(TO_DATE(ACR.ApproveDate, 'YYYYMMDD'), 'DY') || ')') AS "ApproveDate",
			TO_CHAR(TO_DATE(ACR.ApproveTime, 'HH24MISS'), 'HH24:MI:SS') AS "ApproveTime",
			ACR.AmountWon AS "ApproveAmount",
			AEAD.Amount AS "Amount",
			ACR.StoreName AS "StoreName",
			ACR.StoreCategory AS "StoreCategory",
			AEAD.AccountName AS "AccountName",
			AEAD.StandardBriefName AS "StandardBriefName",
			AEAD.UsageComment AS "UsageComment"
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEAL
		ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
		INNER JOIN act_expence_application_div AEAD
		ON AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
		INNER JOIN act_card_receipt ACR
		ON AEAL.CardUID = ACR.ReceiptID
		LEFT OUTER JOIN sys_object_user SOU
		ON AEA.RegisterID = SOU.UserCode
		LEFT OUTER JOIN sys_object_user_basegroup SOUB
		ON SOU.UserCode = SOUB.UserCode AND SOUB.JobType = 'Origin'
		WHERE AEAL.ProofCode = 'CorpCard'
		AND AEA.ApplicationStatus = 'E'
		<if test="SessionUser != null and SessionUser != ''">
	 		AND AEA.RegisterID = #{SessionUser}
		</if>	
		<if test="RegisterNm != null and RegisterNm != ''">
		 	AND UPPER(SOU.DisplayName) LIKE UPPER('%'||#{RegisterNm}||'%')
		</if>	 
	  	<if test="CompanyCode != null and CompanyCode != ''">
			AND AEA.CompanyCode = #{CompanyCode}
		</if>		
	  	<if test="SearchAmtSt != null and SearchAmtSt != ''">
		 	AND AEAL.TotalAmount <![CDATA[>]]> #{SearchAmtSt}
		</if>
	  	<if test="SearchAmtEd != null and SearchAmtEd != ''">
		 	AND AEAL.TotalAmount <![CDATA[<]]> #{SearchAmtEd}
		</if>
	  	<if test="ApplicationTitle != null and ApplicationTitle != ''">
		 	AND UPPER(AEA.ApplicationTitle) LIKE UPPER('%'||#{ApplicationTitle}||'%')
		</if>
	  	<if test="ProofDateSt != null and ProofDateSt != ''">
			AND AEAL.ProofDate <![CDATA[>=]]> #{ProofDateSt}
		</if>
	  	<if test="ProofDateEd != null and ProofDateEd != ''">
			AND AEAL.ProofDate <![CDATA[<=]]> #{ProofDateEd}
		</if>	 
		<if test="RequestType != null and RequestType != ''">
		 	AND AEA.RequestType = #{RequestType}
		</if> 	
	  	<if test="ApplicationDateSt != null and ApplicationDateSt != ''">
			AND NVL(AEA.ApplicationDate, AEA.RegistDate) <![CDATA[>=]]> TO_DATE(#{ApplicationDateSt}, 'YYYY-MM-DD HH24:MI:SS')
		</if>
	  	<if test="ApplicationDateEd != null and ApplicationDateEd != ''">
			AND NVL(AEA.ApplicationDate, AEA.RegistDate) <![CDATA[<=]]> TO_DATE(#{ApplicationDateEd}, 'YYYY-MM-DD HH24:MI:SS')
		</if>
	  	<if test="StandardBriefID != null and StandardBriefID != ''">
		 	AND AEAD.StandardBriefID = #{StandardBriefID}
		</if>
		<if test="PayDate != null and PayDate != ''">
		    AND AEAL.PayDate = #{PayDate}
		</if>
		ORDER BY AEA.ApplicationDate DESC
	</select>
		
	<select id="selectExpenceApplicationCardReceiptExcelCnt" parameterType="cmap" resultType="java.lang.Long">
		/*
			expenceApplication.selectExpenceApplicationCardReceiptExcelCnt
		*/
		
		SELECT COUNT(*)
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEAL
		ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
		INNER JOIN act_expence_application_div AEAD
		ON AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
		INNER JOIN act_card_receipt ACR
		ON AEAL.CardUID = ACR.ReceiptID
		LEFT OUTER JOIN sys_object_user SOU
		ON AEA.RegisterID = SOU.UserCode
		LEFT OUTER JOIN sys_object_user_basegroup SOUB
		ON SOU.UserCode = SOUB.UserCode AND SOUB.JobType = 'Origin'
		WHERE AEAL.ProofCode = 'CorpCard'
		AND AEA.ApplicationStatus = 'E'
		<if test="SessionUser != null and SessionUser != ''">
	 		AND AEA.RegisterID = #{SessionUser}
		</if>	
		<if test="RegisterNm != null and RegisterNm != ''">
		 	AND UPPER(SOU.DisplayName) LIKE UPPER('%'||#{RegisterNm}||'%')
		</if>	 
	  	<if test="CompanyCode != null and CompanyCode != ''">
			AND AEA.CompanyCode = #{CompanyCode}
		</if>		
	  	<if test="SearchAmtSt != null and SearchAmtSt != ''">
		 	AND AEAL.TotalAmount <![CDATA[>]]> #{SearchAmtSt}
		</if>
	  	<if test="SearchAmtEd != null and SearchAmtEd != ''">
		 	AND AEAL.TotalAmount <![CDATA[<]]> #{SearchAmtEd}
		</if>
	  	<if test="ApplicationTitle != null and ApplicationTitle != ''">
		 	AND UPPER(AEA.ApplicationTitle) LIKE UPPER('%'||#{ApplicationTitle}||'%')
		</if>
	  	<if test="ProofDateSt != null and ProofDateSt != ''">
			AND AEAL.ProofDate <![CDATA[>=]]> #{ProofDateSt}
		</if>
	  	<if test="ProofDateEd != null and ProofDateEd != ''">
			AND AEAL.ProofDate <![CDATA[<=]]> #{ProofDateEd}
		</if>	 
		<if test="RequestType != null and RequestType != ''">
		 	AND AEA.RequestType = #{RequestType}
		</if> 	
	  	<if test="ApplicationDateSt != null and ApplicationDateSt != ''">
			AND NVL(AEA.ApplicationDate, AEA.RegistDate) <![CDATA[>=]]> TO_DATE(#{ApplicationDateSt}, 'YYYY-MM-DD HH24:MI:SS')
		</if>
	  	<if test="ApplicationDateEd != null and ApplicationDateEd != ''">
			AND NVL(AEA.ApplicationDate, AEA.RegistDate) <![CDATA[<=]]> TO_DATE(#{ApplicationDateEd}, 'YYYY-MM-DD HH24:MI:SS')
		</if>
	  	<if test="StandardBriefID != null and StandardBriefID != ''">
		 	AND AEAD.StandardBriefID = #{StandardBriefID}
		</if>
		<if test="PayDate != null and PayDate != ''">
		    AND AEAL.PayDate = #{PayDate}
		</if>
		ORDER BY AEA.ApplicationDate DESC
	</select>
	
	<select id="getUserBankAccount" parameterType="cmap" resultType="cmap">
	    SELECT 
		  VD.VendorNo AS "VendorNo"
		  , VDB.BankID AS "BankID"
		  , VDB.BankCode AS "BankCode"
		  , VDB.BankName AS "BankName"
		  , VDB.BankAccountNo AS "BankAccountNo"
		  , VDB.BankAccountName AS "BankAccountName"
      	  , VDB.BankAccountNo || '(' || VDB.BankName || ', ' || VDB.BankAccountName || ')' AS "BankAccountView"
		FROM act_vendor VD
		INNER JOIN act_vendor_bank VDB ON VD.VendorID = VDB.VendorID
		WHERE VD.VendorType = 'OR' 
		AND VD.VendorNo = #{SessionUser}
    </select>
    
    <select id="checkActVendorForWrite" parameterType="cmap" resultType="java.lang.Long">
		SELECT COUNT(*) 
		FROM act_vendor
		WHERE VendorNo = #{VendorNo}
    </select>
    
    <insert id="insertActVendorForWrite" parameterType="cmap">
		INSERT INTO act_vendor
		(
			CompanyCode
			, VendorType
			, VendorNo
			, VendorName
			, BusinessNumber
			, RegisterID
			, RegistDate
			, ModifierID
			, ModifyDate
		)
		VALUES
		(
			 #{CompanyCode ,jdbcType=VARCHAR}
			, #{VendorType ,jdbcType=VARCHAR}
			, #{VendorNo ,jdbcType=VARCHAR}
			, #{VendorName ,jdbcType=VARCHAR}
			, #{VendorNo ,jdbcType=VARCHAR}
			, #{RegisterID ,jdbcType=VARCHAR}
			, SYSDATE
			, #{RegisterID ,jdbcType=VARCHAR}
			, SYSDATE
		)
	</insert>
 
	<select id="selectActVendorIsRegistered" parameterType="cmap" resultType="cmap">
	    SELECT *
		FROM act_vendor
		WHERE 1=1
		<if test="VendorNo != null and VendorNo != ''">
		AND VendorNo = #{VendorNo}
		</if>
		<if test="VendorName != null and VendorName != ''">
		AND VendorName = #{VendorName}
		</if>
		AND ROWNUM <![CDATA[<=]]> 1 
    </select>
    
	<select id="selectVendorNoByAuto" parameterType="cmap" resultType="java.lang.String">
		SELECT 
		'V' || LPAD(NVL(MAX(SUBSTR(VendorNo, -6)), '0')+1, 6, '0') AS "VendorNo"
    	FROM act_vendor 
    	WHERE VendorNo like 'V%';
    </select>
    
    <select id="selectMonthlyAccountHeaderData" parameterType="cmap" resultType="cmap">
	    SELECT 
	    	AA.AccountCode AS "AccountCode", AA.AccountName AS "AccountName"
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEAL ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
		INNER JOIN act_expence_application_div AEAD ON AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
		INNER JOIN act_account AA ON AEAD.AccountCode = AA.AccountCode
		LEFT OUTER JOIN act_cost_center ACC ON AEAD.CostCenterCode = ACC.CostCenterCode
		LEFT OUTER JOIN sys_object_user SOU ON AEA.RegisterID = SOU.UserCode
		WHERE AEA.ApplicationStatus IN ('E', 'CD', 'CP', 'CR', 'CE', 'CC')
		AND AA.AccountCode IS NOT NULL
		<if test="companyCode != null and companyCode != ''">
		AND AEA.CompanyCode = #{companyCode}
		</if>
		<if test="ChargeJob != null and ChargeJob != ''">
		AND AEA.ChargeJob LIKE #{ChargeJob} || '%'
		</if>
		<if test="RequestType != null and RequestType != ''">
		 AND AEA.RequestType = #{RequestType}
		</if>
		<if test="ProofDate != null and ProofDate != ''">
		AND AEAL.ProofDate LIKE #{ProofDate} || '%' 
		</if>
		<if test="AccountCode != null and AccountCode != ''">
		AND AA.AccountCode = #{AccountCode}
		</if>
		<if test="CostCenterCode != null and CostCenterCode != ''">
		AND ACC.CostCenterCode = #{CostCenterCode}
		</if>
		<if test="RegisterNm != null and RegisterNm != ''">
		AND UPPER(SOU.DisplayName) LIKE UPPER('%' || #{RegisterNm} || '%')
		</if>
		GROUP BY AA.AccountCode, AA.AccountName
    </select>

    <select id="selectMonthlyAccountHeaderDataExcel" parameterType="cmap" resultType="java.lang.String">
    	SELECT LISTAGG(CONCAT(AccountCode, 'Sum'), ',') WITHIN GROUP(ORDER BY AccountCode) 
	    FROM (
		    SELECT 
		    	AA.AccountCode
			FROM act_expence_application AEA
			INNER JOIN act_expence_application_list AEAL ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
			INNER JOIN act_expence_application_div AEAD ON AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
			INNER JOIN act_account AA ON AEAD.AccountCode = AA.AccountCode
			LEFT OUTER JOIN act_cost_center ACC ON AEAD.CostCenterCode = ACC.CostCenterCode
			LEFT OUTER JOIN sys_object_user SOU ON AEA.RegisterID = SOU.UserCode
			WHERE AEA.ApplicationStatus IN ('E', 'CD', 'CP', 'CR', 'CE', 'CC')
			AND AA.AccountCode IS NOT NULL
			<if test="companyCode != null and companyCode != ''">
			AND AEA.CompanyCode = #{companyCode}
			</if>
			<if test="ChargeJob != null and ChargeJob != ''">
			AND AEA.ChargeJob LIKE #{ChargeJob} || '%'
			</if>
			<if test="RequestType != null and RequestType != ''">
			AND AEA.RequestType = #{RequestType}
			</if>
			<if test="ProofDate != null and ProofDate != ''">
			AND AEAL.ProofDate LIKE #{ProofDate} || '%'
			</if>
			<if test="AccountCode != null and AccountCode != ''">
			AND AA.AccountCode = #{AccountCode}
			</if>
			<if test="CostCenterCode != null and CostCenterCode != ''">
			AND ACC.CostCenterCode = #{CostCenterCode}
			</if>
			<if test="RegisterNm != null and RegisterNm != ''">
			AND UPPER(SOU.DisplayName) LIKE UPPER('%' || #{RegisterNm} || '%')
			</if>
			GROUP BY AA.AccountCode
		) A
    </select>
    
	<resultMap type="cmap" id="procResultMap1">
	</resultMap>
	
	<select id="selectMonthlyAccountSummaryList" statementType="CALLABLE" parameterType="cmap" resultType="cmap">
			CALL USP_GETMONTHLYACCUSERLIST(
				#{companyCode},
				#{ChargeJob},
				#{RequestType},
				#{ProofDate},
				#{AccountCode},
				#{CostCenterCode}, 
				#{RegisterNm}, 
				#{result, jdbcType=CURSOR, javaType=java.sql.ResultSet, mode=OUT, resultMap=procResultMap1}
			)
    </select>
    
    <select id="selectMonthlyAccountSummaryListCnt" parameterType="cmap" resultType="java.lang.Long">
	    SELECT COUNT(UserCode)
			FROM (
				SELECT
					SOU.UserCode
				FROM act_expence_application AEA
				INNER JOIN act_expence_application_list AEAL ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
				INNER JOIN act_expence_application_div AEAD ON AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
				LEFT OUTER JOIN act_account AA ON AEAD.AccountCode = AA.AccountCode
				LEFT OUTER JOIN act_cost_center ACC ON AEAD.CostCenterCode = ACC.CostCenterCode
				LEFT OUTER JOIN sys_object_user SOU ON AEA.RegisterID = SOU.UserCode
				LEFT OUTER JOIN ( 
					SELECT MIN(AEAD.ExpenceApplicationDivID) AS ExpenceApplicationDivID
					FROM act_expence_application_div AEAD
					GROUP BY AEAD.ExpenceApplicationListID
				) M_AEAD ON M_AEAD.ExpenceApplicationDivID = AEAD.ExpenceApplicationDivID
				WHERE AEA.ApplicationStatus IN ('E', 'CD', 'CP', 'CR', 'CE', 'CC')
				<if test="ChargeJob != null and ChargeJob != ''">
				AND AEA.ChargeJob LIKE #{ChargeJob} || '%'
				</if>
				<if test="RequestType != null and RequestType != ''">
				AND AEA.RequestType = #{RequestType}
				</if>
				<if test="ProofDate != null and ProofDate != ''">
				AND AEAL.ProofDate LIKE #{ProofDate} || '%'
				</if>
				<if test="AccountCode != null and AccountCode != ''">
				AND AA.AccountCode = #{AccountCode}
				</if>
				<if test="CostCenterCode != null and CostCenterCode != ''">
				AND ACC.CostCenterCode = #{CostCenterCode}
				</if>
				<if test="RegisterNm != null and RegisterNm != ''">
				AND UPPER(SOU.DisplayName) LIKE UPPER('%' || #{RegisterNm} || '%')
				</if>
				GROUP BY SOU.UserCode
			) B
    </select>
    
     <select id="selectMonthlyAccountDeptSummaryList" statementType="CALLABLE" parameterType="cmap" resultType="cmap">
    	CALL USP_GETMONTHLYACCDEPTLIST(
				#{companyCode},
				#{ChargeJob},
				#{RequestType},
				#{ProofDate},
				#{AccountCode},
				#{CostCenterCode}, 
				#{result, jdbcType=CURSOR, javaType=java.sql.ResultSet, mode=OUT, resultMap=procResultMap1}
			)
    </select>
    
    <select id="selectMonthlyAccountDeptSummaryListCnt" parameterType="cmap" resultType="java.lang.Long">
	    SELECT COUNT(GroupCode)
			FROM (
				SELECT
					ACC.CostCenterCode AS GroupCode
				FROM act_expence_application AEA
				INNER JOIN act_expence_application_list AEAL ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
				INNER JOIN act_expence_application_div AEAD ON AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
				LEFT OUTER JOIN act_account AA ON AEAD.AccountCode = AA.AccountCode
				LEFT OUTER JOIN act_cost_center ACC ON AEAD.CostCenterCode = ACC.CostCenterCode 
				LEFT OUTER JOIN sys_object_user SOU ON AEA.RegisterID = SOU.UserCode
				LEFT OUTER JOIN ( 
					SELECT MIN(AEAD.ExpenceApplicationDivID) AS ExpenceApplicationDivID
					FROM act_expence_application_div AEAD
					GROUP BY AEAD.ExpenceApplicationListID
				) M_AEAD ON M_AEAD.ExpenceApplicationDivID = AEAD.ExpenceApplicationDivID
				WHERE AEA.ApplicationStatus IN ('E', 'CD', 'CP', 'CR', 'CE', 'CC')
				<if test="companyCode != null and companyCode != ''">
				AND AEA.CompanyCode = #{companyCode}
				</if>
				<if test="ChargeJob != null and ChargeJob != ''">
				AND AEA.ChargeJob LIKE #{ChargeJob} || '%'
				</if>
				<if test="RequestType != null and RequestType != ''">
				AND AEA.RequestType = #{RequestType}
				</if>
				<if test="ProofDate != null and ProofDate != ''">
				AND AEAL.ProofDate LIKE #{ProofDate} || '%'
				</if>
				<if test="AccountCode != null and AccountCode != ''">
				AND AA.AccountCode = #{AccountCode}
				</if>
				<if test="CostCenterCode != null and CostCenterCode != ''">
				AND ACC.CostCenterCode = #{CostCenterCode}
				</if>
				GROUP BY ACC.CostCenterCode
			) B
    </select>
    
    <select id="selectMonthlyStandardBriefHeaderData" parameterType="cmap" resultType="cmap">
	    SELECT 
	    	ASB.StandardBriefID as "StandardBriefID", ASB.StandardBriefName as "StandardBriefName"
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEAL ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
		INNER JOIN act_expence_application_div AEAD ON AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
		INNER JOIN act_standard_brief ASB ON AEAD.StandardBriefID = ASB.StandardBriefID
		LEFT OUTER JOIN act_cost_center ACC ON AEAD.CostCenterCode = ACC.CostCenterCode 
		LEFT OUTER JOIN sys_object_user SOU ON AEA.RegisterID = SOU.UserCode
		WHERE AEA.ApplicationStatus IN ('E', 'CD', 'CP', 'CR', 'CE', 'CC')
		AND ASB.StandardBriefID IS NOT NULL
		<if test="companyCode != null and companyCode != ''">
		AND AEA.CompanyCode = #{companyCode}
		</if>
		<if test="ChargeJob != null and ChargeJob != ''">
		AND AEA.ChargeJob LIKE CONCAT(#{ChargeJob}, '%')
		</if>
		<if test="RequestType != null and RequestType != ''">
		AND AEA.RequestType = #{RequestType}
		</if>
		<if test="ProofDate != null and ProofDate != ''">
		AND AEAL.ProofDate LIKE CONCAT(#{ProofDate}, '%')
		</if>
		<if test="StandardBriefID != null and StandardBriefID != ''">
		AND ASB.StandardBriefID = #{StandardBriefID}
		</if>
		<if test="CostCenterCode != null and CostCenterCode != ''">
		AND ACC.CostCenterCode = #{CostCenterCode}
		</if>
		<if test="RegisterNm != null and RegisterNm != ''">
		AND UPPER(SOU.DisplayName) LIKE UPPER('%' || #{RegisterNm} || '%')
		</if>
		GROUP BY ASB.StandardBriefID, ASB.StandardBriefName
    </select>
    
    <select id="selectMonthlyStandardBriefHeaderDataExcel" parameterType="cmap" resultType="java.lang.String">
    	SELECT LISTAGG(CONCAT(StandardBriefID, 'Sum'),',') WITHIN GROUP(ORDER BY StandardBriefID)
	    FROM (
		    SELECT 
		    	ASB.StandardBriefID
			FROM act_expence_application AEA
			INNER JOIN act_expence_application_list AEAL ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
			INNER JOIN act_expence_application_div AEAD ON AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
			INNER JOIN act_standard_brief ASB ON AEAD.StandardBriefID = ASB.StandardBriefID
			LEFT OUTER JOIN act_cost_center ACC ON AEAD.CostCenterCode = ACC.CostCenterCode
			LEFT OUTER JOIN sys_object_user SOU ON AEA.RegisterID = SOU.UserCode
			WHERE AEA.ApplicationStatus IN ('E', 'CD', 'CP', 'CR', 'CE', 'CC')
			AND ASB.StandardBriefID IS NOT NULL
			<if test="companyCode != null and companyCode != ''">
			AND AEA.CompanyCode = #{companyCode}
			</if>
			<if test="ChargeJob != null and ChargeJob != ''">
			AND AEA.ChargeJob LIKE CONCAT(#{ChargeJob}, '%')
			</if>
			<if test="RequestType != null and RequestType != ''">
			AND AEA.RequestType = #{RequestType}
			</if>
			<if test="ProofDate != null and ProofDate != ''">
			AND AEAL.ProofDate LIKE CONCAT(#{ProofDate}, '%')
			</if>
			<if test="StandardBriefID != null and StandardBriefID != ''">
			AND ASB.StandardBriefID = #{StandardBriefID}
			</if>
			<if test="CostCenterCode != null and CostCenterCode != ''">
			AND ACC.CostCenterCode = #{CostCenterCode}
			</if>
			<if test="RegisterNm != null and RegisterNm != ''">
			AND UPPER(SOU.DisplayName) LIKE UPPER('%' || #{RegisterNm} || '%')
			</if>
			GROUP BY ASB.StandardBriefID
		) A
    </select>
    
    <select id="selectMonthlyStandardBriefSummaryList" statementType="CALLABLE" parameterType="cmap" resultType="cmap">
    		CALL USP_GETMONTHLYSBLIST(
				#{companyCode},
				#{ChargeJob},
				#{RequestType},
				#{ProofDate},
				#{StandardBriefID},
				#{CostCenterCode}, 
				#{RegisterNm}, 
				#{result, jdbcType=CURSOR, javaType=java.sql.ResultSet, mode=OUT, resultMap=procResultMap1}
			)
	</select>
	
    <select id="selectMonthlyStandardBriefSummaryListCnt" parameterType="cmap" resultType="java.lang.Long">
	    SELECT COUNT(UserCode)
			FROM (
				SELECT
					SOU.UserCode
				FROM act_expence_application AEA
				INNER JOIN act_expence_application_list AEAL ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
				INNER JOIN act_expence_application_div AEAD ON AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
				LEFT OUTER JOIN act_standard_brief ASB ON AEAD.StandardBriefID = ASB.StandardBriefID
				LEFT OUTER JOIN act_cost_center ACC ON AEAD.CostCenterCode = ACC.CostCenterCode 
				LEFT OUTER JOIN sys_object_user SOU ON AEA.RegisterID = SOU.UserCode
				LEFT OUTER JOIN ( 
					SELECT MIN(AEAD.ExpenceApplicationDivID) AS ExpenceApplicationDivID
					FROM act_expence_application_div AEAD
					GROUP BY AEAD.ExpenceApplicationListID
				) M_AEAD ON M_AEAD.ExpenceApplicationDivID = AEAD.ExpenceApplicationDivID
				WHERE AEA.ApplicationStatus IN ('E', 'CD', 'CP', 'CR', 'CE', 'CC')
				<if test="companyCode != null and companyCode != ''">
				AND AEA.CompanyCode = #{companyCode}
				</if>
				<if test="ChargeJob != null and ChargeJob != ''">
				AND AEA.ChargeJob LIKE #{ChargeJob} || '%'
				</if>
				<if test="RequestType != null and RequestType != ''">
				AND AEA.RequestType = #{RequestType}
				</if>
				<if test="ProofDate != null and ProofDate != ''">
				AND AEAL.ProofDate LIKE #{ProofDate} || '%'
				</if>
				<if test="StandardBriefID != null and StandardBriefID != ''">
				AND ASB.StandardBriefID = #{StandardBriefID}
				</if>
				<if test="CostCenterCode != null and CostCenterCode != ''">
				AND ACC.CostCenterCode = #{CostCenterCode}
				</if>
				<if test="RegisterNm != null and RegisterNm != ''">
				AND UPPER(SOU.DisplayName) LIKE UPPER('%' || #{RegisterNm} || '%')
				</if>
				GROUP BY SOU.UserCode
			) B
    </select>
    
    <select id="selectMonthlyStandardBriefDeptSummaryList" statementType="CALLABLE" parameterType="cmap" resultType="cmap">
    	 CALL USP_GETMONTHLYSBDEPTLIST(
				#{companyCode},
				#{ChargeJob},
				#{RequestType},
				#{ProofDate},
				#{StandardBriefID},
				#{CostCenterCode}, 
				#{result, jdbcType=CURSOR, javaType=java.sql.ResultSet, mode=OUT, resultMap=procResultMap1}
			)
    	
    </select>
    
    <select id="selectMonthlyStandardBriefDeptSummaryListCnt" parameterType="cmap" resultType="java.lang.Long">
	    SELECT COUNT(GroupCode)
			FROM (
				SELECT GroupCode
				FROM (
					SELECT
						ACC.CostCenterCode AS GroupCode
					FROM act_expence_application AEA
					INNER JOIN act_expence_application_list AEAL ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
					INNER JOIN act_expence_application_div AEAD ON AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
					LEFT OUTER JOIN act_standard_brief ASB ON AEAD.StandardBriefID = ASB.StandardBriefID
					LEFT OUTER JOIN act_cost_center ACC ON AEAD.CostCenterCode = ACC.CostCenterCode 
					LEFT OUTER JOIN sys_object_user SOU ON AEA.RegisterID = SOU.UserCode
					LEFT OUTER JOIN ( 
						SELECT MIN(AEAD.ExpenceApplicationDivID) ExpenceApplicationDivID
						FROM act_expence_application_div AEAD
						GROUP BY AEAD.ExpenceApplicationListID
					) M_AEAD ON M_AEAD.ExpenceApplicationDivID = AEAD.ExpenceApplicationDivID
					WHERE AEA.ApplicationStatus IN ('E', 'CD', 'CP', 'CR', 'CE', 'CC')
					<if test="companyCode != null and companyCode != ''">
					AND AEA.CompanyCode = #{companyCode}
					</if>
					<if test="ChargeJob != null and ChargeJob != ''">
					AND AEA.ChargeJob LIKE #{ChargeJob} || '%'
					</if>
					<if test="RequestType != null and RequestType != ''">
					AND AEA.RequestType = #{RequestType}
					</if>
					<if test="ProofDate != null and ProofDate != ''">
					AND AEAL.ProofDate LIKE #{ProofDate} || '%'
					</if>
					<if test="StandardBriefID != null and StandardBriefID != ''">
					AND ASB.StandardBriefID = #{StandardBriefID}
					</if>
					<if test="CostCenterCode != null and CostCenterCode != ''">
					AND ACC.CostCenterCode = #{CostCenterCode}
					</if>
					GROUP BY (ACC.CostCenterCode)
				) A
				WHERE A.GroupCode IS NOT NULL
				GROUP BY A.GroupCode
			) B
    </select>
    
    <insert id="insertExpAppDailyList" parameterType="cmap">
 	    /*
 	    	expenceApplication.insertExpAppDailyList
 	    	일비 내역 저장
 	    */
		INSERT INTO act_biztrip_daily
		(
			ExpenceApplicationID
			, ExpenceApplicationListID
			, BizTripDateSt
			, BizTripDateEd
			, DailyType
			, DailyAmount
			, RegisterID
			, RegistDate
			, ModifierID
			, ModifyDate
		)
		VALUES
		(
			#{ExpenceApplicationID ,jdbcType=INTEGER}
			, #{ExpenceApplicationListID ,jdbcType=INTEGER}
			, #{BizTripDateSt ,jdbcType=VARCHAR}
			, #{BizTripDateEd ,jdbcType=VARCHAR}
			, #{DailyType ,jdbcType=VARCHAR}
			, #{DailyAmount ,jdbcType=INTEGER}
			, #{SessionUser ,jdbcType=VARCHAR}
			, SYSDATE
			, #{SessionUser ,jdbcType=VARCHAR}
			, SYSDATE
		)
	</insert>
	<delete id="deleteExpAppDailyList" parameterType="cmap">
 	    /*
 	    	expenceApplication.deleteExpAppDailyList
 	    	일비 내역 삭제
 	    */
	    DELETE FROM act_biztrip_daily
	    WHERE ExpenceApplicationListID = #{ExpenceApplicationListID}
    </delete>
    
    <insert id="insertExpAppFuelList" parameterType="cmap">
 	    /*
 	    	expenceApplication.insertExpAppFuelList
 	    	유류비 내역 저장
 	    */
		INSERT INTO act_biztrip_fuel
		(
			ExpenceApplicationID
			, ExpenceApplicationListID
			, BizTripDate
			, StartPoint
			, EndPoint
			, FuelType
			, Distance
			, UnitPrice
			, RealPrice
			, RegisterID
			, RegistDate
			, ModifierID
			, ModifyDate
		)
		VALUES
		(
			#{ExpenceApplicationID ,jdbcType=INTEGER}
			, #{ExpenceApplicationListID ,jdbcType=INTEGER}
			, #{BizTripDate ,jdbcType=VARCHAR}
			, #{StartPoint ,jdbcType=VARCHAR}
			, #{EndPoint ,jdbcType=VARCHAR}
			, #{FuelType ,jdbcType=VARCHAR}
			, #{Distance ,jdbcType=INTEGER}
			, #{FuelUnitPrice ,jdbcType=INTEGER}
			, #{FuelRealPrice ,jdbcType=INTEGER}
			, #{SessionUser ,jdbcType=VARCHAR}
			, SYSDATE
			, #{SessionUser ,jdbcType=VARCHAR}
			, SYSDATE
		)
	</insert>
	<delete id="deleteExpAppFuelList" parameterType="cmap">
 	    /*
 	    	expenceApplication.deleteExpAppFuelList
 	    	유류비 내역 삭제
 	    */
	    DELETE FROM act_biztrip_fuel
	    WHERE ExpenceApplicationListID = #{ExpenceApplicationListID}
    </delete>
    
    <select id="selectFormData" parameterType="cmap" resultType="cmap">
    	SELECT 
			WP.BusinessState AS "BusinessState"
			, WP.ProcessState AS "ProcessState"
			, WP.ParentProcessID AS "ParentProcessID"
			, WP.DeputyID AS "DeputyID"
			, WP.UserCode AS "UserCode"
			, WP.State AS "WorkitemState"
			, F.ExtInfo AS "ExtInfo"
			, F.FormName AS "FormName"
			, F.FormPrefix AS "FormPrefix"
			, F.FormID AS "FormID"
			, S.SchemaContext AS "SchemaContext"
			, ChargeJob AS "ChargeJob"
			, WP.FormInstID AS "FormInstID"
		FROM ( SELECT P.BusinessState
					, P.ProcessState
					, P.ProcessID AS "ProcessID"
					, P.ParentProcessID
					, W.DeputyID
					, W.UserCode
					, W.State
					, P.FormInstID
					, AEA.ChargeJob
				FROM jwf_process P
				INNER JOIN act_expence_application AEA
					ON AEA.ProcessID IN (P.ProcessID, P.ParentProcessID)
				INNER JOIN jwf_process JP 
					ON JP.ProcessID IN (P.ProcessID, P.ParentProcessID)
				INNER JOIN jwf_workitem W
					ON JP.ProcessID = W.ProcessID
				WHERE ExpenceApplicationID = #{ExpAppID}
				<if test="WorkitemID != null and WorkitemID != ''">
					AND W.WorkitemID = #{WorkitemID}
				</if>
			) WP
		INNER JOIN jwf_formInstance I
			ON WP.FormInstID = I.FormInstID
		INNER JOIN jwf_forms F
			ON I.FormID = F.FormID
		INNER JOIN jwf_formsschema S
			ON F.SchemaID = S.SchemaID
		WHERE ROWNUM <![CDATA[<=]]> 1
		ORDER BY ProcessID desc
    </select>
    
    <select id="selectExpAppListIDs" parameterType="cmap" resultType="cmap">
    	SELECT ExpenceApplicationListID AS "ExpenceApplicationListID"
    	FROM act_expence_application_list
    	WHERE ExpenceApplicationID = #{ExpenceApplicationID}
    </select>
    
    <select id="selectExpenceApplicationDuplicateCheck" parameterType="cmap" resultType="cmap">
    	SELECT ProcessID "ProcessID" 
    	FROM act_expence_application
    	WHERE ExpenceApplicationID = #{ExpenceApplicationID}
	</select>
    
    <insert id="insertExpAppForReuse" parameterType="cmap">
    	INSERT INTO act_expence_application
    	(
    		CompanyCode
    		, ApplicationStatus
    		, ApplicationTitle
    		, ApplicationType
    		, RegisterID
    		, RegistDate
    		, ModifierID
    		, ModifyDate
    		, ChargeJob
    		, PayDateType
    		, RequestType
    		, ReservedStr1
    		, ReservedStr2
    		, ReservedStr3
    		, ReservedStr4
    		, ReservedStr5
    		, ReservedInt1
    		, ReservedInt2
    		, DocNo
    		, CompanyName
    		, UR_DisplayName
    		, RuleItemInfo
    		, Sub_UR_Code
   			, Sub_UR_Info
    	) 
    	SELECT 
    		CompanyCode
    		, 'T'
    		, ApplicationTitle
    		, ApplicationType
    		, RegisterID
    		, SYSDATE
    		, ModifierID
    		, SYSDATE
    		, ChargeJob
    		, PayDateType
    		, RequestType
    		, ReservedStr1
    		, ReservedStr2
    		, ReservedStr3
    		, ReservedStr4
    		, ReservedStr5
    		, ReservedInt1
    		, ReservedInt2
    		, DocNo
    		, CompanyName
    		, UR_DisplayName
    		, RuleItemInfo
    		, Sub_UR_Code
   			, Sub_UR_Info
    	FROM act_expence_application
    	WHERE ExpenceApplicationID = #{ExpenceApplicationID}
				
		<selectKey keyProperty="newExpAppID" resultType="Integer" order="AFTER">
		    SELECT act_expence_application_Expenc.currval  FROM DUAL
		</selectKey>
    </insert>
    
    <insert id="insertExpAppBizTripForReuse" parameterType="cmap">
    	INSERT INTO act_biztrip_application
    	(
    		BizTripRequestID
    		, ExpenceApplicationID
    		, CompanyCode
    		, ApplicationTitle
    		, ApplicationStatus
    		, ApplicationDate
    		, FormInstanceID
    		, ProcessID
    		, UserID
    		, UserName
    		, StartDate
    		, EndDate
    		, BusinessArea
    		, BusinessPurpose
    		, BusinessDay
    		, WorkingDay
    		, Amount
    		, BizTripNoteMap
    		, RegisterID
    		, RegistDate
    		, ReservedStr1
    		, ReservedStr2
    		, ReservedStr3
    		, ReservedStr4
    		, ReservedStr5
    		, ReservedInt1
    		, ReservedInt2
    	) 
    	SELECT 
    		BizTripRequestID
    		, #{newExpAppID}
    		, CompanyCode
    		, ApplicationTitle
    		, 'T'
    		, ApplicationDate
    		, FormInstanceID
    		, ProcessID
    		, UserID
    		, UserName
    		, StartDate
    		, EndDate
    		, BusinessArea
    		, BusinessPurpose
    		, BusinessDay
    		, WorkingDay
    		, Amount
    		, BizTripNoteMap
    		, RegisterID
    		, SYSDATE
    		, ReservedStr1
    		, ReservedStr2
    		, ReservedStr3
    		, ReservedStr4
    		, ReservedStr5
    		, ReservedInt1
    		, ReservedInt2
    	FROM act_biztrip_application
    	WHERE ExpenceApplicationID = #{ExpenceApplicationID}
    </insert>
    
    <insert id="insertExpAppListForReuse" parameterType="cmap">
    	INSERT INTO act_expence_application_list
    	(
    		ExpenceApplicationID
    		, ProofDate
    		, ProofCode
    		, CardApproveNo
    		, CardUID
    		, CashNTSConfirmNum
    		, CashUID
    		, TaxNTSConfirmNum
    		, TaxUID
    		, ReceiptID
    		, PostingDate
    		, TaxType
    		, TaxCode
    		, PayAdjustMethod
    		, PayMethod
    		, PayDate
    		, IsWithholdingTax
    		, IncomeTax
    		, LocalTax
    		, VendorNo
    		, PersonalCardNo
    		, TotalAmount
    		, DocNo
    		, unDocNo
    		, DocPostingDate
    		, DocPayDate
    		, InterfaceKeyID
    		, RegisterID
    		, RegistDate
    		, ModifierID
    		, ModifyDate
    		, BankCode
    		, BankAccountNo
    		, BankAccountName
    		, ReservedStr1
    		, ReservedStr2
    		, ReservedStr3
    		, ReservedStr4
    		, ReservedStr5
    		, ReservedInt1
    		, ReservedInt2
    		, RepAmount
    		, TaxAmount
    		, VendorName
    		, RealPayDate
    		, RealPayAmount
    	) 
    	SELECT 
    		#{newExpAppID}
    		, ProofDate
    		, ProofCode
    		, CardApproveNo
    		, CardUID
    		, CashNTSConfirmNum
    		, CashUID
    		, TaxNTSConfirmNum
    		, TaxUID
    		, ReceiptID
    		, PostingDate
    		, TaxType
    		, TaxCode
    		, PayAdjustMethod
    		, PayMethod
    		, PayDate
    		, IsWithholdingTax
    		, IncomeTax
    		, LocalTax
    		, VendorNo
    		, PersonalCardNo
    		, TotalAmount
    		, DocNo
    		, unDocNo
    		, DocPostingDate
    		, DocPayDate
    		, InterfaceKeyID
    		, RegisterID
    		, SYSDATE
    		, ModifierID
    		, SYSDATE
    		, BankCode
    		, BankAccountNo
    		, BankAccountName
    		, ReservedStr1
    		, ReservedStr2
    		, ReservedStr3
    		, ReservedStr4
    		, ReservedStr5
    		, ReservedInt1
    		, ReservedInt2
    		, RepAmount
    		, TaxAmount
    		, VendorName
    		, RealPayDate
    		, RealPayAmount
    	FROM act_expence_application_list
    	WHERE ExpenceApplicationListID = #{ExpenceApplicationListID}
		
		<selectKey keyProperty="newExpAppListID" resultType="Integer" order="AFTER">
		    SELECT act_expence_application_list_E.currval  FROM DUAL
		</selectKey>
    </insert>
    
    <insert id="insertExpAppFileForReuse" parameterType="cmap">
    	INSERT INTO act_expence_application_file
    	(
    		ExpenceApplicationListID
    		, FileID
    		, RegisterID
    		, RegistDate
    	) 
    	SELECT 
    		#{newExpAppListID}
    		, FileID
    		, RegisterID
    		, SYSDATE
    	FROM act_expence_application_file
    	WHERE ExpenceApplicationListID = #{ExpenceApplicationListID}
    </insert>
    
    <insert id="insertExpAppRefForReuse" parameterType="cmap">
    	INSERT INTO act_expence_application_ref
    	(
    		ExpenceApplicationListID
    		, ProcessID
    		, RegisterID
    		, RegistDate
    	) 
    	SELECT 
    		#{newExpAppListID}
    		, ProcessID
    		, RegisterID
    		, SYSDATE
    	FROM act_expence_application_ref
    	WHERE ExpenceApplicationListID = #{ExpenceApplicationListID}
    </insert>
    
    <insert id="insertExpAppDailyForReuse" parameterType="cmap">
    	INSERT INTO act_biztrip_daily
    	(
    		ExpenceApplicationID
    		, ExpenceApplicationListID
    		, BizTripDateSt
    		, BizTripDateEd
    		, DailyType
    		, DailyAmount
    		, RegisterID
    		, RegistDate
    	) 
    	SELECT
    		#{newExpAppID}
    		, #{newExpAppListID}
    		, BizTripDateSt
    		, BizTripDateEd
    		, DailyType
    		, DailyAmount
    		, RegisterID
    		, SYSDATE
    	FROM act_biztrip_daily
    	WHERE ExpenceApplicationListID = #{ExpenceApplicationListID}
    </insert>
    
    <insert id="insertExpAppFuelForReuse" parameterType="cmap">
    	INSERT INTO act_biztrip_fuel
    	(
    		ExpenceApplicationID
    		, ExpenceApplicationListID
    		, BizTripDate
    		, StartPoint
    		, EndPoint
    		, FuelType
    		, Distance
    		, UnitPrice
    		, RealPrice
    		, RegisterID
    		, RegistDate
    	) 
    	SELECT 
    		#{newExpAppID}
    		, #{newExpAppListID}
    		, BizTripDate
    		, StartPoint
    		, EndPoint
    		, FuelType
    		, Distance
    		, UnitPrice
    		, RealPrice
    		, RegisterID
    		, SYSDATE
    	FROM act_biztrip_fuel
    	WHERE ExpenceApplicationListID = #{ExpenceApplicationListID}
    </insert>
    
    <insert id="insertExpAppDivForReuse" parameterType="cmap">
    	INSERT INTO act_expence_application_div
    	(
    		ExpenceApplicationListID
    		, AccountCode
    		, AccountName
    		, StandardBriefID
    		, StandardBriefName
    		, CostCenterCode
    		, CostCenterName
    		, IOCode
    		, IOName
    		, Amount
    		, UsageComment
    		, InterfaceKeyID
    		, RegisterID
    		, RegistDate
    		, ReservedStr1
    		, ReservedStr2
    		, ReservedStr3
    		, ReservedStr4
    		, ReservedStr5
    		, ReservedInt1
    		, ReservedInt2
    	) 
    	SELECT 
    		#{newExpAppListID}
    		, AccountCode
    		, AccountName
    		, StandardBriefID
    		, StandardBriefName
    		, CostCenterCode
    		, CostCenterName
    		, IOCode
    		, IOName
    		, Amount
    		, UsageComment
    		, InterfaceKeyID
    		, RegisterID
    		, SYSDATE
    		, ReservedStr1
    		, ReservedStr2
    		, ReservedStr3
    		, ReservedStr4
    		, ReservedStr5
    		, ReservedInt1
    		, ReservedInt2
    	FROM act_expence_application_div
    	WHERE ExpenceApplicationListID = #{ExpenceApplicationListID}
    </insert>
    
    <select id="selectCardList" parameterType="cmap" resultType="cmap">
 	    /*
 	    	expenceApplication.selectCardList
 	    	카드목록 조회
 	    */
				
		SELECT 	DISTINCT CC.CorpCardID AS "CorpCardID"
			, 	CC.CardNo AS "CardNo"
			, 	(CC.CardNo || '||' || NVL(UR.DisplayName,'')) AS "CorpCardName"
		FROM 	act_corp_card CC	
		LEFT JOIN sys_object_user UR 
		ON CC.OwnerUserCode = UR.UserCode
		LEFT JOIN act_corp_card_return RET
		ON CC.CardNo = RET.CardNo
		WHERE	CC.CardClass = CASE WHEN (
			SELECT ExpAppType FROM act_expence_forms A
			 WHERE FormCode = #{RequestType} AND IsUse = 'Y'
				AND	CompanyCode = (
					CASE WHEN EXISTS (SELECT ExpenceFormID FROM act_expence_forms WHERE CompanyCode = #{CompanyCode} AND FormCode = #{RequestType} AND IsUse = 'Y')
					THEN #{CompanyCode}
					ELSE 'ALL'
					END
				)
			 ) = 'CO' THEN 'CCL3' ELSE CardClass END /*거래처 정산서는 공용법인카드만*/
		AND		(
					CC.OwnerUserCode	= #{UR_Code}
					OR (
						RET.ReleaseUserCode = #{UR_Code}
						AND (
							SELECT COUNT(CR.ReceiptID)
							FROM act_card_receipt CR 
							WHERE CR.ApproveDate BETWEEN TO_CHAR(RET.ReleaseDate, 'YYYYMMDD') AND TO_CHAR(NVL(RET.ReturnDate, '29991231'), 'YYYYMMDD')
							AND RET.ReleaseUserCode = #{UR_Code}
							AND CR.CardNo = RET.CardNo
							AND CR.Active = 'N'
						) > 0
					)
					OR CC.CardNo		IN (SELECT	CR.CardNo
											FROM	act_card_receipt CR
											WHERE	CR.TossUserCode = #{UR_Code}
											AND		CR.Active = 'N'
										)
					OR CC.CorpCardID	IN (SELECT	ACCSU.CorpCardID
											FROM	act_corp_card_search_user ACCSU 
											WHERE	ACCSU.OwnerUserCode = #{UR_Code}
										)
				)
			AND CC.CardStatus NOT IN ('CSTS03')				
	</select>
    
    <update id="updateAuditReason" parameterType="cmap">
    	UPDATE act_expence_application
    	SET AuditReason = #{AuditReason}
    	WHERE ExpenceApplicationID = #{ExpenceApplicationID}
    </update>
    
    <select id="selRecentVendorInfo" parameterType="cmap" resultType="cmap">
    	/*
    		expenceApplication.selRecentVendorInfo
    		최근사용한 Vendor의 증빙정보를 가져온다.
    	*/
    	SELECT 
			EAL.ExpenceApplicationListID AS "ExpenceApplicationListID"
			, EAL.ExpenceApplicationID AS "ExpenceApplicationID"
			, EAL.ProofDate AS "ProofDate"
			, EAL.ProofCode AS "ProofCode"
			, EAL.CardApproveNo AS "CardApproveNo"
			, EAL.CardUID AS "CardUID"
			, EAL.CashNTSConfirmNum AS "CashNTSConfirmNum"
			, EAL.CashUID AS "CashUID"
			, EAL.TaxNTSConfirmNum AS "TaxNTSConfirmNum"
			, EAL.TaxUID AS "TaxUID"
			, EAL.ReceiptID AS "ReceiptID"
			, EAL.PostingDate AS "PostingDate"
			, EAL.TaxType AS "TaxType"
			, EAL.TaxCode AS "TaxCode"
			, EAL.PayAdjustMethod AS "PayAdjustMethod"
			, EAL.PayMethod AS "PayMethod"
			, EAL.PayDate AS "PayDate"
			, EAL.IsWithholdingTax AS "IsWithholdingTax"
			, EAL.IncomeTax AS "IncomeTax"
			, EAL.LocalTax AS "LocalTax"
			, EAL.VendorNo AS "VendorNo"
			, EAL.PersonalCardNo AS "PersonalCardNo"
			, EAL.TotalAmount AS "TotalAmount"
			, EAL.DocNo AS "DocNo"
			, EAL.unDocNo AS "unDocNo"
			, EAL.DocPostingDate AS "DocPostingDate"
			, EAL.DocPayDate AS "DocPayDate"
			, EAL.InterfaceKeyID AS "InterfaceKeyID"
			, EAL.RegisterID AS "RegisterID"
			, EAL.RegistDate AS "RegistDate"
			, EAL.ModifierID AS "ModifierID"
			, EAL.ModifyDate AS "ModifyDate"
			, EAL.BankCode AS "BankCode"
			, EAL.BankAccountNo AS "BankAccountNo"
			, EAL.BankAccountName AS "BankAccountName"
			, EAL.ReservedStr1 AS "ReservedStr1"
			, EAL.ReservedStr2 AS "ReservedStr2"
			, EAL.ReservedStr3 AS "ReservedStr3"
			, EAL.ReservedStr4 AS "ReservedStr4"
			, EAL.ReservedStr5 AS "ReservedStr5"
			, EAL.ReservedInt1 AS "ReservedInt1"
			, EAL.ReservedInt2 AS "ReservedInt2"
			, EAL.RepAmount AS "RepAmount"
			, EAL.TaxAmount AS "TaxAmount"
			, EAL.VendorName AS "VendorName"
			, EAL.CapitalStatus AS "CapitalStatus"
			, EAL.CapitalProcessID AS "CapitalProcessID"
			, EAL.RealPayDate AS "RealPayDate"
			, EAL.RealPayAmount AS "RealPayAmount"
			, EAL.PayTarget AS "PayTarget"
			, EAL.PayType AS "PayType"
			, EAL.AlterPayeeNo AS "AlterPayeeNo"
			, EAL.AlterPayeeName AS "AlterPayeeName"
			, EAL.CreditAccount AS "CreditAccount"
			, EAL.DebitAccount AS "DebitAccount"
			, EAL.ProviderNo AS "ProviderNo"
			, EAL.ProviderName AS "ProviderName"
			, EAL.Providee AS "Providee"
			, EAL.BillType AS "BillType"
			, EAL.ProofTime AS "ProofTime"
			, EAL.StoreName AS "StoreName"
			, EAL.Currency AS "Currency"
			, EAL.ExchangeRate AS "ExchangeRate"
			, EAL.LocalAmount AS "LocalAmount"
			, EAD.ExpenceApplicationDivID AS "ExpenceApplicationDivID"
			, EAD.ExpenceApplicationListID AS "ExpenceApplicationListID"
			, EAD.AccountCode AS "AccountCode"
			, EAD.AccountName AS "AccountName"
			, EAD.StandardBriefID AS "StandardBriefID"
			, EAD.StandardBriefName AS "StandardBriefName"
			, EAD.CostCenterCode AS "CostCenterCode"
			, EAD.CostCenterName AS "CostCenterName"
			, EAD.IOCode AS "IOCode"
			, EAD.IOName AS "IOName"
			, EAD.Amount AS "Amount"
			, EAD.UsageComment AS "UsageComment"
			, EAD.InterfaceKeyID AS "InterfaceKeyID"
			, EAD.RegisterID AS "RegisterID"
			, EAD.RegistDate AS "RegistDate"
			, EAD.ReservedStr1 AS "ReservedStr1"
			, EAD.ReservedStr2 AS "ReservedStr2"
			, EAD.ReservedStr3 AS "ReservedStr3"
			, EAD.ReservedStr4 AS "ReservedStr4"
			, EAD.ReservedStr5 AS "ReservedStr5"
			, EAD.ReservedInt1 AS "ReservedInt1"
			, EAD.ReservedInt2 AS "ReservedInt2"
		FROM ACT_EXPENCE_APPLICATION_LIST EAL 
	    INNER JOIN ACT_EXPENCE_APPLICATION_DIV EAD 
		ON EAL.ExpenceApplicationListID = EAD.ExpenceApplicationListID
		WHERE EAL.ExpenceApplicationListID = (
			SELECT *
			FROM (
				SELECT  EAD.ExpenceApplicationListID
				FROM ACT_EXPENCE_APPLICATION EA
				INNER JOIN ACT_EXPENCE_APPLICATION_LIST EAL
				ON EA.ExpenceApplicationID = eal.ExpenceApplicationID
				INNER JOIN ACT_EXPENCE_APPLICATION_DIV EAD
				ON EAL.ExpenceApplicationListID = EAD.ExpenceApplicationListID
				WHERE 1=1
				AND EA.ApplicationStatus = 'E'
				AND ( ProofCode = 'TaxBill' OR ProofCode = 'PaperBill' OR ProofCode = 'EtcEvid')
				AND REPLACE(EAL.VendorNo, '-', '') =REPLACE(#{BusinessNumber}, '-', '')
				AND EAL.ProofCode = #{proofCode}
				AND EA.RegisterID = #{UR_Code}
				ORDER BY EA.RegistDate DESC
			) A
			WHERE ROWNUM = 1
		)
		
    </select>
    
    
	<select id="selectStoreCategoryList" parameterType="cmap" resultType="cmap">
		/*
			expenceApplication.selectStoreCategoryList
		*/
		
		SELECT	A.CategoryID            AS "CategoryID"     
			,	A.CompanyCode           AS "CompanyCode"     
			,	A.CategoryCode          AS "CategoryCode"     
			,	A.CategoryName          AS "CategoryName"   
			,	A.AccountCode           AS "AccountCode"    
			,	A.Reserved1             AS "Reserved1"     
			,	A.Reserved2             AS "Reserved2"     
			,	A.Reserved3             AS "Reserved3"     
			,	B.StandardBriefID       AS "StandardBriefID"
			,	B.StandardBriefName     AS "StandardBriefName"        
			,	C.TaxCode               AS "TaxCode"     
		FROM act_store_category A
		LEFT JOIN act_standard_brief B
		ON A.StandardBriefID = B.StandardBriefID
		LEFT JOIN act_account C
		ON B.AccountID = C.AccountID
		WHERE	1=1
		<if test="CompanyCode != null and CompanyCode != ''">
		 	AND A.CompanyCode = #{CompanyCode}
		</if>
	</select>
    
	<select id="selectStandardBriefCtrlCombo" parameterType="cmap" resultType="cmap">
		/*
			expenceApplication.selectStandardBriefCtrlCombo
		*/
		
		SELECT
			SB.StandardBriefID AS "StandardBriefID",
			SB.StandardBriefName AS "StandardBriefName"
		FROM act_account AC
		INNER JOIN act_standard_brief SB
		ON AC.AccountID = SB.AccountID
		WHERE SB.CtrlCode IS NOT NULL AND SB.CtrlCode != ''
		<if test="companyCode != null and companyCode != ''">
		AND AC.CompanyCode = #{CompanyCode}
		</if>
	</select>
    
	<select id="selectCtrlCode" parameterType="cmap" resultType="java.lang.String">
		/*
			expenceApplication.selectCtrlCode
		*/
		
		SELECT CtrlCode AS "CtrlCode"
		FROM act_standard_brief
		WHERE StandardBriefID = #{StandardBriefID}
	</select>
    
	<select id="selectCtrlCodeHeader" parameterType="cmap" resultType="cmap">
		/*
			expenceApplication.selectCtrlCodeHeader
		*/
		
		SELECT Code AS "Code", CodeName AS "CodeName"
		FROM act_base_code
		WHERE Code IN
		<foreach collection="CtrlCode" item="item" index="index" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</select>
    
	<select id="selectMajorAccountUsageHistory" parameterType="cmap" resultMap="ReservedStrCLOB">
		/*
			expenceApplication.selectMajorAccountUsageHistory
		*/
		<if test="rowStart != null and rowEnd != null"><include refid="oracle.include.pagingHeader" /></if>
		SELECT 
			FN_GETACTBASECODENAME('CompanyCode', AEA.CompanyCode, #{CompanyCode}) AS "CompanyName",
			AEA.ApplicationTitle AS "ApplicationTitle",
			(SELECT DeptName FROM sys_object_user_basegroup SOUB WHERE AEA.RegisterID = SOUB.UserCode AND SOUB.JobType = 'Origin') AS "DeptName",		
			(SELECT DisplayName FROM sys_object_user SOU WHERE AEA.RegisterID = SOU.UserCode) AS "UserName",
			TO_CHAR(TO_DATE(AEAL.PostingDate, 'YYYYMMDD'), 'YYYY-MM-DD') AS "PostingDate",
			AEAD.CostCenterName AS "CostCenterName",
			AEAD.AccountName AS "AccountName",
			AEAD.StandardBriefName AS "StandardBriefName",
			AEAL.TotalAmount AS "TotalAmount",
			AEAD.Amount AS "Amount",						
			AEAD.UsageComment AS "UsageComment",
			AEAD.ReservedStr2 AS "ReservedStr2",
			
			AEA.RegisterID AS "RegisterID",
			AEAD.CostCenterCode AS "CostCenterCode",
			AEAD.AccountCode AS "AccountCode",
			AEAD.StandardBriefID AS "StandardBriefID",
			
			AEA.ExpenceApplicationID AS "ExpenceApplicationID",
			AEA.ProcessID AS "ProcessID",
			(SELECT FormInstID FROM jwf_process P WHERE AEA.ProcessID = P.ProcessID) AS "FormInstID",		
			AEA.ApplicationStatus AS "ApplicationStatus"
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEAL
		ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
		INNER JOIN act_expence_application_div AEAD
		ON AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
		WHERE AEA.ApplicationStatus = 'E'
		<if test="CompanyCode != null and CompanyCode != ''">
		AND AEA.CompanyCode = #{CompanyCode}
		</if>
		<if test="PostingDate != null and PostingDate != ''">
		AND AEAL.PostingDate LIKE (#{PostingDate} || '%')
		</if>
		<if test="StandardBriefID != null and StandardBriefID != ''">
		AND AEAD.StandardBriefID = #{StandardBriefID}
		</if>					
		<trim prefix="ORDER BY"  prefixOverrides =",">
			<if test = "sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
				, AEA.ExpenceApplicationID ASC
		    </if>
		  	<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
			 	, 	
				<choose>	
					<when test='sortColumn.equalsIgnoreCase("CompanyName")'>"CompanyName"</when>
					<when test='sortColumn.equalsIgnoreCase("ApplicationTitle")'>"ApplicationTitle"</when>
					<when test='sortColumn.equalsIgnoreCase("DeptName")'>"DeptName"</when>
					<when test='sortColumn.equalsIgnoreCase("UserName")'>"UserName"</when>
					<when test='sortColumn.equalsIgnoreCase("PostingDate")'>"PostingDate"</when>
					<when test='sortColumn.equalsIgnoreCase("CostCenterName")'>"CostCenterName"</when>
					<when test='sortColumn.equalsIgnoreCase("AccountName")'>"AccountName"</when>
					<when test='sortColumn.equalsIgnoreCase("StandardBriefName")'>"StandardBriefName"</when>
					<when test='sortColumn.equalsIgnoreCase("TotalAmount")'>"TotalAmount"</when>
					<when test='sortColumn.equalsIgnoreCase("Amount")'>"Amount"</when>
					<when test='sortColumn.equalsIgnoreCase("UsageComment")'>"UsageComment"</when>
				</choose>	
				<choose>	
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>	
			</if>
		</trim>
		<if test="rowStart != null and rowEnd != null"><include refid="oracle.include.pagingFooter" /></if>
	</select>
    
	<select id="selectMajorAccountUsageHistoryCnt" parameterType="cmap" resultType="java.lang.Long">
		/*
			expenceApplication.selectMajorAccountUsageHistoryCnt
		*/
		
		SELECT COUNT(*)
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEAL
		ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
		INNER JOIN act_expence_application_div AEAD
		ON AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
		WHERE AEA.ApplicationStatus = 'E'
		<if test="CompanyCode != null and CompanyCode != ''">
		AND AEA.CompanyCode = #{CompanyCode}
		</if>
		<if test="PostingDate != null and PostingDate != ''">
		AND AEAL.PostingDate LIKE (#{PostingDate} || '%')
		</if>
		<if test="StandardBriefID != null and StandardBriefID != ''">
		AND AEAD.StandardBriefID = #{StandardBriefID}
		</if>
	</select>
	
	<delete id="deleteAttendantByDivID" parameterType="cmap">
		DELETE FROM act_app_attendinfo
		WHERE ExpenceApplicationDivID = #{ExpenceApplicationDivID}
	</delete>
		
    <insert id="insertAttendantInfo" parameterType="cmap">
 	    /*
 	    	expenceApplication.insertAttendantInfo
 	    	편익제공 저장
 	    */
		 INSERT INTO act_app_attendinfo
		 (
		 	ExpenceApplicationListID
		 	, ExpenceApplicationDivID
		 	, AttendTypeCode
		    , AttendTypeName
		    , Solicit
		    , Capital
		    , CompanyCode
		    , CompanyName
		    , DeptCode
		    , DeptName
		    , UserCode
		    , UserName
		    , Amount
		    , Purpose
		    , RegistDate
		    , RegisterID
		 )
		 VALUES
		 (		 	
	       #{ExpenceApplicationListID}
	        , #{ExpenceApplicationDivID}
			, #{AttendTypeCode ,jdbcType=VARCHAR}
			, #{AttendTypeName ,jdbcType=VARCHAR}
			, #{Solicit ,jdbcType=VARCHAR}
			, #{Capital ,jdbcType=VARCHAR}
			, #{CompanyCode ,jdbcType=VARCHAR}
			, #{CompanyName ,jdbcType=VARCHAR}
			, #{DeptCode ,jdbcType=VARCHAR}
			, #{DeptName ,jdbcType=VARCHAR}
			, #{UserCode ,jdbcType=VARCHAR}
			, #{UserName ,jdbcType=VARCHAR}
			, #{Amount ,jdbcType=INTEGER}
			, #{Purpose ,jdbcType=VARCHAR}
			, SYSDATE
			, #{SessionUser ,jdbcType=VARCHAR}
		 )
	</insert>
	
	<select id="selectAttendantInfoList" parameterType="cmap" resultType="cmap">
		<if test="rowStart != null and rowEnd != null">
			<include refid="oracle.include.pagingHeader" />
		</if>		
		SELECT
		    AEA.ExpenceApplicationID AS "ExpenceApplicationID",
		    AEAL.ExpenceApplicationListID AS "ExpenceApplicationListID",
		    AEAD.ExpenceApplicationDivID AS "ExpenceApplicationDivID",
            AEA.CompanyCode AS "CompanyCode",
            (SELECT CodeName FROM act_base_code WHERE Code = AEA.CompanyCode) AS "CompanyName",
		    ATT.AccAttendID AS "AccAttendID",
		    (SELECT FormName FROM act_expence_forms WHERE FormCode = AEA.RequestType and CompanyCode = AEA.CompanyCode) AS "RequestTypeName",
		    AEA.ApplicationDate AS "ApplicationDate",
            TO_CHAR(AEA.ApplicationDate, 'yyyy.mm.dd') AS "ApplicationDateStr",
		    AEAL.ProofDate AS "ProofDate",
		    TO_CHAR(TO_DATE(AEAL.ProofDate, 'yyyymmdd'), 'yyyy.mm.dd') AS "ProofDateStr",
		    CR.CardNo AS "CardNo",
		    AEAL.StoreName AS "StoreName",
		    (SELECT fn_BaseGetDictionary_S('ko', MultiDisplayName) FROM sys_object_user WHERE UserCode = CR.CardUserCode) AS "CardOwnerName",
		    CR.StoreCategory AS "StoreCategory",
		    AEAD.Amount AS "RequestAmount",
		    ATT.AttendTypeName AS "AttendTypeName",
		    ATT.DeptName AS "DeptName",
		    ATT.UserName AS "UserName",
		    ATT.Amount AS "PerAmount",
		    ATT.Purpose AS "Purpose",
		    AEAD.StandardBriefName AS "StandardBriefName"
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEAL
		ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
		INNER JOIN act_expence_application_div AEAD
		ON AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
		INNER JOIN act_app_attendinfo ATT
		ON AEAD.ExpenceApplicationDivID = ATT.ExpenceApplicationDivID
		LEFT OUTER JOIN act_card_receipt CR
		ON AEAL.CardUID = CR.ReceiptID
		LEFT OUTER JOIN sys_object_user SOU
		ON AEA.RegisterID = SOU.UserCode
		WHERE AEA.ApplicationStatus = 'E'
		<if test="CompanyCode != null and CompanyCode != ''">
		AND AEA.CompanyCode = #{CompanyCode}
		</if>
		<if test="RequestType != null and RequestType != ''">
		AND AEA.RequestType = #{RequestType}
		</if>
		<if test="ProofDateSt != null and ProofDateSt != ''">
		AND AEAL.ProofDate <![CDATA[>=]]> #{ProofDateSt}
		</if>
		<if test="ProofDateEd != null and ProofDateEd != ''">
		AND AEAL.ProofDate <![CDATA[<=]]> #{ProofDateEd}
		</if>
		<if test="AttendUserName != null and AttendUserName != ''">
		AND ATT.UserName LIKE '%'||#{AttendUserName}||'%'
		</if>
		<if test="RegisterNm != null and RegisterNm != ''">
		AND SOU.MultiDisplayName LIKE '%'||#{RegisterNm}||'%'
		</if>
		<if test="StandardBriefID != null and StandardBriefID != ''">
		AND AEAD.StandardBriefID = #{StandardBriefID}
		</if>				
		<trim prefix="ORDER BY"  prefixOverrides =",">
			<if test = "sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
				, AEAL.ProofDate DESC
		    </if>
		  	<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
				<choose>	
					<when test='sortColumn.equalsIgnoreCase("CompanyName")'>"CompanyName"</when>
					<when test='sortColumn.equalsIgnoreCase("AccAttendID")'>"AccAttendID"</when>
					<when test='sortColumn.equalsIgnoreCase("RequestTypeName")'>"RequestTypeName"</when>
					<when test='sortColumn.equalsIgnoreCase("ApplicationDate")'>"ApplicationDate"</when>
					<when test='sortColumn.equalsIgnoreCase("ProofDate")'>"ProofDate"</when>
					<when test='sortColumn.equalsIgnoreCase("ProofDateStr")'>"ProofDateStr"</when>
					<when test='sortColumn.equalsIgnoreCase("CardNo")'>"CardNo"</when>
					<when test='sortColumn.equalsIgnoreCase("StoreName")'>"StoreName"</when>
					<when test='sortColumn.equalsIgnoreCase("CardOwnerName")'>"CardOwnerName"</when>
					<when test='sortColumn.equalsIgnoreCase("StoreCategory")'>"StoreCategory"</when>
					<when test='sortColumn.equalsIgnoreCase("RequestAmount")'>"RequestAmount"</when>
					<when test='sortColumn.equalsIgnoreCase("AttendTypeName")'>"AttendTypeName"</when>
					<when test='sortColumn.equalsIgnoreCase("DeptName")'>"DeptName"</when>
					<when test='sortColumn.equalsIgnoreCase("UserName")'>"UserName"</when>
					<when test='sortColumn.equalsIgnoreCase("PerAmount")'>"PerAmount"</when>
					<when test='sortColumn.equalsIgnoreCase("Purpose")'>"Purpose"</when>
					<when test='sortColumn.equalsIgnoreCase("StandardBriefName")'>"StandardBriefName"</when>
				</choose>	
				<choose>	
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>	
			</if>
		</trim>
		<if test="rowStart != null and rowEnd != null">
			<include refid="oracle.include.pagingFooter" />
		</if>
	</select>
	
	<select id="selectAttendantInfoListCnt" parameterType="cmap" resultType="java.lang.Long">
		SELECT COUNT(ATT.AccAttendID)
		FROM act_expence_application AEA
		INNER JOIN act_expence_application_list AEAL
		ON AEA.ExpenceApplicationID = AEAL.ExpenceApplicationID
		INNER JOIN act_expence_application_div AEAD
		ON AEAL.ExpenceApplicationListID = AEAD.ExpenceApplicationListID
		INNER JOIN act_app_attendinfo ATT
		ON AEAD.ExpenceApplicationDivID = ATT.ExpenceApplicationDivID
		LEFT OUTER JOIN act_card_receipt CR
		ON AEAL.CardUID = CR.ReceiptID
		LEFT OUTER JOIN sys_object_user SOU
		ON AEA.RegisterID = SOU.UserCode
		WHERE AEA.ApplicationStatus = 'E'
		<if test="CompanyCode != null and CompanyCode != ''">
		AND AEA.CompanyCode = #{CompanyCode}
		</if>
		<if test="RequestType != null and RequestType != ''">
		AND AEA.RequestType = #{RequestType}
		</if>
		<if test="ProofDateSt != null and ProofDateSt != ''">
		AND AEAL.ProofDate <![CDATA[>=]]> #{ProofDateSt}
		</if>
		<if test="ProofDateEd != null and ProofDateEd != ''">
		AND AEAL.ProofDate <![CDATA[<=]]> #{ProofDateEd}
		</if>
		<if test="AttendUserName != null and AttendUserName != ''">
		AND ATT.UserName LIKE '%'||#{AttendUserName}||'%'
		</if>
		<if test="RegisterNm != null and RegisterNm != ''">
		AND SOU.MultiDisplayName LIKE '%'||#{RegisterNm}||'%'
		</if>
		<if test="StandardBriefID != null and StandardBriefID != ''">
		AND AEAD.StandardBriefID = #{StandardBriefID}
		</if>
	</select>
	
	<select id="existsFormAuth" parameterType="cmap" resultType="java.lang.Integer">
		SELECT COUNT(1)
		FROM jwf_forms jf
		INNER JOIN JWF_FormClass jfc on
			<choose>
				<when test="formId != null and formId != '' ">
					jf.FormID = #{formId}
				</when>
				<when test="formPrefix != null and formPrefix != '' ">
					jf.FormPrefix = #{formPrefix}
				</when>
			</choose>
		and jf.FormClassID = jfc.FormClassID
		where 
		(
			( jfc.AclAllYN = 'Y' and jfc.EntCode IN ('ORGROOT',  #{entCode}) )
			OR exists 
			( 
				select 1 from jwf_forms_acl jfa 
				where jfa.TargetID = jfc.FormClassID and jfa.ObjectType = 'CLASS'
				and 
				(
					jfa.GroupType = 'Company' and jfa.CompanyCode = #{entCode}
					or
					jfa.GroupType = 'Dept' and jfa.GroupCode  = #{deptCode}
				)
			)
		)
		AND 
		(
			(
				jf.AclAllYN = 'Y'
				<if test='isSaaS == "Y"'>
				AND	jf.CompanyCode IN ('ORGROOT',  #{entCode})
				</if>
			)
			OR exists 
			( 
				select 1 from jwf_forms_acl jfa 
				where jfa.TargetID = jf.FormID and jfa.ObjectType = 'FORM'
				and 
				(
				jfa.GroupType = 'Company' and jfa.CompanyCode = #{entCode}
				or
				jfa.GroupType = 'Dept' and jfa.GroupCode  = #{deptCode}
				)
			)
		)
	</select>
	
	<select id="selectDomainCheck" parameterType="cmap" resultType="cmap">
	    SELECT FI.FormInstID AS "FormInstID"
	    FROM jwf_forminstance FI
		WHERE FI.FormInstID = #{FormInstID}
		AND FI.EntCode IN 
        <foreach item="item" index="index" collection="EntCodeList" open="(" close=")" separator=",">
           	#{item.optionValue}
   		</foreach>
	 	AND ROWNUM = 1
	</select>
	
	<select id="selectUsingSignImageId" parameterType="java.lang.String" resultType="java.lang.String">
	    SELECT FileID AS "FileID" 
	    FROM jwf_signimage
	    WHERE UserCode = #{UserCode} AND IsUse = 'Y'
	    ORDER BY InsertDate DESC
	</select>
	
	<select id="selectFormInstanceIsArchived" parameterType="cmap" resultType="cmap">
		SELECT CASE WHEN COUNT(*) > 0 THEN 'false' ELSE 'true' END AS "isArchive"
		FROM jwf_process
		WHERE FormInstID = #{FormInstID}
		AND ProcessState = 288
	</select>
	
	<select id="selectProcess" parameterType="cmap" resultType="cmap">
		<![CDATA[
			SELECT Process.ProcessID AS "ProcessID",
					Process.ProcessDescriptionID AS "ProcessDescriptionID",
					Process.FormInstID AS "FormInstID",
					Workitem.State AS "State",
					Process.ProcessState AS "ProcessState",
					Process.ParentProcessID AS "ParentProcessID",
					Workitem.UserCode AS "UserCode",
					Process.DocSubject AS "DocSubject",
					NVL(Workitem.DeputyID,'') AS "DeputyID",
					Process.BusinessState AS "BusinessState",
					Process.ProcessName AS "ProcessName",
					Workitem.TaskID AS "TaskID",
					Performer.SubKind AS "SubKind"
			FROM jwf_process Process
			INNER JOIN jwf_workitem Workitem ON Process.ProcessID = Workitem.ProcessID
			INNER JOIN jwf_performer Performer ON Workitem.PerformerID = Performer.PerformerID
			WHERE Workitem.WorkitemID = #{workitemID}
		]]>
	</select>
	
	<select id="selectOnlyProcess" parameterType="cmap" resultType="cmap">
		<![CDATA[
	    	SELECT 	ProcessID AS "ProcessID",
				    	ProcessDescriptionID AS "ProcessDescriptionID",
				    	FormInstID AS "FormInstID",
				    	'' AS "State",
				    	ProcessState AS "ProcessState", 
				    	ParentProcessID AS "ParentProcessID", 
				    	'' AS "UserCode",
				    	DocSubject AS "DocSubject",
				    	'' AS "DeputyID",
				    	BusinessState AS "BusinessState",
	    				ProcessName AS "ProcessName"
			FROM jwf_process
			WHERE ProcessID = #{processID}
	    ]]>
	</select>
	
	<select id="selectProcessDes" parameterType="cmap" resultType="cmap">
		<![CDATA[
			SELECT ProcessDescriptionID AS "ProcessDescriptionID",
			FormInstID AS "FormInstID",
			FormID AS "FormID",
			FormName AS "FormName",
			FormSubject AS "FormSubject",
			IsSecureDoc AS "IsSecureDoc",
			IsFile AS "IsFile",
			FileExt AS "FileExt",
			IsComment AS "IsComment",
			ApproverCode AS "ApproverCode",
			ApproverName AS "ApproverName",
			ApprovalStep AS "ApprovalStep",
			ApproverSIPAddress AS "ApproverSIPAddress",
			IsReserved AS "IsReserved",
			ReservedGubun AS "ReservedGubun",
			ReservedTime AS "ReservedTime",
			Priority AS "Priority",
			IsModify AS "IsModify",
			Reserved1 AS "Reserved1",
			Reserved2 AS "Reserved2",
			BusinessData1 AS "BusinessData1",
			BusinessData2 AS "BusinessData2",
			BusinessData3 AS "BusinessData3",
			BusinessData4 AS "BusinessData4",
			BusinessData5 AS "BusinessData5",
			BusinessData6 AS "BusinessData6",
			BusinessData7 AS "BusinessData7",
			BusinessData8 AS "BusinessData8",
			BusinessData9 AS "BusinessData9",
			BusinessData10 AS "BusinessData10"
			FROM jwf_processdescription
			WHERE ProcessDescriptionID = #{processDescID}
		]]>
	</select>
	
	<select id="selectFormInstance" parameterType="cmap" resultType="cmap">
		<![CDATA[
			SELECT FormInstID AS "FormInstID",
						ProcessID AS "ProcessID",
						FormID AS "FormID",
						SchemaID AS "SchemaID",
						Subject AS "Subject",
						InitiatorID AS "InitiatorID",
						InitiatorName AS "InitiatorName",
						InitiatorUnitID AS "InitiatorUnitID",
						InitiatorUnitName AS "InitiatorUnitName",
						TO_CHAR(InitiatedDate,'YYYY-MM-DD HH24:MI:SS') AS "InitiatedDate",
						CompletedDate AS "CompletedDate",
						DeletedDate AS "DeletedDate",
						LastModifiedDate AS "LastModifiedDate",
						LastModifierID AS "LastModifierID",
						EntCode AS "EntCode",
						EntName AS "EntName",
						DocNo AS "DocNo",
						DocLevel AS "DocLevel",
						DocClassID AS "DocClassID",
						DocClassName AS "DocClassName",
						DocSummary AS "DocSummary",
						IsPublic AS "IsPublic",
						SaveTerm AS "SaveTerm",
						AttachFileInfo AS "AttachFileInfo",
						AppliedDate AS "AppliedDate",
						AppliedTerm AS "AppliedTerm",
						ReceiveNo AS "ReceiveNo",
						ReceiveNames AS "ReceiveNames",
						ReceiptList AS "ReceiptList",
						BodyType AS "BodyType",
						BodyContext AS "BodyContext",
						DocLinks AS "DocLinks" ,  
						EDMSDocLinks AS "EDMSDocLinks",
						RuleItemInfo AS "RuleItemInfo"
			FROM jwf_forminstance
			WHERE FormInstID = #{formInstID}
		]]>
	</select>
	
	<select id="selectDomainData" parameterType="cmap" resultType="cmap">
		<![CDATA[
			SELECT DomainDataID AS "DomainDataID",
			DomainDataName AS "DomainDataName",
			ProcessID AS "ProcessID",
			DomainDataContext AS "DomainDataContext" 
			FROM jwf_domaindata
			WHERE ProcessID = #{processID}
		]]>
	</select>
	
	<select id="selectFormSchema" parameterType="cmap" resultType="cmap">
		<![CDATA[
			SELECT SchemaID AS "SchemaID",
			SchemaName AS "SchemaName",
			SchemaDesc AS "SchemaDesc",
			SchemaContext AS "SchemaContext"
			FROM jwf_formsschema
			WHERE SchemaID = #{schemaID}
		]]>
	</select>
	
	<select id="selectPravateDomainData" parameterType="cmap" resultType="cmap">
	    <![CDATA[
			SELECT
			PrivateDomainDataID AS "PrivateDomainDataID",
			CustomCategory AS "CustomCategory",
			DefaultYN AS "DefaultYN",
			DisplayName AS "DisplayName",
			OwnerID AS "OwnerID",
			Abstract AS "Abstract",
			Description AS "Description",
			PrivateContext AS "PrivateContext"
			FROM jwf_privatedomaindata
			WHERE OwnerID = #{OwnerID} ]]>
			<if test="DefaultYN != null">
				AND DefaultYN = #{DefaultYN}
			</if>
			 AND ROWNUM = 1
	</select>
	
	<select id="selectForm" parameterType="cmap" resultType="cmap">
	    SELECT * FROM (
			SELECT ROWNUM AS RNUM,
						F.FormID AS "FormID",
						F.FormClassID AS "FormClassID",
						F.SchemaID AS "SchemaID",
						F.IsUse AS "IsUse",
						F.Revision AS "Revision",
						F.SortKey AS "SortKey",
						F.FormName AS "FormName",
						F.FormPrefix AS "FormPrefix",
						F.FormDesc AS "FormDesc",
						F.FileName AS "FileName",
						F.BodyDefault AS "BodyDefault",
						F.EntCode AS "EntCode",
						F.ExtInfo AS "ExtInfo",
						F.AutoApprovalLine AS "AutoApprovalLine",
						F.BodyType AS "BodyType",
						F.SubTableInfo AS "SubTableInfo",
						F.RegID AS "RegID",
						F.RegDate AS "RegDate",
						F.ModID AS "ModID",
						F.ModDate AS "ModDate",
						F.FormHelperContext AS "FormHelperContext",
						F.FormNoticeContext AS "FormNoticeContext",
						CASE WHEN UF.CreateDate IS NOT NULL THEN 'Y' ELSE 'N' END AS "IsFavorite",
						INSTR(  DECODE(F.AclAllYN, 'Y', 
								DECODE(#{isSaaS}, 'Y', ';'||CompanyCode||';', ';'||#{DN_CODE}||';'), 
								(SELECT ';'||regexp_replace(LISTAGG(CompanyCode, ';') WITHIN GROUP(ORDER BY CompanyCode), '([^;]+)(;\1)+', '\1')||';' FROM jwf_forms_acl WHERE ObjectType ='FORM' AND TargetID = F.FormID) ), #{DN_CODE}) AS Companysort
			FROM jwf_forms F
			LEFT OUTER JOIN jwf_userforms UF ON F.FormID = UF.FormID AND UF.UserCode = #{userID}
			<if test="formPrefix != null and formPrefix != '' ">
				INNER JOIN jwf_formclass jfc ON F.FormPrefix = #{formPrefix} and F.FormClassID = jfc.FormClassID
			</if>
			WHERE 
			<if test="formID != null and formID != '' ">
				F.FormID = #{formID}
			</if>
			<if test="formPrefix != null and formPrefix != '' ">
				F.FormPrefix = #{formPrefix}
				AND(
				( jfc.AclAllYN = 'Y' and jfc.EntCode IN ('ORGROOT',  #{DN_CODE}) )
				OR exists 
				(
					select 1 from jwf_forms_acl jfa 
					where jfa.TargetID = jfc.FormClassID and jfa.ObjectType = 'CLASS'
					and 
					(
						jfa.GroupType = 'Company' and jfa.CompanyCode = #{DN_CODE}
						or
						jfa.GroupType = 'Dept' and jfa.GroupCode  = #{GR_CODE}
					)
				)
				)
				AND 
				(
					(
						F.AclAllYN = 'Y'
						AND	F.CompanyCode IN ('ORGROOT',  #{DN_CODE})
					)
					OR exists 
					( 
						select 1 from jwf_forms_acl jfa 
						where jfa.TargetID = F.FormID and jfa.ObjectType = 'FORM'
						and 
						(
						jfa.GroupType = 'Company' and jfa.CompanyCode = #{DN_CODE}
						or
						jfa.GroupType = 'Dept' and jfa.GroupCode  = #{GR_CODE}
						)
					)
				)
			</if>
			ORDER BY Companysort desc, Revision desc
		) A
		WHERE RNUM = 1	
	</select>
	
	<select id="selectPerformerData" parameterType="cmap" resultType="cmap">
	    SELECT * FROM (
				    SELECT WI.PerformerID AS "PerformerID"
				    FROM jwf_workitem WI
					INNER JOIN jwf_process P ON WI.ProcessID = P.ProcessID
					INNER JOIN jwf_performer PF ON WI.PerformerID = PF.PerformerID
					WHERE P.FormInstID = #{FormInstID}
					AND WI.UserCode IN (#{UserID}, #{DeptID})
					AND PF.State = '1'
					ORDER BY WI.Created DESC
		) A
		WHERE ROWNUM = 1
	</select>
	
	<select id="selectPerformerDataArchive" parameterType="cmap" resultType="cmap">
	    SELECT * FROM (
			    SELECT WI.PerformerID AS "PerformerID" FROM jwf_workitem WI
				INNER JOIN jwf_process P ON WI.ProcessID = P.ProcessID
				WHERE P.FormInstID = #{FormInstID}
				AND P.ProcessState = 528
				AND  WI.UserCode IN (#{UserID}, #{DeptID})
				AND WI.Deleted IS NULL
				ORDER BY WI.Created DESC
		) A
		WHERE ROWNUM = 1
	</select>
	
	<select id="selectPerformerDeputyData" parameterType="cmap" resultType="cmap">
	    SELECT * FROM (
			    SELECT WI.PerformerID AS "PerformerID"
			    FROM jwf_workitem WI
				INNER JOIN jwf_process P ON WI.ProcessID = P.ProcessID
				INNER JOIN jwf_performer PF ON WI.PerformerID = PF.PerformerID
				WHERE P.FormInstID = #{FormInstID}
				AND WI.DeputyID = #{UserID}
				AND PF.State = '1'
				ORDER BY WI.Created DESC
		) A
		WHERE ROWNUM = 1
	</select>
	
	<select id="selectPerformerDeputyDataArchive" parameterType="cmap" resultType="cmap">
	    SELECT * FROM (
			    SELECT WI.PerformerID AS "PerformerID"
			    FROM jwf_workitem WI
				INNER JOIN jwf_workitem P ON WI.ProcessID = P.ProcessID
				WHERE P.FormInstID = #{FormInstID}
				AND P.ProcessState = 528
				AND WI.DeputyID = #{UserID}
				AND WI.Deleted IS NULL
				ORDER BY WI.Created DESC
		) A
		WHERE ROWNUM = 1
	</select>
	
	<select id="selectJobFunctionData" parameterType="cmap" resultType="cmap">
	    SELECT * FROM (
				    SELECT WI.PerformerID AS "PerformerID" FROM jwf_workitem WI
					JOIN jwf_jobfunction B ON WI.UserCode=B.JobFunctionCode AND B.EntCode = #{entCode}
					JOIN jwf_jobfunctionmember C ON B.JobFunctionID=C.JobFunctionID
					INNER JOIN jwf_process P ON WI.ProcessID = P.ProcessID
					INNER JOIN jwf_performer PF ON WI.PerformerID = PF.PerformerID
					WHERE P.FormInstID = #{FormInstID}
					AND C.UserCode = #{UserID}
					AND PF.State = '1'
					ORDER BY WI.Created DESC
		) A
		WHERE ROWNUM = 1
	</select>
	
	<select id="selectJobFunctionDataArchive" parameterType="cmap" resultType="cmap">
	    SELECT * FROM (
				    SELECT WI.PerformerID AS "PerformerID" FROM jwf_workitem WI
					JOIN jwf_jobfunction B ON WI.UserCode=B.JobFunctionCode AND B.EntCode = #{entCode}
					JOIN jwf_jobfunctionmember C ON B.JobFunctionID=C.JobFunctionID
					INNER JOIN jwf_process P ON WI.ProcessID = P.ProcessID
					WHERE P.FormInstID = #{FormInstID}
					AND P.ProcessState = 528
					AND C.UserCode = #{UserID}
					AND WI.Deleted IS NULL
					ORDER BY WI.Created DESC
		) A
		WHERE ROWNUM = 1
	</select>
	
	<select id="selectDeptReceiveData" parameterType="cmap" resultType="cmap">
	    SELECT * FROM (
				    SELECT WI.PerformerID AS "PerformerID" FROM jwf_workitem WI
					INNER JOIN jwf_process P ON WI.ProcessID = P.ProcessID
					INNER JOIN jwf_performer PF ON WI.PerformerID = PF.PerformerID
					WHERE P.FormInstID =#{FormInstID}
					AND WI.UserCode = #{DeptID}
					AND PF.State = '1'
					AND PF.SubKind IN ('R','C','AD','AS','AE') -- 2015.12 수정 합의함등도 추가 AND PF_SUB_KIND = 'R'
					ORDER BY WI.Created DESC
		) A
		WHERE ROWNUM = 1
	</select>
	
	<select id="selectDeptReceiveDataArchive" parameterType="cmap" resultType="cmap">
	   	SELECT * FROM (
				    SELECT WI.PerformerID AS "PerformerID" FROM jwf_workitem WI
					INNER JOIN jwf_process P ON WI.ProcessID = P.ProcessID
					WHERE P.FormInstID = #{FormInstID}
					AND P.ProcessState = 528
					AND WI.UserCode = #{DeptID}
					AND WI.Deleted IS NULL
					AND WI.SubKind = 'REQCMP'
					ORDER BY WI.Created DESC
		) A
		WHERE ROWNUM = 1
	</select>
	
	<select id="selectFormPrefixData" parameterType="cmap" resultType="cmap">
	    SELECT F.FormPrefix  AS "FormPrefix"
	    FROM jwf_forminstance FI
		INNER JOIN jwf_forms F ON F.FormID = FI.FormID
		WHERE FormInstID = #{FormInstID}
		AND ROWNUM = 1
	</select>
	
	<select id="selectBizDocData" parameterType="cmap" resultType="cmap">
	    SELECT COUNT(*) AS "CNT" 
	    FROM jwf_bizdocform A
		JOIN jwf_bizdocmember B ON A.BizDocID = B.BizDocID
		WHERE A.FormPrefix = #{FormPreFix}
		AND B.UserCode = #{UserID}
	</select>
	
	<select id="selectTCInfoData" parameterType="cmap" resultType="cmap">
	    SELECT COUNT(*) AS "CNT" 
	    FROM jwf_circulationbox
		WHERE FormInstID = #{FormInstID}
		AND ReceiptID IN ( #{UserID}, #{DeptID})
	</select>
	
	<select id="selectAuditDocData" parameterType="cmap" resultType="cmap">
		SELECT MenuID as "MenuID", DomainCode as "DomainCode" FROM sys_object_acl A
		INNER JOIN sys_object_menu M ON (A.ObjectType = 'MN' AND A.ObjectID = M.MenuID)
		INNER JOIN sys_object_domain D ON M.DomainID = D.DomainID
		WHERE M.BizSection = 'Approval'
		AND M.Reserved1 = 'Audit'
	 </select>
	 
	 <select id="selectEntCode" parameterType="cmap" resultType="java.lang.String">
	<![CDATA[
		SELECT 
		EntCode AS "EntCode"
		FROM jwf_forminstance
		WHERE FormInstID = #{FormInstID}
	]]>
	</select>
	
	<select id="selectIsLinkedDocData" parameterType="cmap" resultType="cmap">
		SELECT SUM(CNT) AS "CNT"
		FROM
		(
		  	SELECT COUNT(*) AS CNT FROM jwf_forminstance fi
			INNER JOIN jwf_process wp ON fi.FormInstID = wp.FormInstID
			INNER JOIN jwf_processdescription wpd ON wp.ProcessDescriptionID = wpd.ProcessDescriptionID
			WHERE 
			wp.ProcessID = #{OwnerProcessId} AND wpd.IsSecureDoc = 'N' AND
			(fi.DocLinks LIKE (#{ProcessID} || '@@@%') OR fi.DocLinks LIKE ('%^^^' || #{ProcessID} || '@@@%'))
		) A
	</select> 
	
	<select id="selectIsLinkedDocExpData" parameterType="cmap" resultType="cmap">
		SELECT SUM(CNT) AS "CNT"
		FROM
		(
			SELECT COUNT(*) AS CNT FROM act_expence_application_list actList
			INNER JOIN act_expence_application_ref actRef ON actRef.ExpenceApplicationListID = actList.ExpenceApplicationListID
			INNER JOIN jwf_process wp ON actRef.ProcessID = wp.ProcessID
			INNER JOIN jwf_processdescription wpd ON wp.ProcessDescriptionID = wpd.ProcessDescriptionID
			WHERE 
			actList.ExpenceApplicationID =  #{ExpAppID} AND actRef.ProcessID = #{ProcessID} AND wpd.IsSecureDoc = 'N' 
		) A
	</select>
	
	<select id="selectIsDeletedDoc" parameterType="cmap" resultType="cmap">
	  	SELECT COUNT(*) AS "CNT"
		FROM JWF_Process
		WHERE ProcessID = #{processID}
		AND DeleteDate IS NOT NULL
	</select>
	
	<select id="selectManageTarget" parameterType="cmap" resultType="cmap">
		SELECT 'P' TARGETTYPE, mem.TARGETCODE, mem.VIEWSTARTDATE, mem.VIEWENDDATE
		FROM JWF_PERSONDIRECTOR p
		INNER JOIN JWF_PERSONDIRECTORMEMBER mem ON p.USERCODE = mem.USERCODE
		WHERE p.USERCODE = #{UserID}
    	AND (p.AUTHENDDATE IS NULL OR TO_CHAR(AUTHENDDATE, 'YYYY-MM-DD') = '0000-00-00' OR TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN TO_CHAR(p.AUTHSTARTDATE, 'YYYYMMDD') AND TO_CHAR(p.AUTHENDDATE, 'YYYYMMDD'))
		
		UNION
		
		SELECT 'P' TARGETTYPE, jdmem.UnitCode TARGETCODE, jdmem.VIEWSTARTDATE, jdmem.VIEWENDDATE
		FROM jwf_director jd
		INNER JOIN jwf_directormember jdmem ON jd.USERCODE = jdmem.USERCODE
		WHERE jd.UserCode = #{UserID}
		AND (jd.AUTHENDDATE IS NULL OR TO_CHAR(jd.AUTHENDDATE, 'YYYY-MM-DD') = '0000-00-00' OR TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN TO_CHAR(jd.AUTHSTARTDATE, 'YYYYMMDD') AND TO_CHAR(jd.AUTHENDDATE, 'YYYYMMDD'))
		
		UNION
		
		SELECT 'U' TARGETTYPE, TargetUnitCode TARGETCODE, umem.VIEWSTARTDATE, umem.VIEWENDDATE
		FROM jwf_unitdirector unit
		INNER JOIN jwf_unitdirectormember umem ON unit.UnitCode = umem.UnitCode
		WHERE unit.UnitCode = #{DeptID}
		AND (unit.AuthEndDate IS NULL OR TO_CHAR(unit.AUTHENDDATE, 'YYYY-MM-DD') = '0000-00-00' OR TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN TO_CHAR(unit.AUTHSTARTDATE, 'YYYYMMDD') AND TO_CHAR(unit.AUTHENDDATE, 'YYYYMMDD'))
	</select> 
	 
	<select id="selectManageDocDataCnt" parameterType="cmap" resultType="int">
		SELECT COUNT(*) AS "CNT" FROM jwf_process wp
		INNER JOIN jwf_workitem ww ON wp.ProcessID = ww.ProcessID
		INNER JOIN jwf_performer wpf ON ww.WorkItemID = wpf.WorkitemID
		WHERE formInstID = #{FormInstID}
		AND ww.State = 528 AND wp.ProcessState = 528
		AND wpf.UserCode = #{TargetCode}
		AND 
		(
		((#{ViewStartDate} IS NULL OR #{ViewStartDate} = '' OR #{ViewStartDate} = '0000-00-00 00:00:00') AND (#{ViewEndDate} IS NULL OR #{ViewEndDate} = '' OR #{ViewEndDate} = '0000-00-00 00:00:00'))
		OR
		((#{ViewStartDate} IS NULL OR #{ViewStartDate} = '' OR #{ViewStartDate} = '0000-00-00 00:00:00') and wp.StartDate &lt;= TO_DATE(#{ViewEndDate}, 'YYYYMMDD HH24:MI:SS') + 1)
		OR
		((#{ViewEndDate} IS NULL OR #{ViewEndDate} = '' OR #{ViewEndDate} = '0000-00-00 00:00:00') and wp.StartDate &gt;= TO_DATE(#{ViewStartDate}, 'YYYYMMDD HH24:MI:SS'))
		OR
		(wp.StartDate &lt;= TO_DATE(#{ViewEndDate}, 'YYYYMMDD HH24:MI:SS') + 1 and wp.StartDate &gt;= TO_DATE(#{ViewStartDate}, 'YYYYMMDD HH24:MI:SS'))
		)
	</select>
	
	<select id="selectManageDocTcInfoDataCnt" parameterType="cmap" resultType="int">
		SELECT COUNT(*) AS "CNT" FROM jwf_circulationbox
		WHERE FormInstID = #{FormInstID}
		AND ReceiptID  = #{TargetCode}
		AND 
		(
		((#{ViewStartDate} IS NULL OR #{ViewStartDate} = '' OR #{ViewStartDate} = '0000-00-00 00:00:00') AND (#{ViewEndDate} IS NULL OR #{ViewEndDate} = '' OR #{ViewEndDate} = '0000-00-00 00:00:00'))
		OR
		((#{ViewStartDate} IS NULL OR #{ViewStartDate} = '' OR #{ViewStartDate} = '0000-00-00 00:00:00') and ReceiptDate &lt;= TO_DATE(#{ViewEndDate}, 'YYYYMMDD HH24:MI:SS') + 1)
		OR
		((#{ViewEndDate} IS NULL OR #{ViewEndDate} = '' OR #{ViewEndDate} = '0000-00-00 00:00:00') and ReceiptDate &gt;= TO_DATE(#{ViewStartDate}, 'YYYYMMDD HH24:MI:SS'))
		OR
		(ReceiptDate &lt;= TO_DATE(#{ViewEndDate}, 'YYYYMMDD HH24:MI:SS') + 1 and ReceiptDate &gt;= TO_DATE(#{ViewStartDate}, 'YYYYMMDD HH24:MI:SS'))
		)
	</select>
	
	<select id="selectChargeJob" parameterType="cmap" resultType="cmap">
		SELECT ChargeJob AS "ChargeJob"
		FROM act_expence_application
		WHERE ExpenceApplicationID = #{ExpAppID}
	</select>
</mapper>
