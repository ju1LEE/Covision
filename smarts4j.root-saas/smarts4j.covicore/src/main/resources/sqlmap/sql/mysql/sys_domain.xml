<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="sys.domain">
    <!-- 특정 도메인 정보 조회 -->
    <select id="selectone" parameterType="cmap" resultType="cmap">
		SELECT   DomainID
			   , DomainCode
			   , DomainURL
			   , DomainType
			   , MailDomain
			   , IsCPMail
			   , DisplayName
			   , MultiDisplayName
			   , MemberOf
			   , DomainPath
			   , SortKey
			   , SortPath
			   , IsUse
			   , (	SELECT COUNT(*)
					FROM covi_smart4j.sys_object_user u
					INNER JOIN covi_smart4j.sys_object_user_basegroup AS ub ON u.UserCode = ub.UserCode AND ub.JobType = 'Origin'
					WHERE u.IsUse = 'Y'
					AND ub.Companycode = DomainCode) AS ActiveUser
			   , ServiceUser
			   , Description
			   , RegistDate
			   , ServiceStart
			   , ServiceEnd
			   , SubDomain
			   , OrgSyncType
			   , DomainRepName
			   , DomainRepTel
			   , DomainCorpTel
			   , DomainImagePath
			   , DomainZipcode
			   , DomainAddress
			   , Memo
			   , DomainBannerPath
			   , DomainBannerLink
			   , DomainThemeCode
			   , ChargerName
			   , ChargerTel
			   , ChargerID
			   , ChargerEmail
			   , IsUseGoogleSchedule
			   , (SELECT SettingValue FROM sso_config WHERE DomainID = sod.DomainID AND Code = 'sso_goclient_id') AS GoogleClientID
			   , (SELECT SettingValue FROM sso_config WHERE DomainID = sod.DomainID AND Code = 'sso_goclient_key') AS GoogleClientKey
			   , (SELECT SettingValue FROM sso_config WHERE DomainID = sod.DomainID AND Code = 'sso_redirect_url') AS GoogleRedirectURL
			   , LicDomain
			   , LicUserCount
			   , LicExpireDate
			   , LieExUserCount
			   , LicEx1Date
			   , EntireMailID
		 FROM sys_object_domain sod
		 WHERE DomainID = #{DomainID}
	</select>
	
	<!-- 도메인 목록 조회 -->
	<select id="selectCode" parameterType="cmap" resultType="cmap">
		<![CDATA[
			SELECT	  DomainID
					, DomainCode
					, DomainURL
					, DisplayName
					, MultiDisplayName
					, ShortName
					, MultiShortName
			FROM covi_smart4j.sys_object_domain
			WHERE IsUse = 'Y'
			AND DeleteDate IS NULL
		]]>
		<if test="assignedDomain.size() > 0" >
			AND DomainID IN 
			<foreach item="item" index="index" collection="assignedDomain" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test='isService == "Y"'>
			and now() between ServiceStart AND ServiceEnd
		</if>
		ORDER BY SortKey
	</select>
    
	<!-- 도메인 목록 조회 Grid 용 -->
	<select id="selectgrid" parameterType="cmap" resultType="cmap">
		/* queryID : sys.domain.selectgrid */
		SELECT 	DomainID 
			   	, DomainCode
		       	, DomainURL
			   	, Fn_BaseGetDictionary_S(#{lang}, MultiDisplayName) AS DisplayName
			   	, MemberOf
			   	, DomainPath
			   	, SortKey
			   	, IsUse
			   	, (	SELECT	COUNT(*)
					FROM 	covi_smart4j.sys_object_user u
					INNER JOIN 	covi_smart4j.sys_object_user_basegroup AS ub ON u.UserCode = ub.UserCode AND ub.JobType = 'Origin'
					WHERE 	u.IsUse = 'Y'
					AND 	ub.Companycode = DomainCode
				) AS ActiveUser
			   	, ServiceUser
			   	, CONCAT(DATE_FORMAT(ServiceStart,'%Y-%m-%d'), ' ~ ', DATE_FORMAT(ServiceEnd,'%Y-%m-%d')) AS ServicePeriod
			   	, Description 
			   	, DATE_FORMAT(RegistDate,'%Y-%m-%d %H:%i') AS RegistDate
			   	, DomainImagePath
			   	, DomainThemeCode
		FROM 	covi_smart4j.sys_object_domain
		WHERE 	DeleteDate IS NULL
		<if test='selectsearch != null and selectsearch != ""'>
		AND 	(
				UPPER(DomainCode) LIKE CONCAT('%', UPPER(#{selectsearch}),'%')
				OR UPPER(DomainURL) LIKE CONCAT('%',UPPER(#{selectsearch}),'%')
				OR UPPER(DisplayName) LIKE CONCAT('%',UPPER(#{selectsearch}),'%')
		)
		</if>
		<if test='DomainURL != null and DomainURL != ""'>
			AND DomainURL LIKE  CONCAT(#{DomainURL},'%')
		</if>
		<if test='isUse == "Y"'>
		AND		NOW() BETWEEN ServiceStart AND ServiceEnd
		</if>
		<!-- ORDER BY 절 -->
		<trim prefix="ORDER BY">
			<if test = "sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
				SortKey ASC 
			</if>
			<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("DomainURL")'>DomainURL</when>
					<when test='sortColumn.equalsIgnoreCase("DisplayName")'>DisplayName</when>
					<when test='sortColumn.equalsIgnoreCase("ServicePeriod")'>ServicePeriod</when>
					<when test='sortColumn.equalsIgnoreCase("ServiceUser")'>ServiceUser</when>
					<when test='sortColumn.equalsIgnoreCase("IsUse")'>IsUse</when>
					<when test='sortColumn.equalsIgnoreCase("Description")'>Description</when>
					<otherwise>DomainCode</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if>
		</trim>
		<!-- LIMIT 절 -->
		<if test='pageSize != null and pageOffset != null'>
			LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>		     
	</select>
	
 	<!-- 도메인 개수 조회 Grid 용 -->
 	<select id="selectgridcnt" resultType="java.lang.Long">
		/* queryID : sys.domain.selectgridcnt */
		SELECT 	COUNT(*)
		FROM 	covi_smart4j.sys_object_domain
		WHERE 	DeleteDate IS NULL
		<if test='selectsearch != null and selectsearch != ""'>
		AND		(
				UPPER(DomainCode) LIKE CONCAT('%',UPPER(#{selectsearch}),'%')
				OR UPPER(DomainURL) LIKE CONCAT('%',UPPER(#{selectsearch}),'%')
				OR UPPER(DisplayName) LIKE CONCAT('%',UPPER(#{selectsearch}),'%')
		)
		</if>
		<if test='isUse == "Y"'>
		AND 	NOW() BETWEEN ServiceStart AND ServiceEnd
		</if>
	</select>
	 	
 	<!-- 도메인 추가 시 중복 체크  -->
 	<select id="chkDuplicationObject"  parameterType="cmap" resultType="java.lang.Long">
 	    SELECT COUNT(*) FROM sys_object
		WHERE ObjectCode = #{DomainCode};
 	</select>
 	
 	<!--  [도메인 추가] #1. 도메인 생성 (sys_object_domain, sys_object INSERT) -->
	<insert id="insertDomain" parameterType="cmap" useGeneratedKeys="true" keyProperty="DomainID" >
			INSERT INTO sys_object_domain(
				DomainID,
				DomainCode,
				DomainURL,
				MailDomain,
				IsCPMail,
				DisplayName,
				MultiDisplayName,
				ShortName,
				MultiShortName,
				MemberOf,
				DomainPath,
				SortKey,
				SortPath,
				IsUse,
				ServiceUser,
				ServiceStart,
				ServiceEnd,
				Description,
				RegistDate,
				SubDomain,
				OrgSyncType,
				DomainCorpTel,
				DomainRepName,
				DomainRepTel,
				DomainAddress,
				ChargerName,
				ChargerTel,
				ChargerID,
				ChargerEmail,
				DomainImagePath,
				DomainBannerPath,
				DomainBannerLink,
			    LicDomain,
			    LicUserCount,
			    LicExpireDate,
			    LieExUserCount,
			    LicEx1Date, 
			    DomainType,
			    EntireMailID
			)
			VALUES (
				(SELECT MAX(B.DomainID)+1 from sys_object_domain AS B),
				#{DomainCode},
				#{Domain},
				#{MailDomain},
				#{IsCPMail},
				#{DisplayName},
				#{ExFullName},
				#{DisplayName},
				#{ExFullName},
				0,
				'0;',
				(SELECT MAX(B.SortKey)+1 from sys_object_domain AS B),
				'',
				'Y',
				#{ServiceUser},
				#{ServiceStart},
				#{ServiceEnd},
				'',
				NOW(3),
				#{SubDomain},
				#{OrgSyncType},
				#{DomainCorpTel},
				#{DomainRepName},
				#{DomainRepTel},
				#{DomainAddress},
				#{ChargerName},
				#{ChargerTel},
				#{ChargerID},
				#{ChargerEmail},
				#{DomainImagePath},
				#{DomainBannerPath},
				#{DomainBannerLink},
				#{LicDomain},
				#{LicUserCount},
				#{LicExpireDate},
				#{LieExUserCount},
				#{LicEx1Date}, 
				#{DomainType}, 
				#{EntireMailID}
			);
			
			# 기초 객체 생성 
			UPDATE sys_object
			SET ObjectCode = #{DomainCode} 
				, ObjectType = 'DN'
				, IsUse = 'Y'
				, Description= #{Description}
				, IsSync = 'Y'
				, RegistDate = now(3)
				, DeleteDate = NULL
			WHERE ObjectID = (SELECT B.DomainID from sys_object_domain AS B WHERE B.DomainCode = #{DomainCode});
		
		<selectKey keyProperty="DomainID" resultType="long" order="AFTER">
			SELECT DomainID FROM sys_object_domain WHERE DomainCode = #{DomainCode}
      </selectKey>
	</insert>
	
	<!--  [도메인 추가] #2. Company 그룹 생성 (sys_object_group INSERT) -->
	<insert id="insertCascadeCompanyGroup" parameterType="cmap">
	   INSERT INTO sys_object_group (
	   		GroupCode,	CompanyCode,	GroupType,		MemberOf, 	GroupPath, 	DisplayName,		MultiDisplayName, 	ShortName, 	MultiShortName,		
	   		OUName, 	OUPath, 	SortKey, 		SortPath, 	IsUse, 	IsDisplay, 	IsMail, 	IsHR, 		PrimaryMail, 		SecondaryMail,
	   		ManagerCode,	 Description, 	ReceiptUnitCode,		ApprovalUnitCode, 	Receivable, 	Approvable, RegistDate
		)
		VALUES(
			#{DomainCode},	#{DomainCode},	'Company', 	(SELECT DomainCode FROM sys_object_domain WHERE DomainID = 0 ),		'',	#{DisplayName}, 	#{ExFullName},	#{DisplayName}, 	#{ExFullName},
			#{DisplayName},		'',	(SELECT SortKey FROM sys_object_domain WHERE DomainCode = #{DomainCode}),  '', 	'Y',		'Y',		'Y',		'Y',		CONCAT(#{EntireMailID},'@',#{MailDomain}),		'',
			NULL,		#{Description},		#{DomainCode},		#{DomainCode},	'1',		'1',		now(3)
		);
	</insert>
	
	
	<!-- [도메인 추가] #3. 퇴직부서 생성  (sys_object_group, sys_object INSERT) -->
	<insert id="insertRetireDept" parameterType="cmap">
	    # 퇴직부서 추가
	    INSERT INTO sys_object_group (
	    	GroupCode, 	CompanyCode,	 GroupType,	 MemberOf, 	GroupPath, 	DisplayName, 	MultiDisplayName, 	ShortName, 	MultiShortName,
			OUName, 	OUPath, 	SortKey, 		SortPath, 	IsUse, 	IsDisplay, 	IsMail, 	IsHR, 		PrimaryMail, 	SecondaryMail, 	ManagerCode, 	Description, 
			ReceiptUnitCode,		ApprovalUnitCode, 	Receivable, 	Approvable, 	RegistDate
		)
		SELECT
			CONCAT(DomainID,'_RetireDept') AS GroupCode, 
			DomainCode AS CompanyCode, 
			'Dept' AS GroupType, 
			DomainCode AS MemberOf, 
			'' AS GroupPath,
			'퇴직부서' AS DisplayName,
			'퇴직부서;Retirement Department;退職部門;退休署;;;;;;' AS MultiDisplayName,
			'퇴직부서' AS ShortName,
			'퇴직부서;Retirement Department;退職部門;退休署;;;;;;' AS MultiShortName,
			'퇴직부서' AS OUName,
			'' AS OUPath, 
			'99999' SortKey,
			'' AS SortPath,
			'Y' AS IsUse, 
			'N' AS IsDisplay, 
			'N' AS IsMail,
			'N' AS IsHR,
			NULL AS PrimaryMail,
			NULL AS SecondayMail,
			NULL AS ManagerCode,
			'퇴직부서' AS Description,
			CONCAT(DomainID,'_RetireDept') AS ReceiptUnitCode,
			CONCAT(DomainID,'_RetireDept') AS ApprovalUnitCode,
			'0' AS Receivable,
			'0' AS Approvable,
			now(3) AS RegistDate
		FROM sys_object_domain
		WHERE DomainID = #{DomainID};
		
		# 기초 객체 생성 
		INSERT INTO sys_object (ObjectCode,		ObjectType,	IsUse,		IsSync,	Description,	RegistDate)
 		VALUES(CONCAT(#{DomainID},'_RetireDept'),	'GR',	'Y'	,	'N'	,	'퇴직부서(Retirement Department)', now());
	</insert>
	
	<!--  [도메인 추가] #4.  임의 그룹 생성 (sys_object_group, sys_object INSERT) -->
	<insert id="insertCascadeDivision" parameterType="cmap">
	    # 기본 객체 생성
	    INSERT INTO sys_object (ObjectCode,		ObjectType,	IsUse,		IsSync,	Description,	RegistDate)
		SELECT CONCAT(#{DomainID}, '_', GroupType), 'GR', 'Y', 'Y', Description, now()
		FROM sys_object_group_type
		WHERE IsUse = 'Y' AND IsCreateGR = 'Y';
	    
	    
	    # 도메인 하위 그룹 생성
	    INSERT INTO sys_object_group (
		 	GroupCode, 	CompanyCode, 	GroupType, 	MemberOf, 	GroupPath, 	DisplayName, 		MultiDisplayName, 		ShortName, 	MultiShortName,
			OUName, OUPath, SortKey, SortPath, IsUse, IsDisplay, IsMail, IsHR, PrimaryMail, SecondaryMail, ManagerCode, Description, ReceiptUnitCode,
			ApprovalUnitCode, Receivable, Approvable, RegistDate
		)
		SELECT	CONCAT(#{DomainID}, '_', gt.GroupType) AS GroupCode, 
					#{DomainCode} AS CompanyCode,
					'Division' AS GroupType, 
					#{DomainCode} AS MemberOf, 
					'' AS GroupPath,
					gt.DisplayName AS DisplayName,
					gt.MultiDisplayName AS MultiDisplayName,
					gt.DisplayName AS MultiShortName,
					gt.MultiDisplayName AS MultiShortName,
					gt.DisplayName AS OUName,
					'' AS OUPath, 
					gt.SortKey AS SortKey,
					'' AS SortPath,
					'Y' AS IsUse, 
					'Y' AS IsDisplay, 
					'N' AS IsMail,
					'N' AS IsHR,
					NULL AS PrimaryMail,
					NULL AS SecondayMail,
					NULL AS ManagerCode,
					gt.Description AS Description,
					CONCAT(#{DomainID}, '_', gt.GroupType) AS ReceiptUnitCode,
					CONCAT(#{DomainID}, '_', gt.GroupType) AS ApprovalUnitCode,
					'0' AS Receivable,
					'0' AS Approvable,
					now(3) AS RegistDate
		FROM sys_object_group_type as gt
		WHERE IsUse = 'Y' AND IsCreateGR = 'Y';
	</insert>
	
	<!--  [도메인 추가] #5.  회사 기본 데이터 생성 (sys_object_folder INSERT) -->
	<insert id="insertDomainFolder" parameterType="cmap" useGeneratedKeys="true" keyProperty="FolderID">
	    INSERT INTO sys_object_folder (
        	  DomainID
        	, MenuID
        	, ObjectType
        	, FolderType
        	, ParentObjectID
        	, ParentObjectType
        	, LinkFolderID
        	, DisplayName
        	, MultiDisplayName
        	, MemberOf
        	, FolderPath
        	, SortKey
        	, SecurityLevel
        	, IsInherited
        	, IsShared
        	, IsUse
        	, IsDisplay
        	, IsURL
        	, URL
        	, IsMobileSupport
        	, IsAdminNotice
        	, ManageCompany
        	, IsMsgSecurity
        	, Description
        	, OwnerCode
        	, RegisterCode
        	, RegistDate
        	, ModifierCode
        	, ModifyDate
        	, Reserved1
        	, Reserved2
        	, Reserved3
        	, Reserved4
        	, Reserved5
        ) 
        SELECT	  
        		<choose>
					<when test="ObjectType eq 'Schedule'.toString() and FolderType eq 'Schedule'.toString()">
					    DomainID
					</when>
					<otherwise>
					    #{DomainID}
					</otherwise>
				</choose>
			  	, MenuID
			  	, ObjectType
			  	, FolderType
			  	, ParentObjectID
			  	, ParentObjectType
			  	, LinkFolderID
			    , DisplayName
			    , MultiDisplayName
				<choose>
					<when test="MemberOf != null and MemberOf != ''">
					    , #{MemberOf}
					</when>
					<otherwise>
					    , MemberOf
					</otherwise>
				</choose>
				<choose>
					<when test="FolderPath != null and FolderPath != ''">
					    , CONCAT(#{MemberOf}, ';')
					</when>
					<otherwise>
					    , FolderPath
					</otherwise>
				</choose>
			  	, SortKey
			  	, SecurityLevel
			  	, IsInherited
			  	, IsShared
			  	, IsUse
			  	, IsDisplay
			  	, IsURL
			  	, URL
			  	, IsMobileSupport
			  	, IsAdminNotice
			  	<choose>
					<when test="ManageCompany != null and ManageCompany != ''">
					    , #{ManageCompany}
					</when>
					<otherwise>
					    , ManageCompany
					</otherwise>
				</choose>
			  	, IsMsgSecurity
			  	, Description
			  	<choose>
					<when test="OwnerCode != null and OwnerCode != ''">
					    , #{OwnerCode}
					</when>
					<otherwise>
					    , OwnerCode
					</otherwise>
				</choose>
			  	, #{UserCode}
			  	, NOW(3)
			  	, #{UserCode}
			  	, NOW(3)
			  	, Reserved1
			  	, Reserved2
			  	, Reserved3
			  	, Reserved4
			  	, Reserved5
		FROM sys_object_folder
		WHERE 1=1
		AND DomainID = 0
		AND ObjectType = #{ObjectType}
		AND FolderType = #{FolderType}
		<if test="ObjectType eq 'Schedule'.toString() and FolderType eq 'Schedule'.toString()">
		   ORDER BY FolderID ASC
		   LIMIT 1
		</if>
		
		<selectKey keyProperty="FolderID" resultType="long" order="AFTER">
			SELECT FolderID FROM sys_object_folder
			WHERE 1=1
			<choose>
				<when test="ObjectType eq 'Schedule'.toString() and FolderType eq 'Schedule'.toString()">
				    AND ManageCompany = #{DomainID}
				</when>
				<otherwise>
				    AND DomainID = #{DomainID}
				</otherwise>
			</choose>
			AND ObjectType = #{ObjectType}
			AND FolderType = #{FolderType}
      </selectKey>
	</insert>
	
	<select id="selectComSortPathCreateS" parameterType="cmap" resultType="java.lang.String">
         SELECT covi_smart4j.FN_COMSORTPATHCREATE_S(#{FolderID}, '', 'FD') AS SortPath;
    </select>
    
    <select id="selectComObjectPathCreateS" parameterType="cmap" resultType="java.lang.String">
        SELECT covi_smart4j.FN_COMOBJECTPATHCREATE_S(#{FolderID}, '', 'FD') AS FolderPath;
    </select>
    
    <!-- SortPath 수정 -->
    <update id="updateSortPath" parameterType="cmap" >
        UPDATE covi_smart4j.SYS_OBJECT_FOLDER 
        SET SortPath = #{SortPath}
        WHERE FolderID = #{FolderID};
    </update>
    
    <!-- FolderPath 수정 -->
    <update id="updateFolderPath" parameterType="cmap" >
        UPDATE covi_smart4j.SYS_OBJECT_FOLDER 
        SET FolderPath = #{FolderPath}
        WHERE FolderID = #{FolderID};
    </update>
    
	<insert id="insertCompanytoExcel"  parameterType="cmap">
		INSERT INTO covi_syncdata.EXCEL_ORGDEPT (
			GroupCode, CompanyCode, MemberOf, DisplayName, MultiDisplayName, SortKey, IsUse, IsHR, IsDisplay, IsMail, PrimaryMail
		) VALUES (
			#{DomainCode}, #{DomainCode}, 'ORGROOT', #{DisplayName}, #{ExFullName}, (SELECT SortKey FROM covi_smart4j.SYS_OBJECT_DOMAIN WHERE DomainCode = #{DomainCode}), 'Y', 'Y', 'Y', 'Y', CONCAT(#{EntireMailID}, '@', #{Domain})
		)
	</insert>
	
	<update id="createInitCompanyData" statementType="CALLABLE" parameterType= "cmap" >
	 	{CALL covi_smart4j.sp_createInitCompanyData(#{DomainCode}, #{UserCode}, #{ChargerID}, #{ChargerName}, #{ChargerTel}, #{ChargerEmail}, #{Domain}, #{MailDomain}, #{Key},#{Password})} 
	</update>
	
	<!--  [도메인 수정] #1. 도메인 정보 수정 (sys_object_domain UPDATE) -->
	<update id="updateDomain" parameterType="cmap">
		UPDATE  sys_object_domain
		SET
			  DomainURL = #{Domain}
			, DisplayName = #{DisplayName}
			, ShortName = #{DisplayName}
			, MultiDisplayName = #{ExFullName}
			, MultiShortName = #{ExFullName}
			, ServiceUser = #{ServiceUser}
			, ServiceStart = #{ServiceStart}
			, ServiceEnd = #{ServiceEnd}
			, SubDomain = #{SubDomain}
			, OrgSyncType = #{OrgSyncType}
			, DomainCorpTel = #{DomainCorpTel}
			, DomainRepName = #{DomainRepName}
			, DomainRepTel = #{DomainRepTel}
			, DomainAddress = #{DomainAddress}
			, ChargerName = #{ChargerName}
			, ChargerTel = #{ChargerTel}
			, ChargerID = #{ChargerID}
			, ChargerEmail = #{ChargerEmail}
			<if test="DomainImagePath != null and DomainImagePath != ''">
			    , DomainImagePath = #{DomainImagePath}
			</if>
			<if test="DomainBannerPath != null and DomainBannerPath != ''">
			    , DomainBannerPath = #{DomainBannerPath}
			</if>
			<if test="DomainBannerLink != null and DomainBannerLink != ''">
			    , DomainBannerLink = #{DomainBannerLink}
			</if>
			, LicDomain = #{LicDomain}
			, LicUserCount = #{LicUserCount}
			, LicExpireDate = #{LicExpireDate}
			, LieExUserCount = #{LieExUserCount}
			, LicEx1Date = #{LicEx1Date} 
			, DomainType = #{DomainType} 
			, EntireMailID = #{EntireMailID}
		WHERE DomainID = #{DomainID}
	</update>
	
	<!--  [도메인 수정] #2. 객체 정보 수정 (sys_object UPDATE) -->
	<update id="updateObject" parameterType="cmap">
	    UPDATE sys_object
	    SET Description = #{Description}
	    WHERE ObjectCode=#{DomainCode};
	</update>
	
	<!--  [도메인 수정] #3. 그룹 정보 수정 (sys_object_group UPDATE) -->
	<update id="updateGroup" parameterType="cmap">
		<![CDATA[
		UPDATE  sys_object_group
		SET
			DisplayName = #{DisplayName},
			ShortName = #{DisplayName},
			MultiDisplayName = #{ExFullName},
			MultiShortName = #{ExFullName},
			Description = #{Description},
			PrimaryMail = CONCAT(#{EntireMailID},'@',#{Domain}),
			OUName = #{DisplayName},
			ModifyDate = now(3)
		WHERE GroupCode = #{DomainCode}
		]]>
	</update>
	
	<!--  [도메인 수정] #4. 사용자 정보에 있는 도메인 정보 수정  (sys_object_user_basegroup UPDATE)-->
	<update id="updateUserBaseGroup" parameterType="cmap">
		<![CDATA[
		UPDATE  sys_object_user_basegroup
		SET CompanyName = #{DisplayName}
			, MultiCompanyName = #{ExFullName}
		WHERE CompanyCode = #{DomainCode};
		]]>
	</update>
	
	<!-- [도메인 사용여부 변경]  #1. 도메인 사용 여부 수정 (sys_object_domain) -->
	<update id="updateDomainIsUse" parameterType="cmap">
		UPDATE sys_object_domain
		SET IsUse = #{IsUse}
		WHERE DomainID = #{DomainID}
		AND DomainCode = #{DomainCode}
	</update>
	
	<!-- [도메인 사용여부 변경]  #2. 객체 사용 여부 수정 (sys_object_object) -->
	<update id="updateObjectIsUse" parameterType="cmap">
		UPDATE sys_object
		SET IsUse = #{IsUse}
		WHERE ObjectCode = #{DomainCode}
		AND ObjectType = 'DN'
	</update>
	
	<!-- [도메인 사용여부 변경]  #3. 그룹 사용 여부 수정 (sys_object_group) -->
	<update id="updateGroupIsUse" parameterType="cmap">
		UPDATE sys_object_group
		SET IsUse = #{IsUse}
		WHERE GroupCode = #{DomainCode}
		AND GroupType = 'Company'
	</update>
	
	<delete id="delete" parameterType="cmap">
        UPDATE sys_object_domain
		SET DeleteDate = now(3)
		WHERE DomainID = #{DomainID}
		AND DomainCode = #{DomainCode}
	</delete>
	
	<!--[도메인 순서 변경] #1. 정렬키 변경 (sys_object_domain, sys_object_group UPDATE)  -->
	<update id="changeSortKey" parameterType="cmap">
	    UPDATE sys_object_domain SET SortKey = #{sortKey1} WHERE DomainCode = #{domainCode2} ;
	    UPDATE sys_object_domain SET SortKey = #{sortKey2} WHERE DomainCode = #{domainCode1} ;
		
		UPDATE sys_object_group SET SortKey = #{sortKey1} WHERE GroupCode = #{domainCode2} ;
		UPDATE sys_object_group SET SortKey = #{sortKey2} WHERE GroupCode = #{domainCode1} ;
	</update>	
	
	<!--그룹 OUPath 업데이트 -->
	<update id="updateGroupOUPath" parameterType="cmap">
	    UPDATE sys_object_group
		SET OUPath = Fn_ComOUPathCreate_S(GroupCode)
		<if test="DomainCode != null and DomainCode != '' "> <!--전체 업데이트-->
			WHERE CompanyCode = #{DomainCode}
		</if>
	</update>
	
	<!-- 전체 경로 update  ( [domain- SortPath], [group-SortPath, OUPath, GroupPath] )  -->
	<update id="updateAllPath" parameterType="cmap"> 
	    	# Domain 정렬 경로 수정
	    	UPDATE sys_object_domain SET SortPath =  Fn_ComSortPathCreate_S(DomainID, '', 'DN') WHERE DomainCode =#{DomainCode};
	    	
			# Group 정렬 경로 수정
			UPDATE sys_object_group SET SortPath =  Fn_ComSortPathCreate_S(0, GroupCode, 'GR') WHERE CompanyCode = #{DomainCode};
			
			#Group 경로 수정
			UPDATE sys_object_group SET GroupPath = Fn_ComObjectPathCreate_S(0, GroupCode, 'GR')WHERE CompanyCode = #{DomainCode};
			
			#Group OUPath 수정
			UPDATE sys_object_group SET OUPath = Fn_ComOUPathCreate_S(GroupCode) WHERE CompanyCode = #{DomainCode};
	</update>
	
	<!-- <select id="selectUpSortKey" parameterType="cmap" resultType="cmap">
	    <![CDATA[
	    	SELECT SortKey as sortKey, DN_ID as DomainID
	    	FROM base_object_dn
	    	WHERE SortKey = (SELECT MAX(SortKey) FROM base_object_dn where SortKey < #{sortKey})
		 ]]>
	</select>
	
	<select id="selectDownSortKey" parameterType="cmap" resultType="cmap">
	    <![CDATA[
	    	SELECT SortKey as sortKey, DN_ID as DomainID
	    	FROM base_object_dn
	    	WHERE SortKey = (SELECT MIN(SortKey) FROM base_object_dn where SortKey > #{sortKey})
		 ]]>
	</select>
	
	<update id="updateSortKey" parameterType="cmap">
	    <![CDATA[
	    	UPDATE
	    		base_object_dn
	    	SET
	    		SortKey = #{sortKey}
	    	WHERE 
	    		DN_ID = #{DomainID};
		 ]]>
	</update> -->
	
	<update id="updateDomainInfo" parameterType="cmap">
	    UPDATE sys_object_domain
    	SET
    		  DisplayName = #{DisplayName}
			, MultiDisplayName = #{MultiDisplayName}
			, DomainRepName = #{DomainRepName}
			, DomainRepTel = #{DomainRepTel}
			, DomainCorpTel = #{DomainCorpTel}
		    , DomainImagePath = #{DomainImagePath}
		    , DomainBannerPath = #{DomainBannerPath}
		    , DomainBannerLink = #{DomainBannerLink}
			, DomainZipcode = #{DomainZipcode}
			, DomainAddress = #{DomainAddress}
			, Memo = #{Memo}
			, ChargerName = #{ChargerName}
			, ChargerTel = #{ChargerTel}
			, IsUseGoogleSchedule = #{IsUseGoogleSchedule}
			<if test="DomainThemeCode != null and DomainThemeCode != ''">
				,DomainThemeCode= #{DomainThemeCode}
			</if>
    	WHERE 
    		DomainCode = #{DomainCode}
	</update>
	
	<insert id="insertDomainGoogleSchedule" parameterType="cmap">
		<if test="GoogleClientID != null and GoogleClientID != ''">
		    <!-- Google Client ID -->
			INSERT INTO sso_config(
				  Code
				, DomainID
				, SsoAuthType
				, SsoType
				, Lable
				, SettingValue
				, Description
			)
			VALUES (
				  'sso_goclient_id'
				, #{DomainID}
				, 'O'
				, 'S'
				, 'Google Client ID'
				, #{GoogleClientID}
				, 'Google Client ID'
			) ON DUPLICATE KEY
			UPDATE
				  SettingValue = #{GoogleClientID}
				, ModifierCode = #{UserCode}
				, ModifierDate = NOW(3);
		</if>
	    <if test="GoogleClientKey != null and GoogleClientKey != ''">
			<!-- Google Client Key -->
			INSERT INTO sso_config(
				  Code
				, DomainID
				, SsoAuthType
				, SsoType
				, Lable
				, SettingValue
				, Description
			)
			VALUES (
				  'sso_goclient_key'
				, #{DomainID}
				, 'O'
				, 'S'
				, 'Google Client Key'
				, #{GoogleClientKey}
				, 'Google Client Key (Secret Key)'
			) ON DUPLICATE KEY
			UPDATE
				  SettingValue = #{GoogleClientKey}
				, ModifierCode = #{UserCode}
				, ModifierDate = NOW(3);
		</if>
		<if test="GoogleRedirectURL != null and GoogleRedirectURL != ''">
			<!-- Google Redirect URL -->
			INSERT INTO sso_config(
				  Code
				, DomainID
				, SsoAuthType
				, SsoType
				, Lable
				, SettingValue
				, Description
			)
			VALUES (
				  'sso_redirect_url'
				, #{DomainID}
				, 'O'
				, 'S'
				, 'Google Redirect URL'
				, #{GoogleRedirectURL}
				, 'Google OAuth Redirect URL'
			) ON DUPLICATE KEY
			UPDATE
				  SettingValue = #{GoogleRedirectURL}
				, ModifierCode = #{UserCode}
				, ModifierDate = NOW(3);
		</if>
		SELECT 1 FROM dual
	</insert>
	
	<update id="updateDomainInfoDesign" parameterType="cmap">
	    UPDATE sys_object_domain
    	SET
		  <choose>
			<when test='DESIGN != null and DESIGN == "Y"'>
			     DomainImagePath = #{DomainImagePath}
			    , DomainBannerPath = #{DomainBannerPath}
			    , DomainBannerLink = #{DomainBannerLink}
				, DomainThemeCode= #{DomainThemeCode}
			</when>
			<otherwise>
	    		  DisplayName = #{DisplayName}
				, MultiDisplayName = #{MultiDisplayName}
				, DomainRepName = #{DomainRepName}
				, DomainRepTel = #{DomainRepTel}
				, DomainCorpTel = #{DomainCorpTel}
				, DomainZipcode = #{DomainZipcode}
				, DomainAddress = #{DomainAddress}
				, Memo = #{Memo}
				, ChargerName = #{ChargerName}
				, ChargerTel = #{ChargerTel}
				, IsUseGoogleSchedule = #{IsUseGoogleSchedule}
			</otherwise>
		</choose>	
    	WHERE  DomainCode = #{DomainCode}
	</update>
	
	<select id="selectDomainLicenseList" parameterType="cmap" resultType="cmap">
		SELECT *
		FROM (
			SELECT	  SL.LicSeq
					, SL.LicName
					, SL.Description
					, SODL.ServiceUser
					, SODL.ExtraExpiredate
					, SODL.ExtraServiceUser
					, SODL.LicUserCount
					, SODL.LicExUserCount
					, SODL.LicEx1Date
					, CASE WHEN SL.IsOpt = 'Y' THEN lico.LicUsingCnt ELSE lic.LicUsingCnt END AS LicUsingCnt
			FROM sys_object_domain SOD
			INNER JOIN sys_object_domain_license SODL ON SODL.DomainID = SOD.DomainID
			INNER JOIN sys_license SL ON SL.LicSeq = SODL.LicSeq
			LEFT JOIN (SELECT LicSeq, COUNT(ou.Usercode) LicUsingCnt
				      FROM  sys_object_user ou
					  JOIN  sys_object_user_basegroup oub ON ou.UserCode = oub.UserCode AND oub.JobType = 'Origin'
					  JOIN  sys_object_domain od ON oub.CompanyCode = od.DomainCode
					 WHERE  od.DomainId = #{domainID}
					   AND  ou.IsUse = 'Y'
				  GROUP BY LICSEQ) lic ON SODL.LicSeq = lic.LicSeq AND SL.IsOpt = 'N'
			LEFT JOIN (SELECT lou.LicSeq, COUNT(ou.Usercode) LicUsingCnt
					     FROM  sys_object_user ou
					     JOIN  sys_license_opt_user lou ON ou.UserCode = lou.UserCode  
						WHERE  lou.DomainId = #{domainID}
						  AND  ou.IsUse = 'Y'
					 GROUP BY  lou.LicSeq) lico ON SODL.LicSeq = lico.LicSeq AND SL.IsOpt = 'Y'
			WHERE 1=1
			AND SL.IsUse = 'Y'
			AND SOD.DomainID = #{domainID}
			<if test="isOpt != null and isOpt != ''">
				AND SL.IsOpt = #{isOpt}
			</if>
		) RESULT
		ORDER BY LicSeq ASC 
	</select>
	
	<select id="selectDomainLicAddList" parameterType="cmap" resultType="cmap">
		SELECT	  LicSeq
				, LicName
				, ModuleName
				, Description
				, ServiceUser
				, ExtraExpiredate
				, ExtraServiceUser
		FROM (
			SELECT	  SL.LicSeq
					, SL.LicName
					, ETC.ModuleName
					, SL.Description
					, SODL.ServiceUser
					, SODL.ExtraExpiredate
					, SODL.ExtraServiceUser
			FROM sys_license SL
			LEFT OUTER JOIN (
				SELECT	  SLB.LicSeq
						, GROUP_CONCAT(IFNULL(Fn_BaseGetDictionary_S(#{lang}, SBC.MultiCodeName), SBC.CodeName) SEPARATOR '/') AS ModuleName
				FROM sys_license_bizsection SLB
				INNER JOIN sys_base_code SBC ON SBC.Code = SLB.BizSection AND SBC.CodeGroup = 'BizSection' AND SBC.Reserved3 = 'Y'
				GROUP BY SLB.LicSeq
			) ETC ON ETC.LicSeq = SL.LicSeq
			LEFT OUTER JOIN sys_object_domain_license SODL ON SODL.LicSeq = SL.LicSeq AND SODL.DomainID = #{domainID}
			WHERE 1=1
			AND SL.IsUse = 'Y'
			<if test="isOpt != null and isOpt != ''">
				AND SL.IsOpt = #{isOpt}
			</if>
		) RESULT
		ORDER BY LicSeq ASC
	</select>
	
	<insert id="insertDomainLic" parameterType="cmap">
		<foreach collection="LicInfoList" item="item" open="" close="" separator=";">
			INSERT INTO sys_object_domain_license
			      (LicSeq		, DomainID		, ServiceUser	, ServiceStart, ServiceEnd	, ExtraServiceUser	, ExtraExpiredate	, LicUserCount	, LicExpireDate
				,	 LicExUserCount		, LicEx1Date		, RegisterCode		, RegistDate, ModifierCode, ModifyDate)
			VALUES ( #{item.LicSeq}
					, #{DomainID}
					, #{item.ServiceUser}
					, (SELECT DATE_FORMAT(ServiceStart, '%Y%m%d') FROM sys_object_domain WHERE DomainID = #{DomainID})
					, (SELECT DATE_FORMAT(ServiceEnd, '%Y%m%d') FROM sys_object_domain WHERE DomainID = #{DomainID})
					, #{item.ExtraServiceUser}
					, #{item.ExtraExpiredate}
					, #{item.LicUserCount}
					, (SELECT LicExpireDate FROM sys_object_domain WHERE DomainID = #{DomainID})
					, #{item.LicExUserCount}
					, #{item.LicEx1Date}
					, #{UserCode}
					, NOW(3)
					, #{UserCode}
					, NOW(3) )
		    ON   DUPLICATE KEY
			UPDATE 	 ServiceUser = #{item.ServiceUser}
					, ServiceStart = (SELECT DATE_FORMAT(ServiceStart, '%Y%m%d') FROM sys_object_domain WHERE DomainID = #{DomainID})
					, ServiceEnd = (SELECT DATE_FORMAT(ServiceEnd, '%Y%m%d') FROM sys_object_domain WHERE DomainID = #{DomainID})
					, ExtraServiceUser =  #{item.ExtraServiceUser}
					, ExtraExpiredate = #{item.ExtraExpiredate}
					, LicUserCount	=#{item.LicUserCount}
					, LicExpireDate =(SELECT LicExpireDate FROM sys_object_domain WHERE DomainID = #{DomainID})
					, LicExUserCount =	#{item.LicExUserCount}	
					, LicEx1Date		= #{item.LicEx1Date}
					, ModifierCode	=#{UserCode}	
					, ModifyDate  = now()
			
		</foreach>
	</insert>
	
	<delete id="deleteDomainLic" parameterType="cmap">
		DELETE FROM sys_object_domain_license
		WHERE DomainID = #{DomainID}
	</delete>
</mapper>
