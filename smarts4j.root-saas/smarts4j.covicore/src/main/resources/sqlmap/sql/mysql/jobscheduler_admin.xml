<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="jobscheduler.admin">
    <select id="selectJobSchedulerList" parameterType="cmap" resultType="cmap">
	SELECT A.* FROM(
		SELECT J.JobID
			, J.JobTitle
			, J.Seq
			, J.ClusterID
			, J.JobType
			, J.IsUse
			, QT.TRIGGER_STATE AS JobState
			, J.RepeatCnt
			, J.RepeatedCnt								
			, J.AgentServer
			, J.ServiceAgent
			, FROM_UNIXTIME(QT.PREV_FIRE_TIME/1000, '%Y.%m.%d %H:%i:%s') AS LastRunTime
			, FROM_UNIXTIME(QT.NEXT_FIRE_TIME/1000, '%Y.%m.%d %H:%i:%s') AS NextRunTime
			, QT.trigger_state AS LastState
			, J.RegDate AS RegistDate
			, J.RegID AS RegisterCode
			, S.ScheduleID
			, S.ScheduleType
			, S.ScheduleTitle
			, J.Path
			, j.Method
			, j.Params
			, s.Reserved1
			, j.TimeOut
			, j.RetryCnt
			
			FROM covi_smart4j.ZSCHEDULER_JOB J
			INNER JOIN covi_smart4j.ZSCHEDULER_SCHEDULE S ON J.JobID = S.JobID
			LEFT JOIN covi_smart4j.qrtz_triggers QT ON J.JobID = SUBSTRING(QT.Trigger_Group,5,LENGTH(QT.Trigger_Group))
			WHERE j.DomainID = #{domain}
			<if test="domain == 0">
			UNION 
				SELECT SUBSTRING(QT.Trigger_Group,5,LENGTH(QT.Trigger_Group))
					, J.JobTitle
					, J.Seq
					, J.ClusterID
					, J.JobType
					, J.IsUse
					, QT.TRIGGER_STATE AS JobState
					, J.RepeatCnt
					, J.RepeatedCnt								
					, SUBSTR(QT.JOB_GROUP,7) AgentServer
					, J.ServiceAgent
					, FROM_UNIXTIME(QT.PREV_FIRE_TIME/1000, '%Y.%m.%d %H:%i:%s') AS LastRunTime
					, FROM_UNIXTIME(QT.NEXT_FIRE_TIME/1000, '%Y.%m.%d %H:%i:%s') AS NextRunTime
					, QT.trigger_state AS LastState
					, J.RegDate AS RegistDate
					, J.RegID AS RegisterCode
					, S.ScheduleID
					, S.ScheduleType
					, S.ScheduleTitle
					, J.Path
					, j.Method
					, j.Params
					, s.Reserved1
					, j.TimeOut
					, j.RetryCnt
					FROM covi_smart4j.ZSCHEDULER_JOB J
					INNER JOIN covi_smart4j.ZSCHEDULER_SCHEDULE S ON J.JobID = S.JobID
					RIGHT JOIN covi_smart4j.qrtz_triggers QT ON J.JobID = SUBSTRING(QT.Trigger_Group,5,LENGTH(QT.Trigger_Group))	
				WHERE J.JobID IS NULL
			</if>
		) A
		<!-- Order by 절 -->
		<trim prefix="ORDER BY">
			<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection != ''">
			    <choose>
					<when test='sortColumn.equalsIgnoreCase("JobType")'>JobType</when>
					<when test='sortColumn.equalsIgnoreCase("JobTitle")'>JobTitle</when>
					<when test='sortColumn.equalsIgnoreCase("JobState")'>JobState</when>
					<when test='sortColumn.equalsIgnoreCase("RepeatedCnt")'>RepeatedCnt</when>
					<when test='sortColumn.equalsIgnoreCase("LastRunTime")'>LastRunTime</when>
					<when test='sortColumn.equalsIgnoreCase("LastState")'>LastState</when>
					<when test='sortColumn.equalsIgnoreCase("IsUse")'>IsUse</when>
					<when test='sortColumn.equalsIgnoreCase("RegistDate")'>RegistDate</when>
					<when test='sortColumn.equalsIgnoreCase("ScheduleType")'>ScheduleType</when>
					<otherwise>JobID</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if> 
			<if test="sortColumn == null or sortDirection == null">
		 	  	JobID ASC
		    </if>
		</trim>
	    <if test="pageSize != null and pageOffset != null and IsPaging != 'N'.toString()">
		   	LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>	
	</select>
    
    <select id="selectJobSchedulerListcnt" resultType="java.lang.Long">
		SELECT count(J.JobID)
		FROM (SELECT J.jobID
				FROM covi_smart4j.ZSCHEDULER_JOB J
				INNER JOIN covi_smart4j.ZSCHEDULER_SCHEDULE S ON J.JobID = S.JobID
				LEFT JOIN covi_smart4j.qrtz_triggers QT ON J.JobID = SUBSTRING(QT.Trigger_Group,5,LENGTH(QT.Trigger_Group))
				WHERE j.DomainID = #{domain}
		<if test="domain == 0">
			UNION 
				SELECT SUBSTRING(QT.Trigger_Group,5,LENGTH(QT.Trigger_Group))
				FROM covi_smart4j.ZSCHEDULER_JOB J
				INNER JOIN covi_smart4j.ZSCHEDULER_SCHEDULE S ON J.JobID = S.JobID
				RIGHT JOIN covi_smart4j.qrtz_triggers QT ON J.JobID = SUBSTRING(QT.Trigger_Group,5,LENGTH(QT.Trigger_Group))
				WHERE J.JobID IS NULL
		</if>
		) j
	</select>	
    
    <insert id="insertJobScheduler" parameterType="cmap">
        ## 작업 등록
		INSERT covi_smart4j.ZSCHEDULER_JOB ( DomainID, EventID, JobTitle,AgentServer,Seq,ClusterID,JobType,IsUse,JobState,Path,Method,Params,CommandText,Description,IsDelayRun,TimeOut,
									RepeatCnt,RepeatedCnt,RetryCnt,ServiceAgent,LastState,LastRunTime,RegDate,RegID
									)
		VALUES (	#{DomainID},#{EventID},#{JobTitle},#{AgentServer},#{Seq},#{ClusterID},#{JobType},#{IsUse},'R',#{Path},#{Method},#{Params},#{CommandText},#{Description},#{IsDelayRun},#{TimeOut},
					#{RepeatCnt},0,#{RetryCnt},NULL,'R',NULL,now(3),#{UR_Code}
					);		
		SET @JobID = @@IDENTITY;	
		## 일정 등록
		INSERT covi_smart4j.ZSCHEDULER_SCHEDULE (	JobID, DomainID, ScheduleType,ScheduleTitle,StartDate,EndDate,StartHour,StartMinute,EndHour,EndMinute,EveryHour,EveryMinute,
											RepeatDays,RepeatWeeks,WeekOfMonth,IntervalSec,RegDate,RegID,Reserved1)
		VALUES (	@JobID,#{DomainID}, #{ScheduleType},#{ScheduleTitle},#{StartDate},#{EndDate},#{StartHour},#{StartMinute},#{EndHour},#{EndMinute},#{EveryHour},#{EveryMinute}
					,#{RepeatDays},#{RepeatWeeks},#{WeekOfMonth},#{IntervalSec},now(3),#{UR_Code},#{Reserved1});
		SET @ScheduleID = @@IDENTITY;		
		
		
		<selectKey keyProperty="JobID,ScheduleID" resultType="cmap" order="AFTER">
			SELECT @JobID AS JobID, @ScheduleID AS ScheduleID; 
		</selectKey>
    </insert>
    
    
    <update id="updateJobScheduler" parameterType="cmap">
        
        SET @ScheduleID = (SELECT ScheduleID FROM covi_smart4j.ZSCHEDULER_SCHEDULE  WHERE JobID = #{JobID});
        ## 작업 수정
		UPDATE covi_smart4j.ZSCHEDULER_JOB 
		SET		JobTitle = #{JobTitle}
				,JobType = #{JobType}
				,IsUse = #{IsUse}
				,Path = #{Path}
				,Method = #{Method}
				,Params = #{Params}
				,Description = #{Description}
				,TimeOut = #{TimeOut}
				,ModDate =  now(3)
				,ModID = #{UR_Code}
		WHERE JobID = #{JobID};
		
		## 일정 수정
		UPDATE covi_smart4j.ZSCHEDULER_SCHEDULE 
		SET		ScheduleTitle = #{ScheduleTitle}
				,ModDate =  now(3)
				,ModID = #{UR_Code}
				,Reserved1 = #{Reserved1}
		WHERE ScheduleID = @ScheduleID;
		
	</update>        
    
    <select id="selectJobSchedulerData" parameterType="cmap" resultType="cmap">
			SELECT	A.JobID, A.JobTitle, A.Seq, A.AgentServer, IFNULL(A.ClusterID, 0) AS ClusterID, A.JobType, A.IsUse, A.JobState,
					A.Path, A.Method, A.Params, A.CommandText, A.Description, A.IsDelayRun, A.TimeOut,
					A.RepeatCnt, A.RetryCnt,A.EventID, A.DomainID,	
					B.ScheduleID, B.ScheduleType, B.ScheduleTitle, 
					B.StartDate AS StartDate, 
					CASE WHEN B.EndDate IS NOT NULL THEN B.EndDate ELSE NULL END AS EndDate, 
					B.StartHour, B.StartMinute,
					B.EndHour, B.EndMinute, B.EveryHour, B.EveryMinute, B.RepeatDays, B.RepeatWeeks, B.WeekOfMonth, B.IntervalSec, B.Reserved1, 
					@Days AS Days, @Weeks AS Weeks, @Months AS Months
			FROM covi_smart4j.ZSCHEDULER_JOB A 
				INNER JOIN covi_smart4j.ZSCHEDULER_SCHEDULE B
				ON A.JobID = B.JobID
			WHERE A.JobID = #{JobID};
    </select>
    
    <delete id="deleteJobScheduler" parameterType="cmap">        
        <foreach collection="JobID" item="item" index="index" separator="">
	        SET @ScheduleID = (SELECT ScheduleID FROM covi_smart4j.ZSCHEDULER_SCHEDULE  WHERE JobID = #{item});

			## 일정 삭제
			DELETE FROM covi_smart4j.ZSCHEDULER_SCHEDULE WHERE ScheduleID = @ScheduleID;
			## 작업 삭제
			DELETE FROM covi_smart4j.ZSCHEDULER_JOB WHERE JobID = #{item};
		</foreach>
    </delete>
    
    <update id="initJobScheduler" parameterType="cmap">
        ## 작업 초기화
		UPDATE covi_smart4j.ZSCHEDULER_JOB 
		SET		JobState = 'R',
				RepeatedCnt = 0,
				ServiceAgent = NULL,	
				LastState = 'R',
				LastRunTime = NULL
		WHERE JobID IN
		<foreach collection="JobID" item="item" index="index" separator="," open="(" close=")"> 
		    #{item}
		</foreach>
    </update>
    
    <update id="changeIsUseJobScheduler" parameterType="cmap">
        UPDATE covi_smart4j.ZSCHEDULER_JOB SET IsUse = #{IsUse} WHERE JobID = #{JobID}
    </update>
    
     <select id="selectJobSchedulerEventList" parameterType="cmap" resultType="cmap">
			SELECT EventID, JobTitle, JobType, Path, ScheduleTitle, CronExpr, Description, IsUse, AgentServer, IsCopy
					, RegID, date_format(RegDate, '%Y.%m.%d %H:%i:%s') RegDate, ModID, date_format(ModDate, '%Y.%m.%d %H:%i:%s') ModDate
					, (SELECT COUNT(J.JobID) FROM covi_smart4j.ZSCHEDULER_JOB J WHERE j.eventid = a.eventId) JobCnt
					, (SELECT COUNT(J.JobID) FROM covi_smart4j.ZSCHEDULER_JOB J JOIN covi_smart4j.qrtz_triggers QT ON J.JobID = SUBSTRING(QT.Trigger_Group,5,LENGTH(QT.Trigger_Group)) 
						WHERE j.eventid = a.eventId
						  AND trigger_state = 'WAITING') QrtzCnt
			  FROM covi_smart4j.ZSCHEDULER_Event a
		<!-- Order by 절 -->
		<trim prefix="ORDER BY">
			<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection != ''">
	    		<choose>
					<when test='sortColumn.equalsIgnoreCase("JobType")'>JobType</when>
					<when test='sortColumn.equalsIgnoreCase("JobTitle")'>JobTitle</when>
					<when test='sortColumn.equalsIgnoreCase("ScheduleTitle")'>ScheduleTitle</when>
					<when test='sortColumn.equalsIgnoreCase("CronExpr")'>CronExpr</when>
					<when test='sortColumn.equalsIgnoreCase("IsCopy")'>IsCopy</when>
					<when test='sortColumn.equalsIgnoreCase("JobCnt")'>JobCnt</when>
					<when test='sortColumn.equalsIgnoreCase("QrtzCnt")'>QrtzCnt</when>
					<when test='sortColumn.equalsIgnoreCase("RegistDate")'>RegDate</when>
					<otherwise>EventID</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if> 
			<if test="sortColumn == null or sortColumn == '' or sortDirection == null or sortDirection == ''">
				A.EventID ASC
		    </if>
		</trim>
	    <if test="pageSize != null and pageOffset != null and IsPaging != 'N'.toString()">
		   	LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>	
	</select>
    
    <select id="selectJobSchedulerEventListcnt" resultType="java.lang.Long">
		SELECT count(EventID) 
		  FROM covi_smart4j.ZSCHEDULER_Event a
	</select>	
    
    <insert id="insertJobSchedulerEvent" parameterType="cmap">
        ## 작업 등록
		INSERT covi_smart4j.ZSCHEDULER_Event ( JobTitle, JobType, Path, ScheduleTitle, CronExpr, Description, IsUse, IsCopy, AgentServer, TimeOut, RepeatCnt, RetryCnt
				, RegID, RegDate, ModID, ModDate)
		VALUES (	#{JobTitle},#{JobType},#{Path},#{ScheduleTitle},#{CronExpr},#{Description}, #{IsUse}, #{IsCopy}, #{AgentServer}, #{TimeOut}, #{RepeatCnt}, #{RetryCnt}
				,#{UR_Code}, now(3),#{UR_Code}, now(3))		
		
    </insert>
    
    <update id="updateJobSchedulerEvent" parameterType="cmap">
		UPDATE covi_smart4j.ZSCHEDULER_Event 
		SET		JobTitle = #{JobTitle}
				,JobType = #{JobType}
				,Path = #{Path}
				,ScheduleTitle = #{ScheduleTitle}
				,CronExpr = #{CronExpr}
				,Description = #{Description}
				,IsUse = #{IsUse}
				,IsCopy = #{IsCopy}
				,AgentServer = #{AgentServer}
				,TimeOut = #{TimeOut} 
				,RepeatCnt = #{RepeatCnt}
				,RetryCnt = #{RetryCnt}
				,ModDate =  now(3)
				,ModID = #{UR_Code}
		WHERE EventID = #{EventID};
    </update>
        
    
    <select id="selectJobSchedulerEventData" parameterType="cmap" resultType="cmap">
			SELECT EventID, JobTitle, JobType, Path, ScheduleTitle, CronExpr, Description, IsUse, IsCopy, AgentServer, TimeOut, RepeatCnt, RetryCnt
					, RegID, date_format(RegDate, '%Y.%m.%d %H:%i:%s') RegDate, ModID, date_format(ModDate, '%Y.%m.%d %H:%i:%s') ModDate
			  FROM covi_smart4j.ZSCHEDULER_Event a
			WHERE A.EventID = #{EventID};
    </select>
    
    <delete id="deleteJobSchedulerEvent" parameterType="cmap">        
		DELETE FROM covi_smart4j.ZSCHEDULER_Event
		  WHERE EventID = #{EventID};
	</delete>    
	
    <select id="selectJobSchedulerEventJob" parameterType="cmap" resultType="cmap">
		SELECT d.DomainID 
			    , d.DomainCode
			    , Fn_BaseGetDictionary_S(#{lang}, MultiDisplayName) AS DisplayName
			    , CONCAT(DATE_FORMAT(ServiceStart,'%Y-%m-%d'), ' ~ ', DATE_FORMAT(ServiceEnd,'%Y-%m-%d')) AS ServicePeriod
			    , j.JobID
			    , s.ScheduleTitle
			    , s.Reserved1
				, QT.TRIGGER_STATE AS JobState
				, j.IsUse
				, FROM_UNIXTIME(QT.PREV_FIRE_TIME/1000, '%Y.%m.%d %H:%i:%s') AS LastRunTime
				, J.AgentServer
				, J.JobType
				, J.Path
				, j.Method
				, s.ScheduleID
				, j.Params
				, s.Reserved1
				, j.TimeOut
				, j.RetryCnt
				, j.RepeatCnt
		   FROM covi_smart4j.sys_object_domain d
	  LEFT JOIN covi_smart4j.ZSCHEDULER_JOB j ON d.DomainID = j.DomainID AND j.EventID  = #{EventID}
	  LEFT JOIN covi_smart4j.ZSCHEDULER_SCHEDULE S ON J.JobID = S.JobID
	  LEFT JOIN covi_smart4j.qrtz_triggers QT ON J.JobID = SUBSTRING(QT.Trigger_Group,5,LENGTH(QT.Trigger_Group))
		  WHERE DeleteDate IS NULL
		   <if test='IsCopy == "Y"'>
			    AND (j.DomainID IS NOT NULL OR  (d.domainid > 0 AND NOW() BETWEEN servicestart AND serviceend))
			</if>	
		   <if test='IsCopy != "Y"'>
			    AND (j.DomainID IS NOT NULL OR  (d.domainid = 0))
			</if>	
		    AND d.isuse = 'Y'	 
		<!-- Order by 절 -->
		<trim prefix="ORDER BY">
			<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection != ''">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("DisplayName")'>DisplayName</when>
					<when test='sortColumn.equalsIgnoreCase("ServicePeriod")'>ServicePeriod</when>
					<when test='sortColumn.equalsIgnoreCase("JobState")'>JobState</when>
					<when test='sortColumn.equalsIgnoreCase("Reserved1")'>Reserved1</when>
					<when test='sortColumn.equalsIgnoreCase("LastRunTime")'>LastRunTime</when>
					<when test='sortColumn.equalsIgnoreCase("IsUse")'>IsUse</when>
					<otherwise>DomainID</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if> 
			<if test="sortColumn == null or sortColumn == '' or sortDirection == null or sortDirection == ''">
				d.DomainID ASC
			</if>
		</trim>
	    <if test="pageSize != null and pageOffset != null and IsPaging != 'N'.toString()">
		   	LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>	
	</select>
    
    <select id="selectJobSchedulerEventJobcnt" resultType="java.lang.Long">
		SELECT count(d.DomainID) 
		   FROM covi_smart4j.sys_object_domain d
	  LEFT JOIN covi_smart4j.ZSCHEDULER_JOB j ON d.DomainID = j.DomainID AND j.EventID  = #{EventID}
	  LEFT JOIN covi_smart4j.ZSCHEDULER_SCHEDULE S ON J.JobID = S.JobID
	  LEFT JOIN covi_smart4j.qrtz_triggers QT ON J.JobID = SUBSTRING(QT.Trigger_Group,5,LENGTH(QT.Trigger_Group))
		  WHERE DeleteDate IS NULL
		   <if test='IsCopy == "Y"'>
			    AND (j.DomainID IS NOT NULL OR  (d.domainid > 0 AND NOW() BETWEEN servicestart AND serviceend))
			</if>	
		   <if test='IsCopy != "Y"'>
			    AND (j.DomainID IS NOT NULL OR  (d.domainid = 0))
			</if>	
		    AND d.isuse = 'Y'	 
	</select>	
	
     <insert id="insertJobSchedulerEventJob" parameterType="cmap">        
        <foreach collection="dataList" item="item" index="index" separator="">
        <![CDATA[
			INSERT covi_smart4j.ZSCHEDULER_JOB ( DomainID, EventID, JobTitle,AgentServer,Seq,ClusterID,JobType,IsUse,JobState,Path,Params,Description,IsDelayRun,TimeOut,
										RepeatCnt,RetryCnt,LastState,RegDate,RegID)
					(SELECT #{item.DomainID}, e.EventID, e.JobTitle, e.AgentServer, 0, 0, e.JobType, 'Y', 'R',  e.Path, CONCAT('DN_ID=',#{item.DomainID},'&DN_Code=',#{item.DomainCode}),e.Description, 'Y', e.TimeOut
							, e.RepeatCnt, e.RetryCnt, '', NOW(3), #{UR_Code}
					   FROM covi_smart4j.zscheduler_event e
				  LEFT JOIN covi_smart4j.zscheduler_job j ON e.EventID= j.EventID and j.DomainId = #{item.DomainID}
					  WHERE e.EventID = #{EventID}
					    AND j.jobid is null	);				
					  
			INSERT covi_smart4j.ZSCHEDULER_SCHEDULE (	JobID, DomainID, ScheduleType,ScheduleTitle,Reserved1,RegDate,RegID)
			(SELECT  J.JobID, J.DomainID, 'Interval', e.ScheduleTitle, e.CronExpr, NOW(3), #{UR_Code}
			   FROM  covi_smart4j.zscheduler_event e
			   JOIN  covi_smart4j.zscheduler_job 	J ON E.EventID = J.EventID and j.DomainId = #{item.DomainID}
		  LEFT JOIN  covi_smart4j.zscheduler_schedule  S ON j.JobID = s.JobID
			  WHERE  e.EventID = #{EventID}
			    AND  s.ScheduleID is null);
			    ]]>
		</foreach>	  
	</insert>    
	
	 <select id="getJobSchedulerEventJobList" parameterType="cmap" resultType="cmap">
		SELECT  j.JobID
				, J.AgentServer
				, QT.TRIGGER_STATE AS JobState
	     FROM covi_smart4j.ZSCHEDULER_JOB j 
    LEFT JOIN covi_smart4j.qrtz_triggers QT ON J.JobID = SUBSTRING(QT.Trigger_Group,5,LENGTH(QT.Trigger_Group))
	    WHERE j.EventID  = #{EventID}
	</select>
	
	<delete id="deleteJobSchedulerEventJob" parameterType="cmap">        
        <foreach collection="dataList" item="item" index="index" separator="">
        <![CDATA[
			DELETE FROM covi_smart4j.ZSCHEDULER_JOB
			  WHERE JobID =  #{item.JobID};

			DELETE FROM covi_smart4j.ZSCHEDULER_SCHEDULE
			  WHERE JobID =  #{item.JobID};
			    ]]>
		</foreach>	  
	</delete>    
	
	

    <select id="selectJobLogList" parameterType="cmap" resultType="cmap">
			SELECT A.* FROM
			  (SELECT  
					HistoryID
					,JobID
					,JobTitle
					,ScheduleType
					,IsSuccess
					,RetryCnt
					,AgentServer
					,Message
					,ResultText
					,EventTime
					,EventTime AS EventDate 
				FROM covi_smart4j.ZSCHEDULER_HISTORY
				Where 1=1
				<if test="JobID != null and JobID != ''">
					AND JobID = #{JobID}
				</if>
				) A
		<!-- Order by 절 -->
		<trim prefix="ORDER BY">
			<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection != ''">
	    		<choose>
					<when test='sortColumn.equalsIgnoreCase("EventDate")'>EventDate</when>
					<when test='sortColumn.equalsIgnoreCase("AgentServer")'>AgentServer</when>
					<when test='sortColumn.equalsIgnoreCase("IsSuccess")'>IsSuccess</when>
					<when test='sortColumn.equalsIgnoreCase("Message")'>Message</when>
					<when test='sortColumn.equalsIgnoreCase("Seq")'>Seq</when>
					<otherwise>HistoryID</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if> 
			<if test="sortColumn == null or sortColumn == '' or sortDirection == null or sortDirection == ''">
				A.Seq ASC
		    </if>
		</trim>
	   	<if test="pageSize != null and pageOffset != null">
   			LIMIT #{pageSize} OFFSET #{pageOffset}
   		</if>	
	
	</select>
    
    <select id="selectJobLogListcnt" resultType="java.lang.Long">
		SELECT COUNT(HistoryID) FROM
			  (SELECT  
					HistoryID
					,JobID
					,JobTitle
					,ScheduleType
					,IsSuccess
					,RetryCnt
					,AgentServer
					,Message
					,ResultText
					,EventTime
					,EventTime AS EventDate 
				FROM covi_smart4j.ZSCHEDULER_HISTORY
				Where 1=1
				<if test="JobID != null and JobID != ''">
				AND JobID = #{JobID}
				</if>
		) A
	</select>	
	
    <delete id="delectJobLog" parameterType="cmap" >
        <choose>
	    <when test="AgentServer != '' and AgentServer != null and JobID != '' and JobID != null">
	      DELETE FROM covi_smart4j.ZSCHEDULER_HISTORY WHERE AgentServer = #{AgentServer} AND JobID = #{JobID}
	    </when>
	    <when test="JobID != '' and JobID != null">
	      DELETE FROM covi_smart4j.ZSCHEDULER_HISTORY WHERE JobID = #{JobID}
	    </when>
	    <when test="AgentServer != '' and AgentServer != null">
	      DELETE FROM covi_smart4j.ZSCHEDULER_HISTORY WHERE AgentServer = #{AgentServer}
	    </when>
	    <otherwise>
	      DELETE FROM covi_smart4j.ZSCHEDULER_HISTORY
	    </otherwise>
	  </choose>  
    </delete>
    
  
	<!-- ZSCHEULDER_HISTORY 기록 -->
	<insert id="insertJobHistory" parameterType="cmap">
		INSERT INTO covi_smart4j.ZSCHEDULER_HISTORY(JobID, JobTitle, ScheduleType, IsSuccess, RetryCnt, AgentServer, Message, ResultText)
		SELECT sj.JobID, sj.JobTitle, JobType, #{isSuccess}, #{retryCount}, sj.AgentServer, #{message}, #{resultText} FROM covi_smart4j.zscheduler_job AS sj 
		WHERE 1=1
		AND sj.JobID = #{jobID}
		<selectKey keyProperty="historyID" resultType="cmap" order="AFTER">
			SELECT LAST_INSERT_ID();
		</selectKey>
	</insert>
</mapper>
