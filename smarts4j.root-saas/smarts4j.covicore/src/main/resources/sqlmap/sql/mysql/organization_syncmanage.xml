<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="organization.syncmanage">
   
    <!-- Log 관련 -->
   	<select id="selectGroupLogListcnt" parameterType="cmap" resultType="java.lang.Long">
		SELECT COUNT(*)
		FROM covi_syncdata.log_object_group
		<trim prefix="WHERE" prefixOverrides="AND |OR ">			
	       	AND LogMasterID = #{SyncMasterID}
	       	AND SyncManage = 'Sync'
	        <if test="SyncType != '' and SyncType != null">  
	       	AND SyncType=#{SyncType}
	       	</if>
		</trim>
	</select>
	
  	<select id="selectUserLogListcnt" parameterType="cmap" resultType="java.lang.Long">
		SELECT COUNT(*)
		FROM covi_syncdata.log_object_user
		<trim prefix="WHERE" prefixOverrides="AND |OR ">			
	        AND LogMasterID = #{SyncMasterID}
	       	AND SyncManage = 'Sync'
	        <if test="SyncType != '' and SyncType != null">  
	       		AND SyncType=#{SyncType}
	       	</if>			
		</trim>
	</select>
	
    <select id="selectAddJobLogListcnt" parameterType="cmap" resultType="java.lang.Long">
        SELECT COUNT(*)
		FROM covi_syncdata.log_object_addjob
		<trim prefix="WHERE" prefixOverrides="AND |OR ">			
	        AND LogMasterID = #{SyncMasterID}
	       	AND SyncManage = 'Sync'
	        <if test="SyncType != '' and SyncType != null">  
	       	AND SyncType=#{SyncType}
	       	</if>			
		</trim>
	</select>
	
    <select id="selectGroupLogList" parameterType="cmap" resultType="cmap">
		SELECT
			  Seq
			, SyncManage
			, LogMasterID
			, SyncType
			, GroupCode
			, CompanyCode
			, MemberOf
			, DisplayName
			, IsUse
			, SyncStatus
			, InsertDate
		FROM covi_syncdata.log_object_group
	    <trim prefix="WHERE" prefixOverrides="AND |OR ">
	    	AND LogMasterID = #{SyncMasterID}
	    	AND SyncManage = 'Sync'
	        <if test="SyncType != '' and SyncType != null">  
	       		AND SyncType=#{SyncType}
	       	</if>
	       	<if test="IsUse != '' and IsUse != null">  
				AND IsUse=#{IsUse}
			</if>
			<if test="SyncStatus != '' and SyncStatus != null">  
	        	AND SyncStatus=#{SyncStatus}
	        </if>
	        <if test="ObjectCode != '' and ObjectCode != null">  
	        	AND GroupCode=#{ObjectCode}
	        </if>
		</trim>
		<trim prefix="ORDER BY">
			<if test="sortColumn != null and sortDirection != null and sortColumn != 'SortKey'">
	   			<choose>
					<when test='sortColumn.equalsIgnoreCase("SyncType")'>SyncType</when>
					<when test='sortColumn.equalsIgnoreCase("GroupCode")'>GroupCode</when>
					<when test='sortColumn.equalsIgnoreCase("CompanyCode")'>CompanyCode</when>
					<when test='sortColumn.equalsIgnoreCase("DisplayName")'>DisplayName</when>
					<when test='sortColumn.equalsIgnoreCase("IsUse")'>IsUse</when>
					<when test='sortColumn.equalsIgnoreCase("SyncStatus")'>SyncStatus</when>
					<when test='sortColumn.equalsIgnoreCase("InsertDate")'>InsertDate</when>
					<otherwise>Seq</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if> 
			<if test="sortColumn == null or sortDirection == null or sortColumn == 'SortKey'">
		 		Seq DESC
		    </if>
		</trim>
	    <if test="pageSize != null and pageOffset != null">
		   	LIMIT #{pageSize} OFFSET #{pageOffset}
		</if> 
    </select>
    
    <select id="selectSyncHitory" parameterType="cmap" resultType="cmap">
		SELECT
			  SyncMasterID
			, GRInsertCnt
			, GRUpdateCnt
			, GRDeleteCnt
			, URInsertCnt
			, URUpdateCnt
			, URDeleteCnt
			, AddJobInsertCnt
			, AddJobUpdateCnt
			, AddJobDeleteCnt
			, StartDate
			, EndDate
		FROM covi_syncdata.log_object_list
		<trim prefix="ORDER BY">
		 	StartDate DESC
		</trim>	
		<if test="TopCnt != null and TopCnt != null">
		   	LIMIT #{TopCnt} OFFSET 0
		</if> 
    </select>
    
    <select id="selectSyncItemLog" parameterType="cmap" resultType="cmap">
		SELECT
			  LogMasterID
			, Seq
			, LogType
			, TargetType
			, SyncType
			, LogMessage
			, RegistDate
		FROM covi_syncdata.log_object_list_log
		WHERE LogMasterID = #{SyncMasterID}
		ORDER BY Seq
    </select>
    
    <select id="selectUserLogList" parameterType="cmap" resultType="cmap">
		SELECT
			  Seq
			, SyncManage
			, LogMasterID
			, SyncType
			, UserCode
			, CompanyCode
			, DeptCode
			, DisplayName
			, IsUse
			, SyncStatus
			, InsertDate
		FROM covi_syncdata.log_object_user
	    <trim prefix="WHERE" prefixOverrides="AND |OR ">
	        AND LogMasterID = #{SyncMasterID}
	        AND SyncManage = 'Sync'
	        <if test="SyncType != '' and SyncType != null">  
	       		AND SyncType=#{SyncType}
	       	</if>
	       	<if test="IsUse != '' and IsUse != null">  
				AND IsUse=#{IsUse}
			</if>
			<if test="SyncStatus != '' and SyncStatus != null">  
	        	AND SyncStatus=#{SyncStatus}
	        </if>
	        <if test="ObjectCode != '' and ObjectCode != null">  
	        	AND UserCode=#{ObjectCode}
	        </if>
		</trim> 
		<trim prefix="ORDER BY">
			<if test="sortColumn != null and sortDirection != null and sortColumn != 'SortKey'">
	    		<choose>
					<when test='sortColumn.equalsIgnoreCase("SyncType")'>SyncType</when>
					<when test='sortColumn.equalsIgnoreCase("UserCode")'>UserCode</when>
					<when test='sortColumn.equalsIgnoreCase("CompanyCode")'>CompanyCode</when>
					<when test='sortColumn.equalsIgnoreCase("DisplayName")'>DisplayName</when>
					<when test='sortColumn.equalsIgnoreCase("IsUse")'>IsUse</when>
					<when test='sortColumn.equalsIgnoreCase("SyncStatus")'>SyncStatus</when>
					<when test='sortColumn.equalsIgnoreCase("InsertDate")'>InsertDate</when>
					<otherwise>Seq</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if> 
			<if test="sortColumn == null or sortDirection == null or sortColumn == 'SortKey'">
		 		Seq DESC
		    </if>
		</trim>
	    <if test="pageSize != null and pageOffset != null">
		   	LIMIT #{pageSize} OFFSET #{pageOffset}
		</if> 
    </select>
    
    <select id="selectAddJobLogList" parameterType="cmap" resultType="cmap">
		SELECT
			  Seq
			, SyncManage
			, LogMasterID
			, SyncType
			, JobType
			, UserCode
			, CompanyCode
			, DeptCode
			, JobLevelCode
			, JobPositionCode
			, JobTitleCode
			, IsUse
			, SyncStatus
			, InsertDate
		FROM covi_syncdata.log_object_addjob		
	    <trim prefix="WHERE" prefixOverrides="AND |OR ">
	        AND LogMasterID = #{SyncMasterID}
	        AND SyncManage = 'Sync'
	        <if test="SyncType != '' and SyncType != null">  
	       		AND SyncType=#{SyncType}
	       	</if>
	       	<if test="IsUse != '' and IsUse != null">  
				AND IsUse=#{IsUse}
			</if>
			<if test="SyncStatus != '' and SyncStatus != null">  
	        	AND SyncStatus=#{SyncStatus}
	        </if>
	        <if test="ObjectCode != '' and ObjectCode != null">  
	        	AND UserCode=#{ObjectCode}
	        </if>
		</trim>
		<trim prefix="ORDER BY">
			<if test="sortColumn != null and sortDirection != null and sortColumn != 'SortKey'">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("SyncType")'>SyncType</when>
					<when test='sortColumn.equalsIgnoreCase("UserCode")'>UserCode</when>
					<when test='sortColumn.equalsIgnoreCase("CompanyCode")'>CompanyCode</when>
					<when test='sortColumn.equalsIgnoreCase("DeptCode")'>DeptCode</when>
					<when test='sortColumn.equalsIgnoreCase("IsUse")'>IsUse</when>
					<when test='sortColumn.equalsIgnoreCase("SyncStatus")'>SyncStatus</when>
					<when test='sortColumn.equalsIgnoreCase("InsertDate")'>InsertDate</when>
					<otherwise>Seq</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if> 
			<if test="sortColumn == null or sortDirection == null or sortColumn == 'SortKey'">
				Seq DESC
		    </if>
		</trim>
	    <if test="pageSize != null and pageOffset != null">
		   	LIMIT #{pageSize} OFFSET #{pageOffset}
		</if> 
    </select>
   	
    <select id="selectLogList" parameterType="cmap" resultType="cmap">
	    SELECT
			SyncMasterID,
			GRInsertCnt,
			GRUpdateCnt,
			GRDeleteCnt,
			URInsertCnt,
			URUpdateCnt,
			URDeleteCnt,
			AddJobInsertCnt,
			AddJobUpdateCnt,
			AddJobDeleteCnt,
			StartDate as InsertDate
	    FROM covi_syncdata.log_object_list
	    <trim prefix="WHERE" prefixOverrides="AND |OR ">  
			<if test="FirstDate != '' and FirstDate != null">  
				AND StartDate <![CDATA[>=]]> #{FirstDate}
			</if>
			<if test="LastDate != '' and LastDate != null">  
				AND StartDate <![CDATA[<= #{LastDate} + INTERVAL 1 DAY]]>	       	
			</if> 
		</trim>
		ORDER BY StartDate DESC
	    <if test="pageSize != null and pageOffset != null">
	   		LIMIT #{pageSize} OFFSET #{pageOffset}
	   	</if>
	</select>
	
    <select id="selectLogListTotalCnt" resultType="java.lang.Long">
		SELECT COUNT(*)
		FROM covi_syncdata.log_object_list
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="FirstDate != '' and FirstDate != null">  
				AND StartDate <![CDATA[>=]]> #{FirstDate}
			</if>
			<if test="LastDate != '' and LastDate != null">  	       	
				AND StartDate <![CDATA[<= #{LastDate} + INTERVAL 1 DAY]]>
			</if> 
		</trim>
	</select>
	
	<select id="selectMoniterCompareCount" parameterType="cmap" resultType="cmap">
		SELECT 
			 (SELECT NVL(MAX(SyncMasterID), 0) FROM covi_syncdata.log_object_list) AS "SyncMasterID"
			,(SELECT COUNT(*) FROM covi_syncdata.compare_object_group) AS "GR_Cnt"
			,(SELECT COUNT(*) FROM covi_syncdata.compare_object_user) AS "UR_Cnt"
			,(SELECT COUNT(*) FROM covi_syncdata.compare_object_AddJoB) AS "Add_Cnt"
		FROM DUAL
	</select>
    
    <insert id="insertLogList" parameterType="cmap">
    	UPDATE covi_syncdata.log_object_list SET EndDate = now(3) WHERE EndDate IS NULL;
        INSERT INTO covi_syncdata.log_object_list (
			  GRInsertCnt
			, GRUpdateCnt
			, GRDeleteCnt
			, URInsertCnt
			, URUpdateCnt
			, URDeleteCnt
			, AddJobInsertCnt
			, AddJobUpdateCnt
			, AddJobDeleteCnt
			, StartDate
		)
		VALUES (	
			  #{GRInsertCnt}
			, #{GRUpdateCnt}
			, #{GRDeleteCnt}
			, #{URInsertCnt}
			, #{URUpdateCnt}
			, #{URDeleteCnt}
			, #{AddJobInsertCnt}
			, #{AddJobUpdateCnt}
			, #{AddJobDeleteCnt}
			, now(3)
		)
		<selectKey resultType="Integer" keyProperty="SyncMasterID" order="AFTER">
			SELECT MAX(SyncMasterID) AS SyncMasterID 
			FROM covi_syncdata.log_object_list
           	WHERE EndDate IS NULL
	    </selectKey>
    </insert>
    
	<update id="updateLogList" parameterType="cmap">
	   	UPDATE covi_syncdata.log_object_list 
	   	SET 
	   		  EndDate = NOW(3)
	   		, GRInsertCnt = (SELECT COUNT(*) FROM covi_syncdata.log_object_list_log WHERE LOGMASTERID = #{SyncMasterID} AND TARGETTYPE IN ('DEPT', 'JOBTITLE', 'JOBLEVEL', 'JOBPOSITION') AND SYNCTYPE = 'INSERT' AND LOGTYPE <![CDATA[<>]]> 'Error')
	   		, GRUpdateCnt = (SELECT COUNT(*) FROM covi_syncdata.log_object_list_log WHERE LOGMASTERID = #{SyncMasterID} AND TARGETTYPE IN ('DEPT', 'JOBTITLE', 'JOBLEVEL', 'JOBPOSITION') AND SYNCTYPE = 'UPDATE' AND LOGTYPE <![CDATA[<>]]> 'Error')
	   		, GRDeleteCnt = (SELECT COUNT(*) FROM covi_syncdata.log_object_list_log WHERE LOGMASTERID = #{SyncMasterID} AND TARGETTYPE IN ('DEPT', 'JOBTITLE', 'JOBLEVEL', 'JOBPOSITION') AND SYNCTYPE = 'DELETE' AND LOGTYPE <![CDATA[<>]]> 'Error')
	   		, URInsertCnt = (SELECT COUNT(*) FROM covi_syncdata.log_object_list_log WHERE LOGMASTERID = #{SyncMasterID} AND TARGETTYPE = 'USER' AND SYNCTYPE = 'INSERT' AND LOGTYPE <![CDATA[<>]]> 'Error')
	   		, URUpdateCnt = (SELECT COUNT(*) FROM covi_syncdata.log_object_list_log WHERE LOGMASTERID = #{SyncMasterID} AND TARGETTYPE = 'USER' AND SYNCTYPE = 'UPDATE' AND LOGTYPE <![CDATA[<>]]> 'Error')
	   		, URDeleteCnt = (SELECT COUNT(*) FROM covi_syncdata.log_object_list_log WHERE LOGMASTERID = #{SyncMasterID} AND TARGETTYPE = 'USER' AND SYNCTYPE = 'DELETE' AND LOGTYPE <![CDATA[<>]]> 'Error')
			, AddJobInsertCnt = (SELECT COUNT(*) FROM covi_syncdata.log_object_list_log WHERE LOGMASTERID = #{SyncMasterID} AND TARGETTYPE = 'ADDJOB' AND SYNCTYPE = 'INSERT' AND LOGTYPE <![CDATA[<>]]> 'Error')
	   		, AddJobUpdateCnt = (SELECT COUNT(*) FROM covi_syncdata.log_object_list_log WHERE LOGMASTERID = #{SyncMasterID} AND TARGETTYPE = 'ADDJOB' AND SYNCTYPE = 'UPDATE' AND LOGTYPE <![CDATA[<>]]> 'Error')
	   		, AddJobDeleteCnt = (SELECT COUNT(*) FROM covi_syncdata.log_object_list_log WHERE LOGMASTERID = #{SyncMasterID} AND TARGETTYPE = 'ADDJOB' AND SYNCTYPE = 'DELETE' AND LOGTYPE <![CDATA[<>]]> 'Error')	   			
		WHERE SyncMasterID = #{SyncMasterID}	
	</update>
	
	<select id="selectSyncMasterID" parameterType="cmap" resultType="java.lang.Long">
		SELECT MAX(SyncMasterID) AS "SyncMasterID"
		FROM covi_syncdata.log_object_list
		WHERE EndDate IS NULL
    </select>
    
	<insert id="insertLogListLog" parameterType="cmap">
        INSERT INTO covi_syncdata.log_object_list_log (	
	    	  LogMasterID
	    	, LogType
	    	, TargetType
	    	, SyncType
	    	, LogMessage
	    	, SyncServer
	    	, RegistDate
	    )
	    VALUES (
	    	  #{LogMasterID}
	    	, #{LogType}
	    	, #{TargetType}
	    	, #{SyncType}
	    	, #{LogMessage}
	    	, #{SyncServer}
	    	, now()
	    )
    </insert>
	
	<insert id="insertGroupLogList" parameterType="cmap">
		INSERT INTO covi_syncdata.log_object_group (
			  SyncManage
			, LogMasterID
			, SyncType
			, GroupCode
			, CompanyCode
			, MemberOf
			, DisplayName
			, MultiDisplayName
			, SortKey		
			, IsUse
			, IsDisplay
			, IsMail
			, PrimaryMail
			, ManagerCode
			, SyncStatus
			, InsertDate
		)
		VALUES (
			#{SyncManage}
			<choose>
				<when test='SyncManage == "Sync"'>
					,(SELECT MAX(SyncMasterID) FROM covi_syncdata.log_object_list WHERE EndDate IS NULL )
				</when>
				<otherwise>, NULL</otherwise>
			</choose>
			,#{SyncType}
			,#{GroupCode}
			,#{CompanyCode}
			,#{MemberOf}
			,#{DisplayName}
			,#{MultiDisplayName}
			,#{SortKey}
			,#{IsUse}
			,#{IsDisplay}
			,#{IsMail}
			,#{PrimaryMail}
			,#{ManagerCode}
			,#{SyncStatus}
			,now()
		)
    </insert>
    
	<insert id="insertUserLogList" parameterType="cmap">
		INSERT INTO covi_syncdata.log_object_user (
			  SyncManage
			, LogMasterID
			, SyncType
			, UserCode
			, CompanyCode
			, DeptCode
			, LogonID
			, EmpNo
			, DisplayName
			, MultiDisplayName
			, JobPositionCode
			, JobTitleCode
			, JobLevelCode
			, SortKey		
			, IsUse
			, IsDisplay
			, EnterDate
			, RetireDate
			, BirthDiv
			, BirthDate
			, PhotoPath
			, MailAddress
			, ExternalMailAddress
			, ChargeBusiness
			, PhoneNumberInter
			, SyncStatus
			, InsertDate
		)
		VALUES (
			#{SyncManage}
			<choose>
				<when test='SyncManage == "Sync"'>
					,(SELECT MAX(SyncMasterID) FROM covi_syncdata.log_object_list WHERE EndDate IS NULL )
				</when>
				<otherwise>, NULL</otherwise>
			</choose>
			,#{SyncType}
			,#{UserCode}
			,#{CompanyCode}
			,#{DeptCode}
			,#{LogonID}
			,#{EmpNo}
			,#{DisplayName}
			,#{MultiDisplayName}
			,#{JobPositionCode}
			,#{JobTitleCode}
			,#{JobLevelCode}			
			,#{SortKey}
			,#{IsUse}
			,#{IsDisplay}
			,#{EnterDate}
			,#{RetireDate}
			,#{BirthDiv}
			,#{BirthDate}
			,#{PhotoPath}
			,#{MailAddress}
			,#{ExternalMailAddress}
			,#{ChargeBusiness}
			,#{PhoneNumberInter}
			,#{SyncStatus}
			,now()
		)
    </insert>
    
	<insert id="insertAddJobLogList" parameterType="cmap">
	    INSERT INTO covi_syncdata.log_object_addjob (
	    	SyncManage,
	    	LogMasterID,
	    	SyncType,
	    	JobType,
	    	UserCode,
	    	CompanyCode,
	    	DeptCode,
	    	JobLevelCode,
	    	JobPositionCode,
	    	JobTitleCode,
	    	IsUse,
	    	SyncStatus,
	    	InsertDate
	    )
	    VALUES (
	    	#{SyncManage},
	    	<choose>
				<when test='SyncManage == "Sync"'>
					(SELECT MAX(SyncMasterID) FROM covi_syncdata.log_object_list WHERE EndDate IS NULL ),
				</when>
				<otherwise>NULL,</otherwise>
			</choose>
	    	#{SyncType},
	    	#{JobType},
	    	#{UserCode},
	    	#{CompanyCode},
	    	#{DeptCode},
	    	#{JobLevelCode},
	    	#{JobPositionCode},
	    	#{JobTitleCode},
	    	#{IsUse},
	    	#{SyncStatus},
	    	NOW()
	    )
	</insert>
	
	<!-- Init Org Data -->
	<delete id="deleteOrgData">
		CALL covi_Syncdata.DELETEORGTABLEDATA()
	</delete>
	
	<insert id="insertOrgDept" parameterType="cmap">
		INSERT INTO covi_syncdata.orgdept (
			GroupCode,
			CompanyCode,
			MemberOf, 
			DisplayName,
			MultiDisplayName,
			SortKey,
			IsUse,
			IsDisplay,
			IsMail,
			PrimaryMail,
			ManagerCode,
			InsertDate
		)
		VALUES (
			#{GroupCode},
			#{CompanyCode},
			#{MemberOf},
			#{DisplayName},
			#{MultiDisplayName},
			#{SortKey},
			#{IsUse},
			#{IsDisplay},
			#{IsMail},
			#{PrimaryMail},
			#{ManagerCode},
			NOW()
		)
	</insert>
	
	<insert id="insertOrgPerson" parameterType="cmap">
		INSERT INTO covi_syncdata.orgperson (
			UserCode,
			CompanyCode,
			DeptCode, 
			LogonID,
			EmpNo,
			DisplayName,
			MultiDisplayName,
			JobPositionCode,
			JobTitleCode,
			JobLevelCode,
			SortKey,
			IsUse,
			IsDisplay,
			EnterDate,
			RetireDate,
			BirthDiv,
			BirthDate,
			PhotoPath,
			MailAddress,
			ExternalMailAddress,
			ChargeBusiness,
			PhoneNumberInter,
			PhoneNumber,
			Mobile,
			Fax,
			Address,
			MultiAddress,
			HomePage,
			IPPhone,
			InsertDate			
		)
		VALUES (
			#{UserCode},
			#{CompanyCode},
			#{DeptCode},
			#{LogonID},
			#{EmpNo},
			#{DisplayName},
			#{MultiDisplayName},
			#{JobPositionCode},
			#{JobPositionName},
			#{JobLevelCode},
			#{SortKey},
			#{IsUse},
			#{IsDisplay},
			#{EnterDate},
			#{RetireDate},
			#{BirthDiv},
			#{BirthDate},
			#{PhotoPath},
			#{MailAddress},
			#{ExternalMailAddress},
			#{ChargeBusiness},
			#{PhoneNumberInter},
			#{PhoneNumber},
			#{Mobile},
			#{Fax},
			#{Address},
			#{MultiAddress},
			#{HomePage},
			#{IPPhone},
			NOW()
		)
	</insert>
	
	<insert id="insertOrgJobTitle" parameterType="cmap">
		INSERT INTO covi_syncdata.orgjobtitle (
			GroupCode,
			CompanyCode,
			DisplayName,
			MultiDisplayName,
			SortKey,
			IsUse,
			IsDisplay,
			IsMail,
			PrimaryMail,
			InsertDate
		)
		VALUES (
			#{GroupCode},
			#{CompanyCode},
			#{DisplayName},
			#{MultiDisplayName},
			#{SortKey},
			#{IsUse},
			#{IsDisplay},
			#{IsMail},
			#{PrimaryMail},
			NOW()
		)
	</insert>
	
	<insert id="insertOrgJobPosition" parameterType="cmap">
		INSERT INTO covi_syncdata.orgjobposition (
			GroupCode,
			CompanyCode,
			DisplayName,
			MultiDisplayName,
			SortKey,
			IsUse,
			IsDisplay,
			IsMail,
			PrimaryMail,
			InsertDate
		)
		VALUES (
			#{GroupCode},
			#{CompanyCode},
			#{DisplayName},
			#{MultiDisplayName},
			#{SortKey},
			#{IsUse},
			#{IsDisplay},
			#{IsMail},
			#{PrimaryMail},
			NOW()
		)
	</insert>
	
	<insert id="insertOrgJobLevel" parameterType="cmap">
		INSERT INTO covi_syncdata.orgjoblevel (
			GroupCode,
			CompanyCode,
			DisplayName,
			MultiDisplayName,
			SortKey,
			IsUse,
			IsDisplay,
			IsMail,
			PrimaryMail,
			InsertDate
		)
		VALUES (
			#{GroupCode},
			#{CompanyCode},
			#{DisplayName},
			#{MultiDisplayName},
			#{SortKey},
			#{IsUse},
			#{IsDisplay},
			#{IsMail},
			#{PrimaryMail},
			NOW()
		)
	</insert>
	
	<insert id="insertOrgAddJob" parameterType="cmap">
		INSERT INTO covi_syncdata.orgaddjob (
			JobType,
			UserCode,
			CompanyCode,
			DeptCode, 
			JobLevelCode,
			JobPositionCode,
			JobTitleCode, 
			IsUse, 
			InsertDate
		)
		VALUES (
			#{JobType},
			#{UserCode},
			#{CompanyCode},
			#{DeptCode},
			#{JobLevelCode},
			#{JobPositionCode},
			#{JobTitleCode},
			'Y',
			NOW()
		)
	</insert>
	
	<!-- Init TempData -->
	<delete id="deleteTempObjectGroupList">
		TRUNCATE TABLE covi_syncdata.temp_object_group
	</delete>
	
	<delete id="deleteTempObjectUserList">
		TRUNCATE TABLE covi_syncdata.temp_object_user
	</delete>
	
	<delete id="deleteTempObjectAddJobList">
		TRUNCATE TABLE covi_syncdata.temp_object_addjob
	</delete>

	<!-- Org TempData -->
	<insert id="insertTempObjectDept" parameterType="cmap">
		INSERT INTO covi_syncdata.temp_object_group (
			  GroupCode
			, CompanyCode
			, GroupType
			, MemberOf
			, GroupPath
			, RegionCode		
			, DisplayName
			, MultiDisplayName
			, ShortName
			, MultiShortName
			, OUName	
			, OUPath
			, SortKey
			, SortPath
			, IsUse
			, IsDisplay
			, IsMail
			, IsHR
			, PrimaryMail
			, SecondaryMail
			, ManagerCode
			, Description
			, ReceiptUnitCode
			, ApprovalUnitCode
			, Receivable
			, Approvable
			, RegistDate
			, ModifyDate
			, Reserved1
			, Reserved2
			, Reserved3
			, Reserved4
			, Reserved5
		)
		SELECT 
			  CASE 
				WHEN a.GroupCode = a.CompanyCode THEN a.GroupCode 
				ELSE
					CONCAT(
					<choose>
						<when test='isSaaS == "Y"'> a.CompanyCode,'_', </when>
						<otherwise>'',</otherwise>
					</choose>
			  		a.GroupCode) 
			  END AS GroupCode
			, a.CompanyCode
			, 'Dept' AS GroupType
			, CASE 
				WHEN a.MemberOf = a.CompanyCode THEN a.MemberOf 
				ELSE
					CONCAT(
					<choose>
						<when test='isSaaS == "Y"'> a.CompanyCode,'_', </when>
						<otherwise>'',</otherwise>
					</choose>
			  		a.MemberOf) 
			  END AS MemberOf
			, '' AS GroupPath
			, a.RegionCode AS RegionCode
			, a.DisplayName AS DisplayName
			, a.MultiDisplayName AS MultiDisplayName
			, a.ShortName AS ShortName
			, a.MultiShortName AS MultiShortName
			, covi_syncdata.NVARCHAR_REMOVE_SPECIAL_CHARACTER(a.DisplayName) AS OUName
			, '' AS OUPath
			, a.SortKey
			, '' AS SortPath
			, a.IsUse
			, a.IsDisplay
			, a.IsMail
			, 'Y' AS IsHR
			, a.PrimaryMail AS PrimaryMail
			, a.SecondaryMail AS SecondaryMail
			, a.ManagerCode
			, a.Description AS Description
			, a.GroupCode AS ReceiptUnitCode
			, a.GroupCode AS ApprovalUnitCode
			, 1 AS Receivable
			, 1 AS Approvable
			, NOW() AS RegistDate
			, NOW() AS ModifyDate
			, a.Reserved1 AS Reserved1
			, a.Reserved2 AS Reserved2
			, a.Reserved3 AS Reserved3
			, a.Reserved4 AS Reserved4
			, a.Reserved5 AS Reserved5
		FROM covi_syncdata.v_orgdept AS a
		INNER JOIN covi_smart4j.sys_object_domain AS b ON a.CompanyCode = b.DomainCode
    </insert>
    
	<insert id="insertTempObjectJobTitle" parameterType="cmap">        
        INSERT INTO covi_syncdata.temp_object_group (
			  GroupCode
			, CompanyCode
			, GroupType
			, MemberOf
			, DisplayName
			, MultiDisplayName
			, ShortName
			, MultiShortName
			, OUName	
			, OUPath
			, SortKey
			, SortPath
			, IsUse
			, IsDisplay
			, IsMail
			, IsHR
			, PrimaryMail
			, SecondaryMail
			, Description
			, ReceiptUnitCode
			, ApprovalUnitCode
			, Receivable
			, Approvable
			, RegistDate
			, ModifyDate
			, Reserved1
			, Reserved2
			, Reserved3
			, Reserved4
			, Reserved5
		)
		SELECT 
			  CONCAT(
			  <choose>
				<when test='disablePrefix != "Y"'>'T'</when>
				<otherwise>''</otherwise>
			  </choose>
			  ,a.GroupCode
			  <choose>
				<when test='isSaaS == "Y"'>,'_',b.DomainId</when>
				<otherwise>,''</otherwise>
			  </choose>
			  ) AS GroupCode
			, a.CompanyCode
			, 'JobTitle' AS GroupType
			, a.MemberOf AS MemberOf
			, a.DisplayName AS DisplayName
			, a.MultiDisplayName AS MultiDisplayName
			, a.ShortName AS ShortName
			, a.MultiShortName AS MultiShortName
			, covi_syncdata.NVARCHAR_REMOVE_SPECIAL_CHARACTER(a.DisplayName) AS OUName
			, '' AS OUPath
			, a.SortKey
			, '' AS SortPath
			, a.IsUse
			, a.IsDisplay
			, a.IsMail
			, 'Y' AS IsHR
			, CONCAT(
			  <choose>
				<when test='disablePrefix != "Y"'>'T'</when>
				<otherwise>''</otherwise>
			  </choose>
			  ,a.GroupCode
			  <choose>
				<when test='isSaaS == "Y"'>,'_',b.DomainId</when>
				<otherwise>,''</otherwise>
			  </choose>
			  ,'@', b.DomainURL
			) AS PrimaryMail
			, a.SecondaryMail AS SecondaryMail
			, a.Description AS Description
			, a.GroupCode AS ReceiptUnitCode
			, a.GroupCode AS ApprovalUnitCode
			, 1 AS Receivable
			, 1 AS Approvable
			, NOW() AS RegistDate
			, NOW() AS ModifyDate
			, a.Reserved1 AS Reserved1
			, a.Reserved2 AS Reserved2
			, a.Reserved3 AS Reserved3
			, a.Reserved4 AS Reserved4
			, a.Reserved5 AS Reserved5
		FROM covi_syncdata.v_orgjobtitle AS a
		INNER JOIN covi_smart4j.sys_object_domain AS b ON a.CompanyCode = b.DomainCode
    </insert>
    
	<insert id="insertTempObjectJobPosition" parameterType="cmap">        
        INSERT INTO covi_syncdata.temp_object_group (
			  GroupCode
			, CompanyCode
			, GroupType
			, MemberOf
			, DisplayName
			, MultiDisplayName
			, ShortName
			, MultiShortName
			, OUName
			, OUPath
			, SortKey
			, SortPath
			, IsUse
			, IsDisplay
			, IsMail
			, IsHR
			, PrimaryMail
			, SecondaryMail
			, Description
			, ReceiptUnitCode
			, ApprovalUnitCode
			, Receivable
			, Approvable
			, RegistDate
			, ModifyDate
			, Reserved1
			, Reserved2
			, Reserved3
			, Reserved4
			, Reserved5
		)
		SELECT
			  CONCAT(
			  <choose>
			  	<when test='disablePrefix != "Y"'>'P'</when>
			  	<otherwise>''</otherwise>
			  </choose>
			  ,a.GroupCode
			  <choose>
			  	<when test='isSaaS == "Y"'>,'_',b.DomainId</when>
			  	<otherwise>,''</otherwise>
			  </choose>
			  ) AS GroupCode
			, a.CompanyCode
			, 'JobPosition' AS GroupType
			, a.MemberOf AS MemberOf
			, a.DisplayName AS DisplayName
			, a.MultiDisplayName AS MultiDisplayName
			, a.ShortName AS ShortName
			, a.MultiShortName AS MultiShortName
			, covi_syncdata.NVARCHAR_REMOVE_SPECIAL_CHARACTER(a.DisplayName) AS OUName
			, '' AS OUPath
			, a.SortKey
			, '' AS SortPath
			, a.IsUse
			, a.IsDisplay
			, a.IsMail
			, 'Y' AS IsHR
			, CONCAT(
			  <choose>
				<when test='disablePrefix != "Y"'>'P'</when>
				<otherwise>''</otherwise>
			  </choose>
			  ,a.GroupCode
			  <choose>
				<when test='isSaaS == "Y"'>,'_',b.DomainId</when>
				<otherwise>,''</otherwise>
			  </choose>
			  ,'@', b.DomainURL
			) AS PrimaryMail
			, a.SecondaryMail AS SecondaryMail
			, a.Description AS Description
			, a.GroupCode AS ReceiptUnitCode
			, a.GroupCode AS ApprovalUnitCode
			, 1 AS Receivable
			, 1 AS Approvable
			, NOW() AS RegistDate
			, NOW() AS ModifyDate
			, a.Reserved1 AS Reserved1
			, a.Reserved2 AS Reserved2
			, a.Reserved3 AS Reserved3
			, a.Reserved4 AS Reserved4
			, a.Reserved5 AS Reserved5
		FROM covi_syncdata.v_orgjobposition AS a
		INNER JOIN covi_smart4j.sys_object_domain AS b ON a.CompanyCode = b.DomainCode
    </insert>
    
    <insert id="insertTempObjectJobLevel" parameterType="cmap">
        INSERT INTO covi_syncdata.temp_object_group (
			  GroupCode
			, CompanyCode
			, GroupType
			, MemberOf
			, DisplayName
			, MultiDisplayName
			, ShortName
			, MultiShortName
			, OUName	
			, OUPath
			, SortKey
			, SortPath
			, IsUse
			, IsDisplay
			, IsMail
			, IsHR
			, PrimaryMail
			, SecondaryMail
			, Description
			, ReceiptUnitCode
			, ApprovalUnitCode
			, Receivable
			, Approvable
			, RegistDate
			, ModifyDate
			, Reserved1
			, Reserved2
			, Reserved3
			, Reserved4
			, Reserved5
		)
		SELECT 
			  CONCAT(
			  <choose>
			  	<when test='disablePrefix != "Y"'>'L'</when>
			  	<otherwise>''</otherwise>
			  </choose>
			  ,a.GroupCode
			  <choose>
			  	<when test='isSaaS == "Y"'>,'_',b.DomainId</when>
			  	<otherwise>,''</otherwise>
			  </choose>
			  ) AS GroupCode
			, a.CompanyCode
			, 'JobLevel' AS GroupType
			, a.MemberOf AS MemberOf
			, a.DisplayName AS DisplayName
			, a.MultiDisplayName AS MultiDisplayName
			, a.ShortName AS ShortName
			, a.MultiShortName AS MultiShortName
			, covi_syncdata.NVARCHAR_REMOVE_SPECIAL_CHARACTER(a.DisplayName) AS OUName
			, '' AS OUPath
			, a.SortKey
			, '' AS SortPath
			, a.IsUse
			, a.IsDisplay
			, a.IsMail
			, 'Y' AS IsHR
			, CONCAT(
			  <choose>
				<when test='disablePrefix != "Y"'>'L'</when>
				<otherwise>''</otherwise>
			  </choose>
			  ,a.GroupCode
			  <choose>
				<when test='isSaaS == "Y"'>,'_',b.DomainId</when>
				<otherwise>,''</otherwise>
			  </choose>
			  ,'@', b.DomainURL
			) AS PrimaryMail
			, a.SecondaryMail AS SecondaryMail
			, a.Description AS Description
			, a.GroupCode AS ReceiptUnitCode
			, a.GroupCode AS ApprovalUnitCode
			, 1 AS Receivable
			, 1 AS Approvable
			, NOW() AS RegistDate
			, NOW() AS ModifyDate
			, a.Reserved1 AS Reserved1
			, a.Reserved2 AS Reserved2
			, a.Reserved3 AS Reserved3
			, a.Reserved4 AS Reserved4
			, a.Reserved5 AS Reserved5
		FROM covi_syncdata.v_orgjoblevel AS a
		INNER JOIN covi_smart4j.sys_object_domain AS b ON a.CompanyCode = b.DomainCode
    </insert>
	
    <insert id="insertTempObjectUser" parameterType="cmap">       	    
		INSERT INTO covi_syncdata.temp_object_user (	
			  UserCode
			, LogonID
			, LogonPassword
			, EmpNo
			, DisplayName
			, NickName
			, MultiDisplayName
			, CompanyCode
			, DeptCode
			, JobTitleCode
			, JobPositionCode
			, JobLevelCode
			, RegionCode
			, Address
			, MultiAddress
			, HomePage
			, PhoneNumber
			, Mobile
			, Fax			
			, IPPhone
			, UseMessengerConnect
			, SortKey
			, SecurityLevel
			, Description
			, IsUse
			, IsHR
			, IsDisplay
			, EnterDate
			, RetireDate
			, PhotoPath
			, BirthDiv
			, BirthDate
			, UseMailConnect
			, MailAddress
			, ExternalMailAddress
			, ChargeBusiness
			, PhoneNumberInter
			, LanguageCode
			, MobileThemeCode
			, TimeZoneCode
			, InitPortal
			, RegistDate
			, ModifyDate
			, Reserved1
			, Reserved2
			, Reserved3
			, Reserved4
			, Reserved5
			, AD_IsUse
			, AD_DisplayName
			, AD_FirstName
			, AD_LastName
			, AD_Initials
			, AD_Office
			, AD_HomePage
			, AD_Country
			, AD_CountryID
			, AD_CountryCode
			, AD_State
			, AD_City
			, AD_StreetAddress
			, AD_PostOfficeBox
			, AD_PostalCode
			, AD_UserAccountControl
			, AD_AccountExpires
			, AD_PhoneNumber
			, AD_HomePhone
			, AD_Pager
			, AD_Mobile
			, AD_Fax
			, AD_Info
			, AD_Title
			, AD_Department
			, AD_Company
			, AD_ManagerCode
			, AD_CN
			, AD_SamAccountName
			, AD_UserPrincipalName
			, EX_IsUse
			, EX_PrimaryMail
			, EX_SecondaryMail
			, EX_StorageServer
			, EX_StorageGroup
			, EX_StorageStore
			, MSN_IsUse
			, MSN_PoolServerName
			, MSN_PoolServerDN
			, MSN_SIPAddress
			, MSN_Anonmy
			, MSN_MeetingPolicyName
			, MSN_MeetingPolicyDN
			, MSN_PhoneCommunication
			, MSN_PBX
			, LicSeq
		)
		SELECT
			a.UserCode
			, a.LogonID
			, a.LogonPassword
			, a.EmpNo
			, a.DisplayName
			, a.NickName AS NickName
			, a.MultiDisplayName
			, a.CompanyCode
			, CASE 
				WHEN a.DeptCode = a.CompanyCode THEN a.DeptCode 
				ELSE
					CONCAT(
					<choose>
						<when test='isSaaS == "Y"'> a.CompanyCode,'_', </when>
						<otherwise>'',</otherwise>
					</choose>
			  		a.DeptCode) 
			  END AS DeptCode
			, CASE
				WHEN IFNULL(a.JobTitleCode, '') != '' THEN
					CONCAT(
					<choose>
						<when test='disablePrefix != "Y"'>'T'</when>
						<otherwise>''</otherwise>
					</choose>
					,a.JobTitleCode
					<choose>
						<when test='isSaaS == "Y"'>,'_',c.DomainId</when>
						<otherwise>,''</otherwise>
					</choose>
					)
				ELSE '' 
			  END AS JobTitleCode
			, CASE
				WHEN IFNULL(a.JobPositionCode, '') != '' THEN
					CONCAT(
					<choose>
						<when test='disablePrefix != "Y"'>'P'</when>
						<otherwise>''</otherwise>
					</choose>
					,a.JobPositionCode
					<choose>
						<when test='isSaaS == "Y"'>,'_',c.DomainId</when>
						<otherwise>,''</otherwise>
					</choose>
					)
				ELSE '' 
			  END AS JobPositionCode
			, CASE
				WHEN IFNULL(a.JobLevelCode, '') != '' THEN
					CONCAT(
					<choose>
						<when test='disablePrefix != "Y"'>'L'</when>
						<otherwise>''</otherwise>
					</choose>
					,a.JobLevelCode
					<choose>
						<when test='isSaaS == "Y"'>,'_',c.DomainId</when>
						<otherwise>,''</otherwise>
					</choose>
					)
				ELSE '' 
			  END AS JobLevelCode
			, a.RegionCode 
			, a.Address 
			, a.MultiAddress 
			, a.HomePage AS HomePage
			, a.PhoneNumber AS PhoneNumber
			, a.Mobile AS Mobile
			, a.Fax AS Fax
			, a.IPPhone AS IPPhone
			, a.UseMessengerConnect AS UseMessengerConnect
			, a.SortKey
			, 40 AS SecurityLevel
			, '' AS Description
			, a.IsUse
			, 'Y' AS IsHR
			, a.IsDisplay
			, a.EnterDate
			, a.RetireDate
			, a.PhotoPath
			, a.BirthDiv
			, a.BirthDate
			, a.UseMailConnect AS UseMailConnect
			, a.MailAddress
			, a.ExternalMailAddress
			, a.ChargeBusiness
			, a.PhoneNumberInter
			, 'ko' AS LanguageCode
			, 'MobileTheme_Base' AS MobileThemeCode
			, 'TIMEZO0048' AS TimeZoneCode
			, 0 AS InitPortal
			, NOW() AS RegistDate
			, NOW() AS ModifyDate
			, a.Reserved1 AS Reserved1
			, a.Reserved2 AS Reserved2
			, a.Reserved3 AS Reserved3
			, a.Reserved4 AS Reserved4
			, a.Reserved5 AS Reserved5
			, IFNULL(a.AD_IsUse,'N') AS AD_IsUse
			, IFNULL(a.AD_DisplayName, a.DisplayName) AS AD_DisplayName
			, CASE
				WHEN IFNULL(a.AD_FirstName,'') = '' THEN SUBSTR(IFNULL(a.DisplayName,'없음'),2,LENGTH(a.DisplayName)-1) 
				ELSE a.AD_FirstName 
			  END AS AD_FirstName
			, CASE 
				WHEN IFNULL(a.AD_LastName,'') = '' THEN SUBSTR(IFNULL(a.DisplayName,'N'),1,1) 
				ELSE a.AD_LastName 
			  END AS AD_LastName
			, a.AD_Initials AS AD_Initials
			, a.AD_Office AS AD_Office
			, a.AD_HomePage AS AD_HomePage
			, CASE 
				WHEN IFNULL(a.AD_Country,'') = '' THEN '대한민국' 
				ELSE a.AD_Country 
			  END AS AD_Country
			, CASE 
				WHEN IFNULL(a.AD_CountryID,'') = '' THEN '410'
				ELSE a.AD_CountryID 
			  END AS AD_CountryID
			, CASE 
				WHEN IFNULL(a.AD_CountryCode,'') = '' THEN 'KR'
				ELSE a.AD_CountryCode
			  END AS AD_CountryCode
			, a.AD_State AS AD_State
			, a.AD_City AS AD_City
			, a.AD_StreetAddress
			, a.AD_PostOfficeBox
			, a.AD_PostalCode
			, CASE
				WHEN IFNULL(a.AD_UserAccountControl,'') = '' THEN '66048'
				ELSE a.AD_UserAccountControl
			  END AS AD_UserAccountControl
			, CASE
				WHEN IFNULL(a.AD_AccountExpires,'') = '' THEN '0'
				ELSE a.AD_AccountExpires
			  END AS AD_AccountExpires
			, a.AD_PhoneNumber
			, a.AD_HomePhone
			, a.AD_Pager
			, a.AD_Mobile
			, a.AD_Fax
			, a.AD_Info
			, CASE
				WHEN IFNULL(a.AD_Title,'') = '' THEN (SELECT DisplayName FROM covi_syncdata.temp_object_group WHERE GroupCode = a.JobTitleCode)
				ELSE a.AD_Title
			  END AS AD_Title
			, CASE
				WHEN IFNULL(a.AD_Department,'') = '' THEN b.DisplayName
				ELSE a.AD_Department
			  END AS AD_Department
			, CASE 
				WHEN IFNULL(a.AD_Company,'') = '' THEN c.DisplayName
				ELSE a.AD_Company
			  END AS AD_Company
			, a.AD_ManagerCode
			, CASE
				WHEN IFNULL(a.AD_CN,'') = '' THEN
					CASE 
						WHEN (SELECT UPPER(SETTINGVALUE) FROM covi_smart4j.sys_base_config WHERE SETTINGKEY = 'AD_CN_MAPPING') = 'USERCODE' THEN a.UserCode
						WHEN (SELECT UPPER(SETTINGVALUE) FROM covi_smart4j.sys_base_config WHERE SETTINGKEY = 'AD_CN_MAPPING') = 'LOGONID' THEN a.LogonID
						WHEN (SELECT UPPER(SETTINGVALUE) FROM covi_smart4j.sys_base_config WHERE SETTINGKEY = 'AD_CN_MAPPING') = 'EMPNO' THEN a.EmpNo
						WHEN (SELECT UPPER(SETTINGVALUE) FROM covi_smart4j.sys_base_config WHERE SETTINGKEY = 'AD_CN_MAPPING') = 'DISPLAYNAME' THEN a.DisplayName
					END
			  END AS AD_CN
			, CASE 
				WHEN IFNULL(a.AD_SamAccountName,'') = '' THEN
					CASE
						WHEN (SELECT UPPER(SETTINGVALUE) FROM covi_smart4j.sys_base_config WHERE SETTINGKEY = 'AD_sAMAccountName_Mapping') = 'USERCODE' THEN a.UserCode
						WHEN (SELECT UPPER(SETTINGVALUE) FROM covi_smart4j.sys_base_config WHERE SETTINGKEY = 'AD_sAMAccountName_Mapping') = 'LOGONID' THEN a.LogonID
						WHEN (SELECT UPPER(SETTINGVALUE) FROM covi_smart4j.sys_base_config WHERE SETTINGKEY = 'AD_sAMAccountName_Mapping') = 'EMPNO' THEN a.EmpNo
						WHEN (SELECT UPPER(SETTINGVALUE) FROM covi_smart4j.sys_base_config WHERE SETTINGKEY = 'AD_sAMAccountName_Mapping') = 'DISPLAYNAME' THEN a.DisplayName
					END
			  END AS AD_SamAccountName
			, CASE 
				WHEN IFNULL(a.AD_UserPrincipalName,'') = '' THEN
					CASE 
						WHEN (SELECT UPPER(SETTINGVALUE) FROM covi_smart4j.sys_base_config WHERE SETTINGKEY = 'AD_UserPrincipalName_Mapping') = 'USERCODE' THEN CONCAT(a.UserCode,'@',c.DomainURL)
						WHEN (SELECT UPPER(SETTINGVALUE) FROM covi_smart4j.sys_base_config WHERE SETTINGKEY = 'AD_UserPrincipalName_Mapping') = 'LOGONID' THEN CONCAT(a.LogonID,'@',c.DomainURL)
						WHEN (SELECT UPPER(SETTINGVALUE) FROM covi_smart4j.sys_base_config WHERE SETTINGKEY = 'AD_UserPrincipalName_Mapping') = 'EMPNO' THEN CONCAT(a.EmpNo,'@',c.DomainURL)
					END
			  END AS AD_UserPrincipalName
			, IFNULL(a.EX_IsUse,'N') AS EX_IsUse
			, a.EX_PrimaryMail
			, a.EX_SecondaryMail
			, a.EX_StorageServer
			, a.EX_StorageGroup
			, a.EX_StorageStore
			, IFNULL(a.MSN_IsUse,'N') AS MSN_IsUse
			, a.MSN_PoolServerName
			, a.MSN_PoolServerDN
			, a.MSN_SIPAddress
			, a.MSN_Anonmy
			, IFNULL(a.MSN_MeetingPolicyName,'ORGLyncUser') AS MSN_MeetingPolicyName
			, a.MSN_MeetingPolicyDN
			, IFNULL(a.MSN_PhoneCommunication,'257') AS MSN_PhoneCommunication
			, a.MSN_PBX
			, a.LicSeq
		FROM covi_syncdata.v_orgperson AS a
		INNER JOIN covi_syncdata.v_orgdept AS b ON a.deptCode = b.GroupCode
		INNER JOIN covi_smart4j.sys_object_domain AS c ON a.CompanyCode = c.DomainCode
    </insert>
    
    <insert id="insertTempObjectAddJob" parameterType="cmap">   	    
		INSERT INTO covi_syncdata.temp_object_addjob (
			  UserCode
			, JobType 		
			, CompanyCode
			, DeptCode
			, JobTitleCode
			, JobPositionCode
			, JobLevelCode
			, RegionCode	
			, SortKey		
			, IsHR		
			, RegistDate
			, ModifyDate
			, Reserved1 	
			, Reserved2
			, Reserved3
			, Reserved4
			, Reserved5
		)
      	SELECT
			  a.UserCode
			, a.JobType
			, a.CompanyCode
			, CASE 
				WHEN a.DeptCode = a.CompanyCode THEN a.DeptCode 
				ELSE
					CONCAT(
					<choose>
						<when test='isSaaS == "Y"'> a.CompanyCode,'_', </when>
						<otherwise>'',</otherwise>
					</choose>
			  		a.DeptCode) 
			  END AS DeptCode
			, CASE
				WHEN IFNULL(a.JobTitleCode, '') != '' THEN
					CONCAT(
					<choose>
						<when test='disablePrefix != "Y"'>'T'</when>
						<otherwise>''</otherwise>
					</choose>
					,a.JobTitleCode
					<choose>
						<when test='isSaaS == "Y"'>,'_',d.DomainId</when>
						<otherwise>,''</otherwise>
					</choose>
					)
				ELSE '' 
			  END AS JobTitleCode
			, CASE
				WHEN IFNULL(a.JobPositionCode, '') != '' THEN
					CONCAT(
					<choose>
						<when test='disablePrefix != "Y"'>'P'</when>
						<otherwise>''</otherwise>
					</choose>
					,a.JobPositionCode
					<choose>
						<when test='isSaaS == "Y"'>,'_',d.DomainId</when>
						<otherwise>,''</otherwise>
					</choose>
					)
				ELSE '' 
			  END AS JobPositionCode
			, CASE
				WHEN IFNULL(a.JobLevelCode, '') != '' THEN
					CONCAT(
					<choose>
						<when test='disablePrefix != "Y"'>'L'</when>
						<otherwise>''</otherwise>
					</choose>
					,a.JobLevelCode
					<choose>
						<when test='isSaaS == "Y"'>,'_',d.DomainId</when>
						<otherwise>,''</otherwise>
					</choose>
					)
				ELSE '' 
			  END AS JobLevelCode
			, a.RegionCode
			, a.SortKey
			, 'Y' AS IsHR
			, NOW() AS RegistDate
			, NOW() AS ModifyDate
			, a.Reserved1 AS Reserved1
			, a.Reserved2 AS Reserved2
			, a.Reserved3 AS Reserved3
			, a.Reserved4 AS Reserved4
			, a.Reserved5 AS Reserved5
		FROM covi_syncdata.v_orgaddjob AS a
		INNER JOIN covi_syncdata.v_orgdept AS c ON a.DeptCode = c.GroupCode
		INNER JOIN covi_smart4j.sys_object_domain AS d ON a.CompanyCode = d.DomainCode
    </insert>
    
	<update id="updateGroupSortkey" parameterType="cmap">
        UPDATE covi_syncdata.temp_object_group AS A 
		INNER JOIN (
			SELECT
				groupcode,
				sortkey,
				(@RowNumber := @RowNumber+1) AS rownumber
			FROM (
				SELECT MemberOf, groupcode, sortkey
				FROM covi_syncdata.temp_object_group 
				WHERE GroupType = 'Dept'
				GROUP BY MemberOf, sortkey
				HAVING COUNT(sortkey) > 1
				ORDER BY memberof, groupcode 		-- substring(groupcode,2,3) * 1
			) AS D, 
			(SELECT @RowNumber := 0) AS SWT_TabRow
		) AS temp_table ON a.GroupCode = temp_table.groupcode
		SET A.SortKey = temp_table.rownumber
		WHERE A.GroupCode = temp_table.groupcode
		AND A.GroupType = 'Dept'
    </update>
	
	<!-- Init CompareData -->
	<delete id="deleteCompareObjectGroupList">	
		TRUNCATE TABLE covi_syncdata.compare_object_group		
	</delete>
	<delete id="deleteCompareObjectUserList">	
		TRUNCATE TABLE covi_syncdata.compare_object_user
	</delete>
	<delete id="deleteCompareObjectAddJobList">	
		TRUNCATE TABLE covi_syncdata.compare_object_addjob			
	</delete>
	
	<delete id="deleteCompareObjectGroupOne">
		DELETE FROM covi_syncdata.compare_object_group
		WHERE SyncType = #{SyncType}
		AND GroupCode = #{GroupCode}
	</delete>
	
	<delete id="deleteCompareObjectUserOne">
		DELETE FROM covi_syncdata.compare_object_user
		WHERE SyncType = #{SyncType}
		AND UserCode = #{UserCode}
	</delete>
	
	<delete id="deleteCompareObjectAddJobOne">
		DELETE FROM covi_syncdata.compare_object_addjob
		WHERE SyncType = #{SyncType}
		AND UserCode = #{UserCode}
		AND CompanyCode = #{CompanyCode}
		AND DeptCode = #{DeptCode}
	</delete>
	
	<!-- CompareData -->
   	 <select id="selectCompareObjectGroupList" parameterType="cmap" resultType="cmap">
      	SELECT
			  SyncType
			, GroupCode
			, CompanyCode
			, GroupType
			, MemberOf
			, GroupPath
			, RegionCode		
			, DisplayName
			, MultiDisplayName
			, ShortName
			, MultiShortName
			, OUName	
			, OUPath
			, SortKey
			, SortPath
			, IsUse
			, IsDisplay
			, IsMail
			, IsHR
			, PrimaryMail
			, SecondaryMail
			, ManagerCode
			, Description
			, ReceiptUnitCode
			, ApprovalUnitCode
			, Receivable
			, Approvable
			, RegistDate
			, ModifyDate
			, Reserved1
			, Reserved2
			, Reserved3
			, Reserved4
			, Reserved5
		FROM covi_syncdata.compare_object_group
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="SyncType != null and SyncType != ''">
				AND SyncType = #{SyncType}
			</if>
			<if test="GroupType != null and GroupType != ''">
				AND UPPER(GroupType) = #{GroupType}
			</if>
		</trim>
		<if test="SyncType != null and SyncType != '' and SyncType != 'DELETE'">
			ORDER BY SyncType DESC, GroupType, SortPath ASC
		</if>
	</select>
	
	<select id="selectCompareObjectGroupListcnt" parameterType="cmap" resultType="java.lang.Long">
      	SELECT COUNT(*)
		FROM covi_syncdata.compare_object_group
		<if test="SyncType != null and SyncType != ''">
			WHERE SyncType = #{SyncType}
		</if>		  
	</select>

    <select id="selectCompareObjectUserList" resultType="cmap">
      	SELECT DISTINCT
			  A.SyncType
			, A.UserCode
			, A.LogonID
			, A.LogonPassword
			, A.EmpNo
			, A.DisplayName
			, A.NickName
			, A.MultiDisplayName
			, A.CompanyCode
			, A.DeptCode
			, A.JobTitleCode
			, A.JobPositionCode
			, A.JobLevelCode
			, A.RegionCode
			, A.Address
			, A.MultiAddress
			, A.HomePage
			, A.PhoneNumber
			, A.Mobile
			, A.Fax
			, A.IPPhone
			, A.UseMessengerConnect
			, A.SortKey
			, A.SecurityLevel
			, A.Description
			, A.IsUse
			, A.IsHR
			, A.IsDisplay
			, A.EnterDate
			, A.RetireDate
			, A.PhotoPath
			, A.BirthDiv
			, A.BirthDate
			, A.UseMailConnect
			, A.MailAddress
			, A.ExternalMailAddress
			, A.ChargeBusiness
			, A.PhoneNumberInter
			, A.LanguageCode
			, A.MobileThemeCode
			, A.TimeZoneCode
			, A.InitPortal
			, A.RegistDate
			, A.ModifyDate
			, A.Reserved1
			, A.Reserved2
			, A.Reserved3
			, A.Reserved4
			, A.Reserved5
			, IFNULL(B.DeptCode,'') AS oldDeptCode
			, IFNULL(B.JobPositionCode,'') AS oldJobPositionCode
			, IFNULL(B.JobTitleCode,'') AS oldJobTitleCode
			, IFNULL(B.JobLevelCode,'') AS oldJobLevelCode
			, A.AD_IsUse
			, A.AD_DisplayName
			, A.AD_FirstName
			, A.AD_LastName
			, A.AD_Initials
			, A.AD_Office
			, A.AD_HomePage
			, A.AD_Country
			, A.AD_CountryID
			, A.AD_CountryCode
			, A.AD_State
			, A.AD_City
			, A.AD_StreetAddress
			, A.AD_PostOfficeBox
			, A.AD_PostalCode
			, A.AD_UserAccountControl
			, A.AD_AccountExpires
			, A.AD_PhoneNumber
			, A.AD_HomePhone
			, A.AD_Pager
			, A.AD_Mobile
			, A.AD_Fax
			, A.AD_Info
			, A.AD_Title
			, A.AD_Department
			, A.AD_Company
			, A.AD_ManagerCode
			, A.AD_CN
			, A.AD_SamAccountName
			, A.AD_UserPrincipalName
			, A.EX_IsUse
			, A.EX_PrimaryMail
			, A.EX_SecondaryMail
			, A.EX_StorageServer
			, A.EX_StorageGroup
			, A.EX_StorageStore
			, A.MSN_IsUse
			, A.MSN_PoolServerName
			, A.MSN_PoolServerDN
			, A.MSN_SIPAddress
			, A.MSN_Anonmy
			, A.MSN_MeetingPolicyName
			, A.MSN_MeetingPolicyDN
			, A.MSN_PhoneCommunication
			, A.MSN_PBX
			, A.LicSeq
		FROM covi_syncdata.compare_object_user A
		LEFT JOIN covi_smart4j.sys_object_user_basegroup B ON IFNULL(a.usercode,'') = IFNULL(b.usercode,'') AND B.JobType = 'Origin'
		<if test="SyncType != null and SyncType != ''">
			WHERE SyncType = #{SyncType}
		</if>
		ORDER BY SyncType DESC
	</select>
	
	<select id="selectCompareObjectUserListcnt" parameterType="cmap" resultType="java.lang.Long">
      	SELECT COUNT(*)
		FROM covi_syncdata.compare_object_user
		<if test="SyncType != null and SyncType != ''">
			WHERE SyncType = #{SyncType}
		</if>		  
	</select>

    <select id="selectCompareObjectAddJobList" resultType="cmap">
        SELECT
        	  SyncType
        	, Seq
        	, UserCode
        	, (SELECT LogonID FROM covi_smart4j.sys_object_user A WHERE A.usercode = B.UserCode) AS LogonID
        	, JobType
        	, CompanyCode
        	, DeptCode
        	, JobTitleCode
        	, JobPositionCode
        	, JobLevelCode
        	, RegionCode
        	, SortKey
        	, IsHR
        	, RegistDate
        	, ModifyDate
        	, Reserved1
        	, Reserved2
        	, Reserved3
        	, Reserved4
        	, Reserved5
        	, IFNULL((SELECT Displayname FROM covi_smart4j.sys_object_group WHERE groupcode = JobTitleCode),'') AS JobTitleName
        	, IFNULL((SELECT Displayname FROM covi_smart4j.sys_object_group WHERE groupcode = JobPositionCode),'') AS JobPositionName
        	, IFNULL((SELECT Displayname FROM covi_smart4j.sys_object_group WHERE groupcode = JobLevelCode),'') AS JobLevelName
        	, (SELECT A.Displayname FROM covi_smart4j.sys_object_user A WHERE A.usercode = B.UserCode) AS DisplayName
		FROM covi_syncdata.compare_object_addjob B
		<if test="SyncType != null and SyncType != ''">
			WHERE SyncType = #{SyncType}
		</if>
		ORDER BY SyncType desc
    </select>
    
   	<select id="selectCompareObjectAddJobListcnt" parameterType="cmap" resultType="java.lang.Long">
      	SELECT COUNT(*)
		FROM covi_syncdata.compare_object_addjob
		<if test="SyncType != null and SyncType != ''">
			WHERE SyncType = #{SyncType}
		</if>
	</select>
	
	<insert id="insertCompareObjectGroupINSERT" parameterType="cmap">
	    INSERT INTO covi_syncdata.compare_object_group (
			  SyncType
			, GroupCode
			, CompanyCode
			, GroupType
			, MemberOf
			, GroupPath
			, RegionCode		
			, DisplayName
			, MultiDisplayName
			, ShortName
			, MultiShortName
			, OUName	
			, OUPath
			, SortKey
			, SortPath
			, IsUse
			, IsDisplay
			, IsMail
			, IsHR
			, PrimaryMail
			, SecondaryMail
			, ManagerCode
			, Description
			, ReceiptUnitCode
			, ApprovalUnitCode
			, Receivable
			, Approvable
			, RegistDate
			, ModifyDate
			, Reserved1
			, Reserved2
			, Reserved3
			, Reserved4
			, Reserved5
		)
		SELECT
			  'INSERT' AS SyncType
			, a.GroupCode
			, a.CompanyCode
			, a.GroupType
			, a.MemberOf
			, covi_syncdata.Fn_ComObjectPathCreate_Sync(a.groupcode,'GR') AS GroupPath
			, a.RegionCode		
			, a.DisplayName
			, a.MultiDisplayName
			, a.ShortName
			, a.MultiShortName
			, a.OUName	
			, covi_syncdata.Fn_ComOUPathCreate_Sync(a.GroupCode, 'GR') AS OUPath
			, a.SortKey
			, covi_syncdata.Fn_ComSortPathCreate_Sync(0, a.GroupCode,'GR') AS SortPath
			, a.IsUse
			, a.IsDisplay
			, a.IsMail
			, a.IsHR
			, a.PrimaryMail
			, a.SecondaryMail
			, a.ManagerCode
			, a.Description
			, a.ReceiptUnitCode
			, a.ApprovalUnitCode
			, a.Receivable
			, a.Approvable
			, a.RegistDate
			, a.ModifyDate
			, a.Reserved1
			, a.Reserved2
			, a.Reserved3
			, a.Reserved4
			, a.Reserved5
		FROM covi_syncdata.temp_object_group a
		LEFT JOIN covi_smart4j.sys_object_group b ON a.GroupCode = b.GroupCode
		INNER JOIN covi_smart4j.sys_object_domain c ON c.DomainCode = a.CompanyCode
		WHERE c.OrgSyncType = 'AUTO'
		AND IFNULL(b.GroupCode, '') = ''
	</insert>
	
	<insert id="insertCompareObjectGroupUPDATE" parameterType="cmap">
	    INSERT INTO covi_syncdata.compare_object_group (
			  SyncType
			, GroupCode
			, CompanyCode
			, GroupType
			, MemberOf
			, GroupPath
			, RegionCode		
			, DisplayName
			, MultiDisplayName
			, ShortName
			, MultiShortName
			, OUName	
			, OUPath
			, SortKey
			, SortPath
			, IsUse
			, IsDisplay
			, IsMail
			, IsHR
			, PrimaryMail
			, SecondaryMail
			, ManagerCode
			, Description
			, ReceiptUnitCode
			, ApprovalUnitCode
			, Receivable
			, Approvable
			, RegistDate
			, ModifyDate
			, Reserved1
			, Reserved2
			, Reserved3
			, Reserved4
			, Reserved5
		)
		SELECT
			 'UPDATE' AS SyncType
			, a.GroupCode
			, a.CompanyCode
			, a.GroupType
			, a.MemberOf
			, covi_syncdata.Fn_ComObjectPathCreate_Sync(a.groupcode,'GR') AS GroupPath
			, a.RegionCode		
			, a.DisplayName
			, a.MultiDisplayName
			, a.ShortName
			, a.MultiShortName
			, a.OUName	
			, covi_syncdata.Fn_ComOUPathCreate_Sync(a.GroupCode, 'GR') AS OUPath
			, a.SortKey
			, covi_syncdata.Fn_ComSortPathCreate_Sync(0, a.GroupCode,'GR') AS SortPath
			, a.IsUse
			, a.IsDisplay
			, a.IsMail
			, b.IsHR
			, a.PrimaryMail
			, a.SecondaryMail
			, a.ManagerCode
			, a.Description
			, a.ReceiptUnitCode
			, a.ApprovalUnitCode
			, a.Receivable
			, a.Approvable
			, b.RegistDate
			, a.ModifyDate
			, a.Reserved1
			, a.Reserved2
			, a.Reserved3
			, a.Reserved4
			, a.Reserved5
		FROM covi_syncdata.temp_object_group a
		INNER JOIN covi_smart4j.sys_object_group b ON a.GroupCode = b.GroupCode AND a.GroupType = b.GroupType
		INNER JOIN covi_smart4j.sys_object_domain c ON c.DomainCode = a.CompanyCode AND c.OrgSyncType = 'AUTO'
		WHERE b.IsHR = 'Y' AND a.IsUse = 'Y'
		AND (
			IFNULL(a.CompanyCode, '') 			<![CDATA[<>]]>		IFNULL(b.CompanyCode, '')
			OR IFNULL(a.MemberOF, '') 			<![CDATA[<>]]>		IFNULL(b.MemberOF, '')
			OR IFNULL(a.DisplayName, '') 		<![CDATA[<>]]>		IFNULL(b.DisplayName, '')
			OR IFNULL(a.MultiDisplayName, '') 	<![CDATA[<>]]>		IFNULL(b.MultiDisplayName, '')
			OR IFNULL(a.SortKey, '')			<![CDATA[<>]]>		IFNULL(b.SortKey, '')
			OR IFNULL(a.IsDisplay, '') 			<![CDATA[<>]]>		IFNULL(b.IsDisplay, '')
			OR IFNULL(a.IsMail, '') 			<![CDATA[<>]]>		IFNULL(b.IsMail, '')
			OR IFNULL(a.PrimaryMail, '') 		<![CDATA[<>]]>		IFNULL(b.PrimaryMail, '')
			OR IFNULL(a.SecondaryMail, '') 		<![CDATA[<>]]>		IFNULL(b.SecondaryMail, '')
			OR IFNULL(a.ManagerCode, '') 		<![CDATA[<>]]>		IFNULL(b.ManagerCode, '')
			OR IFNULL(a.Reserved1, '') 			<![CDATA[<>]]> 		IFNULL(b.Reserved1, '')
			OR IFNULL(a.Reserved2, '') 			<![CDATA[<>]]> 		IFNULL(b.Reserved2, '')
			OR IFNULL(a.Reserved3, '') 			<![CDATA[<>]]> 		IFNULL(b.Reserved3, '')
			OR IFNULL(a.Reserved4, '') 			<![CDATA[<>]]> 		IFNULL(b.Reserved4, '')
			OR IFNULL(a.Reserved5, '') 			<![CDATA[<>]]> 		IFNULL(b.Reserved5, '')	
		)
	</insert>
	
	<insert id="insertCompareObjectGroupDELETE" parameterType="cmap">
	    INSERT INTO covi_syncdata.compare_object_group (
			  SyncType
			, GroupCode
			, CompanyCode
			, GroupType
			, MemberOf
			, GroupPath
			, RegionCode		
			, DisplayName
			, MultiDisplayName
			, ShortName
			, MultiShortName
			, OUName	
			, OUPath
			, SortKey
			, SortPath
			, IsUse
			, IsDisplay
			, IsMail
			, IsHR
			, PrimaryMail
			, SecondaryMail
			, ManagerCode
			, Description
			, ReceiptUnitCode
			, ApprovalUnitCode
			, Receivable
			, Approvable
			, RegistDate
			, ModifyDate
			, Reserved1
			, Reserved2
			, Reserved3
			, Reserved4
			, Reserved5
		)
		SELECT
			  'DELETE' AS SyncType
			, b.GroupCode
			, b.CompanyCode
			, b.GroupType
			, b.MemberOf
			, b.GroupPath
			, b.RegionCode		
			, b.DisplayName
			, b.MultiDisplayName
			, b.ShortName
			, b.MultiShortName
			, b.OUName	
			, b.OUPath
			, b.SortKey
			, b.SortPath
			, b.IsUse
			, b.IsDisplay
			, b.IsMail
			, b.IsHR
			, b.PrimaryMail
			, b.SecondaryMail
			, b.ManagerCode
			, b.Description
			, b.ReceiptUnitCode
			, b.ApprovalUnitCode
			, b.Receivable
			, b.Approvable
			, b.RegistDate
			, b.ModifyDate
			, b.Reserved1
			, b.Reserved2
			, b.Reserved3
			, b.Reserved4
			, b.Reserved5
		FROM covi_smart4j.sys_object_group AS b
		LEFT JOIN covi_syncdata.temp_object_group a ON a.GroupCode = b.GroupCode AND a.GroupType = b.GroupType
		INNER JOIN covi_smart4j.sys_object_domain c ON c.DomainCode = b.CompanyCode
		WHERE IFNULL(a.GroupCode, '') = '' 
		AND b.IsHR = 'Y' 
		AND b.GroupType IN ('Dept','JobTitle','JobPosition','JobLevel')
		AND c.OrgSyncType = 'AUTO'
	</insert>
	
	<delete id="deleteNoMemberOf">
    	DELETE FROM covi_syncdata.compare_object_group WHERE IFNULL(SortPath,'') = ''
    </delete>
	
	<insert id="insertCompareObjectUserINSERT">
	    INSERT INTO Covi_syncdata.compare_object_user (
			  SyncType
			, UserCode
			, LogonID
			, LogonPassword
			, EmpNo
			, DisplayName
			, NickName
			, MultiDisplayName
			, CompanyCode
			, DeptCode
			, JobTitleCode
			, JobPositionCode
			, JobLevelCode
			, RegionCode
			, Address
			, MultiAddress
			, HomePage
			, PhoneNumber
			, Mobile
			, Fax
			, IPPhone
			, UseMessengerConnect
			, SortKey
			, SecurityLevel
			, Description
			, IsUse
			, IsHR
			, IsDisplay
			, EnterDate
			, RetireDate
			, PhotoPath
			, BirthDiv
			, BirthDate
			, UseMailConnect
			, MailAddress
			, ExternalMailAddress
			, ChargeBusiness
			, PhoneNumberInter
			, LanguageCode
			, MobileThemeCode
			, TimeZoneCode
			, InitPortal
			, RegistDate
			, ModifyDate
			, Reserved1
			, Reserved2
			, Reserved3
			, Reserved4
			, Reserved5
			, AD_IsUse
			, AD_DisplayName
			, AD_FirstName
			, AD_LastName
			, AD_Initials
			, AD_Office
			, AD_HomePage
			, AD_Country
			, AD_CountryID
			, AD_CountryCode
			, AD_State
			, AD_City
			, AD_StreetAddress
			, AD_PostOfficeBox
			, AD_PostalCode
			, AD_UserAccountControl
			, AD_AccountExpires
			, AD_PhoneNumber
			, AD_HomePhone
			, AD_Pager
			, AD_Mobile
			, AD_Fax
			, AD_Info
			, AD_Title
			, AD_Department
			, AD_Company
			, AD_ManagerCode
			, AD_CN
			, AD_SamAccountName
			, AD_UserPrincipalName
			, EX_IsUse
			, EX_PrimaryMail
			, EX_SecondaryMail
			, EX_StorageServer
			, EX_StorageGroup
			, EX_StorageStore
			, MSN_IsUse
			, MSN_PoolServerName
			, MSN_PoolServerDN
			, MSN_SIPAddress
			, MSN_Anonmy
			, MSN_MeetingPolicyName
			, MSN_MeetingPolicyDN
			, MSN_PhoneCommunication
			, MSN_PBX
			, LicSeq
		)
        SELECT
			  'INSERT' AS SyncType
			, a.UserCode
			, a.LogonID
			, a.LogonPassword
			, a.EmpNo
			, a.DisplayName
			, a.NickName
			, a.MultiDisplayName
			, a.CompanyCode
			, a.DeptCode
			, a.JobTItleCode
			, a.JobPositionCode
			, a.JobLevelCode
			, a.RegionCode	
			, a.Address
			, a.MultiAddress
			, a.HomePage
			, a.PhoneNumber
			, a.Mobile
			, a.Fax
			, a.IPPhone
			, a.UseMessengerConnect
			, a.SortKey
			, a.SecurityLevel
			, a.Description
			, a.IsUse
			, a.IsHR
			, a.IsDisplay
			, REPLACE(a.EnterDate,'-','')
			, REPLACE(a.RetireDate,'-','')
			, a.PhotoPath
			, a.BirthDiv
			, a.BirthDate
			, a.UseMailConnect
			, a.MailAddress
			, a.ExternalMailAddress
			, a.ChargeBusiness
			, a.PhoneNumberInter
			, a.LanguageCode
			, a.MobileThemeCode
			, a.TimeZoneCode
			, a.InitPortal
			, a.RegistDate
			, a.ModifyDate
			, a.Reserved1
			, a.Reserved2
			, a.Reserved3
			, a.Reserved4
			, a.Reserved5
			, a.AD_IsUse
			, a.AD_DisplayName
			, a.AD_FirstName
			, a.AD_LastName
			, a.AD_Initials
			, a.AD_Office
			, a.AD_HomePage
			, a.AD_Country
			, a.AD_CountryID
			, a.AD_CountryCode
			, a.AD_State
			, a.AD_City
			, a.AD_StreetAddress
			, a.AD_PostOfficeBox
			, a.AD_PostalCode
			, a.AD_UserAccountControl
			, a.AD_AccountExpires
			, a.AD_PhoneNumber
			, a.AD_HomePhone
			, a.AD_Pager
			, a.AD_Mobile
			, a.AD_Fax
			, a.AD_Info
			, a.AD_Title
			, a.AD_Department
			, a.AD_Company
			, a.AD_ManagerCode
			, a.AD_CN
			, a.AD_SamAccountName
			, a.AD_UserPrincipalName
			, a.EX_IsUse
			, a.EX_PrimaryMail
			, a.EX_SecondaryMail
			, a.EX_StorageServer
			, a.EX_StorageGroup
			, a.EX_StorageStore
			, a.MSN_IsUse
			, a.MSN_PoolServerName
			, a.MSN_PoolServerDN
			, a.MSN_SIPAddress
			, a.MSN_Anonmy
			, a.MSN_MeetingPolicyName
			, a.MSN_MeetingPolicyDN
			, a.MSN_PhoneCommunication
			, a.MSN_PBX
			, a.LicSeq
		FROM covi_syncdata.temp_object_user a
		INNER JOIN covi_smart4j.sys_object_domain c ON c.DomainCode = a.CompanyCode AND c.OrgSyncType = 'AUTO'
		LEFT JOIN covi_smart4j.sys_object_user b ON a.UserCode = b.UserCode
		WHERE IFNULL(b.UserCode, '') = ''
	</insert>
	
	<insert id="insertCompareObjectUserUPDATE">
	    INSERT INTO covi_syncdata.compare_object_user (
        	  SyncType
			, UserCode
			, LogonID
			, LogonPassword
			, EmpNo
			, DisplayName
			, NickName
			, MultiDisplayName
			, CompanyCode
			, DeptCode
			, JobTitleCode
			, JobPositionCode
			, JobLevelCode
			, RegionCode
			, Address
			, MultiAddress
			, HomePage
			, PhoneNumber
			, Mobile
			, Fax
			, IPPhone
			, UseMessengerConnect
			, SortKey
			, SecurityLevel
			, Description
			, IsUse
			, IsHR
			, IsDisplay	
			, EnterDate
			, RetireDate
			, PhotoPath
			, BirthDiv
			, BirthDate
			, UseMailConnect
			, MailAddress
			, ExternalMailAddress
			, ChargeBusiness
			, PhoneNumberInter
			, LanguageCode
			, MobileThemeCode
			, TimeZoneCode
			, InitPortal
			, RegistDate
			, ModifyDate
			, Reserved1
			, Reserved2
			, Reserved3
			, Reserved4
			, Reserved5
			, AD_IsUse
			, AD_DisplayName
			, AD_FirstName
			, AD_LastName
			, AD_Initials
			, AD_Office
			, AD_HomePage
			, AD_Country
			, AD_CountryID
			, AD_CountryCode
			, AD_State
			, AD_City
			, AD_StreetAddress
			, AD_PostOfficeBox
			, AD_PostalCode
			, AD_UserAccountControl
			, AD_AccountExpires
			, AD_PhoneNumber
			, AD_HomePhone
			, AD_Pager
			, AD_Mobile
			, AD_Fax
			, AD_Info
			, AD_Title
			, AD_Department
			, AD_Company
			, AD_ManagerCode
			, AD_CN
			, AD_SamAccountName
			, AD_UserPrincipalName
			, EX_IsUse
			, EX_PrimaryMail
			, EX_SecondaryMail
			, EX_StorageServer
			, EX_StorageGroup
			, EX_StorageStore
			, MSN_IsUse
			, MSN_PoolServerName
			, MSN_PoolServerDN
			, MSN_SIPAddress
			, MSN_Anonmy
			, MSN_MeetingPolicyName
			, MSN_MeetingPolicyDN
			, MSN_PhoneCommunication
			, MSN_PBX
			, LicSeq
		)
		SELECT
			  'UPDATE' AS SyncType
			, b.UserCode
			, b.LogonID
			, b.LogonPassword
			, a.EmpNo
			, a.DisplayName
			, b.NickName
			, a.MultiDisplayName
			, a.CompanyCode
			, a.DeptCode
			, a.JobTItleCode
			, a.JobPositionCode
			, a.JobLevelCode
			, a.RegionCode	
			, b.Address
			, b.MultiAddress
			, b.HomePage
			, a.PhoneNumber
			, a.Mobile
			, a.Fax
			, a.IPPhone
			, b.UseMessengerConnect
			, a.SortKey
			, b.SecurityLevel
			, b.Description
			, a.IsUse
			, b.IsHR
			, a.IsDisplay
			, REPLACE(a.EnterDate,'-','')
			, REPLACE(a.RetireDate,'-','')
			, a.PhotoPath
			, a.BirthDiv
			, a.BirthDate
			, a.UseMailConnect
			, a.MailAddress
			, a.ExternalMailAddress
			, a.ChargeBusiness
			, a.PhoneNumberInter
			, b.LanguageCode
			, b.MobileThemeCode
			, b.TimeZoneCode
			, b.InitPortal
			, b.RegistDate
			, a.ModifyDate
			, a.Reserved1
			, a.Reserved2
			, a.Reserved3
			, a.Reserved4
			, a.Reserved5
			, a.AD_IsUse
			, a.AD_DisplayName
			, a.AD_FirstName
			, a.AD_LastName
			, a.AD_Initials
			, a.AD_Office
			, a.AD_HomePage
			, a.AD_Country
			, a.AD_CountryID
			, a.AD_CountryCode
			, a.AD_State
			, a.AD_City
			, a.AD_StreetAddress
			, a.AD_PostOfficeBox
			, a.AD_PostalCode
			, a.AD_UserAccountControl
			, a.AD_AccountExpires
			, a.AD_PhoneNumber
			, a.AD_HomePhone
			, a.AD_Pager
			, a.AD_Mobile
			, a.AD_Fax
			, a.AD_Info
			, a.AD_Title
			, a.AD_Department
			, a.AD_Company
			, a.AD_ManagerCode
			, a.AD_CN
			, a.AD_SamAccountName
			, a.AD_UserPrincipalName
			, a.EX_IsUse
			, a.EX_PrimaryMail
			, a.EX_SecondaryMail
			, e.EX_StorageServer
			, e.EX_StorageGroup
			, a.EX_StorageStore
			, a.MSN_IsUse
			, a.MSN_PoolServerName
			, a.MSN_PoolServerDN
			, a.MSN_SIPAddress
			, a.MSN_Anonmy
			, a.MSN_MeetingPolicyName
			, a.MSN_MeetingPolicyDN
			, a.MSN_PhoneCommunication
			, a.MSN_PBX
			, a.LicSeq
		FROM covi_syncdata.temp_object_user a
		INNER JOIN covi_smart4j.sys_object_user b ON a.UserCode = b.UserCode
		INNER JOIN covi_smart4j.sys_object_user_basegroup c ON a.UserCode = c.UserCode
		INNER JOIN covi_smart4j.sys_object_domain d ON d.DomainCode = a.CompanyCode AND d.OrgSyncType = 'AUTO'
		LEFT JOIN covi_smart4j.sys_object_user_exchange e ON IFNULL(a.usercode,'') = IFNULL(e.USERID,'')
		WHERE (
			<!-- 재입사 처리 -->
				IFNULL(a.IsUse, '') = 'Y'
			AND IFNULL(a.RetireDate, '') = ''
			AND IFNULL(b.IsHR, '') = 'N'
			AND IFNULL(b.RetireDate, '') != ''
			AND IFNULL(c.DeptCode, '') LIKE '%RetireDept'				
			AND IFNULL(c.JobType, '') = 'Origin'
		)
		OR (
				b.IsHR = 'Y'
			AND c.JobType='Origin'
			AND (
				   IFNULL(a.LogonID, '') <![CDATA[<>]]> IFNULL(b.LogonID, '')
				OR IFNULL(a.EmpNo, '') <![CDATA[<>]]> IFNULL(b.EmpNo, '')
				OR IFNULL(a.DisplayName, '') <![CDATA[<>]]> IFNULL(b.DisplayName, '')
				OR IFNULL(a.CompanyCode,'') <![CDATA[<>]]> IFNULL(c.CompanyCode, '')			
				OR IFNULL(a.DeptCode, '') <![CDATA[<>]]> IFNULL(c.DeptCode, '')
				OR IFNULL(a.JobTitleCode, '') <![CDATA[<>]]> IFNULL(c.JobTitleCode, '')
				OR IFNULL(a.JobPositionCode, '') <![CDATA[<>]]> IFNULL(c.JobPositionCode, '')
				OR IFNULL(a.JobLevelCode, '') <![CDATA[<>]]> IFNULL(c.JobLevelCode, '')
				OR IFNULL(a.RegionCode, '') <![CDATA[<>]]> IFNULL(c.RegionCode, '')			
				OR IFNULL(a.SortKey, '') <![CDATA[<>]]> IFNULL(b.SortKey, '')					
				OR IFNULL(a.IsDisplay, '') <![CDATA[<>]]> IFNULL(b.IsDisplay, '')
				OR IFNULL(REPLACE(a.EnterDate,'-',''), '') <![CDATA[<>]]> IFNULL(REPLACE(b.EnterDate,'-',''), '')
				OR IFNULL(REPLACE(a.RetireDate,'-',''), '') <![CDATA[<>]]> IFNULL(REPLACE(b.RetireDate,'-',''), '')
				OR IFNULL(a.PhotoPath, '') <![CDATA[<>]]> IFNULL(b.PhotoPath, '')
				OR IFNULL(a.BirthDiv, '') <![CDATA[<>]]> IFNULL(b.BirthDiv, '')
				OR IFNULL(a.BirthDate, '') <![CDATA[<>]]> IFNULL(b.BirthDate, '')
				OR IFNULL(a.MailAddress, '') <![CDATA[<>]]> IFNULL(b.MailAddress, '')
				OR IFNULL(a.ExternalMailAddress, '') <![CDATA[<>]]> IFNULL(b.ExternalMailAddress, '')
				OR IFNULL(TRIM(a.ChargeBusiness), '') <![CDATA[<>]]> IFNULL(TRIM(b.ChargeBusiness), '')
				OR IFNULL(a.PhoneNumberInter, '') <![CDATA[<>]]> IFNULL(b.PhoneNumberInter, '')
				OR IFNULL(a.PhoneNumber, '') <![CDATA[<>]]> IFNULL(b.PhoneNumber, '')
				OR IFNULL(a.Mobile, '') <![CDATA[<>]]> IFNULL(b.Mobile, '')
				OR IFNULL(a.Fax, '') <![CDATA[<>]]> IFNULL(b.Fax, '')
				OR IFNULL(a.Reserved1, '') <![CDATA[<>]]> IFNULL(b.Reserved1, '')
				OR IFNULL(a.Reserved2, '') <![CDATA[<>]]> IFNULL(b.Reserved2, '')
				OR IFNULL(a.Reserved3, '') <![CDATA[<>]]> IFNULL(b.Reserved3, '')
				OR IFNULL(a.Reserved4, '') <![CDATA[<>]]> IFNULL(b.Reserved4, '')
				OR IFNULL(a.Reserved5, '') <![CDATA[<>]]> IFNULL(b.Reserved5, '')
				OR IFNULL(a.LicSeq, '') <![CDATA[<>]]> IFNULL(b.LicSeq, '')
			)
		)
	</insert>
	
	<insert id="insertCompareObjectUserDELETE">
	    INSERT INTO covi_syncdata.compare_object_user (
			  SyncType
			, UserCode
			, LogonID
			, LogonPassword
			, EmpNo
			, DisplayName
			, NickName
			, MultiDisplayName
			, CompanyCode
			, DeptCode
			, JobTitleCode
			, JobPositionCode
			, JobLevelCode
			, RegionCode
			, Address
			, MultiAddress
			, HomePage
			, PhoneNumber
			, Mobile
			, Fax
			, IPPhone
			, UseMessengerConnect
			, SortKey
			, SecurityLevel
			, Description
			, IsUse
			, IsHR
			, IsDisplay
			, EnterDate
			, RetireDate
			, PhotoPath
			, BirthDiv
			, BirthDate
			, UseMailConnect
			, MailAddress
			, ExternalMailAddress
			, ChargeBusiness
			, PhoneNumberInter
			, LanguageCode
			, MobileThemeCode
			, TimeZoneCode
			, InitPortal
			, RegistDate
			, ModifyDate
			, Reserved1
			, Reserved2
			, Reserved3
			, Reserved4
			, Reserved5
			, AD_IsUse
			, AD_DisplayName
			, AD_FirstName
			, AD_LastName
			, AD_Initials
			, AD_Office
			, AD_HomePage
			, AD_Country
			, AD_CountryID
			, AD_CountryCode
			, AD_State
			, AD_City
			, AD_StreetAddress
			, AD_PostOfficeBox
			, AD_PostalCode
			, AD_UserAccountControl
			, AD_AccountExpires
			, AD_PhoneNumber
			, AD_HomePhone
			, AD_Pager
			, AD_Mobile
			, AD_Fax
			, AD_Info
			, AD_Title
			, AD_Department
			, AD_Company
			, AD_ManagerCode
			, AD_CN
			, AD_SamAccountName
			, AD_UserPrincipalName
			, EX_IsUse
			, EX_PrimaryMail
			, EX_SecondaryMail
			, EX_StorageServer
			, EX_StorageGroup
			, EX_StorageStore
			, MSN_IsUse
			, MSN_PoolServerName
			, MSN_PoolServerDN
			, MSN_SIPAddress
			, MSN_Anonmy
			, MSN_MeetingPolicyName
			, MSN_MeetingPolicyDN
			, MSN_PhoneCommunication
			, MSN_PBX
			, LicSeq
		)	
		SELECT
			  'DELETE' AS SyncType
			, b.UserCode
			, b.LogonID
			, b.LogonPassword
			, b.EmpNo
			, b.DisplayName
			, b.NickName
			, b.MultiDisplayName	
			, c.CompanyCode AS CompanyCode
			, CONCAT((SELECT DomainID FROM covi_smart4j.sys_object_domain WHERE DomainID = c.CompanyCode),'_RetireDept') AS DeptCode
			, '' AS JobTItleCode
			, '' AS JobPositionCode
			, '' AS JobLevelCode
			, '' AS RegionCode		
			, b.Address
			, b.MultiAddress
			, b.HomePage
			, b.PhoneNumber
			, b.Mobile
			, b.Fax
			, b.IPPhone
			, b.UseMessengerConnect
			, b.SortKey
			, b.SecurityLevel
			, b.Description
			, b.IsUse
			, b.IsHR
			, b.IsDisplay
			, REPLACE(b.EnterDate,'-','')
			, REPLACE(b.RetireDate,'-','')
			, b.PhotoPath
			, b.BirthDiv
			, b.BirthDate
			, b.UseMailConnect
			, b.MailAddress
			, b.ExternalMailAddress
			, b.ChargeBusiness
			, b.PhoneNumberInter
			, b.LanguageCode
			, b.MobileThemeCode
			, b.TimeZoneCode
			, b.InitPortal
			, b.RegistDate
			, b.ModifyDate
			, b.Reserved1
			, b.Reserved2
			, b.Reserved3
			, b.Reserved4
			, b.Reserved5
			, b.AD_IsUse
			, e.AD_DisplayName
			, e.AD_FirstName
			, e.AD_LastName
			, e.AD_Initials
			, e.AD_Office
			, e.AD_HomePage
			, e.AD_Country
			, e.AD_CountryID
			, e.AD_CountryCode
			, e.AD_State
			, e.AD_City
			, e.AD_StreetAddress
			, e.AD_PostOfficeBox
			, e.AD_PostalCode
			, e.AD_UserAccountControl
			, e.AD_AccountExpires
			, e.AD_PhoneNumber
			, e.AD_HomePhone
			, e.AD_Pager
			, e.AD_Mobile
			, e.AD_Fax
			, e.AD_Info
			, e.AD_Title
			, e.AD_Department
			, e.AD_Company
			, e.AD_ManagerCode
			, e.AD_CN
			, e.AD_SamAccountName
			, e.AD_UserPrincipalName
			, IFNULL(b.EX_IsUse, 'N') AS EX_IsUse
			, f.EX_PrimaryMail
			, f.EX_SecondaryMail
			, f.EX_StorageServer
			, f.EX_StorageGroup
			, f.EX_StorageStore
			, IFNULL(b.MSN_IsUse, 'N') AS MSN_IsUse
			, g.MSN_PoolServerName
			, g.MSN_PoolServerDN
			, g.MSN_SIPAddress
			, g.MSN_Anonmy
			, g.MSN_MeetingPolicyName
			, g.MSN_MeetingPolicyDN
			, g.MSN_PhoneCommunication
			, g.MSN_PBX
			, b.LicSeq
		FROM covi_smart4j.sys_object_user b
		LEFT JOIN covi_syncdata.temp_object_user a ON a.UserCode = b.UserCode
		INNER JOIN covi_smart4j.sys_object_user_basegroup c ON b.UserCode = c.UserCode
		INNER JOIN covi_smart4j.sys_object_domain d ON d.DomainCode = c.CompanyCode
		LEFT JOIN covi_smart4j.sys_object_user_ad e ON IFNULL(b.UserCode,'') = IFNULL(e.UserID,'')
		LEFT JOIN covi_smart4j.sys_object_user_exchange f ON IFNULL(b.UserCode,'') = IFNULL(f.UserID,'')
		LEFT JOIN covi_smart4j.sys_object_user_messenger g ON IFNULL(b.UserCode,'') = IFNULL(g.UserID,'')
		WHERE IFNULL(a.UserCode, '') = ''
		AND b.IsHR = 'Y'
		AND c.JobType = 'Origin'
		AND d.OrgSyncType = 'AUTO'
	</insert>

	<insert id="insertCompareObjectAddJobINSERT">
	    INSERT INTO covi_syncdata.compare_object_addjob (
			  SyncType
			, Seq
			, UserCode
			, JobType
			, CompanyCode
			, DeptCode
			, JobTitleCode
			, JobPositionCode
			, JobLevelCode
			, RegionCode	
			, SortKey		
			, IsHR
			, RegistDate
			, ModifyDate
			, Reserved1 	
			, Reserved2
			, Reserved3
			, Reserved4
			, Reserved5
		)
		SELECT
			  'INSERT' AS SyncType
			, a.Seq
			, a.UserCode
			, a.JobType
			, a.CompanyCode
			, a.DeptCode
			, a.JobTitleCode
			, a.JobPositionCode
			, a.JobLevelCode
			, a.RegionCode
			, a.SortKey
			, a.IsHR
			, a.RegistDate
			, a.ModifyDate
			, a.Reserved1
			, a.Reserved2
			, a.Reserved3
			, a.Reserved4
			, a.Reserved5
		FROM covi_syncdata.temp_object_addjob a
		INNER JOIN covi_smart4j.sys_object_domain c ON c.DomainCode = a.CompanyCode
		LEFT JOIN covi_smart4j.sys_object_user_basegroup b ON IFNULL(a.UserCode, '') = IFNULL(b.UserCode, '')
			AND IFNULL(a.CompanyCode, '') = IFNULL(b.CompanyCode, '')
			AND IFNULL(a.DeptCode, '') = IFNULL(b.DeptCode, '')
			AND IFNULL(a.JobTitleCode, '') = IFNULL(b.JobTitleCode, '')
			AND IFNULL(a.JobPositionCode, '') = IFNULL(b.JobPositionCode, '')
			AND IFNULL(a.JobLevelCode, '') = IFNULL(b.JobLevelCode, '')
			AND b.JobType = 'AddJob'
		WHERE IFNULL(b.UserCode, '') = ''
		AND c.OrgSyncType = 'AUTO'
	</insert>
	
	<insert id="insertCompareObjectAddJobUPDATE">
	    INSERT INTO covi_syncdata.compare_object_addjob (
			  SyncType
			, Seq
			, UserCode
			, JobType
			, CompanyCode
			, DeptCode
			, JobTitleCode
			, JobPositionCode
			, JobLevelCode
			, RegionCode	
			, SortKey		
			, IsHR
			, RegistDate
			, ModifyDate
			, Reserved1 	
			, Reserved2
			, Reserved3
			, Reserved4
			, Reserved5
		)
		SELECT
			  'UPDATE' AS SyncType
			, a.Seq
			, a.UserCode
			, a.JobType
			, a.CompanyCode
			, a.DeptCode
			, a.JobTitleCode
			, a.JobPositionCode
			, a.JobLevelCode
			, a.RegionCode
			, a.SortKey
			, a.IsHR
			, a.RegistDate
			, a.ModifyDate
			, a.Reserved1
			, a.Reserved2
			, a.Reserved3
			, a.Reserved4
			, a.Reserved5
		FROM covi_syncdata.temp_object_addjob a
		INNER JOIN covi_smart4j.sys_object_user_basegroup b ON a.UserCode = b.UserCode
		INNER JOIN covi_smart4j.sys_object_domain c ON c.DomainCode = a.CompanyCode	
		WHERE b.JobType='AddJob'
		AND b.IsHR = 'Y'
		AND c.OrgSyncType = 'AUTO'
		AND (
			IFNULL(a.CompanyCode,'') <![CDATA[<>]]> IFNULL(b.CompanyCode, '')			
			OR IFNULL(a.DeptCode, '') <![CDATA[<>]]> IFNULL(b.DeptCode, '')
			OR IFNULL(a.JobTitleCode, '') <![CDATA[<>]]> IFNULL(b.JobTitleCode, '')
			OR IFNULL(a.JobPositionCode, '') <![CDATA[<>]]> IFNULL(b.JobPositionCode, '')
			OR IFNULL(a.JobLevelCode, '') <![CDATA[<>]]> IFNULL(b.JobLevelCode, '')
			OR IFNULL(a.RegionCode, '') <![CDATA[<>]]> IFNULL(b.RegionCode, '')			
			OR IFNULL(a.SortKey, '') <![CDATA[<>]]> IFNULL(b.SortKey, '')
			OR IFNULL(a.Reserved1, '') <![CDATA[<>]]> IFNULL(b.Reserved1, '')
			OR IFNULL(a.Reserved2, '') <![CDATA[<>]]> IFNULL(b.Reserved2, '')
			OR IFNULL(a.Reserved3, '') <![CDATA[<>]]> IFNULL(b.Reserved3, '')
			OR IFNULL(a.Reserved4, '') <![CDATA[<>]]> IFNULL(b.Reserved4, '')
			OR IFNULL(a.Reserved5, '') <![CDATA[<>]]> IFNULL(b.Reserved5, '')	
		)
	</insert>
	
	<insert id="insertCompareObjectAddJobDELETE">
	    INSERT INTO covi_syncdata.compare_object_addjob (
			  SyncType
			, Seq
			, UserCode
			, JobType 		
			, CompanyCode
			, DeptCode
			, JobTitleCode
			, JobPositionCode
			, JobLevelCode
			, RegionCode	
			, SortKey		
			, IsHR		
			, RegistDate
			, ModifyDate
			, Reserved1 	
			, Reserved2
			, Reserved3
			, Reserved4
			, Reserved5
		)
		SELECT
			  'DELETE' AS SyncType
			, b.Seq
			, b.UserCode
			, b.JobType
			, b.CompanyCode
			, b.DeptCode
			, b.JobTitleCode
			, b.JobPositionCode
			, b.JobLevelCode
			, b.RegionCode
			, b.SortKey
			, b.IsHR
			, b.RegistDate
			, b.ModifyDate
			, b.Reserved1
			, b.Reserved2
			, b.Reserved3
			, b.Reserved4
			, b.Reserved5
		FROM covi_syncdata.temp_object_addjob a
		RIGHT JOIN covi_smart4j.sys_object_user_basegroup b ON a.UserCode = b.UserCode
			AND IFNULL(a.CompanyCode, '') = IFNULL(b.CompanyCode, '')
			AND IFNULL(a.DeptCode, '') = IFNULL(b.DeptCode, '')
			AND IFNULL(a.JobTitleCode, '') = IFNULL(b.JobTitleCode, '')
			AND IFNULL(a.JobPositionCode, '') = IFNULL(b.JobPositionCode, '')
			AND IFNULL(a.JobLevelCode, '') = IFNULL(b.JobLevelCode, '')
		INNER JOIN covi_smart4j.sys_object_domain c ON a.CompanyCode = c.DomainCode
		WHERE b.usercode IS NULL
		AND a.jobtype = 'AddJob'
		AND a.IsHR = 'Y'
		AND c.OrgSyncType = 'AUTO'
	</insert>
	
	<!-- select pathData by groupCode -->
	<select id="selectGroupPath" parameterType="cmap" resultType="cmap">
 	    SELECT 
 	    	  GroupPath
 	    	, SortPath
 	    	, OUPath
 	    	, (SELECT GroupID FROM covi_smart4j.sys_object_group WHERE GroupCode = #{CompanyCode}) AS CompanyID
 	    FROM covi_smart4j.sys_object_group
 	    WHERE GroupCode = #{MemberOf}
 	</select>
	
	<select id="selectDupLogonIDCnt" parameterType="cmap" resultType="java.lang.Long">
 	    SELECT	COUNT(*) 
 	    FROM 	covi_smart4j.sys_object_user
 	    WHERE 	usercode !=#{UserCode}
 	    AND 	logonid = #{LogonID}
 	</select>
	<!-- insert to sys_object  -->
	<insert id="insertObject" parameterType="cmap">
    	INSERT INTO covi_smart4j.sys_object (
			  ObjectCode
			, ObjectType
			, IsUse
			, IsSync
			, Description
			, RegistDate
		) 
		VALUES (
			  #{ObjectCode}
			, #{ObjectType}
			, #{IsUse}
			, #{IsSync}
			, #{Description}
			, now()
		)
	</insert>
	
	<!-- update to sys_object  -->
	<update id="updateObject" parameterType="cmap">
    	UPDATE covi_smart4j.sys_object 
    	SET
    		  IsUse=#{IsUse}
    		, Description = #{Description}
			<if test="ObjectType != null and ObjectType != ''">
				, ObjectType = #{ObjectType}
			</if>
			<choose>
			<when test='IsUse != null and IsUse == "Y"'>
				, DeleteDate = null
			</when>
			<when test='IsUse != null and IsUse == "N"'>
				, DeleteDate = NOW()
			</when>
			</choose>
    	WHERE ObjectCode = #{ObjectCode}
	</update>
	
	<!-- delete to sys_object -->
	<update id="deleteObject" parameterType="cmap">
    	UPDATE covi_smart4j.sys_object
    	SET 
			  IsUse='N'
			, IsSync='N'
			, DeleteDate = NOW()
    	WHERE ObjectCode = #{ObjectCode}
	</update>
	
	<!-- DOMAIN -->
    <!-- 회사목록 조회 : 요청받은 DomainID를 최상위로 위치하도록 조회 -->
    <select id="selectDomainList" parameterType="cmap" resultType="cmap">
        SELECT
        	  dn.GroupCode as optionValue
        	, covi_smart4j.Fn_BaseGetDictionary_S(#{lang}, dn.MultiDisplayName) as optionText
		FROM covi_smart4j.sys_object_group AS gr
		INNER JOIN sys_object_group AS dn on gr.CompanyCode = dn.GroupCode
		WHERE gr.GroupType = 'Company'
		<if test="assignedDomain.size() > 0 and assignedDomain.indexOf('ORGROOT') &lt; 0" >
            AND dn.GroupCode IN 
            <foreach item="item" index="index" collection="assignedDomain" open="(" close=")" separator=",">
            	#{item}
    		</foreach>
        </if>
		ORDER BY
		<if test="domainCode != null and domainCode != ''">
		 	 dn.GroupCode = #{domainCode} DESC,
		</if>
		(gr.SortKey+0) ASC
    </select>
	
    <!-- 회사 드롭다운 목록 가져오기 -->
    <select id="selectAvailableCompanyList" parameterType="cmap" resultType="cmap">
		SELECT
			  DomainCode AS CompanyCode
			, MultiDisplayName AS CompanyName
			, domainID AS CompanyID
	    FROM covi_smart4j.sys_object_domain
	    WHERE IsUse = 'Y'
	    <if test="assignedDomain.size() > 0 and assignedDomain.indexOf('ORGROOT') &lt; 0">
	    	AND DomainCode IN 
				<foreach item="item" index="index" collection="assignedDomain" open="(" close=")" separator=",">
		           	#{item}
		   		</foreach>
	    </if>
    	ORDER BY (sortKey+0) ASC
	</select>
	
	<!-- USER -->
	<select id="selectUserInfo" parameterType="cmap" resultType="cmap">
		<![CDATA[
			SELECT 
				ur.LicSeq,
				ur.UserID,
				ur.UserCode,
				ur.LogonID,
				ur.EmpNo,
				ur.DisplayName,
				ur.MultiDisplayName,
				ur.NickName,
				ur.MultiAddress,
				ur.HomePage,
				ur.PhoneNumber,
				ur.Mobile,
				ur.FAX,
				ur.IPPhone,
				ur.UseMessengerConnect,
				ur.SortKey,
				ur.SecurityLevel,
				ur.Description,
				ur.IsUse,
				ur.IsHR,
				ur.IsDisplay,
				ur.EnterDate,
				ur.RetireDate,
				ur.PhotoPath,
				ur.BirthDiv,
				ur.BirthDate,
				ur.UseMailConnect,
				ur.MailAddress,
				ur.ExternalMailAddress,
				ur.ChargeBusiness,
				ur.PhoneNumberInter,
				ur.LanguageCode,
				ur.Reserved1,
				ur.Reserved2,
				ur.Reserved3,
				ur.Reserved4,
				ur.Reserved5,
				bg.CompanyCode,
				bg.MultiCompanyName,
				bg.DeptCode,
				bg.DeptName,
				bg.MultiDeptName,
				bg.RegionCode,
				bg.MultiRegionName,
				bg.JobPositionCode,
				bg.JobPositionName,
				bg.JobTitleCode,
				bg.JobTitleName,
				bg.JobLevelCode,
				bg.JobLevelName,
				apv.UseDeputy,
				apv.DeputyCode,
				apv.DeputyName,
				apv.DeputyFromDate,
				apv.DeputyToDate,
				apv.AlertConfig,
				apv.ApprovalUnitCode,
				(SELECT MultiDisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = apv.ApprovalUnitCode) AS ApprovalUnitName,
				apv.ReceiptUnitCode,
				(SELECT MultiDisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = apv.ReceiptUnitCode) AS ReceiptUnitName,
				apv.UseApprovalMessageBoxView,
				apv.UseMobile,
				apv.DeputyOption
				, dn.DomainID
				, ur.AD_ISUSE
				, ur.EX_ISUSE
				, ur.MSN_ISUSE				
				, ur.CountryID
				, ur.CountryCode
				, ur.CityState
				, ur.City
				, ur.PostOfficeBox
				, ur.OfficeAddress				
				, (SELECT MultiDisplayName FROM covi_smart4j.sys_object_user WHERE UserCode = AD.AD_MANAGERCODE) AS ManagerName			
				, IFNULL(urif.CheckUserIP, 'N') AS CheckUserIP
                , IFNULL(urif.StartIP, '') AS StartIP
                , IFNULL(urif.EndIP, '') AS EndIP	
				, AD.*
                , EXCH.*
                , MSN.*
				FROM covi_smart4j.sys_object_user AS ur
				LEFT JOIN covi_smart4j.sys_object_user_basegroup AS bg ON ur.UserCode = bg.UserCode AND bg.JobType = 'Origin'
				LEFT JOIN covi_smart4j.sys_object_user_info AS urif ON ur.UserCode = urif.UserCode				                                                       
				LEFT JOIN covi_smart4j.sys_object_domain AS dn ON bg.CompanyCode = dn.DomainCode
				LEFT JOIN covi_smart4j.sys_object_user_approval AS apv ON ur.UserCode = apv.UserCode
				LEFT JOIN covi_smart4j.sys_object_user_ad AD ON ur.UserCode = AD.UserId
            	LEFT JOIN covi_smart4j.sys_object_user_exchange EXCH ON ur.UserCode = EXCH.UserId
            	LEFT JOIN covi_smart4j.sys_object_user_messenger MSN ON ur.UserCode = MSN.UserId
				WHERE ur.UserCode = #{UserCode}
		]]>
	</select>
	
 	<select id="selectUserInfoList" parameterType="cmap" resultType="cmap">
		<![CDATA[
		SELECT 
			ur.UserID,
			ur.UserCode,
			ur.LogonID,
			ur.EmpNo,
			ur.MultiDisplayName,
			ur.NickName,
			ur.MultiAddress,
			ur.HomePage,
			ur.PhoneNumber,
			ur.Mobile,
			ur.FAX,
			ur.IPPhone,
			ur.UseMessengerConnect,
			ur.SortKey,
			ur.SecurityLevel,
			ur.Description,
			ur.IsUse,
			ur.IsHR,
			ur.IsDisplay,
			ur.EnterDate,
			ur.RetireDate,
			ur.PhotoPath,
			ur.BirthDiv,
			ur.BirthDate,
			ur.UseMailConnect,
			ur.MailAddress,
			ur.ExternalMailAddress,
			ur.PhoneNumberInter,
			ur.Reserved1,
			ur.Reserved2,
			ur.Reserved3,
			ur.Reserved4,
			ur.Reserved5,
			bg.CompanyCode,
			bg.MultiCompanyName,
			bg.DeptCode,
			bg.MultiDeptName,
			bg.RegionCode,
			bg.MultiRegionName,
			bg.JobPositionCode,
			bg.JobPositionName,
			bg.JobTitleCode,
			bg.JobTitleName,
			bg.JobLevelCode,
			bg.JobLevelName,
			apv.UseDeputy,
			apv.DeputyCode,
			apv.DeputyName,
			apv.DeputyFromDate,
			apv.DeputyToDate,
			apv.AlertConfig,
			apv.ApprovalUnitCode,
			(SELECT MultiDisplayName FROM sys_object_group WHERE GroupCode = apv.ApprovalUnitCode) AS ApprovalUnitName,
			apv.ReceiptUnitCode,
			(SELECT MultiDisplayName FROM sys_object_group WHERE GroupCode = apv.ReceiptUnitCode) AS ReceiptUnitName,
			apv.UseApprovalMessageBoxView,
			apv.UseMobile
			, ur.AD_ISUSE
			, ur.EX_ISUSE
			, ur.MSN_ISUSE
			, AD.*
			, EXCH.*
			, MSN.*
			,gr.OUPath
			,gr.OUName
			,dn.DomainID
		FROM covi_smart4j.sys_object_user AS ur
		INNER JOIN covi_smart4j.sys_object_user_basegroup AS bg ON ur.UserCode = bg.UserCode AND bg.JobType = 'Origin'
		INNER JOIN covi_smart4j.sys_object_group AS gr ON bg.DeptCode = gr.GroupCode
		INNER JOIN covi_smart4j.sys_object_domain AS dn ON bg.CompanyCode = dn.DomainCode
		LEFT JOIN covi_smart4j.sys_object_user_approval AS apv ON ur.UserCode = apv.UserCode
		LEFT JOIN covi_smart4j.sys_object_user_ad AD ON ur.UserCode = AD.USERID
		LEFT JOIN covi_smart4j.sys_object_user_exchange EXCH ON ur.UserCode = EXCH.USERID
		LEFT JOIN covi_smart4j.sys_object_user_messenger MSN ON ur.UserCode = MSN.USERID
		WHERE ur.UserCode IN
		]]>
		<foreach collection="TargetID" item="item"  separator="," open="(" close=")">
		    #{item}
		</foreach>
	</select>
	
	<select id="selectUserInfoByAdmin" parameterType="cmap" resultType="cmap">
		<![CDATA[
		SELECT 
			  ur.UserID AS "UserID"
			, ur.UserCode AS "UserCode"
			, ur.LogonID AS "LogonID"
			, ur.EmpNo AS "EmpNo"
			, ur.MultiDisplayName AS "MultiDisplayName"
			, ur.NickName AS "NickName"
			, ur.MultiAddress AS "MultiAddress"
			, ur.HomePage AS "HomePage"
			, ur.PhoneNumber AS "PhoneNumber"
			, ur.Mobile AS "Mobile"
			, ur.FAX AS "FAX" 
			, ur.IPPhone AS "IPPhone" 
			, ur.UseMessengerConnect AS "UseMessengerConnect" 
			, ur.SortKey AS "SortKey" 
			, ur.SecurityLevel AS "SecurityLevel" 
			, ur.Description AS "Description" 
			, ur.IsUse AS "IsUse" 
			, ur.IsHR AS "IsHR" 
			, ur.IsDisplay AS "IsDisplay" 
			, ur.EnterDate AS "EnterDate" 
			, ur.RetireDate AS "RetireDate" 
			, ur.PhotoPath AS "PhotoPath" 
			, ur.BirthDiv  AS "BirthDiv" 
			, ur.BirthDate AS "BirthDate" 
			, ur.UseMailConnect AS "UseMailConnect" 
			, ur.MailAddress AS "MailAddress" 
			, ur.ExternalMailAddress AS "ExternalMailAddress" 
			, ur.PhoneNumberInter AS "PhoneNumberInter" 
			, ur.Reserved1 AS "Reserved1" 
			, ur.Reserved2 AS "Reserved2" 
			, ur.Reserved3 AS "Reserved3" 
			, ur.Reserved4 AS "Reserved4"
			, ur.Reserved5 AS "Reserved5" 
			, bg.CompanyCode AS "CompanyCode" 
			, bg.MultiCompanyName AS "MultiCompanyName" 
			, bg.DeptCode AS "DeptCode" 
			, bg.MultiDeptName AS "MultiDeptName" 
			, bg.RegionCode AS "RegionCode" 
			, bg.MultiRegionName AS "MultiRegionName" 
			, bg.JobPositionCode AS "JobPositionCode" 
			, bg.JobPositionName AS "JobPositionName" 
			, bg.JobTitleCode AS "JobTitleCode" 
			, bg.JobTitleName AS "JobTitleName" 
			, bg.JobLevelCode AS "JobLevelCode" 
			, bg.JobLevelName AS "JobLevelName" 
			, apv.UseDeputy AS "UseDeputy" 
			, apv.DeputyCode AS "DeputyCode" 
			, apv.DeputyName AS "DeputyName" 
			, apv.DeputyFromDate AS "DeputyFromDate" 
			, apv.DeputyToDate AS "DeputyToDate" 
			, apv.AlertConfig AS "AlertConfig" 
			, apv.ApprovalUnitCode AS "ApprovalUnitCode" 
			, (SELECT MultiDisplayName FROM COVI_SMART4J.SYS_OBJECT_GROUP WHERE GroupCode = apv.ApprovalUnitCode) AS "ApprovalUnitName"
			, apv.ReceiptUnitCode AS "ReceiptUnitCode" 
			, (SELECT MultiDisplayName FROM COVI_SMART4J.SYS_OBJECT_GROUP WHERE GroupCode = apv.ReceiptUnitCode) AS "ReceiptUnitName"
			, apv.UseApprovalMessageBoxView AS "UseApprovalMessageBoxView"
			, apv.UseMobile AS "UseMobile"
			, ur.AD_ISUSE
			, ur.EX_ISUSE
			, ur.MSN_ISUSE
			, AD.*
			, EXCH.*
			, MSN.*
			, AD.USERID As "AD_USERID"
			, EXCH.USERID As "EX_USERID"
			, MSN.USERID As "MSN_USERID"
			, ur.LOGONPASSWORD  As "LOGONPASSWORD"
		FROM covi_smart4j.sys_object_user ur
		LEFT JOIN covi_smart4j.sys_object_user_basegroup bg ON ur.UserCode = bg.UserCode AND bg.JobType = 'Origin'
		LEFT JOIN covi_smart4j.sys_object_user_approval apv ON ur.UserCode = apv.UserCode
		LEFT JOIN covi_smart4j.sys_object_user_ad AD ON ur.UserCode = AD.USERID
		LEFT JOIN covi_smart4j.sys_object_user_exchange EXCH ON ur.UserCode = EXCH.USERID
		LEFT JOIN covi_smart4j.sys_object_user_messenger MSN ON ur.UserCode = MSN.USERID
		WHERE ur.UserCode = #{UserCode}
		]]>
	</select>  
	
	<select id="selectUserListCnt" parameterType="cmap" resultType="java.lang.Long">
		<![CDATA[
		SELECT COUNT(ur.UserCode)
		FROM covi_smart4j.sys_object_user AS ur
		LEFT JOIN covi_smart4j.sys_object_user_basegroup AS bg ON ur.UserCode = bg.UserCode
		]]>
		<if test="hasChildGroup !=null and hasChildGroup.equalsIgnoreCase('Y') and deptCode != null  and deptCode != ''">
			LEFT JOIN covi_smart4j.sys_object_group AS gr ON bg.DeptCode = gr.GroupCode 
		</if>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			IFNULL(bg.JobType,'Origin') = 'Origin'
			<if test="companyCode != null and companyCode != 'ORGROOT'">
				AND bg.CompanyCode = #{companyCode}    
			</if>
			<choose>
				<when test="hasChildGroup !=null and hasChildGroup.equalsIgnoreCase('Y') and deptCode != null  and deptCode != ''">
					AND CONCAT(';', gr.GroupPath) LIKE CONCAT('%;', #{deptCode}, ';%')
				</when>
				<when test="deptCode != null">
					AND bg.DeptCode = #{deptCode}
				</when>
			</choose>
			<if test="IsUse != null">
				AND ur.IsUse = #{IsUse}
			</if>
			<if test="searchType == 'UserName' and searchText != null">
				AND ur.MultiDisplayName like CONCAT('%', #{searchText}, '%') 
			</if>
			<if test="searchType == 'UserCode' and searchText != null">
				AND ur.UserCode like CONCAT('%', #{searchText}, '%')
			</if>
			<if test="searchType == 'DeptName' and searchText != null">
				AND bg.MultiDeptName like CONCAT('%', #{searchText}, '%') 
			</if>
			<if test="searchType == 'JobPositionName' and searchText != null">
				AND bg.MultiJobPositionName like CONCAT('%', #{searchText}, '%') 
			</if>
			<if test="searchType == 'JobTitleName' and searchText != null">
				AND bg.MultiJobTitleName like CONCAT('%', #{searchText}, '%') 
			</if>
			<if test="searchType == 'JobLevelName' and searchText != null">
				AND bg.MultiJobLevelName like CONCAT('%', #{searchText}, '%') 
			</if>
		</trim> 
	</select>
    
    <select id="selectUserList" parameterType="cmap" resultType="cmap">
		<![CDATA[
		SELECT 
			  'user' AS itemType
			, ur.UserID
			, ur.UserCode
			, ur.DisplayName
			, ur.MultiDisplayName
			, IFNULL(CONCAT(bg.JobLevelCode,'&',bg.MultiJobLevelName), '') AS JobLevel
			, IFNULL(CONCAT(bg.JobTitleCode,'&',bg.MultiJobTitleName), '') AS JobTitle
			, IFNULL(CONCAT(bg.JobPositionCode,'&',bg.MultiJobPositionName), '') AS JobPosition
			, bg.JobLevelCode
			, bg.JobTitleCode
			, bg.JobPositionCode
			, bg.JobLevelName
			, bg.JobTitleName
			, bg.JobPositionName
			, IFNULL(ur.Mobile, '') AS Mobile
			, IFNULL(ur.MailAddress, '') AS MailAddress
			, IFNULL(ur.PhoneNumber, '') AS PhoneNumber	
			, ur.EmpNo 
			, bg.DeptCode
			, bg.DeptName
			, bg.MultiDeptName
			, bg.CompanyCode
			, bg.CompanyName
			, bg.MultiCompanyName
			, IFNULL(bg.JobType,'Original') AS JobType
			, ur.PhoneNumberInter
			, ur.IsUse
			, ur.IsDisplay
			, ur.IsHR
			, ur.SortKey
		FROM covi_smart4j.sys_object_user AS ur
		LEFT JOIN covi_smart4j.sys_object_user_basegroup AS bg ON ur.UserCode = bg.UserCode
		]]>
		<if test="hasChildGroup !=null and hasChildGroup.equalsIgnoreCase('Y') and deptCode != null  and deptCode != ''">
			LEFT JOIN covi_smart4j.sys_object_group AS gr ON bg.DeptCode = gr.GroupCode 
		</if>	
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			IFNULL(bg.JobType,'Origin') = 'Origin'
			<if test="companyCode != null and companyCode != 'ORGROOT'">
				AND bg.CompanyCode = #{companyCode}    
			</if>
			<choose>
				<when test="hasChildGroup !=null and hasChildGroup.equalsIgnoreCase('Y') and deptCode != null  and deptCode != ''">
					AND CONCAT(';', gr.GroupPath) LIKE CONCAT('%;', #{deptCode}, ';%')
				</when>
				<when test="deptCode != null">
					AND bg.DeptCode = #{deptCode}
				</when>
			</choose>
			<if test="IsUse != null">
				AND ur.IsUse = #{IsUse}
			</if>
			<if test="searchType == 'UserName' and searchText != null">
				AND ur.MultiDisplayName like CONCAT('%', #{searchText}, '%') 
			</if>
			<if test="searchType == 'UserCode' and searchText != null">
				AND ur.UserCode like CONCAT('%', #{searchText}, '%') 
			</if>
			<if test="searchType == 'DeptName' and searchText != null">
				AND bg.MultiDeptName like CONCAT('%', #{searchText}, '%') 
			</if>
			<if test="searchType == 'JobPositionName' and searchText != null">
				AND bg.MultiJobPositionName like CONCAT('%', #{searchText}, '%') 
			</if>
			<if test="searchType == 'JobTitleName' and searchText != null">
				AND bg.MultiJobTitleName like CONCAT('%', #{searchText}, '%') 
			</if>
			<if test="searchType == 'JobLevelName' and searchText != null">
				AND bg.MultiJobLevelName like CONCAT('%', #{searchText}, '%') 
			</if>
		</trim> 
		<trim prefix="ORDER BY">
			<if test="sortColumn != null and sortDirection != null and sortColumn != 'SortKey'">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("MultiDisplayName")'>ur.MultiDisplayName</when>
					<when test='sortColumn.equalsIgnoreCase("JobTitle")'>bg.JobTitle</when>
					<when test='sortColumn.equalsIgnoreCase("JobPosition")'>bg.JobPosition</when>
					<when test='sortColumn.equalsIgnoreCase("JobLevel")'>bg.JobLevel</when>
					<when test='sortColumn.equalsIgnoreCase("IsUse")'>ur.IsUse</when>
					<when test='sortColumn.equalsIgnoreCase("IsHR")'>ur.IsHR</when>
					<when test='sortColumn.equalsIgnoreCase("MailAddress")'>ur.MailAddress</when>
					<otherwise>UserCode</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if> 
			<if test="sortColumn == null or sortDirection == null or sortColumn == 'SortKey'">
				(ur.SortKey + 0) ASC
			</if>
			, (bg.JobTitleSortKey + 0) ASC, (bg.JobLevelSortKey + 0) ASC, ur.EnterDate ASC, ur.MultiDisplayName ASC
		</trim>
	    <if test="pageSize != null and pageOffset != null">
		   	LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>
	</select>
	
    <update id="updateIsUseUser" parameterType="cmap">
	    <![CDATA[
		UPDATE covi_smart4j.sys_object_user
		SET
			IsUse = #{IsUse},
			ModifyDate = #{ModifyDate}
		WHERE UserCode = #{UserCode}
		]]>
	</update>
	
    <update id="updateIsHRUser" parameterType="cmap">
	    <![CDATA[
		UPDATE covi_smart4j.sys_object_user
		SET
			IsHR = #{IsHR},
			ModifyDate = #{ModifyDate}
		WHERE UserCode = #{UserCode}
		]]>
	</update>
	
    <update id="updateIsADUser" parameterType="cmap">
	    <![CDATA[
		UPDATE covi_smart4j.sys_object_user
		SET
			IsAD = #{IsAD},
			ModifyDate = #{ModifyDate}
		WHERE UserCode = #{UserCode}
		]]>
	</update>
	
	<select id="selectIsDuplicateUserCode" parameterType="cmap" resultType="cmap">
		SELECT COUNT(0) AS isDuplicate
		FROM covi_smart4j.sys_object_user
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
	    	<if test="Type == 'UserCode'">
		  		AND UserCode = #{Code}    
		  	</if>
		  	<if test="Type == 'UserEmpNo'">
		  		AND EmpNo = #{Code}
		  	</if>
		  	<if test="Type == 'LogonID'">
		  		AND LogonID = #{Code}
		  	</if>
		</trim> 
    </select> 
    
    <select id="selectIsDuplicateEmpno" parameterType="cmap" resultType="cmap">
		SELECT COUNT(0) AS isDuplicate
		FROM covi_smart4j.sys_object_user a
		INNER JOIN covi_smart4j.sys_object_user_basegroup b ON a.usercode = b.usercode
		WHERE a.EmpNo = #{Code}
		AND b.JobType = 'Origin'
		AND b.CompanyCode = #{CompanyCode}
    </select> 
    
	<!-- 그룹 선택시 해당 그룹의 사용자 가져옴 -->
    <!-- 기존 .NET 에서는 사용자 정보를 가져올 때 메인이 되는 테이블이 BASE_GROUP_MEMBER 였지만 
    JAVA 에서는 BASE_OBJECT_UR이 주가 되기 떄문에 겸직등의 정보를 표시 하기 위해 UNION을 사용한다.  -->
    <select id="selectGroupUserList" parameterType="cmap" resultType="cmap">
		<![CDATA[
		SELECT
			  'user' AS itemType
			, ur.UserID
			, ur.UserCode
			, ur.MultiDisplayName
			, IFNULL(CONCAT(bg.JobLevelCode,'&',bg.MultiJobLevelName), '') AS JobLevel
			, IFNULL(CONCAT(bg.JobTitleCode,'&',bg.MultiJobTitleName), '') AS JobTitle
			, IFNULL(CONCAT(bg.JobPositionCode,'&',bg.MultiJobPositionName), '')AS JobPosition
			, IFNULL(ur.Mobile, '') AS Mobile
			, IFNULL(ur.MailAddress, '') AS MailAddress
			, IFNULL(ur.PhoneNumber, '') AS PhoneNumber	
			, ur.EmpNo 
			, bg.DeptCode
			, bg.MultiDeptName
			, bg.CompanyCode
			, bg.MultiCompanyName
			, bg.JobType
			, IFNULL(ur.PhoneNumberInter, '') AS PhoneNumberInter
			, ur.IsUse
			, ur.IsDisplay
			, ur.IsHR
			, ur.SortKey
		]]>
		FROM covi_smart4j.sys_object_user AS ur
		INNER JOIN covi_smart4j.sys_object_user_basegroup AS bg ON ur.UserCode = bg.UserCode
		INNER JOIN (
			SELECT DISTINCT UserCode, (CASE JobType WHEN 'addJob' THEN 'AddJob' ELSE 'Origin' END) AS JobType
			FROM covi_smart4j.sys_object_group_member 
			<if test="groupCode != null">
				WHERE GroupCode = #{groupCode}
			</if>
		) AS gm ON bg.JobType = gm.JobType AND ur.UserCode = gm.UserCode
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="companyCode != null and companyCode != 'ORGROOT'">
				AND bg.CompanyCode = #{companyCode} 
			</if>
		</trim> 
		<![CDATA[ 	
		ORDER BY (bg.JobTitleSortKey+0) ASC, (bg.JobLevelSortKey+0) ASC, (ur.SortKey+0) ASC, ur.EnterDate ASC, ur.MultiDisplayName ASC
		]]>
		<if test="pageSize != null and pageOffset != null">
		   	LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>
	</select>
	
    <!-- 그룹 선택시 해당 그룹의 사용자 갯수를 가져옴 -->
    <select id="selectGroupUserListCnt" parameterType="cmap" resultType="java.lang.Long">
		<![CDATA[
		SELECT COUNT(*)
		FROM covi_smart4j.sys_object_user AS UR
		]]>
		INNER JOIN covi_smart4j.sys_object_user_basegroup AS BG ON UR.UserCode = BG.UserCode
		INNER JOIN (
			SELECT DISTINCT UserCode, (CASE JobType WHEN 'addJob' THEN 'AddJob' ELSE 'Origin' END) AS JobType
			FROM covi_smart4j.sys_object_group_member 
			<if test="groupCode != null">
				WHERE GroupCode = #{groupCode}
			</if>
		) AS GM ON BG.JobType = GM.JobType AND UR.UserCode = GM.UserCode
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="companyCode != null and companyCode != 'ORGROOT'">
				AND BG.CompanyCode = #{companyCode} 
			</if>
		</trim> 
	</select>
    
    <!-- 그룹 멤버 목록 select -->
    <select id="selectGroupMemberList" parameterType="cmap" resultType="cmap">
		SELECT * 
		FROM (
			SELECT 
				  'User' AS Type
				, GM.UserCode AS Code
				, IFNULL(UR.DisplayName, '') AS CodeName
				, IFNULL(UR.MailAddress, '') AS MailAddress
				, GM.GroupMemberID AS MemberID
			FROM covi_smart4j.sys_object_group_member AS GM
			LEFT JOIN covi_smart4j.sys_object_user AS UR ON GM.UserCode = UR.UserCode
			WHERE GM.GroupCode = #{groupCode} 
			
			UNION 
			
			SELECT 
				  'Dept' AS Type
				, GM.MemberGroupCode AS Code
				, IFNULL(GR.DisplayName, '') AS CodeName
				, IFNULL(GR.PrimaryMail, '') AS MailAddress
				, GM.MemberGroupID AS MemberID
			FROM covi_smart4j.sys_object_group_membergroup AS GM
			LEFT JOIN covi_smart4j.sys_object_group AS GR ON GM.MemberGroupCode = GR.GroupCode
			WHERE GM.GroupCode = #{groupCode} 
		) AS A
		<if test="pageSize != null and pageOffset != null">
		   	LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>
	</select>
	
    <!-- 그룹 선택시 해당 그룹의 멤버 수를 가져옴 -->
    <select id="selectGroupMemberListCnt" parameterType="cmap" resultType="java.lang.Long">
		SELECT COUNT(*)
		FROM (
			SELECT
				  'User' AS Type
				, GM.UserCode AS Code
				, UR.DisplayName AS CodeName
				, UR.MailAddress
				, GM.GroupMemberID AS MemberID
			FROM sys_object_group_member AS GM
			LEFT JOIN sys_object_user AS UR ON GM.UserCode = UR.UserCode
			WHERE GM.GroupCode = #{groupCode} 
			
			UNION 
			
			SELECT
				  'Dept' AS Type
				, GM.MemberGroupCode AS Code
				, GR.DisplayName AS CodeName
				, GR.PrimaryMail
				, GM.MemberGroupID AS MemberID
			FROM sys_object_group_membergroup AS GM
			LEFT JOIN sys_object_group AS GR ON GM.MemberGroupCode = GR.GroupCode
			WHERE GM.GroupCode = #{groupCode} 
		) AS A
	</select>
    
    <!-- 그룹 소속원 중 부서 데이터 중복 여부 조회 -->
    <select id="selectIsDuplicateGroupMember" parameterType="cmap" resultType="java.lang.Long">
		SELECT COUNT(*) AS isDuplicate
		FROM covi_smart4j.sys_object_group_membergroup
		WHERE GroupCode = #{GroupCode}
		AND MemberGroupCode = #{MemberGroupCode}
    </select>
    
    <!-- 그룹 소속원 중 사용자 데이터 중복 여부 조회 -->
    <select id="selectIsDuplicateGroupMemberUser" parameterType="cmap" resultType="java.lang.Long">
		SELECT COUNT(*) AS isDuplicate
		FROM covi_smart4j.sys_object_group_member
		WHERE GroupCode = #{GroupCode}
		AND UserCode = #{UserCode}
    </select>
    
    <!-- 사용자 메일사용여부 변경 -->
    <update id="updateIsMailUser" parameterType="cmap">
	    <![CDATA[
		UPDATE covi_smart4j.sys_object_user
		SET
			IsMail = #{IsMail},
			ModifyDate = #{ModifyDate}
		WHERE UserCode = #{UserCode}
		]]>
	</update>
	
   <insert id="insertUserDefaultInfo" parameterType="cmap">
        INSERT INTO covi_smart4j.sys_object_user (
			UserCode,
			LogonID,
			LogonPassword,
			EmpNo,
			NickName,
			DisplayName,
			MultiDisplayName,
			Address,
			MultiAddress,
			HomePage,
			PhoneNumber,
			Mobile,
			Fax,
			IPPhone,
			UseMessengerConnect,
			SortKey,
			SecurityLevel,
			Description,
			IsUse,
			IsHR,
			IsDisplay,
			EnterDate,
			RetireDate,
			PhotoPath,
			BirthDiv,
			BirthDate,
			UseMailConnect,
			MailAddress,
			ExternalMailAddress,
			ChargeBusiness,
			PhoneNumberInter,
			LanguageCode,
			InitPortal,
			MobileThemeCode,
			TimeZoneCode,
			RegistDate,
			ModifyDate,
			Reserved1,
			Reserved2,
			Reserved3,
			Reserved4,
			Reserved5,
			AD_ISUSE,
			EX_ISUSE,
			MSN_ISUSE,			
			CountryID,
			CountryCode,
			CityState,
			City,
			PostOfficeBox,
			OfficeAddress
		  	<if test='isSaaS != null and isSaaS=="Y"'>
		  	,	TEMPORARY_PASSWORD_ISUSE
		  	</if>
		  	<if test='LicSeq != null'>
		  	,	LicSeq
		  	</if>
		  	<if test='IsCRM != null'>
		  	,	IsCRM
		  	</if>
        ) 
        VALUES (
        	#{UserCode},
			#{LogonID},
			HEX(AES_ENCRYPT(#{aeskey}, SHA2(#{LogonPassword},512))) ,
			#{EmpNo},
			#{NickName},
			#{DisplayName},
			#{MultiDisplayName},
			#{Address},
			#{MultiAddress},
			#{HomePage},
			#{PhoneNumber},
			#{Mobile},
			#{Fax},
			#{IPPhone},
			#{UseMessengerConnect},
			#{SortKey},
			#{SecurityLevel},
			#{Description},
			#{IsUse},
			#{IsHR},
			#{IsDisplay},
			#{EnterDate},
			#{RetireDate},
			#{PhotoPath},
			#{BirthDiv},
			#{BirthDate},
			#{UseMailConnect},
			#{MailAddress},
			#{ExternalMailAddress},
			#{ChargeBusiness},
			#{PhoneNumberInter},
			#{LanguageCode},
			#{InitPortal},
			#{MobileThemeCode},
			#{TimeZoneCode},
			now(3),
			now(3),
			#{Reserved1},
			#{Reserved2},
			#{Reserved3},
			#{Reserved4},
			#{Reserved5},  	
			#{AD_IsUse},
			#{EX_IsUse},
			#{MSN_IsUse},			
			#{CountryID},
			#{CountryCode},
			#{CityState_01},
			#{CityState_02},
			#{PostOfficeBox},
			#{OfficeAddress}	  	
		  	<if test='isSaaS != null and isSaaS=="Y"'>
		  	,	'Y'
		  	</if>	
		  	<if test='LicSeq != null'>
		  	,	#{LicSeq}
		  	</if>
		  	<if test='IsCRM != null'>
		  	,	#{IsCRM}
		  	</if>
        )
	</insert>
   
	<insert id="insertUserDefaultInfo2" parameterType="cmap">
 	    INSERT INTO covi_smart4j.sys_object_user_info (
        	  UserCode
        	, CheckUserIP
        	, StartIP
        	, EndIP 
        )
        VALUES (
        	  #{UserCode}
        	, #{CheckUserIP}
        	, #{StartIP}
        	, #{EndIP}
        )
 	</insert>
   
	<insert id="insertUserBasegroupInfo" parameterType="cmap">
	    INSERT INTO covi_smart4j.sys_object_user_basegroup (
	    	  UserCode
			, JobType
			, SortKey
			, CompanyCode
			, CompanyName
			, MultiCompanyName
			, CompanySortKey
			, DeptCode
			, DeptName
			, MultiDeptName
			, DeptSortKey
			, RegionCode
			, RegionName
			, MultiRegionName
			, RegionSortKey
			, JobPositionCode
			, JobPositionName
			, MultiJobPositionName
			, JobPositionSortKey
			, JobTitleCode
			, JobTitleName
			, MultiJobTitleName
			, JobTitleSortKey
			, JobLevelCode
			, JobLevelName
			, MultiJobLevelName
			, JobLevelSortKey
			, RegistDate
			, ModifyDate
			, Reserved1
			, Reserved2
			, Reserved3
			, Reserved4
			, Reserved5
			, IsHR
	    ) 
	    VALUES (	    	
			  #{UserCode}
			, #{JobType}
			, #{SortKey}
			, #{CompanyCode}
			, (SELECT DisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{CompanyCode} AND GroupType = 'Company')
			, (SELECT MultiDisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{CompanyCode} AND GroupType = 'Company')
			, (SELECT SortKey FROM covi_smart4j.sys_object_group WHERE GroupCode = #{CompanyCode} AND GroupType = 'Company')
			, #{DeptCode}
			, (SELECT DisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{DeptCode} AND GroupType IN ('Dept','Company'))
			, (SELECT MultiDisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{DeptCode} AND GroupType IN ('Dept','Company'))
			, (SELECT SortKey FROM covi_smart4j.sys_object_group WHERE GroupCode = #{DeptCode} AND GroupType IN ('Dept','Company'))
			, #{RegionCode}
			, (SELECT DisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{RegionCode} AND GroupType = 'Region')
			, (SELECT MultiDisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{RegionCode} AND GroupType = 'Region')
			, (SELECT SortKey FROM covi_smart4j.sys_object_group WHERE GroupCode = #{RegionCode} AND GroupType = 'Region')
			, #{JobPositionCode}
			, (SELECT DisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{JobPositionCode} AND GroupType = 'JobPosition')
			, (SELECT MultiDisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{JobPositionCode} AND GroupType = 'JobPosition')
			, (SELECT SortKey FROM covi_smart4j.sys_object_group WHERE GroupCode = #{JobPositionCode} AND GroupType = 'JobPosition')
			, #{JobTitleCode}
			, (SELECT DisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{JobTitleCode} AND GroupType = 'JobTitle')
			, (SELECT MultiDisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{JobTitleCode} AND GroupType = 'JobTitle')
			, (SELECT SortKey FROM covi_smart4j.sys_object_group WHERE GroupCode = #{JobTitleCode} AND GroupType = 'JobTitle')
			, #{JobLevelCode}
			, (SELECT DisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{JobLevelCode} AND GroupType = 'JobLevel')
			, (SELECT MultiDisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{JobLevelCode} AND GroupType = 'JobLevel')
			, (SELECT SortKey FROM covi_smart4j.sys_object_group WHERE GroupCode = #{JobLevelCode} AND GroupType = 'JobLevel')
			, NOW()
			, NOW()
			, #{Reserved1}
			, #{Reserved2}
			, #{Reserved3}
			, #{Reserved4}
			, #{Reserved5}
			, #{IsHR}
		)
	</insert>
	
	<insert id="insertUserApprovalInfo" parameterType="cmap">
        INSERT INTO COVI_SMART4J.sys_object_user_approval (
        	UserCode,
			UseDeputy,
			DeputyCode,
			DeputyName,
			DeputyFromDate,
			DeputyToDate,
			AlertConfig,
			ApprovalUnitCode,
			ReceiptUnitCode,
			ApprovalCode,
			ApprovalFullCode,
			ApprovalFullName,
			UseApprovalMessageBoxView,
			UseMobile,
			UseApprovalPassword,
			<if test="DeputyOption != null">
				DeputyOption,
			</if>
			RegistDate,
			ModifyDate
        )
        VALUES (
        	#{UserCode},
			#{UseDeputy},
			#{DeputyCode},
			#{DeputyName},
			#{DeputyFromDate},
			#{DeputyToDate},
			#{AlertConfig},
			#{ApprovalUnitCode},
			#{ReceiptUnitCode},
			#{ApprovalCode},
			#{ApprovalFullCode},
			#{ApprovalFullName},
			#{UseApprovalMessageBoxView},
			#{UseMobile},
			#{UseApprovalPassword},
			<if test="DeputyOption != null">
				#{DeputyOption},
			</if>
			NOW(),
			NOW()
        )
    </insert>
	
    <insert id="insertUserGroupMember" parameterType="cmap">
		INSERT INTO covi_smart4j.sys_object_group_member (
        	GroupCode,
        	UserCode,
        	SortKey,
        	Role,
        	IsUse,
        	IsHR,
        	MemberStatus,
        	JoinDate
		) 
		<trim prefix="VALUES" prefixOverrides="," suffix=";">
			<if test="CompanyCode != null and CompanyCode != '' ">
				, (#{CompanyCode},#{UserCode},999,'regular', 'Y', 'Y', 'A', now(3))
			</if>
			<if test="DeptCode != null and DeptCode != '' ">
				, (#{DeptCode},#{UserCode},999,'regular', 'Y', 'Y', 'A', now(3))
			</if>
			<if test="RegionCode != null and RegionCode != '' ">
				, (#{RegionCode},#{UserCode},999,'regular', 'Y', 'Y', 'A', now(3))
			</if>
			<if test="JobPositionCode != null and JobPositionCode != '' ">
				, (#{JobPositionCode},#{UserCode},999,'regular', 'Y', 'Y', 'A', now(3))
			</if>
			<if test="JobTitleCode != null and JobTitleCode != '' ">
				, (#{JobTitleCode},#{UserCode},999,'regular', 'Y', 'Y', 'A', now(3))
			</if>
			<if test="JobLevelCode != null and JobLevelCode != '' ">
				, (#{JobLevelCode},#{UserCode},999,'regular', 'Y', 'Y', 'A', now(3))
			</if>
		</trim>
    </insert>
    
	<insert id="insertAddGroupMemberUser" parameterType="cmap">
        INSERT INTO covi_smart4j.sys_object_group_member (
        	GroupCode,
        	UserCode,
        	SortKey,
        	Role,
        	IsUse,
        	IsHR,
        	MemberStatus,
        	JoinDate
        ) 
        VALUES (
        	#{GroupCode},
        	#{URList},
        	999,
        	'regular', 
        	'Y',
        	'Y',
        	'A',
        	now(3)  	
        )
    </insert>
	
	<update id="updateOrgUserPhotoPath" parameterType="cmap" >
        UPDATE covi_smart4j.sys_object_user
 		SET PhotoPath = #{PhotoPath}
 		WHERE UserCode = #{UserCode}
 	</update>
    
	<update id="updateUserDefaultInfo" parameterType="cmap">
		UPDATE covi_smart4j.sys_object_user 
		SET
			LogonID = #{LogonID},
			EmpNo = #{EmpNo},
			NickName = #{NickName},
			DisplayName = #{DisplayName},
			MultiDisplayName = #{MultiDisplayName},
			Address = #{Address},
			MultiAddress = #{MultiAddress},
			HomePage = #{HomePage},
			PhoneNumber = #{PhoneNumber},
			Mobile = #{Mobile},
			Fax = #{Fax},
			IPPhone = #{IPPhone},
			UseMessengerConnect = #{UseMessengerConnect},
			SortKey = #{SortKey},
			SecurityLevel = #{SecurityLevel},
			Description = #{Description},
			IsUse = #{IsUse},
			IsHR = #{IsHR},
			IsDisplay = #{IsDisplay},
			EnterDate = #{EnterDate},
			RetireDate = #{RetireDate},
			BirthDiv = #{BirthDiv},
			BirthDate = #{BirthDate},
			UseMailConnect = #{UseMailConnect},
			MailAddress = #{MailAddress},
			ExternalMailAddress = #{ExternalMailAddress},
			ChargeBusiness = #{ChargeBusiness},
			PhoneNumberInter = #{PhoneNumberInter},
			LanguageCode = #{LanguageCode},
			MobileThemeCode = #{MobileThemeCode},
			TimeZoneCode = #{TimeZoneCode},
			ModifyDate = now(3),
			Reserved1 = #{Reserved1},
			Reserved2 = #{Reserved2},
			Reserved3 = #{Reserved3},
			Reserved4 = #{Reserved4},
			Reserved5 = #{Reserved5},			
			CountryID = #{CountryID},
			CountryCode = #{CountryCode},
			CityState = #{CityState_01},
			City = #{CityState_02},
			PostOfficeBox = #{PostOfficeBox},
			OfficeAddress = #{OfficeAddress}		
			<if test="InitPortal != null">
			    , InitPortal=#{InitPortal}
		    </if>
			<if test="AD_IsUse != null">
				, AD_ISUSE = #{AD_IsUse}
			</if>
			<if test="EX_IsUse != null">
				, EX_ISUSE = #{EX_IsUse}
			</if>
			<if test="MSN_IsUse != null">
				, MSN_ISUSE = #{MSN_IsUse}
			</if>
			<if test='InitPW == "Y"'>
				, TEMPORARY_PASSWORD_ISUSE  = 'Y'
			</if>
			<if test='LicSeq != null'>
				, LicSeq  = #{LicSeq}
			</if>
			<if test='IsCRM != null'>
				, IsCRM  = #{IsCRM}
			</if>
		WHERE UserCode=#{UserCode}
	</update>	
	
	
	<update id="updateUserDefaultInfo2" parameterType="cmap">
		UPDATE covi_smart4j.sys_object_user_info
		SET
			  CheckUserIP = #{CheckUserIP}
			, StartIP =  #{StartIP}
			, EndIP = #{EndIP}
		WHERE UserCode= #{UserCode}
	</update>	
	
	<select id="selectUserBaseGroupInfoCnt" parameterType="cmap" resultType="java.lang.Long">
		SELECT COUNT(*)
  		FROM covi_smart4j.sys_object_user_basegroup
  		WHERE UserCode = #{UserCode}
		AND JobType = #{JobType} 
	</select>
	
	<update id="updateUserBaseGroupInfo" parameterType="cmap">
        UPDATE covi_smart4j.sys_object_user_basegroup
        SET
	          UserCode = #{UserCode}
			, JobType = #{JobType}
			, SortKey = #{SortKey}
			, CompanyCode = #{CompanyCode}
			, CompanyName = (SELECT DisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{CompanyCode} AND GroupType = 'Company')
			, MultiCompanyName = (SELECT MultiDisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{CompanyCode} AND GroupType = 'Company')
			, CompanySortKey = (SELECT SortKey FROM covi_smart4j.sys_object_group WHERE GroupCode = #{CompanyCode} AND GroupType = 'Company')
			, DeptCode = #{DeptCode}
			, DeptName = (SELECT DisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{DeptCode} AND GroupType in ('Company','Dept'))
			, MultiDeptName = (SELECT MultiDisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{DeptCode} AND GroupType in ('Company','Dept'))
			, DeptSortKey = (SELECT SortKey FROM covi_smart4j.sys_object_group WHERE GroupCode = #{DeptCode} AND GroupType in ('Company','Dept'))
			, RegionCode = #{RegionCode}
			, RegionName = (SELECT DisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{RegionCode} AND GroupType = 'Region')
			, MultiRegionName = (SELECT MultiDisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{RegionCode} AND GroupType = 'Region')
			, RegionSortKey = (SELECT SortKey FROM covi_smart4j.sys_object_group WHERE GroupCode = #{RegionCode} AND GroupType = 'Region')
			, JobPositionCode = #{JobPositionCode}
			, JobPositionName = (SELECT DisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{JobPositionCode} AND GroupType = 'JobPosition')
			, MultiJobPositionName = (SELECT MultiDisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{JobPositionCode} AND GroupType = 'JobPosition')
			, JobPositionSortKey = (SELECT SortKey FROM covi_smart4j.sys_object_group WHERE GroupCode = #{JobPositionCode} AND GroupType = 'JobPosition')
			, JobTitleCode = #{JobTitleCode}
			, JobTitleName = (SELECT DisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{JobTitleCode} AND GroupType = 'JobTitle')
			, MultiJobTitleName = (SELECT MultiDisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{JobTitleCode} AND GroupType = 'JobTitle')
			, JobTitleSortKey = (SELECT SortKey FROM covi_smart4j.sys_object_group WHERE GroupCode = #{JobTitleCode} AND GroupType = 'JobTitle')
			, JobLevelCode = #{JobLevelCode}
			, JobLevelName = (SELECT DisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{JobLevelCode} AND GroupType = 'JobLevel')
			, MultiJobLevelName = (SELECT MultiDisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{JobLevelCode} AND GroupType = 'JobLevel')
			, JobLevelSortKey = (SELECT SortKey FROM covi_smart4j.sys_object_group WHERE GroupCode = #{JobLevelCode} AND GroupType = 'JobLevel')
			, ModifyDate = now()
			, Reserved1 = #{Reserved1}
			, Reserved2 = #{Reserved2}
			, Reserved3 = #{Reserved3}
			, Reserved4 = #{Reserved4}
			, Reserved5 = #{Reserved5}
			, IsHR = #{IsHR}
		WHERE UserCode = #{UserCode}
		AND JobType = #{JobType}				
    </update>
    
    <update id="updateUserBaseGroupInfoAddJob" parameterType="cmap">
        UPDATE covi_smart4j.sys_object_user_basegroup 
        SET
			  SortKey = #{SortKey}
			, CompanyName = (SELECT DisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{CompanyCode} AND GroupType = 'Company')
			, MultiCompanyName = (SELECT MultiDisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{CompanyCode} AND GroupType = 'Company')
			, CompanySortKey = (SELECT SortKey FROM covi_smart4j.sys_object_group WHERE GroupCode = #{CompanyCode} AND GroupType = 'Company')
			, DeptName = (SELECT DisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{DeptCode} AND GroupType in ('Company','Dept'))
			, MultiDeptName = (SELECT MultiDisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{DeptCode} AND GroupType in ('Company','Dept'))
			, DeptSortKey = (SELECT SortKey FROM covi_smart4j.sys_object_group WHERE GroupCode = #{DeptCode} AND GroupType in ('Company','Dept'))
			, RegionCode = #{RegionCode}
			, RegionName = (SELECT DisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{RegionCode} AND GroupType = 'Region')
			, MultiRegionName = (SELECT MultiDisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{RegionCode} AND GroupType = 'Region')
			, RegionSortKey = (SELECT SortKey FROM covi_smart4j.sys_object_group WHERE GroupCode = #{RegionCode} AND GroupType = 'Region')
			, JobPositionCode = #{JobPositionCode}
			, JobPositionName = ifnull((SELECT DisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{JobPositionCode} AND GroupType = 'JobPosition'),'')
			, MultiJobPositionName = ifnull((SELECT MultiDisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{JobPositionCode} AND GroupType = 'JobPosition'),'')
			, JobPositionSortKey = ifnull((SELECT SortKey FROM covi_smart4j.sys_object_group WHERE GroupCode = #{JobPositionCode} AND GroupType = 'JobPosition'),99999)
			, JobTitleCode = #{JobTitleCode}
			, JobTitleName = ifnull((SELECT DisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{JobTitleCode} AND GroupType = 'JobTitle'),'')
			, MultiJobTitleName = ifnull((SELECT MultiDisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{JobTitleCode} AND GroupType = 'JobTitle'),'')
			, JobTitleSortKey = ifnull((SELECT SortKey FROM covi_smart4j.sys_object_group WHERE GroupCode = #{JobTitleCode} AND GroupType = 'JobTitle'),99999)
			, JobLevelCode = #{JobLevelCode}
			, JobLevelName = ifnull((SELECT DisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{JobLevelCode} AND GroupType = 'JobLevel'),'')
			, MultiJobLevelName = ifnull((SELECT MultiDisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = #{JobLevelCode} AND GroupType = 'JobLevel'),'')
			, JobLevelSortKey = ifnull((SELECT SortKey FROM covi_smart4j.sys_object_group WHERE GroupCode = #{JobLevelCode} AND GroupType = 'JobLevel'),99999)
			, ModifyDate = now()
			, Reserved1 = #{Reserved1}
			, Reserved2 = #{Reserved2}
			, Reserved3 = #{Reserved3}
			, Reserved4 = #{Reserved4}
			, Reserved5 = #{Reserved5}
			, IsHR = #{IsHR}
		WHERE UserCode = #{UserCode}
		AND JobType = #{JobType}	
		AND CompanyCode = #{CompanyCode}
		AND DeptCode = #{DeptCode}
    </update>
    
	<update id="updateUserApprovalInfo" parameterType="cmap">
        UPDATE covi_smart4j.sys_object_user_approval
        SET
        	<if test="UseDeputy != null">
				UseDeputy = #{UseDeputy},
			</if>
			<if test="DeputyCode != null">
				DeputyCode = #{DeputyCode},
			</if>
			<if test="DeputyName != null">
				DeputyName = #{DeputyName},
			</if>
			<if test="DeputyFromDate != null">
				DeputyFromDate = #{DeputyFromDate},
			</if>
			<if test="DeputyToDate != null">
				DeputyToDate = #{DeputyToDate},
			</if>
			<if test="DeputyOption != null">
				DeputyOption = #{DeputyOption},
			</if>
			ApprovalUnitCode = #{ApprovalUnitCode},
			ReceiptUnitCode = #{ReceiptUnitCode},
			ApprovalCode = #{ApprovalCode},
			ApprovalFullCode = #{ApprovalFullCode},
			ApprovalFullName = #{ApprovalFullName},
			<if test="UseApprovalMessageBoxView != null">
				seApprovalMessageBoxView = #{UseApprovalMessageBoxView},
			</if>
			<if test="UseMobile != null">
				UseMobile = #{UseMobile},
			</if>
			ModifyDate = now(3)
        WHERE UserCode = #{UserCode}
    </update>
	
	<delete id="deleteUserGroupDefaultMember" parameterType="cmap">
         DELETE FROM covi_smart4j.sys_object_group_member
		 WHERE UserCode = #{UserCode}
		 AND GroupCode IN (
		 	SELECT GroupCode 
		 	FROM covi_smart4j.sys_object_group 
			WHERE GroupType IN ('JobTitle', 'JobPosition', 'JobLevel', 'Dept', 'Company')
		)
    </delete>
    
	<delete id="deleteUserMemberGroupOne" parameterType="cmap">
         DELETE FROM covi_smart4j.sys_object_group_member
		 WHERE UserCode = #{UserCode}
		 AND GroupCode = #{GroupCode}
    </delete>
	
	<update id="deleteUser" parameterType="cmap">
        UPDATE covi_smart4j.sys_object_user
        SET 
        	  IsUse = 'N'
	        , IsHR ='N'
	        , IsDisplay = 'N'
	        , UseMailConnect = 'N'
	        , ModifyDate = now()
	        , RetireDate = date_format(now(),'%Y-%m-%d')
		WHERE UserCode = #{UserCode}
	</update>
	
    <update id="deleteUserBaseGroup" parameterType="cmap">
		UPDATE covi_smart4j.sys_object_user_basegroup AS a, covi_smart4j.sys_object_group AS b
		SET 
			  a.DeptCode = b.GroupCode
			, a.DeptName =  b.DisplayName
			, a.MultiDeptName = b.MultiDisplayName
			, a.DeptSortKey = b.SortKey
		WHERE a.UserCode = #{UserCode}
		AND a.JobType = 'Origin'
		AND b.GroupCode = (
	  		SELECT CONCAT(c.DomainID,'_RetireDept') 
	  		FROM covi_smart4j.sys_object_domain as c
			WHERE c.DomainCode = a.CompanyCode
		)
	</update>
	
    <delete id="deleteAddJobBaseGroup" parameterType="cmap">
		DELETE FROM covi_smart4j.sys_object_user_basegroup
		WHERE UserCode = #{UserCode}
		AND JobType = 'AddJob'
	</delete>
	
	<delete id="deleteUserGroupMember" parameterType="cmap">
	    DELETE FROM covi_smart4j.sys_object_group_member
		WHERE UserCode=#{UserCode} 
	</delete>
    
	<insert id="insertRetiredGroupMember" parameterType="cmap">
		<![CDATA[
		INSERT INTO COVI_SMART4J.sys_object_group_member (
			GroupCode,
			UserCode,
			SortKey,
			Role,
			IsUse,
			IsHR,
			MemberStatus,
			JoinDate
		) 
		VALUES (
		]]>
			<if test="deleteData != null and deleteData != ''">
		        <foreach collection="deleteData" item="item"  separator="),(" open="(" close=")">
	    			(	SELECT CONCAT(b.DomainID, '_RetireDept') FROM sys_object_user_basegroup AS a
						LEFT JOIN sys_object_domain AS b ON a.CompanyCode = b.DomainCode
						WHERE a.UserCode = #{item} AND a.JobType='Origin'
					),
					#{item},
					999,
					'regular', 
					'Y',
					'Y',
					'A',
					now(3)  	
		        </foreach>
			</if>
			<if test="UserCode != null and UserCode != ''">
	           	(	SELECT CONCAT(b.DomainID, '_RetireDept') FROM sys_object_user_basegroup AS a
					LEFT JOIN sys_object_domain AS b ON a.CompanyCode = b.DomainCode
					WHERE a.UserCode = #{UserCode} AND a.JobType='Origin'),
	        	#{UserCode},
	        	999,
	        	'regular', 
	        	'Y',
	        	'Y',
	        	'A',
	        	now(3)  
        	</if>
        )
	</insert>
	
    <!-- GROUP -->
    <!-- 도메인 선택시 해당 도메인의 부서를 가져옴 -->
    <select id="selectDeptList" parameterType="cmap" resultType="cmap">
		<![CDATA[
		SELECT 
			  'group' AS itemType
			, gr.CompanyCode
			, gr.GroupCode
			, gr.GroupType
			, gr.DisplayName AS GroupDisplayName
			, gr.MultiDisplayName AS GroupName
			, cn.DisplayName AS CompanyDisplayName
			, cn.MultiDisplayName AS CompanyName
			, gr.MemberOf
			, gr.SortKey
			, gr.SortPath
			, gr.GroupID
			, gr.IsUse
			, (SELECT COUNT(0) FROM covi_smart4j.sys_object_group AS self WHERE self.MemberOf =gr.GroupCode AND self.IsUse = 'Y') AS hasChild
			, REPLACE(covi_smart4j.sys_getFullPath(gr.GroupCode),'@','>') AS GroupFullPath
		FROM covi_smart4j.sys_object_group AS gr
		LEFT JOIN covi_smart4j.sys_object_group AS cn ON gr.CompanyCode = cn.GroupCode AND cn.GroupType = 'Company'
	    ]]>
	    <trim prefix="WHERE" prefixOverrides="AND |OR ">
			AND (gr.MemberOf != 'NOUSE' OR gr.MemberOf is null)
			AND (gr.MemberOf != 'NOUNIT' OR gr.MemberOf is null)
			<choose>
				<when test='isSaaS == "Y"'>
					<if test='companyCode != null'>
						AND gr.CompanyCode = #{companyCode}
					</if>
				</when>
				<otherwise>
					<if test='companyCode != null and companyCode != "ORGROOT"'>
						AND gr.CompanyCode = #{companyCode}
					</if>
				</otherwise>
			</choose>
			<if test="groupType != null and groupType=='dept'">
				AND gr.GroupType in ('Dept','Company')  	
			</if>
			<if test="groupType != null and groupType=='group'">
				AND gr.GroupType != 'Dept'	
			</if>
		</trim>
		ORDER BY gr.IsUse desc, gr.SortPath asc
	</select>
	<select id="selectInitOrgTreeList" parameterType="cmap" resultType="cmap">
		<![CDATA[
		SELECT 
			  'group' AS itemType
			, gr.CompanyCode
			, gr.GroupCode
			, gr.GroupType
			, gr.DisplayName AS GroupDisplayName
			, gr.MultiDisplayName AS GroupName
			, cn.DisplayName AS CompanyDisplayName
			, cn.MultiDisplayName AS CompanyName
			, gr.MemberOf
			, gr.SortKey
			, gr.SortPath
			, gr.GroupID
			, gr.IsUse
			, CASE WHEN (SELECT COUNT(0) FROM covi_smart4j.sys_object_group AS self WHERE self.MemberOf =gr.GroupCode AND self.IsUse = 'Y')>0 THEN 'Y' ELSE 'N' END AS haveChild
			, REPLACE(covi_smart4j.sys_getFullPath(gr.GroupCode),'@','>') AS GroupFullPath
			, 'N' as isLoad
		
		FROM covi_smart4j.sys_object_group AS gr
		LEFT JOIN covi_smart4j.sys_object_group AS cn ON gr.CompanyCode = cn.GroupCode AND cn.GroupType = 'Company'
	    ]]>
	    <trim prefix="WHERE" prefixOverrides="AND |OR ">
			AND (gr.MemberOf != 'NOUSE' OR gr.MemberOf is null)
			AND (gr.MemberOf != 'NOUNIT' OR gr.MemberOf is null)
			<choose>
				<when test='isSaaS == "Y"'>
					<if test='companyCode != null'>
						AND gr.CompanyCode = #{companyCode}
					</if>
				</when>
				<otherwise>
					<if test='companyCode != null and companyCode != "ORGROOT"'>
						AND gr.CompanyCode = #{companyCode}
					</if>
				</otherwise>
			</choose>
			AND gr.GroupType in ('Dept','Company')  	
			AND (gr.MemberOf = #{companyCode} OR gr.GroupCode = #{companyCode})
		</trim>
		ORDER BY gr.IsUse desc, gr.SortPath asc
	</select>
	<select id="selectChildrenData" parameterType="cmap" resultType="cmap">
		<![CDATA[
			SELECT 'group' AS itemType
			, gr.CompanyCode
			, gr.GroupCode
			, gr.GroupType
			, gr.DisplayName AS GroupDisplayName
			, gr.MultiDisplayName AS GroupName
			, cn.DisplayName AS CompanyDisplayName
			, cn.MultiDisplayName AS CompanyName
			, gr.MemberOf
			, gr.SortKey
			, gr.SortPath
			, gr.GroupID
			, gr.IsUse
			, CASE WHEN (SELECT COUNT(0) FROM covi_smart4j.sys_object_group AS self WHERE self.MemberOf =gr.GroupCode AND self.IsUse = 'Y')>0 THEN 'Y' ELSE 'N' END AS haveChild
			, REPLACE(covi_smart4j.sys_getFullPath(gr.GroupCode),'@','>') AS GroupFullPath
			, 'N' as isLoad
			FROM covi_smart4j.sys_object_group AS gr
			LEFT JOIN covi_smart4j.sys_object_group AS cn ON gr.CompanyCode = cn.GroupCode AND cn.GroupType = 'Company'
	    ]]>
	    <trim prefix="WHERE" prefixOverrides="AND |OR ">
	        AND (gr.MemberOf != 'NOUSE' OR gr.MemberOf is null) 
	        AND (gr.MemberOf != 'NOUNIT' OR gr.MemberOf is null)
			AND gr.GroupType IN ('Dept','Company')
			AND gr.memberOf = #{memberOf}
			AND gr.CompanyCode =#{companyCode}
		</trim>
		
	    <!-- Order by 절 -->
		ORDER BY gr.IsUse desc, gr.SortPath asc
    
   </select>
   
	<select id="selectDeptPathInfo" parameterType="cmap" resultType="cmap">
       SELECT  
       		  GroupCode AS "GroupCode"
       		, Fn_ComOUPathCreate_S(gr.GroupCode) AS "OUPath"
       		, Fn_ComObjectPathCreate_S(0,gr.GroupCode,'GR') AS "GroupPath"
       		, Fn_ComSortPathCreate_S(0,gr.GroupCode,'GR') AS "SortPath"
       	FROM covi_smart4j.sys_object_group AS gr
        WHERE gr.GROUPPATH LIKE CONCAT('%',#{GroupCode},'%') 
        AND gr.GROUPCODE <![CDATA[<>]]> #{GroupCode}
    </select>
    
	<select id="selectSubDeptListCnt" parameterType="cmap" resultType="java.lang.Long">
    	SELECT COUNT(A.GroupCode)
  		FROM covi_smart4j.sys_object_group A 
  		INNER JOIN sys_object_group B ON A.CompanyCode = B.GroupCode AND A.GroupType IN ('Company','Dept') AND B.GroupType = 'Company'
  		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<choose>
				<when test="hasChildGroup !=null and hasChildGroup.equalsIgnoreCase('Y') and gr_code != null  and gr_code != ''">
					AND CONCAT(';', A.GroupPath) LIKE CONCAT('%;', #{gr_code}, ';%')
				</when>
				<when test="gr_code != null">
					AND A.MemberOf = #{gr_code}
				</when>
			</choose>
			<if test="IsUse != null">
				AND A.IsUse = #{IsUse}
			</if>
			<if test="searchType == 'DeptName' and searchText != null">
				AND A.MultiDisplayName like CONCAT('%', #{searchText}, '%') 
			</if>
			<if test="searchType == 'DeptCode' and searchText != null">
				AND A.GroupCode = #{searchText} 
			</if>
			<if test="companyCode != null and companyCode != 'ORGROOT'">
				AND A.CompanyCode = #{companyCode}    
			</if>
		</trim> 
    </select>
	
    <select id="selectSubDeptList" parameterType="cmap" resultType="cmap">
    	SELECT     
   			A.*,
			B.DisplayName AS DomainName,
			B.MultiDisplayName AS MultiDomainName, 
     		(SELECT COUNT(0) FROM covi_smart4j.sys_object_group AS self WHERE self.MemberOf = A.GroupCode AND self.IsUse = 'Y') AS HasChild,     
     		0 AS Depth,
			covi_smart4j.FN_BASEGETDICTIONARY_S(#{lang}, IFNULL(C.MultiDisplayName,'')) AS ManagerName
  		FROM covi_smart4j.sys_object_group A 
  		INNER JOIN covi_smart4j.sys_object_group B ON A.CompanyCode = B.GroupCode AND A.GroupType IN ('Company','Dept') AND B.GroupType = 'Company'
		LEFT JOIN covi_smart4j.sys_object_user C ON A.ManagerCode = C.UserCode 
  		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<choose>
				<when test="hasChildGroup !=null and hasChildGroup.equalsIgnoreCase('Y') and gr_code != null  and gr_code != ''">
					AND CONCAT(';', A.GroupPath) LIKE CONCAT('%;', #{gr_code}, ';%')
				</when>
				<when test="gr_code != null">
					AND A.MemberOf = #{gr_code}
				</when>
			</choose>
			<if test="IsUse != null">
				AND A.IsUse = #{IsUse}
			</if>
			<if test="searchType == 'DeptName' and searchText != null">
				AND A.MultiDisplayName like CONCAT('%', #{searchText}, '%') 
			</if>
			<if test="searchType == 'DeptCode' and searchText != null">
				AND A.GroupCode = #{searchText} 
			</if>
			<if test="companyCode != null and companyCode != 'ORGROOT'">
				AND A.CompanyCode = #{companyCode}    
			</if>
		</trim> 
		<trim prefix="ORDER BY">
			<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection != ''">
			   <choose>
					<when test='sortColumn.equalsIgnoreCase("GroupCode")'>GroupCode</when>
					<when test='sortColumn.equalsIgnoreCase("SortKey")'>(A.SortKey + 0)</when>
					<when test='sortColumn.equalsIgnoreCase("DisplayName")'>DisplayName</when>
					<when test='sortColumn.equalsIgnoreCase("ShortName")'>ShortName</when>
					<when test='sortColumn.equalsIgnoreCase("IsUse")'>IsUse</when>
					<when test='sortColumn.equalsIgnoreCase("IsHR")'>IsHR</when>
					<when test='sortColumn.equalsIgnoreCase("IsDisplay")'>IsDisplay</when>
					<when test='sortColumn.equalsIgnoreCase("IsMail")'>IsMail</when>
					<when test='sortColumn.equalsIgnoreCase("PrimaryMail")'>PrimaryMail</when>
					<when test='sortColumn.equalsIgnoreCase("ManagerCode")'>ManagerCode</when>
					<when test='sortColumn.equalsIgnoreCase("CompanyName")'>CompanyName</when>
					<when test='sortColumn.equalsIgnoreCase("MultiDisplayName")'>MultiDisplayName</when>
					<otherwise>SortPath</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if> 
			<if test="sortColumn == null or sortColumn == '' or sortDirection == null or sortDirection == ''">
		 	  	IsUse DESC, SortPath ASC
		    </if>
		</trim>
	    <if test="pageSize != null and pageOffset != null">
		   	LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>
    </select>
    
    <select id="selectParentName" parameterType="cmap" resultType="cmap">
    	SELECT     
   			DisplayName,
   			MultiDisplayName,
   			GroupPath
  		FROM covi_smart4j.sys_object_group
   		WHERE GroupCode = #{gr_code}
    </select>
    
    <!-- 그룹유형 조회 -->
    <select id="selectGroupType" resultType="cmap">
        SELECT
        	GroupType, 
        	SortKey, 
        	Priority, 
        	DisplayName, 
        	MultiDisplayName 
        FROM covi_smart4j.sys_object_group_type 
        WHERE GroupType <![CDATA[<>]]> 'UR' AND IsUse = 'Y'
    </select>
    
    <select id="selectDeptInfo" parameterType="cmap" resultType="cmap">
		<![CDATA[
		SELECT
			A.GroupID,
			A.GroupCode,
			A.GroupType,
			A.MemberOf,
			A.DisplayName,
			A.ShortName,
			(SELECT MultiDisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode=A.MemberOf) As ParentName,
			A.GroupPath,
			A.MultiDisplayName,
			A.MultiShortName,
			A.SortKey,
			A.SortPath,
			A.OUName,
			A.OUPath,
			A.IsUse,
			A.IsDisplay,
			A.IsMail,
			A.IsHR,
			A.PrimaryMail,
			A.SecondaryMail,
			A.Description,
			A.ReceiptUnitCode,
			A.ApprovalUnitCode,
			A.Receivable,
			A.Approvable,
			A.RegistDate,
			A.ModifyDate,
			A.ManagerCode,
			IFNULL(CONCAT(A.ManagerCode, '|', (SELECT DisplayName FROM covi_smart4j.sys_object_user WHERE UserCode = A.ManagerCode)), '') AS Manager,
			B.MultiDisplayName AS CompanyName,
			B.GroupCode AS CompanyCode,
			IFNULL(A.IsCRM, 'N') AS IsCRM
		FROM covi_smart4j.sys_object_group AS A
		INNER JOIN covi_smart4j.sys_object_group AS B ON A.CompanyCode = B.GroupCode
		WHERE A.GroupCode = #{gr_code}
		]]>
    </select>
    
    <select id="selectDeptInfoList" parameterType="cmap" resultType="cmap">
        <![CDATA[
		SELECT
			A.GroupID,
			A.GroupCode,
			A.GroupType,
			A.MemberOf,
			(SELECT MultiDisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode=A.MemberOf) As ParentName,
			A.GroupPath,
			A.MultiDisplayName,
			A.MultiShortName,
			A.DisplayName,
			A.SortKey,
			A.SortPath,
			A.OUName,
			A.OUPath,
			A.IsUse,
			A.IsDisplay,
			A.IsMail,
			A.IsHR,
			A.PrimaryMail,
			A.SecondaryMail,
			A.Description,
			A.ReceiptUnitCode,
			A.ApprovalUnitCode,
			A.Receivable,
			A.Approvable,
			A.RegistDate,
			A.ModifyDate,
			A.ManagerCode,
			IFNULL(CONCAT(A.ManagerCode, '|', (SELECT DisplayName FROM covi_smart4j.sys_object_user WHERE UserCode = A.ManagerCode)), '') AS Manager,
			B.MultiDisplayName AS CompanyName,
			B.GroupCode AS CompanyCode
		FROM covi_smart4j.sys_object_group AS A
		INNER JOIN covi_smart4j.sys_object_group AS B ON A.CompanyCode = B.GroupCode
		WHERE A.GroupCode IN
		]]>
		<foreach collection="TargetID" item="item"  separator="," open="(" close=")">
		    #{item}
		</foreach>
    </select> 
    
    <select id="selectDefaultSetInfo" parameterType="cmap" resultType="cmap">
        SELECT
			A.DisplayName AS DeptName,
        	B.DisplayName AS CompanyName,
        	C.DomainID AS CompanyID,
        	C.MailDomain AS CompanyURL
		FROM covi_smart4j.sys_object_group AS A
		INNER JOIN covi_smart4j.sys_object_group AS B ON A.CompanyCode = B.GroupCode AND B.GroupType = 'Company'
		INNER JOIN covi_smart4j.sys_object_domain AS C ON B.GroupCode = C.DomainCode		
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="domainCode != null">
				AND B.GroupCode = #{domainCode} 
			</if>
	        <if test="gr_code != null">
		    	AND A.GroupCode = #{gr_code} 
		  	</if>
		</trim> 
    </select>
    
	<select id="selectGroupMail" parameterType="cmap" resultType="java.lang.String">
    	<![CDATA[
	    SELECT CASE WHEN IFNULL(PrimaryMail,'') <> '' AND IsMail = 'Y' THEN PrimaryMail ELSE '' END AS PrimaryMail  
	    FROM covi_smart4j.sys_object_group WHERE GroupCode = #{GroupCode} 
	    ]]>
	</select>
	
    <update id="updateIsUseDept" parameterType="cmap">
	    <![CDATA[
		UPDATE covi_smart4j.sys_object_group
		SET
			IsUse = #{IsUse},
			ModifyDate = #{ModifyDate}
		WHERE GroupCode = #{GroupCode}
		]]>
	</update>
	
     <update id="updateIsHRDept" parameterType="cmap">
	    <![CDATA[
		UPDATE covi_smart4j.sys_object_group
		SET
			IsHR = #{IsHR},
			ModifyDate = #{ModifyDate}
		WHERE GroupCode = #{GroupCode}
		]]>
	</update>
	
     <update id="updateIsDisplayDept" parameterType="cmap">
	    <![CDATA[
		UPDATE covi_smart4j.sys_object_group
		SET
			IsDisplay = #{IsDisplay},
			ModifyDate = #{ModifyDate}
		WHERE GroupCode = #{GroupCode}
		]]>
	</update>
	
    <update id="updateIsMailDept" parameterType="cmap">
	    <![CDATA[
		UPDATE covi_smart4j.sys_object_group
		SET
			IsMail = #{IsMail},
			ModifyDate = #{ModifyDate}
		WHERE GroupCode = #{GroupCode}
		]]>
	</update>
	
	<select id="selectHasChildDept" parameterType="cmap" resultType="cmap">
		SELECT 
			(SELECT COUNT(0) FROM covi_smart4j.sys_object_group AS B WHERE B.MemberOf = A.GroupCode AND B.IsUse = 'Y')
		AS HasChild
		FROM covi_smart4j.sys_object_group AS A
		WHERE A.GroupCode = #{GroupCode} 
    </select>
    
    <select id="selectHasUserDept" parameterType="cmap" resultType="cmap">
		SELECT COUNT(UserCode) AS HasUser
		FROM  covi_smart4j.sys_object_user_basegroup
		WHERE DeptCode = #{GroupCode} 
    </select>
    
	<select id="selectIsDuplicateDeptCode" parameterType="cmap" resultType="cmap">
		SELECT MAX(isDuplicate) AS isDuplicate
		FROM (
			SELECT COUNT(0) AS isDuplicate
			FROM covi_smart4j.sys_object
			WHERE ObjectCode = #{GroupCode} 
			UNION ALL
			SELECT COUNT(0) AS isDuplicate
			FROM covi_smart4j.sys_object_group
			WHERE GroupCode = #{GroupCode} 
		) a
    </select> 
    
	<select id="selectIsDuplicateSortKey" parameterType="cmap" resultType="cmap">
		SELECT 
			COUNT(0) AS "isDuplicate",
			IFNULL((SELECT MAX(SortKey) FROM covi_smart4j.sys_object_group WHERE MemberOf = #{MemberOf}),'') AS "MaxSortKey"
		FROM covi_smart4j.sys_object_group
		WHERE MemberOf = #{MemberOf} AND SortKey = #{SortKey}
    </select> 
    
    <!-- 도메인 선택시 해당 도메인의 그룹을 가져옴 -->
    <select id="selectGroupList" parameterType="cmap" resultType="cmap">
		<![CDATA[
		SELECT
			  'group' AS itemType
			, dn.GroupCode AS DomainCode
			, gr.GroupCode
			, gr.GroupType
			, gr.DisplayName AS GroupName
			, dn.DisplayName AS DomainName
			, gr.PrimaryMail
			, gr.MemberOf
			, gr.SortKey
			, IFNULL(gr.SortPath, '') AS SortPath
			, gr.GroupID
			, gr.IsUse
			, (SELECT COUNT(0) FROM covi_smart4j.sys_object_group AS self WHERE self.MemberOf = gr.GroupCode AND self.IsUse = 'Y') AS hasChild 
		FROM covi_smart4j.sys_object_group AS gr
		INNER JOIN covi_smart4j.sys_object_domain AS dm on gr.CompanyCode = dm.DomainCode
		LEFT JOIN covi_smart4j.sys_object_group AS dn on gr.CompanyCode = dn.GroupCode
	    ]]>
	    <trim prefix="WHERE" prefixOverrides="AND |OR ">
			AND (gr.MemberOf != 'NOUSE' OR gr.MemberOf IS NULL)
			AND (gr.MemberOf != 'NOUNIT' OR gr.MemberOf IS NULL)
			<if test="domaincode != null and domaincode != ''">
				AND gr.CompanyCode = #{domaincode}
			</if>
			<if test="grouptype != null and grouptype=='group'">
				AND gr.GroupType NOT IN ('Dept')
			</if>
		</trim>
	    ORDER BY gr.SortPath ASC
	</select>
	
	<!-- 지역 개별 정보 가져오기 -->
    <select id="selectRegionInfo" parameterType="cmap" resultType="cmap">
		<![CDATA[
		SELECT 
			  'group' AS itemType
			, dn.GroupCode AS DomainCode
			, gr.GroupCode
			, gr.GroupType
			, gr.DisplayName AS GroupName
			, gr.MultiDisplayName AS MultiGroupName
			, dn.DisplayName AS CompanyName
			, gr.PrimaryMail	
			, gr.MemberOf
			, SUBSTRING_INDEX(gr.MemberOf, '_', 1) AS CompanyID
			, gr.SortKey
			, IFNULL(gr.SortPath, '') AS SortPath
			, gr.GroupID
			, gr.IsUse
			, gr.IsHR
			, gr.IsMail
			, gr.Description
			, (SELECT COUNT(0) FROM covi_smart4j.sys_object_group AS self WHERE self.MemberOf = gr.GroupCode AND self.IsUse = 'Y') AS hasChild 
	    FROM covi_smart4j.sys_object_group AS gr
		LEFT JOIN covi_smart4j.sys_object_group AS dn ON gr.CompanyCode = dn.GroupCode
	    ]]>
	    WHERE gr.GroupType = 'Region' 
		<if test="gr_code != null ">
	  		AND gr.GroupCode = #{gr_code}
		</if>
	</select>
	
    <!-- 임의그룹 드롭다운 리스트 가져오기 -->
    <select id="selectArbitraryGroupDropDownList" parameterType="cmap" resultType="cmap">
		<![CDATA[
		SELECT
			  gr.GroupType
			, gr.GroupCode
			, gr.DisplayName AS GroupName
	    FROM covi_smart4j.sys_object_group AS gr
    	]]>
		WHERE gr.IsUse = 'Y' 
		AND gr.GroupType in ('JobTitle', 'JobPosition', 'JobLevel') 
		<if test="domaincode != null">
			AND gr.CompanyCode = #{domaincode}
		</if>
    	ORDER BY gr.GroupType, (gr.SortKey+0) asc
	</select>
    
     <!-- 임의그룹 개별 정보 가져오기 -->
    <select id="selectArbitraryGroupInfo" parameterType="cmap" resultType="cmap">
		<![CDATA[
		SELECT 
			  'group' AS itemType
			, dn.GroupCode AS DomainCode
			, gr.GroupCode
			, gr.GroupType
			, gr.DisplayName AS GroupName
			, gr.MultiDisplayName AS MultiGroupName
			, dn.DisplayName AS CompanyName
			, dn.MultiDisplayName AS MultiCompanyName
			, gr.PrimaryMail				
			, gr.MemberOf
			, SUBSTRING_INDEX(gr.MemberOf, '_', 1) AS CompanyID
			, gr.SortKey
			, IFNULL(gr.SortPath, '') AS SortPath
			, gr.GroupID
			, gr.IsUse
			, gr.IsHR
			, gr.IsMail
			, gr.Description
			, (SELECT COUNT(0) FROM covi_smart4j.sys_object_group AS self WHERE self.MemberOf = gr.GroupCode AND self.IsUse = 'Y') AS hasChild 
	    FROM covi_smart4j.sys_object_group AS gr
		LEFT JOIN covi_smart4j.sys_object_group AS dn ON gr.CompanyCode = dn.GroupCode
    	]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="gr_code != null ">
				gr.GroupCode = #{gr_code}
			</if>
		</trim>
	</select>
	
    <!-- 임의그룹 리스트 가져오기(cnt) -->
    <select id="selectArbitraryGroupListCnt" parameterType="cmap" resultType="java.lang.Long">
	    <![CDATA[
		SELECT COUNT(*) 
		FROM covi_smart4j.sys_object_group AS gr
		LEFT JOIN covi_smart4j.sys_object_group AS dn ON gr.CompanyCode = dn.GroupCode
	    ]]>
	    <trim prefix="WHERE" prefixOverrides="AND |OR ">
			AND (gr.MemberOf != 'NOUSE' OR gr.MemberOf is null)
			AND (gr.MemberOf != 'NOUNIT' OR gr.MemberOf is null)
			<if test="domaincode != null">
				AND gr.CompanyCode = #{domaincode}
			</if>
			<if test="grouptype != null and grouptype=='title'">
				AND gr.GroupType = 'JobTitle'
			</if>
			<if test="grouptype != null and grouptype=='position'">
				AND gr.GroupType = 'JobPosition'
			</if>
			<if test="grouptype != null and grouptype=='level'">
				AND gr.GroupType = 'JobLevel'
			</if>
			<if test="IsUse != null  and IsUse != 'All'.toString()">
				AND gr.IsUse = #{IsUse}
			</if>
			<if test="IsHR != null  and IsHR != 'All'.toString()">
				AND gr.IsHR = #{IsHR}
			</if>
			<if test="IsMail != null  and IsMail != 'All'.toString()">
				AND gr.IsMail = #{IsMail}
			</if>
			<if test="searchType != null and searchText != null">
				<choose>
					<when test="searchType == 'DisplayName'.toString()">
						AND gr.DisplayName  like CONCAT('%',#{searchText},'%')
					</when>
					<when test="searchType == 'JobTitleCode'.toString()">
						AND gr.GroupCode  like CONCAT('%',#{searchText},'%')
					</when>
					<when test="searchType == 'JobLevelCode'.toString()">
						AND gr.GroupCode  like CONCAT('%',#{searchText},'%')
					</when>
					<when test="searchType == 'JobPositionCode'.toString()">
						AND gr.GroupCode  like CONCAT('%',#{searchText},'%')
					</when>
				</choose>
			</if>
		</trim>
     </select>
	
    <!-- 임의그룹 리스트 가져오기(list) -->
    <select id="selectArbitraryGroupList" parameterType="cmap" resultType="cmap">
		<![CDATA[
		SELECT 
			  'group' AS itemType
			, dn.GroupCode AS DomainCode
			, dn.MultiDisplayName AS MultiDomainCode
			, gr.GroupCode
			, gr.GroupType
			, gr.DisplayName AS GroupName
			, gr.MultiDisplayName AS MultiGroupName
			, dn.DisplayName AS DomainName
			, gr.PrimaryMail	
			, gr.MemberOf
			, gr.SortKey
			, IFNULL(gr.SortPath, '') AS SortPath
			, gr.GroupID
			, gr.IsUse
			, gr.IsHR
			, gr.IsMail
			, (SELECT COUNT(0) FROM covi_smart4j.sys_object_group AS self WHERE self.MemberOf = gr.GroupCode AND self.IsUse = 'Y') AS hasChild 
			, gr.Description
	    FROM covi_smart4j.sys_object_group AS gr
		LEFT JOIN covi_smart4j.sys_object_group AS dn ON gr.CompanyCode = dn.GroupCode
    	]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			AND (gr.MemberOf != 'NOUSE' OR gr.MemberOf is null)
			AND (gr.MemberOf != 'NOUNIT' OR gr.MemberOf is null)
			<if test="domaincode != null">
				AND gr.CompanyCode = #{domaincode}
			</if>
			<if test="grouptype != null and grouptype=='title'">
				AND gr.GroupType = 'JobTitle'
			</if>
			<if test="grouptype != null and grouptype=='position'">
				AND gr.GroupType = 'JobPosition'
			</if>
			<if test="grouptype != null and grouptype=='level'">
				AND gr.GroupType = 'JobLevel'
			</if>
			<if test="IsUse != null  and IsUse != 'All'.toString()">
				AND gr.IsUse = #{IsUse}
			</if>
			<if test="IsHR != null  and IsHR != 'All'.toString()">
				AND gr.IsHR = #{IsHR}
			</if>
			<if test="IsMail != null  and IsMail != 'All'.toString()">
				AND gr.IsMail = #{IsMail}
			</if>
			<if test="searchType != null and searchText != null">
				<choose>
					<when test="searchType == 'DisplayName'.toString()">
						AND gr.DisplayName  like CONCAT('%',#{searchText},'%')
					</when>
					<when test="searchType == 'JobTitleCode'.toString()">
						AND gr.GroupCode  like CONCAT('%',#{searchText},'%')
					</when>
					<when test="searchType == 'JobLevelCode'.toString()">
						AND gr.GroupCode  like CONCAT('%',#{searchText},'%')
					</when>
					<when test="searchType == 'JobPositionCode'.toString()">
						AND gr.GroupCode  like CONCAT('%',#{searchText},'%')
					</when>
				</choose>
			</if>
		</trim>
	    <trim prefix="ORDER BY">
			<if test="sortColumn != null and sortDirection != null">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("GroupName")'>GroupName</when>
					<when test='sortColumn.equalsIgnoreCase("SortKey")'>(gr.SortKey + 0)</when>
					<when test='sortColumn.equalsIgnoreCase("IsUse")'>IsUse</when>
					<when test='sortColumn.equalsIgnoreCase("IsHR")'>IsHR</when>
					<when test='sortColumn.equalsIgnoreCase("IsMail")'>IsMail</when>
					<when test='sortColumn.equalsIgnoreCase("PrimaryMail")'>PrimaryMail</when>
					<when test='sortColumn.equalsIgnoreCase("Description")'>Description</when>
					<otherwise>GroupCode</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if> 
			<if test="sortColumn == null or sortDirection == null">
				(gr.SortKey + 0) ASC
			</if>
		</trim>
	    <if test="pageSize != null and pageOffset != null">
		   	LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>
	</select>
     
   	<select id="selectDeptEtcInfo" parameterType="cmap" resultType="cmap">
 	    SELECT 
 	    	GroupPath,
 	    	SortPath,
 	    	OUPath,
 	    	(SELECT GroupID FROM covi_smart4j.sys_object_group WHERE GroupCode = #{CompanyCode}) AS CompanyID
 	    FROM covi_smart4j.sys_object_group
 	    WHERE GroupCode = #{MemberOf}
 	</select>
    
   	 <!-- 임의 그룹 중복 여부 조회 -->
    <select id="selectIsDuplicateGroupCode" parameterType="cmap" resultType="cmap">
		SELECT COUNT(0) AS isDuplicate
		FROM covi_smart4j.sys_object_group
		WHERE GroupCode = #{GroupCode} 
    </select> 
    
	<!-- 임의 그룹 삽입 정보 select(path 등) -->
    <select id="selectGroupInsertData" parameterType="cmap" resultType="cmap">
		SELECT GroupPath, OUPath, SortPath
		FROM covi_smart4j.sys_object_group
		WHERE GroupCode = #{GroupCode} 
    </select> 
   	
    <select id="selectRegionListCnt" parameterType="cmap" resultType="java.lang.Long">
	    <![CDATA[
		SELECT COUNT(*) 
	    FROM covi_smart4j.sys_object_group AS gr
		LEFT JOIN covi_smart4j.sys_object_group AS dn ON gr.CompanyCode = dn.GroupCode
	    ]]>
	    <trim prefix="WHERE" prefixOverrides="AND |OR ">
			AND (gr.MemberOf != 'NOUSE' OR gr.MemberOf is null)
			AND (gr.MemberOf != 'NOUNIT' OR gr.MemberOf is null)
			AND gr.GroupType = 'Region'
			AND gr.CompanyCode = #{domain}
			<if test="IsUse != null  and IsUse != 'All'.toString()">
				AND gr.IsUse = #{IsUse}
			</if>
			<if test="IsHR != null  and IsHR != 'All'.toString()">
				AND gr.IsHR = #{IsHR}
			</if>
			<if test="IsMail != null  and IsMail != 'All'.toString()">
				AND gr.IsMail = #{IsMail}
			</if>
			<if test="searchType != null and searchText != null">
				<choose>
					<when test="searchType == 'DisplayName'.toString()">
						AND gr.DisplayName  like CONCAT('%',#{searchText},'%')
					</when>
					<when test="searchType == 'RegionCode'.toString()">
						AND gr.GroupCode  like CONCAT('%',#{searchText},'%')
					</when>
				</choose>
			</if>
		</trim>
     </select>
	
    <select id="selectRegionList" parameterType="cmap" resultType="cmap">
		<![CDATA[
		SELECT 
			  'group' AS itemType
			, dn.GroupCode AS DomainCode
			, dn.MultiDisplayName AS MultiDomainCode
			, gr.GroupCode
			, gr.GroupType
			, gr.DisplayName AS GroupName
			, gr.MultiDisplayName AS MultiGroupName
			, dn.DisplayName AS DomainName
			, gr.PrimaryMail			
			, gr.MemberOf
			, gr.SortKey
			, IFNULL(gr.SortPath, '') AS SortPath
			, gr.GroupID
			, gr.IsUse
			, gr.IsHR
			, gr.IsMail
			, (SELECT COUNT(0) FROM covi_smart4j.sys_object_group AS self WHERE self.MemberOf =gr.GroupCode AND self.IsUse = 'Y') AS hasChild 
			, gr.Description
	    FROM covi_smart4j.sys_object_group AS gr
		LEFT JOIN covi_smart4j.sys_object_group AS dn ON gr.CompanyCode = dn.GroupCode
    	]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			AND (gr.MemberOf != 'NOUSE' OR gr.MemberOf is null)
			AND (gr.MemberOf != 'NOUNIT' OR gr.MemberOf is null)
			AND gr.GroupType = 'Region'
			AND gr.CompanyCode = #{domain}
			<if test="IsUse != null  and IsUse != 'All'.toString()">
				AND gr.IsUse = #{IsUse}
			</if>
			<if test="IsHR != null  and IsHR != 'All'.toString()">
				AND gr.IsHR = #{IsHR}
			</if>
			<if test="IsMail != null  and IsMail != 'All'.toString()">
				AND gr.IsMail = #{IsMail}
			</if>
			<if test="searchType != null and searchText != null">
				<choose>
					<when test="searchType == 'DisplayName'.toString()">
						AND gr.DisplayName  like CONCAT('%',#{searchText},'%')
					</when>
					<when test="searchType == 'RegionCode'.toString()">
						AND gr.GroupCode  like CONCAT('%',#{searchText},'%')
					</when>
				</choose>
			</if>
		</trim>
		<trim prefix="ORDER BY">  
			<if test="sortColumn != null and sortDirection != null">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("DomainName")'>DomainName</when>
					<when test='sortColumn.equalsIgnoreCase("GroupCode")'>GroupCode</when>
					<when test='sortColumn.equalsIgnoreCase("GroupName")'>GroupName</when>
					<when test='sortColumn.equalsIgnoreCase("IsUse")'>IsUse</when>
					<when test='sortColumn.equalsIgnoreCase("IsHR")'>IsHR</when>
					<when test='sortColumn.equalsIgnoreCase("IsMail")'>IsMail</when>
					<when test='sortColumn.equalsIgnoreCase("PrimaryMail")'>PrimaryMail</when>
					<when test='sortColumn.equalsIgnoreCase("Description")'>Description</when>
					<when test='sortColumn.equalsIgnoreCase("MultiGroupName")'>MultiGroupName</when>
					<otherwise>(gr.SortKey + 0)</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if> 
			<if test="sortColumn == null or sortDirection == null">
				(gr.SortKey + 0) ASC
			</if>
		</trim>
	    <if test="pageSize != null and pageOffset != null">
		   	LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>
	</select>
    
    <!-- 겸직 -->
    <!-- 겸직 리스트 가져오기(cnt) -->
	<select id="selectAddJobListCnt" parameterType="cmap" resultType="java.lang.Long">
		<![CDATA[
		SELECT COUNT(*)
		FROM covi_smart4j.sys_object_user_basegroup AS BG
		INNER JOIN covi_smart4j.sys_object_user AS USER ON BG.UserCode = USER.UserCode
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			BG.JobType = 'AddJob' 
			<if test="IsHR != null  and IsHR != 'All'.toString()">
				AND BG.IsHR = #{IsHR}
			</if>
			<if test="searchType != null and searchText != null">
				<choose>
					<when test="searchType == 'Users'.toString()">
						AND USER.MultiDisplayName  like CONCAT('%',#{searchText},'%')
					</when>
					<when test="searchType == 'Company'.toString()">
						AND BG.MultiCompanyName  like CONCAT('%',#{searchText},'%')
					</when>
					<when test="searchType == 'Dept'.toString()">
						AND BG.MultiDeptName  like CONCAT('%',#{searchText},'%')
					</when>
					<when test="searchType == 'JobTitle'.toString()">
						AND BG.MultiJobTitleName  like CONCAT('%',#{searchText},'%')
					</when>
					<when test="searchType == 'JobPosition'.toString()">
						AND BG.MultiJobPositionName  like CONCAT('%',#{searchText},'%')
					</when>
					<when test="searchType == 'JobLevel'.toString()">
						AND BG.MultiJobLevelName  like CONCAT('%',#{searchText},'%')
					</when>
				</choose>
			</if>
			<if test="CompanyCode != null">
				AND BG.CompanyCode = #{CompanyCode}
			</if>
		</trim>
    </select>
	
    <!-- 겸직 리스트 가져오기(list) -->
    <select id="selectAddJobList" parameterType="cmap" resultType="cmap">
		<![CDATA[
		SELECT 		
			  BG.Seq AS NO
			, BG.UserCode
			, USER.DisplayName AS UserName
			, USER.MultiDisplayName AS MultiUserName
			, BG.CompanyCode
			, BG.CompanyName
			, BG.MultiCompanyName
			, BG.DeptCode
			, BG.DeptName
			, BG.MultiDeptName
			, BG.JobTitleCode
			, BG.JobTitleName
			, BG.MultiJobTitleName
			, BG.JobPositionCode
			, BG.JobPositionName
			, BG.MultiJobPositionName
			, BG.JobLevelCode
			, BG.JobType
			, BG.JobLevelName
			, BG.MultiJobLevelName
			, BG.IsHR
			, USER.SortKey
		FROM covi_smart4j.sys_object_user_basegroup AS BG
		INNER JOIN covi_smart4j.sys_object_user AS USER ON BG.UserCode = USER.UserCode
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			BG.JobType = 'AddJob' 
			<if test="IsHR != null  and IsHR != 'All'.toString()">
				AND BG.IsHR = #{IsHR}
			</if>
			<if test="searchType != null and searchText != null">
				<choose>
					<when test="searchType == 'Users'.toString()">
						AND USER.MultiDisplayName  like CONCAT('%',#{searchText},'%')
					</when>
					<when test="searchType == 'Company'.toString()">
						AND BG.MultiCompanyName  like CONCAT('%',#{searchText},'%')
					</when>
					<when test="searchType == 'Dept'.toString()">
						AND BG.MultiDeptName  like CONCAT('%',#{searchText},'%')
					</when>
					<when test="searchType == 'JobTitle'.toString()">
						AND BG.MultiJobTitleName  like CONCAT('%',#{searchText},'%')
					</when>
					<when test="searchType == 'JobPosition'.toString()">
						AND BG.MultiJobPositionName  like CONCAT('%',#{searchText},'%')
					</when>
					<when test="searchType == 'JobLevel'.toString()">
						AND BG.MultiJobLevelName  like CONCAT('%',#{searchText},'%')
					</when>
				</choose>
			</if>
			<if test="CompanyCode != null">
				AND BG.CompanyCode = #{CompanyCode}
			</if>
		</trim>
	    <trim prefix="ORDER BY">  
			<if test="sortColumn != null and sortDirection != null">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("CompanyName")'>CompanyName</when>
					<when test='sortColumn.equalsIgnoreCase("DeptName")'>DeptName</when>
					<when test='sortColumn.equalsIgnoreCase("JobTitleName")'>JobTitleName</when>
					<when test='sortColumn.equalsIgnoreCase("JobPositionName")'>JobPositionName</when>
					<when test='sortColumn.equalsIgnoreCase("JobLevelName")'>JobLevelName</when>
					<when test='sortColumn.equalsIgnoreCase("IsHR")'>IsHR</when>
					<otherwise>UserName</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if> 
			<if test="sortColumn == null or sortDirection == null">
				user.DisplayName ASC
		    </if>
		</trim>
	    <if test="pageSize != null and pageOffset != null">
		   	LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>
	</select>
	
	<select id="selectUserAddJobListCnt" parameterType="cmap" resultType="java.lang.Long">
		<![CDATA[
		SELECT COUNT(*)
		FROM covi_smart4j.sys_object_user_basegroup AS BG
		INNER JOIN covi_smart4j.sys_object_user AS USER ON BG.UserCode = USER.UserCode
    	]]>
    	<trim prefix="WHERE" prefixOverrides="AND |OR ">
       		BG.JobType = 'AddJob' 
			<if test="UserCode != null  and UserCode != ''">
				AND BG.UserCode = #{UserCode}
			</if>
		</trim>
	</select>
    
	<delete id="deleteObjectUserBasegroup" parameterType="cmap">
        DELETE FROM covi_smart4j.sys_object_user_basegroup WHERE Seq = #{Seq}
    </delete>
    
    <delete id="deleteObjectUserBasegroupForAddjob" parameterType="cmap">
		DELETE FROM covi_smart4j.sys_object_user_basegroup 
		WHERE JobType = 'AddJob'
		AND UserCode = #{UserCode}
		AND CompanyCode = #{CompanyCode}
		AND DeptCode = #{DeptCode}
		<if test="JobPositionCode != null and JobPositionCode != ''">
			AND JobPositionCode = #{JobPositionCode}
		</if>
		<if test="JobPositionCode == null or JobPositionCode == ''">
			AND JobPositionCode = ''
		</if>
		<if test="JobTitleCode != null and JobTitleCode != ''">
			AND JobTitleCode = #{JobTitleCode}
		</if>
		<if test="JobTitleCode == null or JobTitleCode == ''">
			AND JobTitleCode = ''
		</if>
		<if test="JobLevelCode != null and JobLevelCode != ''">
			AND JobLevelCode = #{JobLevelCode}
		</if>
		<if test="JobLevelCode == null or JobLevelCode == ''">
			AND JobLevelCode = ''
		</if>
    </delete>
    
    <!-- 겸직 개별 정보 가져오기 -->
    <select id="selectAddJobInfo" parameterType="cmap" resultType="cmap">
		<![CDATA[
		SELECT 
			  BG.Seq AS NO
			, BG.UserCode
			, BG.JobType
			, USER.DisplayName AS UserName
			, USER.MultiDisplayName AS MultiUserName
			, BG.CompanyCode
			, BG.CompanyName
			, BG.MultiCompanyName
			, BG.DeptCode
			, BG.DeptName
			, BG.MultiDeptName
			, BG.JobTitleCode
			, BG.JobTitleName
			, BG.MultiJobTitleName
			, BG.JobPositionCode
			, BG.JobPositionName
			, BG.MultiJobPositionName
			, BG.JobLevelCode
			, BG.JobType
			, BG.JobLevelName
			, BG.MultiJobLevelName
			, USER.IsHR
		FROM covi_smart4j.sys_object_user_basegroup AS BG
		INNER JOIN covi_smart4j.sys_object_user AS USER ON BG.UserCode = USER.UserCode
	    ]]>
	   	<trim prefix="WHERE" prefixOverrides="AND |OR ">
	   	    BG.JobType = 'AddJob' 
	   	    <if test="id != null ">
	  			AND BG.Seq = #{id}
	  		</if>
		</trim>
	</select>
	
	<!-- 겸직  정보 가져오기 -->
    <select id="selectAddJobInfoList" parameterType="cmap" resultType="cmap">
		<![CDATA[
		SELECT 
			  BG.Seq AS NO
			, BG.UserCode
			, USER.LogonID
			, USER.DisplayName
			, BG.JobType
			, USER.DisplayName AS UserName
			, USER.MultiDisplayName AS MultiUserName
			, BG.CompanyCode
			, BG.CompanyName
			, BG.MultiCompanyName
			, BG.DeptCode
			, BG.DeptName
			, BG.MultiDeptName
			, BG.JobTitleCode
			, BG.JobTitleName
			, BG.MultiJobTitleName
			, BG.JobPositionCode
			, BG.JobPositionName
			, BG.MultiJobPositionName
			, BG.JobLevelCode
			, BG.JobType
			, BG.JobLevelName
			, BG.MultiJobLevelName
			, BG.IsHR
		FROM covi_smart4j.sys_object_user_basegroup AS BG
		INNER JOIN covi_smart4j.sys_object_user AS USER ON BG.UserCode = USER.UserCode
		]]>
		WHERE Seq = #{Seq}
	</select>
	
	<!-- 겸직 목록 설정 변경 => 테이블 구조 변경으로 인하여 보류 -->
    <update id="updateAddJobSetting" parameterType="cmap" >
 		UPDATE covi_smart4j.sys_object_user_basegroup
 		SET
 			IsHR = #{ToBeValue}
 		WHERE Seq = #{id}
 		AND JobType='AddJob'
 	</update>
 	
 	<!-- 겸직 수정  -->
 	<update id="updateAddJob" parameterType="cmap" > 		  
		UPDATE covi_smart4j.sys_object_user_basegroup AS BG
		LEFT JOIN covi_smart4j.sys_object_group AS COMPANY ON COMPANY.GroupType = 'Company' AND COMPANY.GroupCode = #{AddJob_Company}  
		LEFT JOIN covi_smart4j.sys_object_group AS DEPT ON DEPT.GroupType = 'Dept' AND DEPT.GroupCode = #{AddJob_Group}
		LEFT JOIN covi_smart4j.sys_object_group AS JobTitle ON JobTitle.GroupType = 'JobTitle' AND JobTitle.GroupCode = #{AddJob_Title}
		LEFT JOIN covi_smart4j.sys_object_group AS JobPosition ON JobPosition.GroupType = 'JobPosition' AND JobPosition.GroupCode = #{AddJob_Position}
		LEFT JOIN covi_smart4j.sys_object_group AS JobLevel ON JobLevel.GroupType = 'JobLevel' AND JobLevel.GroupCode = #{AddJob_Level}
		SET
			  BG.CompanyCode				= #{AddJob_Company}
			, BG.CompanyName				= COMPANY.DisplayName
			, BG.MultiCompanyName			= COMPANY.MultiDisplayName
			, BG.CompanySortKey				= COMPANY.SortKey
			, BG.DeptCode					= #{AddJob_Group}
			, BG.DeptName					= DEPT.DisplayName
			, BG.MultiDeptName				= DEPT.MultiDisplayName
			, BG.DeptSortKey				= DEPT.SortKey
			, BG.JobLevelCode				= #{AddJob_Level}
			, BG.JobLevelName				= JobLevel.DisplayName
			, BG.MultiJobLevelName			= JobLevel.MultiDisplayName
			, BG.JobLevelSortKey			= JobLevel.SortKey
			, BG.JobPositionCode			= #{AddJob_Position}
			, BG.JobPositionName			= JobPosition.DisplayName
			, BG.MultiJobPositionName		= JobPosition.MultiDisplayName
			, BG.JobPositionSortKey			= JobPosition.SortKey
			, BG.JobTitleCode				= #{AddJob_Title}
			, BG.JobTitleName				= JobTitle.DisplayName
			, BG.MultiJobTitleName			= JobTitle.MultiDisplayName
			, BG.JobTitleSortKey			= JobTitle.SortKey
			, BG.ModifyDate					= now(3)	
			, BG.IsHR 						= #{IsHR}
		WHERE BG.Seq = #{id}
 	</update>
 	
    <!-- 그룹 멤버 User insert -->
    <insert id="insertGroupMemberUser" parameterType="cmap">
        INSERT INTO covi_smart4j.sys_object_group_member (
        	GroupCode,
        	UserCode,
        	SortKey,
        	Role,
        	IsUse,
        	IsHR,
        	MemberStatus,
        	JoinDate
        ) 
        SELECT DeptCode AS GroupCode, UserCode, 999 ,'regular','Y','Y','A',now() FROM covi_smart4j.sys_object_user_basegroup WHERE usercode = #{UserCode}        
		UNION
		SELECT JobPositionCode AS GroupCode, UserCode, 999 ,'regular','Y','Y','A',now() FROM covi_smart4j.sys_object_user_basegroup WHERE usercode = #{UserCode} AND IFNULL(JobPositionCode,'') <![CDATA[<>]]> ''
		UNION
		SELECT JobTitleCode AS GroupCode, UserCode, 999 ,'regular','Y','Y','A',now() FROM covi_smart4j.sys_object_user_basegroup WHERE usercode = #{UserCode} AND IFNULL(JobTitleCode,'') <![CDATA[<>]]> ''
		UNION
		SELECT JobLevelCode AS GroupCode, UserCode, 999 ,'regular','Y','Y','A',now() FROM covi_smart4j.sys_object_user_basegroup WHERE usercode = #{UserCode} AND IFNULL(JobLevelCode,'') <![CDATA[<>]]> ''
    </insert>
    
	<!-- 그룹 멤버 User delete -->
    <delete id="deleteGroupMemberUser" parameterType="cmap">
	    DELETE FROM covi_smart4j.sys_object_group_member
		WHERE GroupMemberID IN
		<foreach collection="deleteDataUser" item="item"  separator="," open="(" close=")">
		    #{item}
		</foreach>
    </delete>
    
    <!-- 그룹 멤버 Group delete -->
    <delete id="deleteGroupMemberGroup" parameterType="cmap">
	    DELETE FROM covi_smart4j.sys_object_group_membergroup
		WHERE MemberGroupID IN
		<foreach collection="deleteDataGroup" item="item"  separator="," open="(" close=")">
		    #{item}
		</foreach>
    </delete>
    
    <!-- 그룹 멤버 Group insert -->
    <insert id="insertGroupMemberGroup" parameterType="cmap">
        INSERT INTO covi_smart4j.sys_object_group_membergroup (
        	GroupCode,
        	MemberGroupCode,
        	SortKey,
        	Role,
        	IsUse,
        	IsHR,
        	MemberStatus,
        	JoinDate
        ) 
        VALUES (
        	#{GroupCode},
        	#{GRList},
        	999,
        	'regular', 
        	'Y',
        	'Y',
        	'A',
        	now(3)
        )
    </insert>
    
    <select id="selectJobInfoCount" parameterType="cmap" resultType="java.lang.Long">
		SELECT COUNT(GroupCode) AS COUNT 
		FROM covi_smart4j.sys_object_group AS A
		INNER JOIN covi_smart4j.sys_object AS B ON A.GroupCode = B.ObjectCode  
		WHERE CompanyCode = #{domainCode} 
		AND B.DeleteDate IS NULL 
		AND GroupType IN(#{groupType}) 
		AND MemberOf IN (
			SELECT CONCAT(DomainID, '_', #{groupType}) FROM covi_smart4j.sys_object_domain WHERE DomainCode = #{domainCode}
		)
    </select>
    
    <select id="selectJobInfoList" parameterType="cmap" resultType="cmap">
        SELECT 
			  GroupCode
			, DisplayName
			, GroupType
			, MemberOf
			, MultiDisplayName  
		FROM covi_smart4j.sys_object_group AS A
		INNER JOIN covi_smart4j.sys_object AS B	ON A.GroupCode = B.ObjectCode  
		WHERE CompanyCode = #{domainCode}   
		AND B.DeleteDate IS NULL
		AND GroupType IN(#{groupType}) 
		AND MemberOf in (
			SELECT CONCAT(DomainID, '_', #{groupType}) FROM covi_smart4j.sys_object_domain WHERE DomainCode = #{domainCode} 
		)
		ORDER BY A.GroupCode
    </select>
    
    <!-- 상위 분류 select box list(category)를 가져옴 -->
    <select id="selectDeptListForCategory" parameterType="cmap" resultType="cmap">
		<![CDATA[
		SELECT 
			gr.GroupCode,
			Fn_BaseGetDictionary_S(#{lang}, gr.MultiDisplayName) AS GroupName
		FROM covi_smart4j.sys_object_group AS gr
	    ]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			AND (gr.MemberOf != 'NOUSE' OR gr.MemberOf is null) 
			AND (gr.MemberOf != 'NOUNIT' OR gr.MemberOf is null)
			<if test="groupCode != null">
				AND gr.MemberOf = (SELECT MemberOf FROM covi_smart4j.sys_object_group WHERE GroupCode = #{groupCode} LIMIT 1)
			</if>
			<if test="groupType != null and groupType=='Dept'">
				AND gr.GroupType in ('Dept')  	
			</if>
			<if test="groupType != null and groupType=='Company'">
				AND gr.GroupType in ('Company')
			</if>
			<if test="groupType != null and groupType=='group'">
				AND gr.GroupType != 'Dept'	
			</if>
		</trim>
		<trim prefix="ORDER BY">
			<if test="groupCode != null and groupCode != ''">
				gr.GroupCode = #{groupCode} DESC,
			</if>
		 	SortPath ASC
		</trim>
    
	</select>
	
    <!--  하위 그룹 목록가져오기 -->
    <select id="selectSubGroupList" parameterType="cmap" resultType="cmap">
    	SELECT     
   			A.*,
			B.DisplayName AS DomainName,
			B.MultiDisplayName AS MultiDomainName, 
     		(SELECT COUNT(0) FROM covi_smart4j.sys_object_group AS self WHERE self.MemberOf = A.GroupCode AND self.IsUse = 'Y') AS HasChild,     
     		0 AS Depth 
  		FROM covi_smart4j.sys_object_group A 
  		INNER JOIN covi_smart4j.sys_object_group B ON A.CompanyCode = B.GroupCode
   		WHERE A.MemberOf = #{gr_code}
   		<if test="gr_code == 'ORGROOT'">
   			AND A.GroupType != 'Company'
   		</if>
   		<if test="grouptype == 'Company'">	   		
	   		AND A.grouptype <![CDATA[<>]]> 'Dept' 
   		</if>
   		ORDER BY SortPath ASC
   		<if test="pageSize != null and pageOffset != null">
		   	LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>
    </select>
    
    <!--  하위 그룹 목록 갯수 가져오기 -->
    <select id="selectSubGroupListCnt" parameterType="cmap" resultType="java.lang.Long">
    	SELECT COUNT(*)
  		FROM covi_smart4j.sys_object_group A 
  		INNER JOIN covi_smart4j.sys_object_group B ON A.CompanyCode = B.GroupCode
   		WHERE A.MemberOf = #{gr_code}
   		<if test="gr_code == 'ORGROOT'">
   			AND A.GroupType != 'Company'
   		</if>
   		<if test="grouptype == 'Company'">	   		
	   		AND A.grouptype <![CDATA[<>]]> 'Dept' 
   		</if>
    </select>
    
    <!-- 상위 분류 select box list(category)를 가져옴 -->
    <select id="selectGroupListForCategory" parameterType="cmap" resultType="cmap">
		<![CDATA[
		SELECT 
			gr.GroupCode,
			Fn_BaseGetDictionary_S(#{lang}, gr.MultiDisplayName) AS GroupName
		FROM covi_smart4j.sys_object_group AS gr
	    ]]>
	    <trim prefix="WHERE" prefixOverrides="AND |OR ">
			AND (gr.MemberOf != 'NOUSE' OR gr.MemberOf is null) 
			AND (gr.MemberOf != 'NOUNIT' OR gr.MemberOf is null)
			<if test="groupCode != null">
				AND gr.MemberOf = (SELECT MemberOf FROM covi_smart4j.sys_object_group WHERE GroupCode = #{groupCode} LIMIT 1)
			</if>
			<if test="groupType != null">
				<choose>
					<when test="groupType == 'Company'.toString()">
						AND gr.GroupType = 'Company'
					</when>
					<when test="groupType == 'group'.toString()">
						AND gr.GroupType != 'Dept'
					</when>
					<otherwise>
						AND gr.GroupType = #{groupType}
					</otherwise>
				</choose>
			</if>
		</trim>
		<trim prefix="ORDER BY">
			<if test="groupCode != null and groupCode != ''">
				gr.GroupCode = #{groupCode} DESC,
			</if>
		 	SortPath ASC
		</trim>
    
	</select>
	
    <!-- 그룹 정보 가져오기 select -->
    <select id="selectGroupInfo" parameterType="cmap" resultType="cmap">
		<![CDATA[
		SELECT
        	A.GroupID,
        	A.GroupCode,
			A.GroupType,
			A.MemberOf,
			(SELECT MultiDisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode=A.MemberOf) As ParentName,
			A.GroupPath,
			A.MultiDisplayName,
			A.MultiShortName,
			A.SortKey,
			A.SortPath,
			A.OUName,
			A.OUPath,
			A.IsUse,
			A.IsDisplay,
			A.IsMail,
			A.IsHR,
			A.PrimaryMail,
			A.SecondaryMail,
			A.Description,
			A.ReceiptUnitCode,
			A.ApprovalUnitCode,
			A.Receivable,
			A.Approvable,
			A.RegistDate,
			A.ModifyDate,
			A.ManagerCode,
        	IFNULL(CONCAT(A.ManagerCode, '|', (SELECT DisplayName FROM covi_smart4j.sys_object_user WHERE UserCode = A.ManagerCode)), '') AS Manager,
        	B.MultiDisplayName AS CompanyName,
        	B.GroupCode AS CompanyCode,
			A.DisplayName
		FROM covi_smart4j.sys_object_group AS A
		INNER JOIN covi_smart4j.sys_object_group AS B ON A.CompanyCode = B.GroupCode
		WHERE A.GroupCode = #{gr_code}
		]]>
    </select>
    
	<!-- 그룹 기타 정보 select -->
    <select id="selectGroupEtcInfo" parameterType="cmap" resultType="cmap">
 	    SELECT 
 	    	GroupPath,
 	    	SortPath,
 	    	OUPath,
 	    	(SELECT GroupID FROM covi_smart4j.sys_object_group WHERE GroupCode = #{CompanyCode}) AS CompanyID
 	    FROM covi_smart4j.sys_object_group
 	    WHERE GroupCode = #{MemberOf}
 	</select>
 	
    <select id="selectDefaultSetInfoGroup" parameterType="cmap" resultType="cmap">
         SELECT
			A.DisplayName AS GroupName,
        	B.DisplayName AS CompanyName,
        	<if test="domainCode != null and groupType != null">
	        	(
		        	SELECT SUBSTRING_INDEX(GroupCode, '_', 1) 
		            FROM covi_smart4j.sys_object_group
					WHERE GroupCode LIKE CONCAT('%',#{groupType}) and CompanyCode = #{domainCode} 
				) 
			</if>
			<if test="domainCode == null or groupType == null">
			    ''
		    </if>
			AS CompanyID
		FROM covi_smart4j.sys_object_group AS A
		INNER JOIN covi_smart4j.sys_object_group AS B ON A.CompanyCode = B.GroupCode AND B.GroupType = 'Company'
		<if test="groupType = 'Company'.toString()">
			<if test="gr_code != null">
				WHERE  A.GroupCode = #{gr_code} 
			</if>
		</if>
		<if test="groupType != 'Company'.toString()">
			<if test="domainCode != null">
				WHERE B.GroupCode = #{domainCode} 
			</if>
			<if test="gr_code != null">
				AND A.GroupCode = #{gr_code} 
			</if>
		</if>
    </select>
    
    <!-- 임의 그룹 목록 설정 변경 -->
    <update id="updateArbitraryGroup" parameterType="cmap" >
 		UPDATE covi_smart4j.sys_object_group
 		SET 
		<choose>
			<when test="Type == 'IsUse'.toString()">
				IsUse = #{ToBeValue}
			</when>
			<when test="Type == 'IsHR'.toString()">
				IsHR = #{ToBeValue}
			</when>
			<when test="Type == 'IsMail'.toString()">
				IsMail = #{ToBeValue}
			</when>
		</choose>
 		WHERE GroupCode = #{TargetCode}
 	</update>
    
    <!-- 임의 그룹 목록 삭제  -->
    <delete id="deleteArbitraryGroupList" parameterType="cmap">
		DELETE FROM covi_smart4j.sys_object_group
		WHERE GroupCode IN
		<foreach collection="TargetID" item="item"  separator="," open="(" close=")">
		    #{item}
		</foreach>
	</delete>
	
    <!-- 임의 그룹 우선 순위 가져오기  -->
	<select id="selectArbitraryGroupSortKey" parameterType="cmap" resultType="cmap">
 	    SELECT SortKey, SortPath,GroupPath
 	    FROM covi_smart4j.sys_object_group
 	    WHERE GroupCode  = #{TargetCode}
 	</select>
 	
	<!-- 임의 그룹 우선 순위 변경 -->
    <update id="updateArbitraryGroupSortKey" parameterType="cmap" >
 		UPDATE covi_smart4j.sys_object_group
 		SET
 			SortKey = #{TargetSortKey},
			SortPath = #{TargetSortPath}
 		WHERE GroupCode = #{TargetCode}
 	</update>
 	
  	<!-- 그룹 사용여부 변경 -->
    <update id="updateIsUseGroup" parameterType="cmap">
	    <![CDATA[
		UPDATE covi_smart4j.sys_object_group
		SET
			IsUse = #{IsUse},
			ModifyDate = #{ModifyDate}
		WHERE GroupCode = #{GroupCode}
		]]>
	</update>
	
	<!-- 그룹 표시여부 변경 -->
    <update id="updateIsDisplayGroup" parameterType="cmap">
	    <![CDATA[
		UPDATE covi_smart4j.sys_object_group
		SET
			IsDisplay = #{IsDisplay},
			ModifyDate = #{ModifyDate}
		WHERE GroupCode = #{GroupCode}
		]]>
	</update>
    
    <!-- 그룹 메일사용여부 변경 -->
    <update id="updateIsMailGroup" parameterType="cmap">
	    <![CDATA[
		UPDATE covi_smart4j.sys_object_group
		SET
			IsMail = #{IsMail},
			ModifyDate = #{ModifyDate}
		WHERE GroupCode = #{GroupCode}
		]]>
	</update>
    
    <select id="selectSyncDeptInfo" resultType="cmap">
      	SELECT
			  GroupCode as "GroupCode"
			, CompanyCode as "CompanyCode"
			, MemberOf as "MemberOf"
			, SortKey as "SortKey"
			, OUName as "OUName"
		FROM covi_smart4j.sys_object_group 
		WHERE GROUPTYPE = 'Dept' 
		ORDER BY IF(GroupCode REGEXP '^ORGROOT.*' = 1, 0, 1), COMPANYCODE, IF(MemberOf REGEXP '^[a-zA-Z]' = 1, 0, 1), MemberOf, GROUPCODE
	</select>
    
    <insert id="insertObjectGroup" parameterType="cmap">
		INSERT INTO covi_smart4j.sys_object_group (
			  GroupCode
			, CompanyCode
			, GroupType
			, MemberOf
			, GroupPath
			<if test="RegionCode != null">
				, RegionCode		
			</if>
			, DisplayName
			, MultiDisplayName
			, ShortName
			, MultiShortName
			, OUName	
			, OUPath
			, SortKey
			, SortPath
			, IsUse
			, IsDisplay
			, IsMail
			, IsHR
			, PrimaryMail
			<if test="SecondaryMail != null">
				, SecondaryMail
			</if>
			, ManagerCode
			, Description
			<if test="ReceiptUnitCode != null">
				, ReceiptUnitCode
			</if>
			<if test="ApprovalUnitCode != null">
				, ApprovalUnitCode
			</if>
			, Receivable
			, Approvable
			, RegistDate
			, ModifyDate
			<if test="Reserved1 != null">
				, Reserved1
			</if>
			<if test="Reserved2 != null">
				, Reserved2
			</if>
			<if test="Reserved3 != null">
				, Reserved3
			</if>
			<if test="Reserved4 != null">
				, Reserved4
			</if>
			<if test="Reserved5 != null">
				, Reserved5
			</if>
			<if test="IsCRM != null">
				, IsCRM
			</if>
		) VALUES(
			  #{GroupCode}
			, #{CompanyCode}
			, #{GroupType}
			, #{MemberOf}
			, #{GroupPath}
			<if test="RegionCode != null">
				, #{RegionCode}	
			</if>
			, #{DisplayName}
			, #{MultiDisplayName}
			, #{ShortName}
			, #{MultiShortName}
			, #{OUName}
			, #{OUPath}
			, #{SortKey}
			, #{SortPath}
			, #{IsUse}
			, #{IsDisplay}
			, #{IsMail}
			, #{IsHR}
			, #{PrimaryMail}
			<if test="SecondaryMail != null">
				, #{SecondaryMail}
			</if>
			, #{ManagerCode}
			, #{Description}
			<if test="ReceiptUnitCode != null">
				, #{ReceiptUnitCode}
			</if>
			<if test="ApprovalUnitCode != null">
				, #{ApprovalUnitCode}
			</if>
			, #{Receivable}
			, #{Approvable}
			, now(3)
			, now(3)
			<if test="Reserved1 != null">
				, #{Reserved1}
			</if>
			<if test="Reserved2 != null">
				, #{Reserved2}
			</if>
			<if test="Reserved3 != null">
				, #{Reserved3}
			</if>
			<if test="Reserved4 != null">
				, #{Reserved4}
			</if>
			<if test="Reserved5 != null">
				, #{Reserved5}
			</if>
			<if test="IsCRM != null">
				, #{IsCRM}
			</if>
		)
	</insert> 
    
	<select id="selectFNGroupPath" parameterType="cmap" resultType="java.lang.String">
	    SELECT covi_smart4j.fn_comobjectpathcreate_s(0, #{GroupCode}, 'GR')
	</select>
	
	<select id="selectFNSortPath" parameterType="cmap" resultType="java.lang.String">
	    SELECT covi_smart4j.fn_comsortpathcreate_s(0, #{GroupCode}, 'GR')
	</select>
	
	<select id="selectFNOUPath" parameterType="cmap" resultType="java.lang.String">
		SELECT covi_smart4j.fn_comoupathcreate_s(#{GroupCode})
	</select>
 	
	<update id="updateFNGroupPath" parameterType="cmap">
	    UPDATE covi_smart4j.sys_object_group
		SET
			  GROUPPATH = #{GroupPath}
			, SORTPATH = #{SortPath}
			, OUPATH = #{OUPath}
		WHERE GROUPCODE = #{GroupCode}
	</update>
    
	<update id="updateObjectGroup" parameterType="cmap">
		UPDATE covi_smart4j.sys_object_group
		SET
			  CompanyCode = #{CompanyCode}
			, MemberOf = #{MemberOf}
			, GroupPath = #{GroupPath}
			, RegionCode = #{RegionCode}		
			, DisplayName = #{DisplayName}
			, MultiDisplayName = #{MultiDisplayName}
			, ShortName = #{ShortName}
			, MultiShortName = #{MultiShortName}
			, OUName = #{OUName}
			, OUPath = #{OUPath}
			, SortKey = #{SortKey}
			, SortPath = #{SortPath}
			, IsUse = #{IsUse}
			, IsDisplay = #{IsDisplay}			
			, IsMail = #{IsMail}
			, IsHR = #{IsHR}
			, PrimaryMail = #{PrimaryMail}
			, SecondaryMail = #{SecondaryMail}
			, ManagerCode = #{ManagerCode}
			, Description = #{Description}
			, ModifyDate = now(3)
			<if test="GroupType != null">
				, GroupType = #{GroupType}
			</if>
			<if test="ReceiptUnitCode != null">
				, ReceiptUnitCode = #{ReceiptUnitCode}
			</if>
			<if test="ApprovalUnitCode != null">
				, ApprovalUnitCode = #{ApprovalUnitCode}
			</if>
			<if test="Receivable != null">
				, Receivable = #{Receivable}
			</if>
			<if test="Approvable != null">
				, Approvable = #{Approvable}
			</if>
			<if test="Reserved1 != null">
		    	, Reserved1 = #{Reserved1}
		    </if>
			<if test="Reserved2 != null">
		    	, Reserved2 = #{Reserved1}
		    </if>
		    <if test="Reserved3 != null">
		    	, Reserved3 = #{Reserved1}
		    </if>
		    <if test="Reserved4 != null">
		   		, Reserved4 = #{Reserved4}
		    </if>
		    <if test="Reserved5 != null">
		    	, Reserved5 = #{Reserved5}
		    </if>
		    <if test="IsCRM != null">
		    	, IsCRM = #{IsCRM}
		    </if>
		WHERE GroupCode = #{GroupCode}
	</update> 
	
	<delete id="deleteObjectGroup" parameterType="cmap">		
	  	UPDATE covi_smart4j.sys_object_group 
	  	SET
			  IsUse = 'N'
			, IsHR = 'N'
			, IsMail = 'N'
			, IsDisplay = 'N'
			, ModifyDate = now(3)
		WHERE GroupCode = #{GroupCode}
	</delete>
    
	
	<!-- 기타 -->
    <!-- 일정폴더 데이터 삽입 -->
    <insert id="insertFolderData" parameterType="cmap" >
        INSERT INTO covi_smart4j.SYS_OBJECT_FOLDER (
        	  DomainID
        	, MenuID
        	, ObjectType
        	, FolderType
        	, ParentObjectID
        	, ParentObjectType
        	, LinkFolderID
        	, DisplayName
        	, MultiDisplayName
        	, MemberOf
        	, SortKey
        	, SecurityLevel
        	, IsInherited
        	, IsShared
        	, IsUse
        	, IsDisplay
        	, IsURL
        	, URL
        	, IsMobileSupport
        	, IsAdminNotice
        	, ManageCompany
        	, IsMsgSecurity
        	, Description
        	, OwnerCode
        	, RegisterCode
        	, RegistDate
        	, ModifierCode
        	, ModifyDate
        	, DeleteDate
        	, Reserved1
        	, Reserved2
        	, Reserved3
        	, Reserved4
        	, Reserved5
        )
        VALUES (
        	  #{DomainID}
			, #{MenuID}
			, 'Schedule'
			, #{FolderType}
			, #{ParentObjectID}
			, #{ParentObjectType}
			, #{LinkFolderID}
			, #{DisplayName}
			, #{MultiDisplayName}
			, #{MemberOf}
			, #{SortKey}
			, #{SecurityLevel}
			, #{IsInherited}
			, #{IsShared}
			, #{IsUse}
			, #{IsDisplay}
			, #{IsURL}
			, #{URL}
			, #{IsMobileSupport}
			, #{IsAdminNotice}
			, #{ManageCompany}
			, #{IsMsgSecurity}
			, #{Description}
			, #{OwnerCode}
			, #{RegisterCode}
			, NOW()
			, #{ModifierCode}
			, NOW()
			, #{DeleteDate}
			, #{Reserved1}
			, #{Reserved2}
			, #{Reserved3}
			, #{Reserved4}
			, #{Reserved5}
        );
        <selectKey keyProperty="FolderID" resultType="Integer" order="AFTER">
		    SELECT LAST_INSERT_ID();
		</selectKey>
    </insert>
    
    <select id="selectComSortPathCreateS" parameterType="cmap" resultType="java.lang.String">
         SELECT covi_smart4j.FN_COMSORTPATHCREATE_S(#{FolderID}, '', 'FD') AS SortPath
    </select>
    
    <select id="selectComObjectPathCreateS" parameterType="cmap" resultType="java.lang.String">
        SELECT covi_smart4j.FN_COMOBJECTPATHCREATE_S(#{FolderID}, '', 'FD') AS FolderPath
    </select>
    
    <!-- SortPath 수정 -->
    <update id="updateSortPath" parameterType="cmap" >
        UPDATE covi_smart4j.sys_object_folder 
        SET SortPath = #{SortPath}
        WHERE FolderID = #{FolderID}
    </update>
    
    <!-- FolderPath 수정 -->
    <update id="updateFolderPath" parameterType="cmap" >
        UPDATE covi_smart4j.sys_object_folder 
        SET FolderPath = #{FolderPath}
        WHERE FolderID = #{FolderID}
    </update>
    
    <!-- 비밀번호 초기화  -->
    <update id="resetuserpassword" parameterType="cmap">
        UPDATE covi_smart4j.sys_object_user
        SET 
        	LogonPassword = HEX(AES_ENCRYPT(#{aeskey}, SHA2(#{sNewPassword},512))) ,
        	ModifyDate = #{ModDate}
        WHERE usercode = #{UserID}
    </update>
    
	<update id="resetuserpasswordLock" parameterType="cmap">
        UPDATE covi_Smart4j.sys_object_user
		SET
			  ACCOUT_LOCK = 'N'
			, PASSWORD_CHANGE_DATE = #{ModDate}
			, LOGIN_FAIL_COUNT = 0
			, TEMPORARY_PASSWORD_ISUSE  = 'Y'
		WHERE usercode = #{UserID}
    </update>
    
    <!-- 메일 주소 중복 여부 조회 -->
    <select id="selectIsDuplicateMail" parameterType="cmap" resultType="cmap">
		SELECT MAX(CNT) AS isDuplicate
		FROM (
			SELECT COUNT(1) AS CNT
			FROM covi_smart4j.sys_object_user AS UR1
			<trim prefix="WHERE" prefixOverrides="AND |OR ">
				MailAddress = #{MailAddress}
				AND MailAddress IS NOT NULL
				AND MailAddress != ''
				<if test="Code != null">
					AND UserCode != #{Code}
				</if>
			</trim>
			UNION 
			SELECT COUNT(1) AS CNT
			FROM covi_smart4j.sys_object_group AS GR1
			<trim prefix="WHERE" prefixOverrides="AND |OR ">
				PrimaryMail = #{MailAddress}
				AND PrimaryMail IS NOT NULL 
				AND PrimaryMail != ''
				<if test="Code != null">
					AND GroupCode != #{Code}
				</if>
			</trim>
			UNION 
			SELECT COUNT(1) AS CNT
			FROM covi_smart4j.sys_object_group AS GR2
			<trim prefix="WHERE" prefixOverrides="AND |OR ">
				SecondaryMail LIKE CONCAT('%',#{MailAddress},'%')
				AND SecondaryMail IS NOT NULL 
				AND SecondaryMail != ''
				<if test="Code != null">
					AND GroupCode != #{Code}
				</if>
			</trim>
			<if test="dupType == 'Excel'">
				UNION
				SELECT COUNT(1) AS CNT
				FROM covi_syncdata.excel_orgdept AS GR3
				<trim prefix="WHERE" prefixOverrides="AND |OR ">
					PrimaryMail = #{MailAddress}
					AND PrimaryMail IS NOT NULL 
					AND PrimaryMail != ''
					<if test="Code != null">
						AND GroupCode != #{Code}
					</if>
				</trim>
				UNION
				SELECT COUNT(1) AS CNT
				FROM covi_syncdata.excel_orguser AS UR1
				<trim prefix="WHERE" prefixOverrides="AND |OR ">
					MailAddress = #{MailAddress}
					AND MailAddress IS NOT NULL 
					AND MailAddress != ''
					<if test="Code != null">
						AND UserCode != #{Code}
					</if>
				</trim>
			</if>
		) AS MAIL
    </select>
    
   	<select id="selectServiceTypeList" parameterType="cmap" resultType="cmap">
        SELECT
        	CN AS optionValue,
        	CONCAT("[", CN, "]", DisplayName) AS optionText 
        FROM covi_smart4j.admanager_account
        WHERE ServiceType = 'MESSENGER'
    </select> 
    
   	<!-- 하위 그룹 존재 여부 select -->
    <select id="selectHasChildGroup" parameterType="cmap" resultType="java.lang.Long">
		SELECT (
			SELECT COUNT(0) 
			FROM covi_smart4j.sys_object_group AS B 
			WHERE B.MemberOf = A.GroupCode AND B.IsUse = 'Y') AS HasChild
		FROM covi_smart4j.sys_object_group AS A
		WHERE A.GroupCode = #{GroupCode} 
    </select>
    
    <!-- 하위 사용자 존재 여부 select -->
    <select id="selectHasUserGroup" parameterType="cmap" resultType="java.lang.Long">
		SELECT COUNT(A.UserCode) AS HasUser
		FROM covi_smart4j.sys_object_user AS A
		INNER JOIN covi_smart4j.sys_object_user_basegroup AS B ON A.UserCode = B.UserCode
		INNER JOIN covi_smart4j.sys_object_group_member AS C ON A.UserCode = C.UserCode
		WHERE B.JobTitleCode = #{GroupCode} 
		OR B.JobPositionCode = #{GroupCode} 
		OR B.JobLevelCode = #{GroupCode} 
		OR B.RegionCode = #{GroupCode} 
		OR C.GroupCode = #{GroupCode} 
    </select>
    
    <select id="updatePasswordPolicyCount" parameterType="cmap" resultType="java.lang.Long">
        SELECT COUNT(*) FROM covi_smart4j.sys_object_pw_policy a
		INNER JOIN covi_smart4j.sys_object_domain b ON a.DomainID = b.DomainID
		WHERE 1=1
		and b.DomainCode = #{DomainCode}
    </select>
    
	<select id="getPolicy" parameterType="cmap" resultType="cmap">
        SELECT
        	  a.DOMAINID AS DomainID
			, a.ISUSECOMPLEXITY AS IsUseComplexity
			, a.MAXCHANGEDATE AS MaxChangeDate
			, a.MINIMUMLENGTH AS MinimumLength
			, a.CHANGENOTICEDATE AS ChangeNoticeDate
        FROM covi_smart4j.SYS_OBJECT_PW_POLICY a
        INNER JOIN covi_smart4j.sys_object_domain b ON a.DomainID = b.DomainID
        WHERE 1=1 
        AND b.DomainCode = #{DomainCode}
    </select>
   	
    <!-- AD 관련-->
   	<insert id="insertUserADInfo" parameterType="cmap">
       INSERT INTO covi_smart4j.sys_object_user_ad (
		     USERID
			,AD_DISPLAYNAME
			,AD_FIRSTNAME
			,AD_LASTNAME
			,AD_INITIALS
			,AD_OFFICE
			,AD_HOMEPAGE
			,AD_COUNTRY
			,AD_COUNTRYID
			,AD_COUNTRYCODE
			,AD_STATE
			,AD_CITY
			,AD_STREETADDRESS
			,AD_POSTOFFICEBOX
			,AD_POSTALCODE
			,AD_USERACCOUNTCONTROL
			,AD_ACCOUNTEXPIRES
			,AD_PHONENUMBER 
			,AD_HOMEPHONE 
			,AD_PAGER 
			,AD_MOBILE
			,AD_FAX 
			,AD_IPPHONE
			,AD_INFO
			,AD_TITLE
			,AD_DEPARTMENT
			,AD_COMPANY
			,AD_MANAGERCODE 
			,AD_CN
			,AD_SamAccountName
			,AD_UserPrincipalName 
		)
		VALUES (
		    #{UserCode},
			#{AD_DisplayName},
			#{AD_FirstName},
			#{AD_LastName},
			#{AD_Initials},
			#{AD_Office},
			#{AD_HomePage},
			#{AD_Country},
			#{AD_CountryID},
			#{AD_CountryCode},
			#{AD_State},
			#{AD_City},
			#{AD_StreetAddress},
			#{AD_PostOfficeBox},
			#{AD_PostalCode},
			#{AD_UserAccountControl},
			#{AD_AccountExpires},
			#{AD_PhoneNumber},
			#{AD_HomePhone},
			#{AD_Pager},
			#{AD_Mobile},
			#{AD_Fax},
			'',
			#{AD_Info},
			#{AD_Title},
			#{AD_Department},
			#{AD_Company},
			#{AD_ManagerCode},
			#{AD_CN},
			#{AD_SamAccountName},
			#{AD_UserPrincipalName} 
        )
    </insert>
    
   	<update id="updateUserADInfo" parameterType="cmap">
		UPDATE covi_smart4j.sys_object_user_ad
		SET 
			  AD_DISPLAYNAME         = #{AD_DisplayName}
			, AD_FIRSTNAME           = #{AD_FirstName}
			, AD_LASTNAME            = #{AD_LastName}
			, AD_INITIALS            = #{AD_Initials}
			, AD_OFFICE              = #{AD_Office}
			, AD_HOMEPAGE            = #{AD_HomePage}
			, AD_COUNTRY             = #{AD_Country}
			, AD_COUNTRYID           = #{AD_CountryID}
			, AD_COUNTRYCODE         = #{AD_CountryCode}
			, AD_STATE               = #{AD_State}
			, AD_CITY                = #{AD_City}
			, AD_STREETADDRESS       = #{AD_StreetAddress}
			, AD_POSTOFFICEBOX       = #{AD_PostOfficeBox}
			, AD_POSTALCODE          = #{AD_PostalCode}
			, AD_USERACCOUNTCONTROL  = #{AD_UserAccountControl}
			, AD_ACCOUNTEXPIRES      = #{AD_AccountExpires}
			, AD_PHONENUMBER         = #{AD_PhoneNumber}
			, AD_HOMEPHONE           = #{AD_HomePhone}
			, AD_PAGER               = #{AD_Pager}
			, AD_MOBILE              = #{AD_Mobile}
			, AD_FAX                 = #{AD_Fax}
			, AD_IPPHONE             = ''
			, AD_INFO                = #{AD_Info}
			, AD_TITLE               = #{AD_Title}
			, AD_DEPARTMENT          = #{AD_Department}
			, AD_COMPANY             = #{AD_Company}
			, AD_MANAGERCODE         = #{AD_ManagerCode} 
			, AD_CN         = #{AD_CN}
			, AD_SamAccountName         = #{AD_SamAccountName}
			, AD_UserPrincipalName         = #{AD_UserPrincipalName} 
		WHERE USERID = 	#{UserCode}
	</update>
	
   	<!-- Exchange 관련 -->
   	<insert id="insertUserExchInfo" parameterType="cmap">
		INSERT INTO covi_smart4j.sys_object_user_exchange (
			USERID,
			EX_PRIMARYMAIL,
			EX_SECONDARYMAIL,
			EX_STORAGESERVER,
			EX_STORAGEGROUP,
			EX_STORAGESTORE,
			EX_CUSTOMATTRIBUTE01,
			EX_CUSTOMATTRIBUTE02,
			EX_CUSTOMATTRIBUTE03,
			EX_CUSTOMATTRIBUTE04,
			EX_CUSTOMATTRIBUTE05,
			EX_CUSTOMATTRIBUTE06,
			EX_CUSTOMATTRIBUTE07,
			EX_CUSTOMATTRIBUTE08,
			EX_CUSTOMATTRIBUTE09,
			EX_CUSTOMATTRIBUTE10,
			EX_CUSTOMATTRIBUTE11,
			EX_CUSTOMATTRIBUTE12,
			EX_CUSTOMATTRIBUTE13,
			EX_CUSTOMATTRIBUTE14,
			EX_CUSTOMATTRIBUTE15
		) 
		VALUES (
		   	#{UserCode},
			#{EX_PrimaryMail},
			#{EX_SecondaryMail},
			#{EX_StorageServer},
			#{EX_StorageGroup},
			#{EX_StorageStore},
			#{EX_CustomAttribute01},
			#{EX_CustomAttribute02},
			#{EX_CustomAttribute03},
			#{EX_CustomAttribute04},
			#{EX_CustomAttribute05},
			#{EX_CustomAttribute06},
			#{EX_CustomAttribute07},
			#{EX_CustomAttribute08},
			#{EX_CustomAttribute09},
			#{EX_CustomAttribute10},
			#{EX_CustomAttribute11},
			#{EX_CustomAttribute12},
			#{EX_CustomAttribute13},
			#{EX_CustomAttribute14},
			#{EX_CustomAttribute15}
		)
    </insert>
   	
	<update id="updateUserExchInfo" parameterType="cmap">
		UPDATE covi_smart4j.sys_object_user_exchange
		SET 
			EX_PRIMARYMAIL = #{EX_PrimaryMail},
			EX_SECONDARYMAIL = #{EX_SecondaryMail},
			EX_STORAGESERVER = #{EX_StorageServer},
			EX_STORAGEGROUP = #{EX_StorageGroup},
			EX_STORAGESTORE = #{EX_StorageStore},
			EX_CUSTOMATTRIBUTE01 = #{EX_CustomAttribute01},
			EX_CUSTOMATTRIBUTE02 = #{EX_CustomAttribute02},
			EX_CUSTOMATTRIBUTE03 = #{EX_CustomAttribute03},
			EX_CUSTOMATTRIBUTE04 = #{EX_CustomAttribute04},
			EX_CUSTOMATTRIBUTE05 = #{EX_CustomAttribute05},
			EX_CUSTOMATTRIBUTE06 = #{EX_CustomAttribute06},
			EX_CUSTOMATTRIBUTE07 = #{EX_CustomAttribute07},
			EX_CUSTOMATTRIBUTE08 = #{EX_CustomAttribute08},
			EX_CUSTOMATTRIBUTE09 = #{EX_CustomAttribute09},
			EX_CUSTOMATTRIBUTE10 = #{EX_CustomAttribute10},
			EX_CUSTOMATTRIBUTE11 = #{EX_CustomAttribute11},
			EX_CUSTOMATTRIBUTE12 = #{EX_CustomAttribute12},
			EX_CUSTOMATTRIBUTE13 = #{EX_CustomAttribute13},
			EX_CUSTOMATTRIBUTE14 = #{EX_CustomAttribute14},
			EX_CUSTOMATTRIBUTE15 = #{EX_CustomAttribute15}
		WHERE USERID = #{UserCode}
	</update>
   	
	<!--SFB 연동 관련 -->
   	<insert id="insertUserMSNInfo" parameterType="cmap">
		INSERT INTO covi_smart4j.sys_object_user_messenger (
			USERID,
			MSN_POOLSERVERNAME,
			MSN_POOLSERVERDN,
			MSN_SIPADDRESS,
			MSN_ANONMY,
			MSN_MEETINGPOLICYNAME,
			MSN_MEETINGPOLICYDN,
			MSN_PHONECOMMUNICATION,
			MSN_PBX,
			MSN_LINEPOLICYNAME,
			MSN_LINEPOLICYDN,
			MSN_LINEURI,
			MSN_LINESERVERURI,
			MSN_FEDERATION,
			MSN_REMOTEACCESS,
			MSN_PUBLICIMCONNECTIVITY,
			MSN_INTERNALIMCONVERSATION,
			MSN_FEDERATEDIMCONVERSATION
		) 
		VALUES (
			#{UserCode},
			#{MSN_PoolServerName},
			#{MSN_PoolServerDN},
			#{MSN_SIPAddress},
			#{MSN_Anonmy},
			#{MSN_MeetingPolicyName},
			#{MSN_MeetingPolicyDN},
			#{MSN_PhoneCommunication},
			#{MSN_PBX},
			#{MSN_LinePolicyName},
			#{MSN_LinePolicyDN},
			#{MSN_LineURI},
			#{MSN_LineServerURI},
			#{MSN_Federation},
			#{MSN_RemoteAccess},
			#{MSN_PublicIMConnectivity},
			#{MSN_InternalIMConversation},
			#{MSN_FederatedIMConversation}
		)
    </insert>
    
	<update id="updateUserMSNInfo" parameterType="cmap">
   	    UPDATE covi_smart4j.sys_object_user_messenger 
		SET
			MSN_POOLSERVERNAME = #{MSN_PoolServerName},
			MSN_POOLSERVERDN = #{MSN_PoolServerDN},
			MSN_SIPADDRESS = #{MSN_SIPAddress},
			MSN_ANONMY = #{MSN_Anonmy},
			MSN_MEETINGPOLICYNAME = #{MSN_MeetingPolicyName},
			MSN_MEETINGPOLICYDN = #{MSN_MeetingPolicyDN},
			MSN_PHONECOMMUNICATION = #{MSN_PhoneCommunication},
			MSN_PBX = #{MSN_PBX},
			MSN_LINEPOLICYNAME = #{MSN_LinePolicyName},
			MSN_LINEPOLICYDN = #{MSN_LinePolicyDN},
			MSN_LINEURI = #{MSN_LineURI},
			MSN_LINESERVERURI = #{MSN_LineServerURI},
			MSN_FEDERATION = #{MSN_Federation},
			MSN_REMOTEACCESS = #{MSN_RemoteAccess},
			MSN_PUBLICIMCONNECTIVITY = #{MSN_PublicIMConnectivity},
			MSN_INTERNALIMCONVERSATION = #{MSN_InternalIMConversation},
			MSN_FEDERATEDIMCONVERSATION = #{MSN_FederatedIMConversation}
		WHERE USERID = #{UserCode}
	</update>
	
	<!-- 상위 폴더의 DomainID와 MenuID 조회  - for insert -->
    <select id="selectDomainMenuID" parameterType="cmap" resultType="cmap">
        SELECT
        	  DomainID
        	, MenuID
        FROM covi_smart4j.SYS_OBJECT_FOLDER
        WHERE FolderID = #{MemberOf}
    </select>
    
    <!-- SortKey 조회 - for insert -->
    <select id="selectSortKey" parameterType="cmap" resultType="java.lang.String">
        SELECT
        	IFNULL((
        		SELECT MAX(SortKey)
	        	FROM covi_smart4j.sys_object_folder
	        	WHERE MemberOf = #{MemberOf}
	        	AND DeleteDate IS NULL
	        ) + 1, 0) AS SortKey
    </select>
    
    <!-- 부서 우선 순위 가져오기  -->
	<select id="selectDeptSortKey" parameterType="cmap" resultType="cmap">
 	    SELECT
 	    	SortKey, 
 	    	SortPath
 	    FROM covi_smart4j.sys_object_group
 	    WHERE GroupCode = #{TargetCode}
 	</select>
 	
	<!-- 부서 우선 순위 변경 -->
    <update id="updateDeptSortKey" parameterType="cmap" >
 		UPDATE covi_smart4j.sys_object_group
 		SET
 			SortKey = #{TargetSortKey},
 			SortPath = #{TargetSortPath}
 		WHERE GroupCode = #{TargetCode}
 	</update>
 	
    <!-- 하위 부서 우선 순위 변경 -->
    <update id="updateDeptChildSortKey" parameterType="cmap" >
 		UPDATE covi_smart4j.sys_object_group
 		SET SortPath = REPLACE(SortPath, #{CurrentSortPath}, #{TargetSortPath})
 		WHERE GroupPath LIKE CONCAT('%;', #{TargetCode}, ';%')
 	</update>
 	
    <!-- 사용자 우선 순위 가져오기  -->
	<select id="selectUserSortKey" parameterType="cmap" resultType="cmap">
 	    SELECT SortKey
 	    FROM covi_smart4j.sys_object_user
 	    WHERE UserCode = #{TargetCode}
 	</select>
 	
	<!-- 사용자 우선 순위 변경 -->
    <update id="updateUserSortKey" parameterType="cmap" >
 		UPDATE covi_smart4j.sys_object_user
 		SET SortKey = #{TargetSortKey}
 		WHERE UserCode = #{TargetCode}
 	</update>
    
	<update id="updateDeptPathInfo" parameterType="cmap">
        UPDATE covi_smart4j.sys_object_group
        SET 
        	OUPATH = #{OUPath},
        	GROUPPATH = #{GroupPath},
        	SORTPATH =	#{SortPath}
        WHERE GROUPCODE = #{GroupCode}
    </update>
    
	<!-- 사용자 소속 그룹 명칭 변경 -->
	<update id="updateUserGroupName" parameterType="cmap">
		UPDATE covi_smart4j.sys_object_user_basegroup
		SET 
		<if test='GroupType.equalsIgnoreCase("JobTitle")'>
			JobTitleName = #{DisplayName}, 
			MultiJobTitleName = #{MultiDisplayName},
			JobTitleSortKey = #{SortKey}
		</if>
		<if test='GroupType.equalsIgnoreCase("JobPosition")'>
			JobPositionName = #{DisplayName}, 
			MultiJobPositionName = #{MultiDisplayName},
			JobPositionSortKey = #{SortKey}
		</if>
		<if test='GroupType.equalsIgnoreCase("JobLevel")'>
			JobLevelName = #{DisplayName}, 
			MultiJobLevelName = #{MultiDisplayName},
			JobLevelSortKey = #{SortKey}
		</if>
		<if test='GroupType.equalsIgnoreCase("Dept")'>
			DeptName = #{DisplayName}, 
			MultiDeptName = #{MultiDisplayName},
			DeptSortKey = #{SortKey}
		</if>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			1 = 0    
			<if test='GroupType.equalsIgnoreCase("JobTitle")'>
				OR JobTitleCode = #{GroupCode}
			</if>
			<if test='GroupType.equalsIgnoreCase("JobPosition")'>
				OR JobPositionCode = #{GroupCode}
			</if>
			<if test='GroupType.equalsIgnoreCase("JobLevel")'>
				OR JobLevelCode = #{GroupCode}
			</if>
			<if test='GroupType.equalsIgnoreCase("Dept")'>
				OR DeptCode = #{GroupCode}
			</if>
		</trim>
	</update>
	
	<select id="getIsSyncProgress" parameterType="cmap" resultType="java.lang.String">
		SELECT SettingValue FROM covi_smart4j.sys_base_config WHERE SettingKey = 'IsSyncProgress'
	</select>
	
	<update id="updateSyncProgress" parameterType="cmap">
		UPDATE covi_smart4j.sys_base_config SET SettingValue = #{syncStatus} WHERE SettingKey = 'IsSyncProgress'
	</update>
	
	<select id="getIsSyncList" parameterType="cmap" resultType="cmap">
		SELECT 
			(SELECT SettingValue FROM covi_smart4j.sys_base_config WHERE SettingKey = 'IsSyncDB' AND DOMAINID = '0') AS "IsSyncDB",
			(SELECT SettingValue FROM covi_smart4j.sys_base_config WHERE SettingKey = 'IsSyncIndi' AND DOMAINID = '0') AS "IsSyncIndi",
			(SELECT SettingValue FROM covi_smart4j.sys_base_config WHERE SettingKey = 'IsSyncAD' AND DOMAINID = '0') AS "IsSyncAD",
			(SELECT SettingValue FROM covi_smart4j.sys_base_config WHERE SettingKey = 'IsSyncMail' AND DOMAINID = '0') AS "IsSyncMail",
			(SELECT SettingValue FROM covi_smart4j.sys_base_config WHERE SettingKey = 'IsSyncMessenger' AND DOMAINID = '0') AS "IsSyncMessenger",
			(SELECT SettingValue FROM covi_smart4j.sys_base_config WHERE SettingKey = 'IsDeptSync' AND DOMAINID = '0') AS "IsDeptSync",
            (SELECT SettingValue FROM covi_smart4j.sys_base_config WHERE SettingKey = 'IsJobPositionSync' AND DOMAINID = '0') AS "IsJobPositionSync",
            (SELECT SettingValue FROM covi_smart4j.sys_base_config WHERE SettingKey = 'IsJobLevelSync' AND DOMAINID = '0') AS "IsJobLevelSync",
            (SELECT SettingValue FROM covi_smart4j.sys_base_config WHERE SettingKey = 'IsJobTitleSync' AND DOMAINID = '0') AS "IsJobTitleSync",
            (SELECT SettingValue FROM covi_smart4j.sys_base_config WHERE SettingKey = 'IsUserSync' AND DOMAINID = '0') AS "IsUserSync",
            (SELECT SettingValue FROM covi_smart4j.sys_base_config WHERE SettingKey = 'IsAddJobSync' AND DOMAINID = '0') AS "IsAddJobSync" 
	</select>
	
	<!-- 부서 일정 관련 -->
	<insert id="insertDeptSchedule" parameterType="cmap">
		INSERT INTO covi_smart4j.sys_object_schedulecreation (
			GroupCode,CompanyCode,MenuID,FolderType,DisplayName,MultiDisplayName,OwnerCode,CreateYN
		)
		VALUES (
			#{GroupCode},#{CompanyCode},#{MenuID},#{FolderType},#{DisplayName},#{MultiDisplayName},#{OwnerCode},#{CreateYN}
		)
    </insert>
    
	<select id="selectDeptSchedule" parameterType="cmap" resultType="cmap">
		SELECT
			sod.DomainID,
			sos.GroupCode,
			sos.CompanyCode,
			sos.MenuID,sos.
			FolderType,
			sos.DisplayName,
			sos.MultiDisplayName,
			sos.OwnerCode,
			sos.CreateYN
		FROM covi_smart4j.sys_object_schedulecreation AS sos
		LEFT JOIN covi_smart4j.sys_object_domain AS sod ON sos.CompanyCode = sod.DomainCode
		WHERE CreateYN = 'N'
	</select>
    
    <update id="updateDeptSchedule" parameterType="cmap">
		UPDATE covi_smart4j.sys_object_schedulecreation SET CreateYN = #{CreateYN} WHERE GroupCode = #{GroupCode}
	</update>
	
	<!-- 일정 폴더 수정 -->
    <select id="selectFolderID" parameterType="cmap" resultType="java.lang.String">
    	SELECT FolderID FROM covi_smart4j.sys_object_folder WHERE Reserved5 = #{GroupCode}
    </select>
    
    <select id="selectFolderChildList" parameterType="cmap" resultType="cmap">
	 	SELECT a.FolderID AS "FolderID",  a.Reserved5 AS "Reserved5"
	 	FROM covi_smart4j.sys_object_folder a 
		INNER JOIN covi_smart4j.sys_object_group b ON a.Reserved5 = b.GroupCode
		WHERE a.Foldertype = 'Schedule'
		AND b.Grouppath LIKE CONCAT('%', #{GroupCode}, '%')
		AND b.IsUse = 'Y'
		ORDER BY b.SortPath
	</select>
    
    <update id="updateFolderData" parameterType="cmap">
    	UPDATE covi_smart4j.sys_object_folder 
		SET
			DisplayName = #{DisplayName},
			MultiDisplayName = #{MultiDisplayName},
			Sortkey = #{SortKey},
			ModifyDate = NOW()
		where reserved5 = #{GroupCode}
    </update>
    
    <!-- 권한 관리 -->
    <select id="selectAuthorityList" parameterType="cmap" resultType="cmap">
		<![CDATA[
		SELECT
			  dn.GroupCode AS DomainCode
			, dn.MultiDisplayName AS MultiDomainCode
			, gr.GroupCode
			, gr.GroupType
			, gr.DisplayName AS GroupName
			, gr.MultiDisplayName AS MultiGroupName
			, dn.DisplayName AS DomainName
			, gr.PrimaryMail	
			, gr.MemberOf
			, gr.SortKey
			, gr.GroupID
			, gr.IsUse
			, gr.IsHR
			, gr.IsMail
			, (SELECT COUNT(0) FROM covi_smart4j.sys_object_group AS self WHERE self.MemberOf = gr.GroupCode AND self.IsUse = 'Y') AS hasChild 
			, gr.Description
	    FROM covi_smart4j.sys_object_group AS gr
		LEFT JOIN covi_smart4j.sys_object_group AS dn ON gr.CompanyCode = dn.GroupCode
    	]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			AND (gr.MemberOf != 'NOUSE' OR gr.MemberOf is null)
			AND (gr.MemberOf != 'NOUNIT' OR gr.MemberOf is null)
			AND gr.GroupType = 'Authority'
			<if test="domaincode != null">
				AND gr.CompanyCode = #{domaincode}
			</if>
			<if test="IsUse != null  and IsUse != 'All'.toString()">
				AND gr.IsUse = #{IsUse}
			</if>
			<if test="IsMail != null  and IsMail != 'All'.toString()">
				AND gr.IsMail = #{IsMail}
			</if>
		</trim>
	    <trim prefix="ORDER BY">
			<if test="sortColumn != null and sortDirection != null">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("GroupCode")'>GroupCode</when>
					<when test='sortColumn.equalsIgnoreCase("GroupName")'>GroupName</when>
					<when test='sortColumn.equalsIgnoreCase("IsUse")'>IsUse</when>
					<when test='sortColumn.equalsIgnoreCase("Description")'>Description</when>
					<when test='sortColumn.equalsIgnoreCase("SetUser")'>SetUser</when>
					<otherwise>(gr.SortKey + 0)</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if> 
			<if test="sortColumn == null or sortDirection == null">
		 		(gr.SortKey + 0) ASC
		    </if>
		</trim>
	    <if test="pageSize != null and pageOffset != null">
		   	LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>
	</select>
	
	<select id="selectAuthorityListCnt" parameterType="cmap" resultType="java.lang.Long">
	    <![CDATA[
		SELECT COUNT(*) 
	    FROM covi_smart4j.sys_object_group AS gr
	    ]]>
	    <trim prefix="WHERE" prefixOverrides="AND |OR ">
			AND gr.GroupType = 'Authority'
		    <if test="domaincode != null">
				AND gr.CompanyCode = #{domaincode}
			</if>
			<if test="IsUse != null  and IsUse != 'All'.toString()">
				AND gr.IsUse = #{IsUse}
			</if>
			<if test="IsMail != null  and IsMail != 'All'.toString()">
				AND gr.IsMail = #{IsMail}
			</if>
		</trim>
    </select>
    
    <select id="selectDomainID" parameterType="cmap" resultType="cmap">
    	SELECT 
    		DomainID, DisplayName, MultiDisplayName, 
    		CONCAT(DomainID,'_Authority') AS MemberOf,
    		(SELECT DisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode = CONCAT(DomainID,'_Authority')) AS GroupName
    	FROM covi_smart4j.sys_object_domain where DomainCode = #{domainCode}
    </select>
    
    <select id="selectAuthorituinfo" parameterType="cmap" resultType="cmap">
    	SELECT 
    		  dn.DomainCode AS CompanyCode
			, dn.MultiDisplayName AS MultiDomainName
			, gr.GroupCode
			, gr.GroupType
			, gr.DisplayName AS DisplayName
			, gr.MultiDisplayName AS MultiDisplayName
			, dn.DisplayName AS DomainName
			, gr.PrimaryMail	
			, gr.MemberOf
			, gr.SortKey
			, gr.GroupID
			, gr.IsUse
			, gr.IsHR
			, gr.IsMail
			, gr.Description
	    FROM covi_smart4j.sys_object_group AS gr
	    INNER JOIN covi_smart4j.sys_object_domain AS dn ON gr.CompanyCode = dn.DomainCode
	    WHERE gr.GroupType = 'Authority' 
	    AND gr.GroupCode = #{gr_code}
    </select>
    
    <!-- 전체퇴사방지 -->
    <select id="selectDeleteUserCount" parameterType="cmap" resultType="java.lang.Long">
		SELECT Count(*) AS DeltCount FROM covi_syncdata.compare_object_user WHERE SyncType = 'DELETE'
	</select>
	
	<!-- 전체부서삭제방지 -->
    <select id="selectDeleteDeptCount" parameterType="cmap" resultType="java.lang.Long">
		SELECT COUNT(*) AS DeltCount FROM covi_syncdata.compare_object_group WHERE SyncType = 'DELETE' AND GroupType = 'Dept'
	</select>
    
    <!-- 동기화 대상 조회 쿼리. 변경비교하는 칼럼 및 필수칼럼만 가져옴 -->
    <select id="selectCompareObjectGroup" parameterType="cmap" resultType="cmap">
		SELECT 
			  A.SyncType AS "SyncType"
			, IFNULL(A.GroupCode,' ') AS "GroupCode"
			, IFNULL(A.CompanyCode,' ') AS "CompanyCode"
			, IFNULL(A.GroupType,' ') AS "GroupType"
			, IFNULL(A.MemberOf,' ') AS "MemberOf"
			, IFNULL(A.DisplayName,' ') AS "DisplayName"
			, IFNULL(A.MultiDisplayName,' ') AS "MultiDisplayName"
			, IFNULL(A.SortKey, 1) AS "SortKey"
			, IFNULL(A.IsDisplay,' ') AS "IsDisplay"
			, IFNULL(A.IsMail,' ') AS "IsMail"
			, IFNULL(A.PrimaryMail,' ') AS "PrimaryMail"
			, IFNULL(A.SecondaryMail,' ') AS "SecondaryMail"
			, IFNULL(A.ManagerCode,' ') AS "ManagerCode"
			, IFNULL(A.Reserved1,' ') AS "Reserved1"
			, IFNULL(A.Reserved2,' ') AS "Reserved2"
			, IFNULL(A.Reserved3,' ') AS "Reserved3"
			, IFNULL(A.Reserved4,' ') AS "Reserved4"
			, IFNULL(A.Reserved5,' ') AS "Reserved5"
			, IFNULL(B.GroupCode,' ') AS "GroupCode_Before"
			, IFNULL(B.CompanyCode,' ') AS "CompanyCode_Before"
			, IFNULL(B.GroupType,' ') AS "GroupType_Before"
			, IFNULL(B.MemberOf,' ') AS "MemberOf_Before"
			, IFNULL(B.DisplayName,' ') AS "DisplayName_Before"
			, IFNULL(B.MultiDisplayName,' ') AS "MultiDisplayName_Before"
			, IFNULL(B.SortKey, 1) AS "SortKey_Before"
			, IFNULL(B.IsDisplay,' ') AS "IsDisplay_Before"
			, IFNULL(B.IsMail,' ') AS "IsMail_Before"
			, IFNULL(B.PrimaryMail,' ') AS "PrimaryMail_Before"
			, IFNULL(B.SecondaryMail,' ') AS "SecondaryMail_Before"
			, IFNULL(B.ManagerCode,' ') AS "ManagerCode_Before"
			, IFNULL(B.Reserved1,' ') AS "Reserved1_Before"
			, IFNULL(B.Reserved2,' ') AS "Reserved2_Before"
			, IFNULL(B.Reserved3,' ') AS "Reserved3_Before"
			, IFNULL(B.Reserved4,' ') AS "Reserved4_Before"
			, IFNULL(B.Reserved5,' ') AS "Reserved5_Before"
		FROM covi_syncdata.compare_object_group A
		LEFT OUTER JOIN covi_smart4j.sys_object_group B ON (A.GroupCode = B.GroupCode)
	</select>
	
	<select id="selectCompareObjectUser" parameterType="cmap" resultType="cmap">
		SELECT 
			  A.SyncType AS "SyncType"
			, IFNULL(A.UserCode,' ') AS "UserCode"
			, IFNULL(A.LogonID,' ') AS "LogonID"
			, IFNULL(A.EmpNo,' ') AS "EmpNo"
			, IFNULL(A.DisplayName,' ') AS "DisplayName"
			, IFNULL(A.CompanyCode,' ') AS "CompanyCode"
			, IFNULL(A.DeptCode,' ') AS "DeptCode"
			, IFNULL(A.JobTitleCode,' ') AS "JobTitleCode"
			, IFNULL(A.JobPositionCode,' ') AS "JobPositionCode"
			, IFNULL(A.JobLevelCode,' ') AS "JobLevelCode"
			, IFNULL(A.RegionCode,' ') AS "RegionCode"
			, IFNULL(A.SortKey, 1) AS "SortKey"
			, IFNULL(A.IsDisplay,' ') AS "IsDisplay"
			, IFNULL(A.EnterDate,' ') AS "EnterDate"
			, IFNULL(A.RetireDate,' ') AS "RetireDate"
			, IFNULL(A.BirthDiv,' ') AS "BirthDiv"
			, IFNULL(A.BirthDate,' ') AS "BirthDate"
			, IFNULL(A.MailAddress,' ') AS "MailAddress"
			, IFNULL(A.ExternalMailAddress,' ') AS "ExternalMailAddress"
			, IFNULL(A.ChargeBusiness,' ') AS "ChargeBusiness"
			, IFNULL(A.PhoneNumberInter,' ') AS "PhoneNumberInter"
			, IFNULL(A.PhoneNumber,' ') AS "PhoneNumber"
			, IFNULL(A.Mobile,' ') AS "Mobile"
			, IFNULL(A.Fax,' ') AS "Fax"
			, IFNULL(A.Reserved1,' ') AS "Reserved1"
			, IFNULL(A.Reserved2,' ') AS "Reserved2"
			, IFNULL(A.Reserved3,' ') AS "Reserved3"
			, IFNULL(A.Reserved4,' ') AS "Reserved4"
			, IFNULL(A.Reserved5,' ') AS "Reserved5"
			, IFNULL(B.UserCode,' ') AS "UserCode_Before"
			, IFNULL(B.LogonID,' ') AS "LogonID_Before"
			, IFNULL(B.EmpNo,' ') AS "EmpNo_Before"
			, IFNULL(B.DisplayName,' ') AS "DisplayName_Before"
			, IFNULL(C.CompanyCode,' ') AS "CompanyCode_Before"
			, IFNULL(C.DeptCode,' ') AS "DeptCode_Before"
			, IFNULL(C.JobTitleCode,' ') AS "JobTitleCode_Before"
			, IFNULL(C.JobPositionCode,' ') AS "JobPositionCode_Before"
			, IFNULL(C.JobLevelCode,' ') AS "JobLevelCode_Before"
			, IFNULL(C.RegionCode,' ') AS "RegionCode_Before"
			, IFNULL(B.SortKey, 1) AS "SortKey_Before"
			, IFNULL(B.IsDisplay,' ') AS "IsDisplay_Before"
			, IFNULL(B.EnterDate,' ') AS "EnterDate_Before"
			, IFNULL(B.RetireDate,' ') AS "RetireDate_Before"
			, IFNULL(B.BirthDiv,' ') AS "BirthDiv_Before"
			, IFNULL(B.BirthDate,' ') AS "BirthDate_Before"
			, IFNULL(B.MailAddress,' ') AS "MailAddress_Before"
			, IFNULL(B.ExternalMailAddress,' ') AS "ExternalMailAddress_Before"
			, IFNULL(B.ChargeBusiness,' ') AS "ChargeBusiness_Before"
			, IFNULL(B.PhoneNumberInter,' ') AS "PhoneNumberInter_Before"
			, IFNULL(B.PhoneNumber,' ') AS "PhoneNumber_Before"
			, IFNULL(B.Mobile,' ') AS "Mobile_Before"
			, IFNULL(B.Fax,' ') AS "Fax_Before"
			, IFNULL(B.Reserved1,' ') AS "Reserved1_Before"
			, IFNULL(B.Reserved2,' ') AS "Reserved2_Before"
			, IFNULL(B.Reserved3,' ') AS "Reserved3_Before"
			, IFNULL(B.Reserved4,' ') AS "Reserved4_Before"
			, IFNULL(B.Reserved5,' ') AS "Reserved5_Before"
			
			
			, IFNULL(A.LicSeq,' ') AS "LicSeq"
			, IFNULL(B.LicSeq,' ') AS "LicSeq_Before"
		FROM covi_syncdata.compare_object_user A
		LEFT OUTER JOIN covi_smart4j.sys_object_user B ON (A.UserCode = B.UserCode)
		LEFT OUTER JOIN covi_smart4j.sys_object_user_basegroup C ON (B.UserCode = C.UserCode AND C.JobType = 'Origin')
	</select>
	
	<select id="selectCompareObjectAddjob" parameterType="cmap" resultType="cmap">
		SELECT 
			  SyncType AS "SyncType"
			, IFNULL(UserCode,' ') AS "UserCode"
			, IFNULL(JobType,' ') AS "JobType"
			, IFNULL(CompanyCode,' ') AS "CompanyCode"
			, IFNULL(DeptCode,' ') AS "DeptCode"
			, IFNULL(JobTitleCode,' ') AS "JobTitleCode"
			, IFNULL(JobPositionCode,' ') AS "JobPositionCode"
			, IFNULL(JobLevelCode,' ') AS "JobLevelCode"
			, IFNULL(RegionCode,' ') AS "RegionCode"
			, IFNULL(SortKey, 1) AS "SortKey"
			, IFNULL(Reserved1,' ') AS "Reserved1"
			, IFNULL(Reserved2,' ') AS "Reserved2"
			, IFNULL(Reserved3,' ') AS "Reserved3"
			, IFNULL(Reserved4,' ') AS "Reserved4"
			, IFNULL(Reserved5,' ') AS "Reserved5"
		FROM covi_syncdata.compare_object_addjob
	</select>
	
	
	
	
	
	
	
	
	<!--=========================================================== 신규개발 ===========================================================-->
	
    <select id="selectAllDeptList" parameterType="cmap" resultType="cmap">
    	SELECT	GR.*
			,	COVI_SMART4J.FN_BASEGETDICTIONARY_S(#{lang}, IFNULL(NULLIF(GR.MultiDisplayName,''),GR.DisplayName)) AS LANG_DISPLAYNAME
			,	COVI_SMART4J.FN_BASEGETDICTIONARY_S(#{lang}, IFNULL(MANAGER.MULTIDISPLAYNAME,'')) AS MANAGERNAME
		FROM 	COVI_SMART4J.SYS_OBJECT_DOMAIN DOMAIN
		JOIN	COVI_SMART4J.SYS_OBJECT_GROUP GR
		ON		DOMAIN.DOMAINCODE 	= GR.COMPANYCODE
		LEFT 
		JOIN 	COVI_SMART4J.SYS_OBJECT_USER MANAGER
		ON 		GR.MANAGERCODE 		= MANAGER.USERCODE 
		WHERE 	GR.GROUPTYPE 		= 'Dept'
		<if test="domainId != null and domainId != ''">
			AND DOMAIN.domainId = #{domainId}    
		</if>
		<if test="searchType == 'DeptName' and searchText != null">
			AND GR.MultiDisplayName like CONCAT('%', #{searchText}, '%') 
		</if>
		<if test="searchType == 'DeptCode' and searchText != null">
			AND GR.GroupCode = #{searchText} 
		</if>
		ORDER BY GR.SortPath ASC 
    </select>
    
	<select id="selectAllDeptListCnt" parameterType="cmap" resultType="java.lang.Long">
    	SELECT 	COUNT(DOMAIN.domainId)
  		FROM 	COVI_SMART4J.SYS_OBJECT_DOMAIN DOMAIN
		JOIN	COVI_SMART4J.SYS_OBJECT_GROUP GR
		ON		DOMAIN.DOMAINCODE 	= GR.COMPANYCODE
		LEFT 
		JOIN 	COVI_SMART4J.SYS_OBJECT_USER MANAGER
		ON 		GR.MANAGERCODE 		= MANAGER.USERCODE 
		WHERE 	GR.GROUPTYPE 		= 'Dept'
		<if test="domainId != null and domainId != ''">
			AND DOMAIN.domainId = #{domainId}    
		</if>
		<if test="searchType == 'DeptName' and searchText != null">
			AND GR.MultiDisplayName like CONCAT('%', #{searchText}, '%') 
		</if>
		<if test="searchType == 'DeptCode' and searchText != null">
			AND GR.GroupCode = #{searchText} 
		</if>
    </select>
    
    
    <select id="selectGroupInfoWithSubList" parameterType="cmap" resultType="cmap">
        <![CDATA[
		SELECT
			A.GroupID,
			A.GroupCode,
			A.GroupType,
			A.MemberOf,
			(SELECT MultiDisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode=A.MemberOf) As ParentName,
			A.GroupPath,
			A.MultiDisplayName,
			A.MultiShortName,
			A.DisplayName,
			A.SortKey,
			A.SortPath,
			A.OUName,
			A.OUPath,
			A.IsUse,
			A.IsDisplay,
			A.IsMail,
			A.IsHR,
			A.PrimaryMail,
			A.SecondaryMail,
			A.Description,
			A.ReceiptUnitCode,
			A.ApprovalUnitCode,
			A.Receivable,
			A.Approvable,
			A.RegistDate,
			A.ModifyDate,
			A.ManagerCode,
			IFNULL(CONCAT(A.ManagerCode, '|', (SELECT DisplayName FROM covi_smart4j.sys_object_user WHERE UserCode = A.ManagerCode)), '') AS Manager,
			B.MultiDisplayName AS CompanyName,
			A.CompanyCode AS CompanyCode
		FROM covi_smart4j.sys_object_group AS A
		INNER JOIN covi_smart4j.sys_object_domain AS B ON A.CompanyCode = B.DomainCode
		WHERE A.GroupCode IN
		]]>
		<foreach collection="TargetID" item="item"  separator="," open="(" close=")">
		    #{item}
		</foreach>
   		<foreach item="item" index="index" collection="TargetID">
         	OR CONCAT(';',GroupPath) LIKE CONCAT('%;',#{item},';%')   
   		</foreach>
    </select> 
    
    
    <select id="selectAllGroupList" parameterType="cmap" resultType="cmap">
		SELECT 	GR.*
			,	COVI_SMART4J.FN_BASEGETDICTIONARY_S(#{lang}, IFNULL(NULLIF(GR.MultiDisplayName,''),GR.DisplayName)) AS LANG_DISPLAYNAME
			,	CONCAT(IFNULL(UR_CNT.CNT,0),'/',IFNULL(GR_CNT.CNT,0)) AS MEMBER_CNT
  		FROM 	COVI_SMART4J.SYS_OBJECT_DOMAIN DOMAIN
		JOIN	COVI_SMART4J.SYS_OBJECT_GROUP GR
		ON		DOMAIN.DOMAINCODE 	= GR.COMPANYCODE
		LEFT
		JOIN	(
					SELECT	GM.GROUPCODE AS GROUPCODE
						,	COUNT(*) AS CNT
					FROM SYS_OBJECT_GROUP_MEMBER AS GM
					GROUP BY GM.GROUPCODE
				)UR_CNT
		ON 		GR.GROUPCODE = UR_CNT.GROUPCODE
		LEFT
		JOIN	(
					SELECT	GM.GROUPCODE AS GROUPCODE
						,	COUNT(*) AS CNT
					FROM sys_object_group_membergroup AS GM
					GROUP BY GM.GROUPCODE
				)GR_CNT
		ON 		GR.GROUPCODE = GR_CNT.GROUPCODE
		WHERE	1=1
		<if test="domainId != null and domainId != ''">
		AND 	DOMAIN.domainId = #{domainId}    
		</if>
		AND 	GR.GroupType NOT IN ('Dept' ,'JobPosition','JobTitle','JobLevel')#,'Authority','Community'
		AND		GR.GroupCode NOT LIKE CONCAT('%','JobPosition')
		AND 	GR.GroupCode NOT LIKE CONCAT('%','JobTitle')
		AND 	GR.GroupCode NOT LIKE CONCAT('%','JobLevel')
		#AND 	GR.GroupCode NOT LIKE CONCAT('%','Community')
		#AND 	GR.GroupCode NOT LIKE CONCAT('%','Authority')
		ORDER BY GR.SortPath ASC 
    </select>
    
	<select id="selectAllGroupListCnt" parameterType="cmap" resultType="java.lang.Long">  
    	SELECT 	COUNT(*)
  		FROM 	COVI_SMART4J.SYS_OBJECT_DOMAIN DOMAIN
		JOIN	COVI_SMART4J.SYS_OBJECT_GROUP GR
		ON		DOMAIN.DOMAINCODE 	= GR.COMPANYCODE
		WHERE	1=1
		<if test="domainId != null and domainId != ''">
		AND 	DOMAIN.domainId = #{domainId}    
		</if>
		AND 	GR.GroupType NOT IN ('Dept' ,'JobPosition','JobTitle','JobLevel')#,'Authority','Community'
		AND		GR.GroupCode NOT LIKE CONCAT('%','JobPosition')
		AND 	GR.GroupCode NOT LIKE CONCAT('%','JobTitle')
		AND 	GR.GroupCode NOT LIKE CONCAT('%','JobLevel')
		#AND 	GR.GroupCode NOT LIKE CONCAT('%','Community')
		#AND 	GR.GroupCode NOT LIKE CONCAT('%','Authority')
    </select>
    
    <!-- 그룹 우선순위변경 -->
    <update id="updateArbitraryGroupSortKeyByGroupPath" parameterType="cmap" >
 		UPDATE 	covi_smart4j.sys_object_group
 		SET		SortKey 	= 	CASE 	WHEN GroupCode = #{OriginCode} 
										THEN #{TargetSortKey} 
										ELSE SortKey
								END
			,	SortPath 	= CONCAT(#{TargetSortPath},substr(SortPath,instr(SortPath, #{OriginSortPath})+LENGTH(#{OriginSortPath}),LENGTH(SortPath)))
 		WHERE 	1=1
 		AND 	GroupPath LIKE CONCAT(#{OriginGroupPath},'%')  
 	</update>
 	
 	
    <select id="selectGroupInfoList" parameterType="cmap" resultType="cmap">
        <![CDATA[
		SELECT
			A.GroupID,
			A.GroupCode,
			A.GroupType,
			A.MemberOf,
			(SELECT MultiDisplayName FROM covi_smart4j.sys_object_group WHERE GroupCode=A.MemberOf) As ParentName,
			A.GroupPath,
			A.MultiDisplayName,
			A.MultiShortName,
			A.DisplayName,
			A.SortKey,
			A.SortPath,
			A.OUName,
			A.OUPath,
			A.IsUse,
			A.IsDisplay,
			A.IsMail,
			A.IsHR,
			A.PrimaryMail,
			A.SecondaryMail,
			A.Description,
			A.ReceiptUnitCode,
			A.ApprovalUnitCode,
			A.Receivable,
			A.Approvable,
			A.RegistDate,
			A.ModifyDate,
			A.ManagerCode,
			IFNULL(CONCAT(A.ManagerCode, '|', (SELECT DisplayName FROM covi_smart4j.sys_object_user WHERE UserCode = A.ManagerCode)), '') AS Manager,
			B.MultiDisplayName AS CompanyName,
			B.GroupCode AS CompanyCode
		FROM covi_smart4j.sys_object_group AS A
		INNER JOIN covi_smart4j.sys_object_group AS B ON A.CompanyCode = B.GroupCode
		WHERE A.GroupCode IN
		]]>
		<foreach collection="TargetID" item="item"  separator="," open="(" close=")">
		    #{item}
		</foreach>
    </select> 
    
</mapper>
