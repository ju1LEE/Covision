<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="organization.admin">
    
	<insert id="insertObject" parameterType="cmap">
    	INSERT INTO SYS_OBJECT
		(
			  ObjectCode
			, ObjectType
			, IsUse
			, IsSync
			, Description
			, RegistDate
		) VALUES
		(
			  #{ObjectCode}
			, #{ObjectType}
			, #{IsUse}
			, #{IsSync}
			, #{Description}
			, SYSDATE
		)
	</insert>
    
    <!-- update to sys_object  -->
	<update id="updateObject" parameterType="cmap">
    	UPDATE SYS_OBJECT SET
    		   ObjectType = #{ObjectType}
    		 , IsUse = #{IsUse}
    		 , Description = #{Description}
    	WHERE ObjectCode = #{ObjectCode}
	</update>
    
    <!-- delete to sys_object -->
	<update id="deleteObject" parameterType="cmap">
    	UPDATE SYS_OBJECT SET
    	   SET IsUse='N'
    	WHERE ObjectCode = #{ObjectCode}
	</update>
    
    <!-- 그룹유형 조회 -->
    <select id="selectGroupType" resultType="cmap">
        SELECT GroupType AS "GroupType"
             , SortKey AS "SortKey"
             , Priority AS "Priority"
             , DisplayName AS "DisplayName"
             , MultiDisplayName AS "MultiDisplayName" 
        FROM SYS_OBJECT_GROUP_TYPE 
        WHERE GroupType <![CDATA[<>]]> 'UR' 
          AND IsUse = 'Y'
    </select>
    
    <!-- 회사목록 조회 : 요청받은 DomainID를 최상위로 위치하도록 조회 -->
    <select id="selectDomainList" parameterType="cmap" resultType="cmap">
		 SELECT A.optionValue AS "optionValue"
		      , A.optionText AS "optionText"
		 		 FROM (  
				        SELECT dn.GroupCode AS optionValue
				        	 , FN_BASEGETDICTIONARY_S('', dn.MultiDisplayName) AS optionText
				             , '1' AS DNSORT
				             , gr.SortKey
						FROM SYS_OBJECT_GROUP gr
						INNER JOIN SYS_OBJECT_GROUP dn ON gr.CompanyCode = dn.GroupCode
						WHERE gr.GroupType = 'Company'
						<if test="domainCode != null and domainCode != ''">
					 	 	 AND dn.GroupCode = #{domainCode}
						</if>
						<if test="domainCode == null and domainCode == ''">
				    	     AND dn.GroupCode =  '' 
			    		</if>
				    	<if test="assignedDomain.size() > 0" >
				            AND dn.GroupCode IN 
				            <foreach item="item" index="index" collection="assignedDomain" open="(" close=")" separator=",">
				            	#{item}
				    		</foreach>
				        </if>
				    UNION ALL 
				    
				        SELECT dn.GroupCode AS optionValue
				        	 , FN_BASEGETDICTIONARY_S('', dn.MultiDisplayName) AS optionText
				             , '2' AS DNSORT
				             , gr.SortKey
						FROM SYS_OBJECT_GROUP gr
						INNER JOIN SYS_OBJECT_GROUP dn ON gr.CompanyCode = dn.GroupCode
						WHERE gr.GroupType = 'Company'
						<if test="domainCode != null and domainCode != ''">
					 	 	  AND dn.GroupCode != #{domainCode}
						</if>
				    	<if test="domainCode == null and domainCode == ''">
				    	     AND dn.GroupCode !=  '' 
			    		</if>
			    		<if test="assignedDomain.size() > 0" >
				            AND dn.GroupCode IN 
				            <foreach item="item" index="index" collection="assignedDomain" open="(" close=")" separator=",">
				            	#{item}
				    		</foreach>
				        </if>
    			)A 
	   			ORDER BY A.SORTKEY ASC, 
	   			<if test="domainCode != null and domainCode != ''">
			 	 	A.optionValue DESC,
				</if>
	   			A.SortKey ASC 
    </select>
    
    <!-- 도메인 선택시 해당 도메인의 부서를 가져옴 -->
    <select id="selectDeptList" parameterType="cmap" resultType="cmap">
		<![CDATA[
			SELECT    'group' AS "itemType"
					, gr.CompanyCode AS "CompanyCode"
					, gr.GroupCode AS "GroupCode"
					, gr.GroupType AS "GroupType"
					, gr.DisplayName AS "GroupDisplayName"
					, gr.MultiDisplayName AS "GroupName"
					, cn.DisplayName AS "CompanyDisplayName"
					, cn.MultiDisplayName AS "CompanyName"
					, gr.MemberOf AS "MemberOf"
					, gr.SortKey AS "SortKey"
					, gr.SortPath AS "SortPath"
					, gr.GroupID AS "GroupID"
					,(SELECT COUNT(0) FROM SYS_OBJECT_GROUP sog WHERE sog.MemberOf = gr.GroupCode AND sog.IsUse = 'Y') AS "hasChild"
					, REPLACE(SYS_GETFULLPATH(gr.GroupCode),'@','>') AS "GroupFullPath"
			FROM SYS_OBJECT_GROUP gr
			LEFT JOIN SYS_OBJECT_GROUP cn ON gr.CompanyCode = cn.GroupCode AND cn.GroupType = 'Company'
	    ]]>
	    <trim prefix="WHERE" prefixOverrides="AND |OR ">
	        AND (gr.MemberOf != 'NOUSE' OR gr.MemberOf is null)
	        AND (gr.MemberOf != 'NOUNIT' OR gr.MemberOf is null)
	      <if test="companyCode != null">
		  	AND gr.CompanyCode = #{companyCode}
		  </if>
		  <if test="groupType != null and groupType=='dept'">
		  	AND gr.GroupType in ('Dept','Company')  	
		  </if>
		  <if test="groupType != null and groupType=='group'">
		  	AND gr.GroupType != 'Dept'	
		  </if>
		</trim>
		
	    <!-- Order by 절 -->
		<trim prefix="ORDER BY">
		 	gr.SortPath asc
		</trim>
    
	</select>
    
    <select id="selectSubDeptListCnt" parameterType="cmap" resultType="java.lang.Long">
    	SELECT COUNT(A.GroupCode)
  		FROM sys_object_group A 
  		INNER JOIN sys_object_group B ON A.CompanyCode = B.GroupCode AND A.GroupType = 'Dept' AND B.GroupType = 'Company'
  		<trim prefix="WHERE" prefixOverrides="AND |OR ">
		  <if test="gr_code != null">
		    AND A.MemberOf = #{gr_code}
		  </if>
		  <if test="IsUse != null">
		  	AND A.IsUse = #{IsUse}
		  </if>
		  <if test="searchType == 'DeptName' and searchText != null">
		    AND A.MultiDisplayName like CONCAT('%', #{searchText}, '%') 
		  </if>
		  <if test="searchType == 'DeptCode' and searchText != null">
		    AND A.GroupCode = #{searchText} 
		  </if>
		</trim> 
    </select>
	
     <select id="selectSubDeptList" parameterType="cmap" resultType="cmap">
         <include refid="oracle.include.pagingHeader" />
    	 SELECT B.GroupID AS "GroupID"
		      , B.GroupCode AS "GroupCode"
		      , B.CompanyCode AS "CompanyCode"
		      , B.GroupType AS "GroupType"
		      , B.MemberOf AS "MemberOf"
		      , B.GroupPath AS "GroupPath"
		      , B.RegionCode AS "RegionCode"
		      , B.DisplayName AS "DisplayName"
		      , B.MultiDisplayName AS "MultiDisplayName"
		      , B.ShortName AS "ShortName"
		      , B.MultiShortName AS "MultiShortName"
		      , B.OUName AS "OUName"
		      , B.OUPath AS "OUPath"
		      , B.SortKey AS "SortKey"
		      , B.SortPath AS "SortPath"
		      , B.IsUse AS "IsUse"
		      , B.IsDisplay AS "IsDisplay"
		      , B.IsMail AS "IsMail"
		      , B.IsHR AS "IsHR"
		      , B.PrimaryMail AS "PrimaryMail"
		      , B.SecondaryMail AS "SecondaryMail"
		      , B.ManagerCode AS "ManagerCode"
		      , B.Description AS "Description"
		      , B.ReceiptUnitCode AS "ReceiptUnitCode"
		      , B.ApprovalUnitCode AS "ApprovalUnitCode"
		      , B.Receivable AS "Receivable"
		      , B.Approvable AS "Approvable"
		      , B.RegistDate AS "RegistDate"
		      , B.ModifyDate AS "ModifyDate"
		      , B.Reserved1 AS "Reserved1"
		      , B.Reserved2 AS "Reserved2"
		      , B.Reserved3 AS "Reserved3" 
		      , B.Reserved4 AS "Reserved4" 
		      , B.Reserved5 AS "Reserved5" 
		      , B.DomainName AS "DomainName" 
		      , B.MultiDomainName AS "MultiDomainName" 
		      , B.HasChild AS "HasChild" 
		      , B.Depth AS "Depth"  
		  FROM ( 
	         SELECT     
		   			A.*,
					B.DisplayName AS DomainName,
					B.MultiDisplayName AS MultiDomainName, 
		     		(SELECT COUNT(0) FROM SYS_OBJECT_GROUP sog WHERE sog.MemberOf = A.GroupCode AND sog.IsUse = 'Y') AS HasChild,     
		     		0 AS Depth 
	  		FROM SYS_OBJECT_GROUP A 
	  		INNER JOIN SYS_OBJECT_GROUP B ON A.CompanyCode = B.GroupCode AND A.GroupType = 'Dept' AND B.GroupType = 'Company'
	  		<trim prefix="WHERE" prefixOverrides="AND |OR ">
				  <if test="gr_code != null">
				    AND A.MemberOf = #{gr_code}
				  </if>
				  <if test="IsUse != null">
				  	AND A.IsUse = #{IsUse}
				  </if>
				  <if test="searchType == 'DeptName' and searchText != null">
				    AND A.MultiDisplayName LIKE '%'||#{searchText}||'%'
				  </if>
				  <if test="searchType == 'DeptCode' and searchText != null">
				    AND A.GroupCode = #{searchText} 
				  </if>
			</trim>
  		)B
		<!-- Order by 절 -->
		<trim prefix="ORDER BY">
			<if test="sortColumn != null and sortDirection != null">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("GroupCode")'>GroupCode</when>
					<when test='sortColumn.equalsIgnoreCase("SortKey")'>SortKey</when>
					<when test='sortColumn.equalsIgnoreCase("DisplayName")'>DisplayName</when>
					<when test='sortColumn.equalsIgnoreCase("ShortName")'>ShortName</when>
					<when test='sortColumn.equalsIgnoreCase("IsUse")'>IsUse</when>
					<when test='sortColumn.equalsIgnoreCase("IsHR")'>IsHR</when>
					<when test='sortColumn.equalsIgnoreCase("IsDisplay")'>IsDisplay</when>
					<when test='sortColumn.equalsIgnoreCase("IsMail")'>IsMail</when>
					<when test='sortColumn.equalsIgnoreCase("PrimaryMail")'>PrimaryMail</when>
					<when test='sortColumn.equalsIgnoreCase("ManagerCode")'>ManagerCode</when>
					<when test='sortColumn.equalsIgnoreCase("CompanyName")'>CompanyName</when>
					<when test='sortColumn.equalsIgnoreCase("MultiDisplayName")'>MultiDisplayName</when>
					<otherwise>SortPath</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
				<include refid="oracle.include.listOrderBy"/>
			</if> 
			<if test="sortColumn == null or sortDirection == null">
				SortPath ASC
			</if>
		</trim>
		<include refid="oracle.include.pagingFooter" />
    </select>
    
    <select id="selectParentName" parameterType="cmap" resultType="cmap">
    	SELECT     
   			DisplayName AS "DisplayName",
   			MultiDisplayName AS "MultiDisplayName",
   			GroupPath AS "GroupPath"
  		FROM SYS_OBJECT_GROUP
   		WHERE GroupCode = #{gr_code}
    </select>
    
     <select id="selectUserListCnt" parameterType="cmap" resultType="java.lang.Long">
		<![CDATA[
			SELECT COUNT(ur.UserCode)
			FROM SYS_OBJECT_USER  ur
			LEFT JOIN SYS_OBJECT_USER_BASEGROUP bg ON ur.UserCode = bg.UserCode
		]]>
		 <trim prefix="WHERE" prefixOverrides="AND |OR ">
	      <if test="companyCode != null and companyCode != 'ORGROOT'">
		  	AND bg.CompanyCode = #{companyCode}    
		  </if>
		  <if test="deptCode != null">
		  	AND bg.DeptCode = #{deptCode}
		  </if>
		  <if test="IsUse != null">
		  	AND ur.IsUse = #{IsUse}
		  </if>
		  <if test="searchType == 'UserName' and searchText != null">
		    AND ur.MultiDisplayName LIKE '%'||#{searchText}||'%'
		  </if>
		  <if test="searchType == 'UserCode' and searchText != null">
		    AND ur.UserCode = #{searchText} 
		  </if>
		  <if test="searchType == 'DeptName' and searchText != null">
		    AND bg.MultiDeptName LIKE '%'||#{searchText}||'%'
		  </if>
		  <if test="searchType == 'JobPositionName' and searchText != null">
		    AND bg.MultiJobPositionName LIKE '%'||#{searchText}||'%'
		  </if>
		  <if test="searchType == 'JobTitleName' and searchText != null">
		    AND bg.MultiJobTitleName LIKE '%'||#{searchText}||'%'
		  </if>
		  <if test="searchType == 'JobLevelName' and searchText != null">
		    AND bg.MultiJobLevelName LIKE '%'||#{searchText}||'%'
		  </if>
		</trim> 
	</select>
    
    <select id="selectUserList" parameterType="cmap" resultType="cmap">
        <include refid="oracle.include.pagingHeader" />
		SELECT     B.itemType AS "itemType"
				 , B.UserID AS "UserID"
				 , B.UserCode AS "UserCode"
				 , B.DisplayName AS "DisplayName"
				 , B.MultiDisplayName AS "MultiDisplayName" 
				 , B.JobLevel AS "JobLevel"
				 , B.JobTitle AS "JobTitle"
				 , B.JobPosition AS "JobPosition"
				 , B.JobLevelCode AS "JobLevelCode"
				 , B.JobTitleCode AS "JobTitleCode"
				 , B.JobPositionCode AS "JobPositionCode"
				 , B.JobLevelName AS "JobLevelName"
				 , B.JobTitleName AS "JobTitleName"
				 , B.JobPositionName AS "JobPositionName"
				 , B.Mobile AS "Mobile"
				 , B.MailAddress AS "MailAddress"
				 , B.PhoneNumber AS "PhoneNumber"
				 , B.EmpNo AS "EmpNo"
				 , B.DeptCode AS "DeptCode"
				 , B.DeptName AS "DeptName"
				 , B.MultiDeptName AS "MultiDeptName"
				 , B.CompanyCode AS "CompanyCode"
				 , B.CompanyName AS "CompanyName"
				 , B.MultiCompanyName AS "MultiCompanyName"
				 , B.JobType AS "JobType"
				 , B.PhoneNumberInter AS "PhoneNumberInter"
				 , B.IsUse AS "IsUse"
				 , B.IsDisplay AS "IsDisplay"
				 , B.IsHR AS "IsHR"
				 , B.SortKey AS "SortKey"
			FROM (
		
		<![CDATA[
			
				SELECT 'user' AS itemType
					 , ur.UserID 
					 , ur.UserCode 
					 , ur.DisplayName 
					 , ur.MultiDisplayName
					 , bg.JobLevelCode||'&'||bg.MultiJobLevelName AS JobLevel
					 , bg.JobTitleCode||'&'||bg.MultiJobTitleName AS JobTitle
					 , bg.JobPositionCode||'&'||bg.MultiJobPositionName AS JobPosition
					 , bg.JobLevelCode
					 , bg.JobTitleCode
					 , bg.JobPositionCode
					 , bg.JobLevelName
					 , bg.JobTitleName
					 , bg.JobPositionName
					 , ur.Mobile
					 , ur.MailAddress
					 , ur.PhoneNumber	
					 , ur.EmpNo 
					 , bg.DeptCode
					 , bg.DeptName
					 , bg.MultiDeptName
					 , bg.CompanyCode
					 , bg.CompanyName
					 , bg.MultiCompanyName
					 , NVL(bg.JobType,'Original') AS JobType
					 , ur.PhoneNumberInter
					 , ur.IsUse
					 , ur.IsDisplay
					 , ur.IsHR
					 , ur.SortKey
					 , ur.EnterDate 
					 , bg.JobLevelSortKey
					 , bg.JobTitleSortKey 
					 
				FROM SYS_OBJECT_USER ur
				LEFT JOIN SYS_OBJECT_USER_BASEGROUP bg ON ur.UserCode = bg.UserCode
		]]>
		 <trim prefix="WHERE" prefixOverrides="AND |OR ">
	      <if test="companyCode != null and companyCode != 'ORGROOT'">
		  	AND bg.CompanyCode = #{companyCode}    
		  </if>
		  <if test="deptCode != null">
		  	AND bg.DeptCode = #{deptCode}
		  </if>
		  <if test="IsUse != null">
		  	AND ur.IsUse = #{IsUse}
		  </if>
		  <if test="searchType == 'UserName' and searchText != null">
		    AND ur.MultiDisplayName LIKE '%'||#{searchText}||'%'
		  </if>
		  <if test="searchType == 'UserCode' and searchText != null">
		    AND ur.UserCode = #{searchText} 
		  </if>
		  <if test="searchType == 'DeptName' and searchText != null">
		    AND bg.MultiDeptName LIKE '%'||#{searchText}||'%'
		  </if>
		  <if test="searchType == 'JobPositionName' and searchText != null">
		    AND bg.MultiJobPositionName LIKE '%'||#{searchText}||'%'
		  </if>
		  <if test="searchType == 'JobTitleName' and searchText != null">
		    AND bg.MultiJobTitleName LIKE '%'||#{searchText}||'%'
		  </if>
		  <if test="searchType == 'JobLevelName' and searchText != null">
		    AND bg.MultiJobLevelName LIKE '%'||#{searchText}||'%'
		  </if>
		</trim> 
	 )B 
		<!-- Order by 절 -->
		<trim prefix="ORDER BY">
			<if test="sortColumn != null and sortDirection != null">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("SortKey")'>SortKey</when>
					<when test='sortColumn.equalsIgnoreCase("MultiDisplayName")'>MultiDisplayName</when>
					<when test='sortColumn.equalsIgnoreCase("JobTitle")'>JobTitle</when>
					<when test='sortColumn.equalsIgnoreCase("JobPosition")'>JobPosition</when>
					<when test='sortColumn.equalsIgnoreCase("JobLevel")'>JobLevel</when>
					<when test='sortColumn.equalsIgnoreCase("IsUse")'>IsUse</when>
					<when test='sortColumn.equalsIgnoreCase("IsHR")'>IsHR</when>
					<when test='sortColumn.equalsIgnoreCase("MailAddress")'>MailAddress</when>
					<otherwise>UserCode</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
				<include refid="oracle.include.listOrderBy"/>
			</if> 
			<if test="sortColumn == null or sortDirection == null">
		 		B.SortKey ASC
		    </if>
		    , JobTitleSortKey ASC, JobLevelSortKey ASC, EnterDate ASC, MultiDisplayName ASC
		</trim>
		<include refid="oracle.include.pagingFooter" />
	</select>
     
    <select id="selectDeptInfo" parameterType="cmap" resultType="cmap">
        <![CDATA[
       		 SELECT
	        	  A.GroupID AS "GroupID"
	        	, A.GroupCode  AS "GroupCode"
				, A.GroupType AS "GroupType"
				, A.MemberOf AS "MemberOf"
				, A.DisplayName AS "DisplayName"
				, A.ShortName  AS "ShortName"
				, (SELECT MultiDisplayName FROM SYS_OBJECT_GROUP WHERE GroupCode=A.MemberOf) AS "ParentName"
				, A.GroupPath AS "GroupPath"
				, A.MultiDisplayName AS "MultiDisplayName"
				, A.MultiShortName AS "MultiShortName"
				, A.SortKey AS "SortKey"
				, A.SortPath AS "SortPath"
				, A.OUName  AS "OUName"
				, A.OUPath AS "OUPath"
				, A.IsUse AS "IsUse"
				, A.IsDisplay AS "IsDisplay"
				, A.IsMail AS "IsMail"
				, A.IsHR AS "IsHR"
				, A.PrimaryMail AS "PrimaryMail"
				, A.SecondaryMail AS "SecondaryMail"
				, A.Description AS "Description"
				, A.ReceiptUnitCode AS "ReceiptUnitCode"
				, A.ApprovalUnitCode AS "ApprovalUnitCode"
				, A.Receivable AS "Receivable"
				, A.Approvable AS "Approvable"
				, A.RegistDate AS "RegistDate"
				, A.ModifyDate AS "ModifyDate"
				, A.ManagerCode AS "ManagerCode"
	        	, NVL(A.ManagerCode|| '|' || (SELECT DisplayName FROM SYS_OBJECT_USER WHERE UserCode = A.ManagerCode), '') AS "Manager"
	        	, B.MultiDisplayName AS "CompanyName"
	        	, B.GroupCode AS "CompanyCode"
			FROM SYS_OBJECT_GROUP A
			INNER JOIN SYS_OBJECT_GROUP B ON A.CompanyCode = B.GroupCode
			WHERE A.GroupCode = #{gr_code}
		]]>
    </select> 
     
      <select id="selectDeptInfoList" parameterType="cmap" resultType="cmap">
        <![CDATA[
       		 SELECT
	        	  A.GroupID AS "GroupID"
	        	, A.GroupCode  AS "GroupCode"
				, A.GroupType AS "GroupType"
				, A.MemberOf AS "MemberOf"
				, A.DisplayName AS "DisplayName"
				, A.ShortName  AS "ShortName"
				, (SELECT MultiDisplayName FROM SYS_OBJECT_GROUP WHERE GroupCode=A.MemberOf) AS "ParentName"
				, A.GroupPath AS "GroupPath"
				, A.MultiDisplayName AS "MultiDisplayName"
				, A.MultiShortName AS "MultiShortName"
				, A.SortKey AS "SortKey"
				, A.SortPath AS "SortPath"
				, A.OUName  AS "OUName"
				, A.OUPath AS "OUPath"
				, A.IsUse AS "IsUse"
				, A.IsDisplay AS "IsDisplay"
				, A.IsMail AS "IsMail"
				, A.IsHR AS "IsHR"
				, A.PrimaryMail AS "PrimaryMail"
				, A.SecondaryMail AS "SecondaryMail"
				, A.Description AS "Description"
				, A.ReceiptUnitCode AS "ReceiptUnitCode"
				, A.ApprovalUnitCode AS "ApprovalUnitCode"
				, A.Receivable AS "Receivable"
				, A.Approvable AS "Approvable"
				, A.RegistDate AS "RegistDate"
				, A.ModifyDate AS "ModifyDate"
				, A.ManagerCode AS "ManagerCode"
	        	, NVL(A.ManagerCode|| '|' || (SELECT DisplayName FROM SYS_OBJECT_USER WHERE UserCode = A.ManagerCode), '') AS "Manager"
	        	, B.MultiDisplayName AS "CompanyName"
	        	, B.GroupCode AS "CompanyCode"
			FROM SYS_OBJECT_GROUP A
			INNER JOIN SYS_OBJECT_GROUP B ON A.CompanyCode = B.GroupCode
			WHERE A.GroupCode IN
		]]>
		<foreach collection="TargetID" item="item"  separator="," open="(" close=")">
		    #{item}
		</foreach>
    </select> 
    
      <select id="selectUserInfo" parameterType="cmap" resultType="cmap">
		<![CDATA[
			SELECT 
				      ur.UserID AS "UserID"
					, ur.UserCode AS "UserCode"
					, ur.LogonID AS "LogonID"
					, ur.EmpNo AS "EmpNo"
					, ur.MultiDisplayName AS "MultiDisplayName"
					, ur.NickName AS "NickName"
					, ur.MultiAddress AS "MultiAddress"
					, ur.HomePage AS "HomePage"
					, ur.PhoneNumber AS "PhoneNumber"
					, ur.Mobile AS "Mobile"
					, ur.FAX AS "FAX" 
					, ur.IPPhone AS "IPPhone" 
					, ur.UseMessengerConnect AS "UseMessengerConnect" 
					, ur.SortKey AS "SortKey" 
					, ur.SecurityLevel AS "SecurityLevel" 
					, ur.Description AS "Description" 
					, ur.IsUse AS "IsUse" 
					, ur.IsHR AS "IsHR" 
					, ur.IsDisplay AS "IsDisplay" 
					, ur.EnterDate AS "EnterDate" 
					, ur.RetireDate AS "RetireDate" 
					, ur.PhotoPath AS "PhotoPath" 
					, ur.BirthDiv  AS "BirthDiv" 
					, ur.BirthDate AS "BirthDate" 
					, ur.UseMailConnect AS "UseMailConnect" 
					, ur.MailAddress AS "MailAddress" 
					, ur.ExternalMailAddress AS "ExternalMailAddress" 
					, ur.PhoneNumberInter AS "PhoneNumberInter" 
					, ur.Reserved2 AS "Reserved2" 
					, ur.Reserved3 AS "Reserved3" 
					, ur.Reserved4 AS "Reserved4" 
					, (SELECT MultiDisplayName FROM SYS_OBJECT_USER WHERE UserCode = ur.Reserved4) AS "ManagerName"
					, ur.Reserved5 AS "Reserved5" 
					, bg.CompanyCode AS "CompanyCode" 
					, bg.MultiCompanyName AS "MultiCompanyName" 
					, bg.DeptCode AS "DeptCode" 
					, bg.MultiDeptName AS "MultiDeptName" 
					, bg.RegionCode AS "RegionCode" 
					, bg.MultiRegionName AS "MultiRegionName" 
					, bg.JobPositionCode AS "JobPositionCode" 
					, bg.JobPositionName AS "JobPositionName" 
					, bg.JobTitleCode AS "JobTitleCode" 
					, bg.JobTitleName AS "JobTitleName" 
					, bg.JobLevelCode AS "JobLevelCode" 
					, bg.JobLevelName AS "JobLevelName" 
					, apv.UseDeputy AS "UseDeputy" 
					, apv.DeputyCode AS "DeputyCode" 
					, apv.DeputyName AS "DeputyName" 
					, apv.DeputyFromDate AS "DeputyFromDate" 
					, apv.DeputyToDate AS "DeputyToDate" 
					, apv.AlertConfig AS "AlertConfig" 
					, apv.ApprovalUnitCode AS "ApprovalUnitCode" 
					, (SELECT MultiDisplayName FROM SYS_OBJECT_GROUP WHERE GroupCode = apv.ApprovalUnitCode) AS "ApprovalUnitName"
					, apv.ReceiptUnitCode AS "ReceiptUnitCode" 
					, (SELECT MultiDisplayName FROM SYS_OBJECT_GROUP WHERE GroupCode = apv.ReceiptUnitCode) AS "ReceiptUnitName"
					, apv.UseApprovalMessageBoxView AS "UseApprovalMessageBoxView"
					, apv.UseMobile AS "UseMobile"
					, ur.AD_ISUSE
					, ur.EX_ISUSE
					, ur.MSN_ISUSE
					, AD.*
                    , EXCH.*
                    , MSN.*
			FROM SYS_OBJECT_USER ur
			LEFT JOIN SYS_OBJECT_USER_BASEGROUP bg ON ur.UserCode = bg.UserCode AND bg.JobType = 'Origin'
			LEFT JOIN SYS_OBJECT_USER_APPROVAL apv ON ur.UserCode = apv.UserCode
            LEFT JOIN SYS_OBJECT_USER_AD AD ON ur.UserCode = AD.USERID
            LEFT JOIN SYS_OBJECT_USER_EXCHANGE EXCH ON ur.UserCode = EXCH.USERID
            LEFT JOIN SYS_OBJECT_USER_MESSENGER MSN ON ur.UserCode = MSN.USERID
			WHERE ur.UserCode = #{UserCode}
		]]>
	</select>  
	
     <select id="selectUserInfoList" parameterType="cmap" resultType="cmap">
		<![CDATA[
			SELECT 
				      ur.UserID AS "UserID"
					, ur.UserCode AS "UserCode"
					, ur.LogonID AS "LogonID"
					, ur.EmpNo AS "EmpNo"
					, ur.MultiDisplayName AS "MultiDisplayName"
					, ur.NickName AS "NickName"
					, ur.MultiAddress AS "MultiAddress"
					, ur.HomePage AS "HomePage"
					, ur.PhoneNumber AS "PhoneNumber"
					, ur.Mobile AS "Mobile"
					, ur.FAX AS "FAX" 
					, ur.IPPhone AS "IPPhone" 
					, ur.UseMessengerConnect AS "UseMessengerConnect" 
					, ur.SortKey AS "SortKey" 
					, ur.SecurityLevel AS "SecurityLevel" 
					, ur.Description AS "Description" 
					, ur.IsUse AS "IsUse" 
					, ur.IsHR AS "IsHR" 
					, ur.IsDisplay AS "IsDisplay" 
					, ur.EnterDate AS "EnterDate" 
					, ur.RetireDate AS "RetireDate" 
					, ur.PhotoPath AS "PhotoPath" 
					, ur.BirthDiv  AS "BirthDiv" 
					, ur.BirthDate AS "BirthDate" 
					, ur.UseMailConnect AS "UseMailConnect" 
					, ur.MailAddress AS "MailAddress" 
					, ur.ExternalMailAddress AS "ExternalMailAddress" 
					, ur.PhoneNumberInter AS "PhoneNumberInter" 
					, ur.Reserved2 AS "Reserved2" 
					, ur.Reserved3 AS "Reserved3" 
					, ur.Reserved4 AS "Reserved4" 
					, (SELECT MultiDisplayName FROM SYS_OBJECT_USER WHERE UserCode = ur.Reserved4) AS "ManagerName"
					, ur.Reserved5 AS "Reserved5" 
					, bg.CompanyCode AS "CompanyCode" 
					, bg.MultiCompanyName AS "MultiCompanyName" 
					, bg.DeptCode AS "DeptCode" 
					, bg.MultiDeptName AS "MultiDeptName" 
					, bg.RegionCode AS "RegionCode" 
					, bg.MultiRegionName AS "MultiRegionName" 
					, bg.JobPositionCode AS "JobPositionCode" 
					, bg.JobPositionName AS "JobPositionName" 
					, bg.JobTitleCode AS "JobTitleCode" 
					, bg.JobTitleName AS "JobTitleName" 
					, bg.JobLevelCode AS "JobLevelCode" 
					, bg.JobLevelName AS "JobLevelName" 
					, apv.UseDeputy AS "UseDeputy" 
					, apv.DeputyCode AS "DeputyCode" 
					, apv.DeputyName AS "DeputyName" 
					, apv.DeputyFromDate AS "DeputyFromDate" 
					, apv.DeputyToDate AS "DeputyToDate" 
					, apv.AlertConfig AS "AlertConfig" 
					, apv.ApprovalUnitCode AS "ApprovalUnitCode" 
					, (SELECT MultiDisplayName FROM SYS_OBJECT_GROUP WHERE GroupCode = apv.ApprovalUnitCode) AS "ApprovalUnitName"
					, apv.ReceiptUnitCode AS "ReceiptUnitCode" 
					, (SELECT MultiDisplayName FROM SYS_OBJECT_GROUP WHERE GroupCode = apv.ReceiptUnitCode) AS "ReceiptUnitName"
					, apv.UseApprovalMessageBoxView AS "UseApprovalMessageBoxView"
					, apv.UseMobile AS "UseMobile"
					, ur.AD_ISUSE
					, ur.EX_ISUSE
					, ur.MSN_ISUSE
					, AD.*
                    , EXCH.*
                    , MSN.*
                    ,gr.OUPath AS "OUPath"
                	,gr.OUName AS "OUName"
                	,dn.DomainID As "DomainID"
			FROM SYS_OBJECT_USER ur
			INNER JOIN SYS_OBJECT_USER_BASEGROUP bg ON ur.UserCode = bg.UserCode AND bg.JobType = 'Origin'
			INNER JOIN sys_object_group gr ON bg.DeptCode = gr.GroupCode
			INNER JOIN sys_object_domain dn ON bg.CompanyCode = dn.DomainCode
			LEFT JOIN SYS_OBJECT_USER_APPROVAL apv ON ur.UserCode = apv.UserCode
            LEFT JOIN SYS_OBJECT_USER_AD AD ON ur.UserCode = AD.USERID
            LEFT JOIN SYS_OBJECT_USER_EXCHANGE EXCH ON ur.UserCode = EXCH.USERID
            LEFT JOIN SYS_OBJECT_USER_MESSENGER MSN ON ur.UserCode = MSN.USERID
			WHERE ur.UserCode IN
		]]>
		<foreach collection="TargetID" item="item"  separator="," open="(" close=")">
		    #{item}
		</foreach>
	</select>  
     
    <select id="selectDefaultSetInfo" parameterType="cmap" resultType="cmap">
        SELECT
			  A.DisplayName AS "DeptName"
        	, B.DisplayName AS "CompanyName"
        	<if test="domainCode != null and groupType != null">
	        	, (
		        	SELECT NVL(SUBSTR(GroupCode,1, INSTR(GroupCode,'_') -1),GroupCode)		
		            FROM SYS_OBJECT_GROUP
					WHERE GroupCode like '%'||#{groupType}
					  AND CompanyCode = #{domainCode} 
				 ) 
			</if>
			<if test="domainCode == null or groupType == null">
			    , ''
		    </if>
			AS "CompanyID"
		FROM SYS_OBJECT_GROUP A
		INNER JOIN SYS_OBJECT_GROUP B ON A.CompanyCode = B.GroupCode AND B.GroupType = 'Company'
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="domainCode != null">
				AND B.GroupCode = #{domainCode} 
			</if>
	        <if test="gr_code != null">
		    	AND A.GroupCode = #{gr_code} 
		  	</if>
		</trim> 
    </select>
     
    <update id="updateIsUseDept" parameterType="cmap">
	    <![CDATA[
			UPDATE
				SYS_OBJECT_GROUP
			SET
				IsUse = #{IsUse},
				ModifyDate = #{ModifyDate}
			WHERE GroupCode = #{GroupCode}
		]]>
	</update>  
     
    <update id="updateIsHRDept" parameterType="cmap">
	    <![CDATA[
			UPDATE
				SYS_OBJECT_GROUP
			SET
				IsHR = #{IsHR},
				ModifyDate = #{ModifyDate}
			WHERE GroupCode = #{GroupCode}
		]]>
	</update>  
     
    <update id="updateIsDisplayDept" parameterType="cmap">
	    <![CDATA[
			UPDATE
				SYS_OBJECT_GROUP
			SET
				IsDisplay = #{IsDisplay},
				ModifyDate = #{ModifyDate}
			WHERE GroupCode = #{GroupCode}
		]]>
	</update>
    	
    <update id="updateIsMailDept" parameterType="cmap">
	    <![CDATA[
			UPDATE
				SYS_OBJECT_GROUP
			SET
				IsMail = #{IsMail},
				ModifyDate = #{ModifyDate}
			WHERE GroupCode = #{GroupCode}
		]]>
	</update>
	
    <update id="updateIsUseUser" parameterType="cmap">
	    <![CDATA[
			UPDATE
				SYS_OBJECT_USER
			SET
				IsUse = #{IsUse},
				ModifyDate = #{ModifyDate}
			WHERE UserCode = #{UserCode}
		]]>
	</update> 
     
    <update id="updateIsHRUser" parameterType="cmap">
	    <![CDATA[
			UPDATE
				SYS_OBJECT_USER
			SET
				IsHR = #{IsHR},
				ModifyDate = #{ModifyDate}
			WHERE UserCode = #{UserCode}
		]]>
	</update>
	
    <update id="updateIsADUser" parameterType="cmap">
	    <![CDATA[
			UPDATE
				SYS_OBJECT_USER
			SET
				IsAD = #{IsAD},
				ModifyDate = #{ModifyDate}
			WHERE UserCode = #{UserCode}
		]]>
	</update>
	
    <update id="deleteUser" parameterType="cmap">
        UPDATE SYS_OBJECT_USER
           SET IsUse = 'N'
             , IsDisplay = 'N'
        WHERE UserCode IN
		<foreach collection="deleteData" item="item"  separator="," open="(" close=")">
		    #{item}
		</foreach>
	</update>
     
    <update id="deleteUserBaseGroup" parameterType="cmap">
			  UPDATE SYS_OBJECT_USER_BASEGROUP A
        		SET (  
        				A.DeptCode
        		      , A.DeptName
        		      , A.MultiDeptName
        		      , A.DeptSortKey
        		    ) 
        		 =  (SELECT  B.GroupCode
        		           , B.DisplayName
        		           , B.MultiDisplayName
        		           , B.SortKey  
        		     FROM SYS_OBJECT_GROUP B WHERE B.GroupCode = (SELECT CONCAT(C.DomainID,'_RetireDept') 
                                                                                 FROM SYS_OBJECT_DOMAIN C
                                                                                 WHERE C.DomainCode = A.CompanyCode ))
			  WHERE A.UserCode in (
		<foreach collection="deleteData" item="item" separator="," >
			    #{item}
		</foreach>	
		)
	</update> 
     
    <delete id="deleteUserGroupMember" parameterType="cmap">
	    DELETE FROM SYS_OBJECT_GROUP_MEMBER
		WHERE UserCode IN
		<foreach collection="deleteData" item="item"  separator="," open="(" close=")">
		    #{item}
		</foreach>
	</delete> 
     
	<insert id="insertRetiredGroupMember" parameterType="cmap">
        <foreach collection="deleteData" item="item"  open="INSERT ALL " separator=" " close="SELECT * FROM DUAL" > 
	      	INTO SYS_OBJECT_GROUP_MEMBER
	        (
	        	GroupCode,
	        	UserCode,
	        	SortKey,
	        	Role,
	        	IsUse,
	        	IsHR,
	        	MemberStatus,
	        	JoinDate
	        ) 
	  		VALUES
	         (
	         	(SELECT CONCAT(b.DomainID, '_RetireDept') FROM SYS_OBJECT_USER_BASEGROUP a
				LEFT JOIN SYS_OBJECT_DOMAIN b ON a.CompanyCode = b.DomainCode
				WHERE a.UserCode = #{item} AND a.JobType='Origin'),
		       	#{item},
		       	999,
		       	'regular', 
		       	'Y',
		       	'Y',
		       	'A',
		       	SYSDATE
	         )
        </foreach>
	</insert>
	
   	<delete id="deleteDept" parameterType="cmap">
	    DELETE FROM SYS_OBJECT_GROUP
		WHERE GroupCode IN
		<foreach collection="deleteData" item="item"  separator="," open="(" close=")">
		    #{item}
		</foreach>
	</delete>
    
    <select id="selectHasChildDept" parameterType="cmap" resultType="cmap">
		SELECT 
			(SELECT COUNT(0) 
			 FROM SYS_OBJECT_GROUP B 
			 WHERE B.MemberOf = A.GroupCode AND B.IsUse = 'Y')
		AS "HasChild"
		FROM SYS_OBJECT_GROUP A
		WHERE A.GroupCode = #{GroupCode} 
    </select> 
    
     <select id="selectHasUserDept" parameterType="cmap" resultType="cmap">
		SELECT COUNT(UserCode) AS "HasUser"
		FROM  SYS_OBJECT_USER_BASEGROUP
		WHERE DeptCode = #{GroupCode} 
    </select>
    
    <select id="selectIsDuplicateDeptCode" parameterType="cmap" resultType="cmap">
		SELECT COUNT(0) AS "isDuplicate"
		FROM SYS_OBJECT_GROUP
		WHERE GroupCode = #{GroupCode} 
    </select> 
    
    <select id="selectIsDuplicateUserCode" parameterType="cmap" resultType="cmap">
		SELECT COUNT(0) AS "isDuplicate"
		FROM SYS_OBJECT_USER
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
	    	<if test="Type == 'UserCode'">
		  		AND UserCode = #{Code}    
		  	</if>
		  	<if test="Type == 'UserEmpNo'">
		  		AND EmpNo = #{Code}
		  	</if>
		  	<if test="Type == 'LogonID'">
		  		AND LogonID = #{Code}
		  	</if>
		</trim> 
    </select> 
    
    <select id="selectIsDuplicateSortKey" parameterType="cmap" resultType="cmap">
		SELECT 
		    (SELECT COUNT(0)  FROM sys_object_group WHERE MemberOf = #{MemberOf} AND SortKey = #{SortKey}) AS "isDuplicate"
		    , NVL((SELECT MAX(SortKey) FROM sys_object_group WHERE MemberOf = #{MemberOf}),'0') AS "MaxSortKey"
		FROM DUAL
    </select> 
    
    <!-- 도메인 선택시 해당 도메인의 그룹을 가져옴 -->
    <select id="selectGroupList" parameterType="cmap" resultType="cmap">
		<![CDATA[
			SELECT 'group' AS "itemType"
				 , dn.GroupCode AS "DomainCode"
				 , gr.GroupCode AS "GroupCode"
				 , gr.GroupType AS "GroupType"
				 , gr.DisplayName AS "GroupName"
				 , dn.DisplayName AS "DomainName"
				 , gr.PrimaryMail AS "PrimaryMail"
				 , gr.MemberOf AS "MemberOf"
				 , gr.SortKey AS "SortKey"
				 , NVL(gr.SortPath, '') AS "SortPath"
				 , gr.GroupID AS "GroupID"
				 ,(SELECT COUNT(0) FROM SYS_OBJECT_GROUP sog WHERE sog.MemberOf = gr.GroupCode AND sog.IsUse = 'Y') AS "hasChild"
		   FROM SYS_OBJECT_GROUP gr
		   LEFT JOIN SYS_OBJECT_GROUP dn on gr.CompanyCode = dn.GroupCode
	    ]]>
	    <trim prefix="WHERE" prefixOverrides="AND |OR ">
	        AND (gr.MemberOf != 'NOUSE' OR gr.MemberOf is null)
	        AND (gr.MemberOf != 'NOUNIT' OR gr.MemberOf is null)
	      <if test="domaincode != null and domaincode != ''">
			AND gr.CompanyCode = #{domaincode}
		  </if>
		  <if test="grouptype != null and grouptype=='group'">
		  	AND gr.GroupType != 'Dept'	
		  </if>
		</trim>
	    <!-- Order by 절 -->
		<trim prefix="ORDER BY">
		 	gr.SortPath ASC
		</trim>
	</select>
	
	<!-- 임의그룹 리스트 가져오기(cnt) -->
    <select id="selectArbitraryGroupListCnt" parameterType="cmap" resultType="java.lang.Long">
	    <![CDATA[
			SELECT COUNT(*) 
		    FROM SYS_OBJECT_GROUP gr
			LEFT JOIN SYS_OBJECT_GROUP dn on gr.CompanyCode = dn.GroupCode
	    ]]>
	    <trim prefix="WHERE" prefixOverrides="AND |OR ">
	        AND gr.IsDisplay = 'Y' 
	        AND (gr.MemberOf != 'NOUSE' OR gr.MemberOf is null)
	        AND (gr.MemberOf != 'NOUNIT' OR gr.MemberOf is null)
	        <if test="domaincode != null">
			AND gr.CompanyCode = #{domaincode}
		  </if>
		 <if test="grouptype != null and grouptype=='title'">
		  	AND gr.GroupType = 'JobTitle'
		  </if>
		  <if test="grouptype != null and grouptype=='position'">
		  	AND gr.GroupType = 'JobPosition'
		  </if>
		  <if test="grouptype != null and grouptype=='level'">
		  	AND gr.GroupType = 'JobLevel'
		  </if>
	  	  <if test="IsUse != null  and IsUse != 'All'.toString()">
		  	AND gr.IsUse = #{IsUse}
		  </if>
		  <if test="IsHR != null  and IsHR != 'All'.toString()">
		  	AND gr.IsHR = #{IsHR}
		  </if>
		  <if test="IsMail != null  and IsMail != 'All'.toString()">
		  	AND gr.IsMail = #{IsMail}
		  </if>
	      <if test="searchType != null and searchText != null">
	          <choose>
					 <when test="searchType == 'DisplayName'.toString()">
						 AND gr.DisplayName LIKE '%'||#{searchText}||'%'
					 </when>
					 <when test="searchType == 'JobTitleCode'.toString()">
					     AND gr.GroupCode  LIKE '%'||#{searchText}||'%'
					 </when>
			 </choose>
		  </if>
		</trim>
    </select>
    
	<!-- 임의그룹 리스트 가져오기(list) -->
	<select id="selectArbitraryGroupList" parameterType="cmap" resultType="cmap">
        <include refid="oracle.include.pagingHeader" />
        SELECT	  itemType AS "itemType"
				, DomainCode AS "DomainCode"
				, MultiDomainCode AS "MultiDomainCode"
				, GroupCode AS "GroupCode"
				, GroupType AS "GroupType"
				, GroupName AS "GroupName"
				, MultiGroupName AS "MultiGroupName"
				, DomainName AS "DomainName"
				, PrimaryMail AS "PrimaryMail"
				, MemberOf AS "MemberOf"
				, SortKey AS "SortKey"
				, SortPath AS "SortPath"
				, GroupID AS "GroupID"
				, IsUse AS "IsUse"
				, IsHR AS "IsHR"
				, IsMail AS "IsMail"
				, hasChild AS "hasChild"
				, Description AS "Description"
        FROM (
        	SELECT	  'group' AS itemType
					, dn.GroupCode AS DomainCode
					, dn.MultiDisplayName AS MultiDomainCode
					, gr.GroupCode AS GroupCode
					, gr.GroupType AS GroupType
					, gr.DisplayName AS GroupName
					, gr.MultiDisplayName AS MultiGroupName
					, dn.DisplayName AS DomainName
					, gr.PrimaryMail AS PrimaryMail
					, gr.MemberOf AS MemberOf
					, gr.SortKey AS SortKey
					, NVL(gr.SortPath, '') AS SortPath
					, gr.GroupID AS GroupID
					, gr.IsUse AS IsUse
					, gr.IsHR AS IsHR
					, gr.IsMail AS IsMail
					, (SELECT COUNT(0) FROM SYS_OBJECT_GROUP sog WHERE sog.MemberOf = gr.GroupCode AND sog.IsUse = 'Y') AS hasChild
					, gr.Description AS Description
			FROM SYS_OBJECT_GROUP gr
			LEFT JOIN SYS_OBJECT_GROUP dn ON gr.CompanyCode = dn.GroupCode
			<trim prefix="WHERE" prefixOverrides="AND |OR ">
				AND gr.IsDisplay = 'Y'
				AND (gr.MemberOf != 'NOUSE' OR gr.MemberOf is null)
				AND (gr.MemberOf != 'NOUNIT' OR gr.MemberOf is null)
				<if test="domaincode != null">
					AND gr.CompanyCode = #{domaincode}
				</if>
				<if test="grouptype != null and grouptype=='title'">
					AND gr.GroupType = 'JobTitle'
				</if>
				<if test="grouptype != null and grouptype=='position'">
					AND gr.GroupType = 'JobPosition'
				</if>
				<if test="grouptype != null and grouptype=='level'">
					AND gr.GroupType = 'JobLevel'
				</if>
				<if test="IsUse != null  and IsUse != 'All'.toString()">
					AND gr.IsUse = #{IsUse}
				</if>
				<if test="IsHR != null  and IsHR != 'All'.toString()">
					AND gr.IsHR = #{IsHR}
				</if>
				<if test="IsMail != null  and IsMail != 'All'.toString()">
					AND gr.IsMail = #{IsMail}
				</if>
				<if test="searchType != null and searchText != null">
					<choose>
						<when test="searchType == 'DisplayName'.toString()">
							AND gr.DisplayName LIKE '%'||#{searchText}||'%'
						</when>
						<when test="searchType == 'JobTitleCode'.toString()">
							AND gr.GroupCode LIKE '%'||#{searchText}||'%'
						</when>
					</choose>
				</if>
			</trim>
        ) A
	    <!-- Order by 절 -->
		<trim prefix="ORDER BY">
			<if test="sortColumn != null and sortDirection != null">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("GroupName")'>GroupName</when>
					<when test='sortColumn.equalsIgnoreCase("SortKey")'>TO_NUMBER(SortKey)</when>
					<when test='sortColumn.equalsIgnoreCase("IsUse")'>IsUse</when>
					<when test='sortColumn.equalsIgnoreCase("IsHR")'>IsHR</when>
					<when test='sortColumn.equalsIgnoreCase("IsMail")'>IsMail</when>
					<when test='sortColumn.equalsIgnoreCase("PrimaryMail")'>PrimaryMail</when>
					<when test='sortColumn.equalsIgnoreCase("Description")'>Description</when>
					<otherwise>GroupCode</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
				<include refid="oracle.include.listOrderBy"/>
			</if> 
			<if test="sortColumn == null or sortDirection == null">
				TO_NUMBER(SortKey) ASC
			</if>
		</trim>
		<include refid="oracle.include.pagingFooter" />
	</select>
    
    <!-- 임의그룹 드롭다운 리스트 가져오기 -->
    <select id="selectArbitraryGroupDropDownList" parameterType="cmap" resultType="cmap">
		<![CDATA[
			SELECT
				  gr.GroupType AS "GroupType"
				, gr.GroupCode AS "GroupCode"
				, gr.DisplayName AS "GroupName"
		    FROM SYS_OBJECT_GROUP gr
	    ]]>
	    <trim prefix="WHERE" prefixOverrides="AND |OR ">
	        gr.IsUse = 'Y' 
	        AND gr.GroupType in ('JobTitle', 'JobPosition', 'JobLevel') 
	        <if test="domaincode != null">
			AND gr.CompanyCode = #{domaincode}
		  	</if>
		</trim>
	    <!-- Order by 절 -->
	     <trim prefix="ORDER BY">  
			gr.GroupType, gr.SortKey ASC
		</trim>
	</select>
    
    <!-- 임의그룹 개별 정보 가져오기 -->
    <select id="selectArbitraryGroupInfo" parameterType="cmap" resultType="cmap">
		<![CDATA[
			SELECT    'group' AS "itemType"
					, dn.GroupCode AS "DomainCode"
					, gr.GroupCode AS "GroupCode"
					, gr.GroupType AS "GroupType"
					, gr.DisplayName AS "GroupName"
					, gr.MultiDisplayName AS "MultiGroupName"
					, dn.DisplayName AS "CompanyName"
					, dn.MultiDisplayName AS "MultiCompanyName"
					, gr.PrimaryMail AS "PrimaryMail"				
					, gr.MemberOf AS "MemberOf"
			        , NVL(SUBSTR(gr.MemberOf,1, INSTR(gr.MemberOf,'_') -1),gr.MemberOf)	AS "CompanyID"
					, gr.SortKey AS "SortKey"
					, NVL(gr.SortPath, '') AS "SortPath"
					, gr.GroupID AS "GroupID"
					, gr.IsUse AS "IsUse"
					, gr.IsHR AS "IsHR"
					, gr.IsMail AS "IsMail"
					, gr.Description AS "Description"
					, (SELECT COUNT(0) FROM SYS_OBJECT_GROUP sog WHERE sog.MemberOf =gr.GroupCode AND sog.IsUse = 'Y') AS "hasChild" 
		    FROM SYS_OBJECT_GROUP gr
			LEFT JOIN SYS_OBJECT_GROUP dn on gr.CompanyCode = dn.GroupCode
	    ]]>
	    <trim prefix="WHERE" prefixOverrides="AND |OR ">
	        <if test="gr_code != null ">
		  		gr.GroupCode = #{gr_code}
		   </if>
		</trim>
	</select>
    
    <!-- 임의 그룹 목록 설정 변경 -->
    <update id="updateArbitraryGroup" parameterType="cmap" >
 		UPDATE SYS_OBJECT_GROUP
 		SET 
         <choose>
			 <when test="Type == 'IsUse'.toString()">
				 IsUse = #{ToBeValue}
			 </when>
			 <when test="Type == 'IsHR'.toString()">
			     IsHR = #{ToBeValue}
			 </when>
			 <when test="Type == 'IsMail'.toString()">
			     IsMail = #{ToBeValue}
			 </when>
	 </choose>
 		WHERE GroupCode = #{TargetCode}
 	</update>
    
    <!-- 임의 그룹 목록 삭제  -->
    <delete id="deleteArbitraryGroupList" parameterType="cmap">
		DELETE FROM SYS_OBJECT_GROUP
		WHERE	GroupCode IN
			<foreach collection="TargetID" item="item"  separator="," open="(" close=")">
			    #{item}
			</foreach>
	</delete>
	
    <!-- 임의 그룹 우선 순위 가져오기  -->
	<select id="selectArbitraryGroupSortKey" parameterType="cmap" resultType="cmap">
 	    SELECT SortKey, SortPath
 	    FROM SYS_OBJECT_GROUP
 	    WHERE	GroupCode  = #{TargetCode}
 	</select>
    
  	<!-- 임의 그룹 우선 순위 변경 -->
    <update id="updateArbitraryGroupSortKey" parameterType="cmap" >
 		UPDATE SYS_OBJECT_GROUP
 		SET    SortKey = #{TargetSortKey},
 			  SortPath = #{TargetSortPath}
 		WHERE GroupCode = #{TargetCode}
 	</update>
	
	<select id="selectDeptEtcInfo" parameterType="cmap" resultType="cmap">
 	    SELECT 
 	    	  GroupPath AS "GroupPath"
 	    	, SortPath AS "SortPath"
 	    	, OUPath AS "OUPath"
 	    	, (SELECT GroupID FROM SYS_OBJECT_GROUP WHERE GroupCode = #{CompanyCode}) AS "CompanyID"
 	    FROM SYS_OBJECT_GROUP
 	    WHERE GroupCode = #{MemberOf}
 	</select>
	
	<insert id="insertDeptInfo" parameterType="cmap">
        INSERT INTO SYS_OBJECT_GROUP
        (
         	GroupCode,
        	CompanyCode,
        	GroupType,
        	MemberOf,
        	GroupPath,
        	OUPath,
        	OUName,
        	DisplayName,
        	MultiDisplayName,
        	ShortName,
        	MultiShortName,
        	PrimaryMail,
        	Approvable,
        	Receivable,
        	ApprovalUnitCode,
        	ReceiptUnitCode,
        	SortKey,
        	SortPath,
        	IsUse,
        	IsDisplay,
        	IsMail,
        	IsHR,
        	RegistDate,
        	ManagerCode,
        	Description,
        	SecondaryMail
        ) 
        VALUES
        (
        	#{GroupCode},
        	#{CompanyCode},
        	'Dept',
        	#{MemberOf},
        	#{GroupPath},
        	#{OUPath},
        	#{DisplayName}, 
        	#{DisplayName},
        	#{MultiDisplayName},
        	#{ShortName},
        	#{MultiShortName},
        	#{PrimaryMail},
        	#{Approvable},
        	#{Receivable},
        	#{GroupCode},
        	#{GroupCode},
        	#{SortKey},
        	#{SortPath},
        	#{IsUse},
        	#{IsDisplay},
        	#{IsMail},
        	#{IsHR},
        	TO_DATE(#{RegistDate},'yyyy/mm/dd hh24:mi:ss'),
        	#{ManagerCode},
        	#{Description},
        	#{SecondaryMail}    	
        )
    </insert>
		
	<update id="updateDeptInfo" parameterType="cmap">
        UPDATE SYS_OBJECT_GROUP
        SET 
        	MemberOf = #{MemberOf},
        	GroupPath = #{GroupPath},
        	OUPath = #{OUPath},
        	DisplayName = #{DisplayName},
        	MultiDisplayName = #{MultiDisplayName},
        	ShortName = #{ShortName},
        	MultiShortName = #{MultiShortName},
        	PrimaryMail = #{PrimaryMail},
        	Approvable = #{Approvable},
        	Receivable = #{Receivable},
        	SortKey = #{SortKey},
        	SortPath = #{SortPath},
        	IsUse = #{IsUse},
        	IsDisplay = #{IsDisplay},
        	IsMail = #{IsMail},
        	IsHR = #{IsHR},
        	ModifyDate = SYSDATE,
        	ManagerCode = #{ManagerCode},
        	Description = #{Description},
        	SecondaryMail = #{SecondaryMail}  
        WHERE GroupCode = #{GroupCode}
    </update>
 
   <update id="updateChildDeptInfo" parameterType="cmap">
		{ CALL SP_UPDATECHILDDEPTINFO(#{GroupCode}) }
   </update>

   <update id="updateDeptPathInfo" parameterType="cmap">
        UPDATE sys_object_group
        SET 
        	OUPATH = #{OUPath},
        	GROUPPATH = #{GroupPath},
        	SORTPATH =	#{SortPath}
        WHERE GROUPCODE = #{GroupCode}
    </update>
    
     <select id="selectDeptPathInfo" parameterType="cmap" resultType="cmap">
       SELECT  
       		GroupCode AS "GroupCode"
       		, Fn_ComOUPathCreate_S(GroupCode) AS "OUPath"
       		, Fn_ComObjectPathCreate_S(0,GroupCode,'GR') AS "GroupPath"
       		, Fn_ComSortPathCreate_S(0,GroupCode,'GR') AS "SortPath"
       	FROM sys_object_group
        WHERE GROUPPATH LIKE '%'||#{GroupCode}||'%' 
        AND GROUPCODE <![CDATA[<>]]> #{GroupCode}
    </select>

   <update id="updateBaseGroupDeptInfo" parameterType="cmap">
      	UPDATE SYS_OBJECT_USER_BASEGROUP
		SET     DeptName = #{DisplayName},
				MultiDeptName = #{MultiDisplayName},
				DeptSortKey = #{SortKey}
		WHERE DeptCode = #{GroupCode}
    </update>
	
    <!-- 임의 그룹 중복 여부 조회 -->
    <select id="selectIsDuplicateGroupCode" parameterType="cmap" resultType="cmap">
		SELECT COUNT(0) AS "isDuplicate"
		FROM SYS_OBJECT_GROUP
		WHERE GroupCode = #{GroupCode} 
    </select> 
    
    <!-- 임의 그룹에 추가  -->
 	<insert id="insertGroup" parameterType="cmap" > 		  
 		   INSERT INTO SYS_OBJECT_GROUP (
		   		  GroupCode
 		   		, CompanyCode
 		   		, GroupType
 		   		, MemberOf
 		   		, GroupPath
 		   		, Regioncode
 		   		, DisplayName
 		   		, MultiDisplayName
 		   		, ShortName
 		   		, MultiShortName
 		   		, OUName
 		   		, OUPath
 		   		, SortKey
 		   		, SortPath
 		   		, IsUse
 		   		, IsDisplay
 		   		, IsMail
 		   		, IsHR
 		   		, PrimaryMail
 		   		, SecondaryMail
 		   		, ManagerCode
 		   		, Description
 		   		, ReceiptUnitCode
 		   		, ApprovalUnitCode
 		   		, Receivable
 		   		, Approvable
 		   		, RegistDate
 		   		, ModifyDate
		   	)
    		VALUES( 
    			#{GroupCode} 
 		   		, #{CompanyCode}
 		   		, #{GroupType}
 		   		, #{MemberOf} 
 		   		, #{GroupPath} 
 		   		, NULL
 		   		, #{GroupName}
 		   		, #{MultiGroupName}
 		   		, #{GroupName}
 		   		, #{MultiGroupName}
 		   		, #{GroupName}
 		   		, #{OUPath}
 		   		, #{SortKey}
 		   		, #{SortPath} 
 		   		, #{IsUse}
 		   		, 'Y'
 		   		, #{IsMail}
 		   		, #{IsHR}
 		   		, <if test="MailAddress != null">
 		   			  #{MailAddress}
		   		  </if>
				  <if test="MailAddress == null">
				      NULL
			      </if>
 		   		, NULL 
 		   		, NULL
 		   		, #{Description}
 		   		, #{GroupCode} 
 		   		, #{GroupCode} 
 		   		, '1'
 		   		, '1'
 		   		, SYSDATE
 		   		, SYSDATE
    		)
 	</insert>
    
	<!-- 임의 그룹에 추가  -->
 	<update id="updateGroup" parameterType="cmap" > 		  
 		   UPDATE SYS_OBJECT_GROUP 
 		   SET 
 		   		  MemberOf = #{MemberOf}
 		   		, GroupPath = #{GroupPath}
 		   		, DisplayName = #{GroupName}
 		   		, MultiDisplayName = #{MultiGroupName}
 		   		, ShortName = #{GroupName}
 		   		, MultiShortName = #{MultiGroupName}
 		   		, OUName = #{GroupName}
 		   		, OUPath = #{OUPath} 
 		   		, SortKey = #{SortKey}
 		   		, SortPath = #{SortPath}
 		   		, IsUse = #{IsUse}
 		   		, IsMail = #{IsMail}
 		   		, IsHR = #{IsHR}
 		   		, PrimaryMail = <if test="MailAddress != null">
					 		   			  #{MailAddress}
							   		  </if>
									  <if test="MailAddress == null">
									      NULL
								      </if> 
 		   		, SecondaryMail = NULL 
 		   		, Description = #{Description}
 		   		, ModifyDate = SYSDATE
		   WHERE GroupCode = #{GroupCode}
 	</update>
	
	<!-- 직위 임의그룹 정보 변경 시 업데이트 -->
 	<update id="updateBaseGroupJobPositionInfo" parameterType="cmap" > 		  
		UPDATE SYS_OBJECT_USER_BASEGROUP
		SET JobPositionName = #{GroupName},
			MultiJobPositionName = #{MultiGroupName},
			JobPositionSortKey = #{SortKey}
		WHERE JobPositionCode = #{GroupCode}
 	</update>
	
	<!-- 직책 임의그룹 정보 변경 시 업데이트 -->
 	<update id="updateBaseGroupJobTitleInfo" parameterType="cmap" > 		  
		UPDATE SYS_OBJECT_USER_BASEGROUP
		SET JobTitleName = #{GroupName},
			MultiJobTitleName = #{MultiGroupName},
			JobTitleSortKey = #{SortKey}
		WHERE JobTitleCode = #{GroupCode}
 	</update>
 	
	<!-- 직급 임의그룹 정보 변경 시 업데이트 -->
 	<update id="updateBaseGroupJobLevelInfo" parameterType="cmap" > 		  
		UPDATE SYS_OBJECT_USER_BASEGROUP
		SET JobLevelName = #{GroupName},
			MultiJobLevelName = #{MultiGroupName},
			JobLevelSortKey = #{SortKey}
		WHERE JobLevelCode = #{GroupCode}
 	</update>
 	
 	<!-- 임의 그룹 삽입 정보 select(path 등) -->
    <select id="selectGroupInsertData" parameterType="cmap" resultType="cmap">
		SELECT GroupPath AS "GroupPath"
		     , OUPath AS "OUPath"
		     , SortPath AS "SortPath"
		FROM SYS_OBJECT_GROUP
		WHERE GroupCode = #{GroupCode} 
    </select> 
    
    <!-- 지역 리스트 가져오기(cnt) -->
    <select id="selectRegionListCnt" parameterType="cmap" resultType="java.lang.Long">
	    <![CDATA[
			SELECT COUNT(*) 
		    FROM SYS_OBJECT_GROUP gr
			LEFT JOIN SYS_OBJECT_GROUP dn ON gr.CompanyCode = dn.GroupCode
	    ]]>
	    <trim prefix="WHERE" prefixOverrides="AND |OR ">
	        AND gr.IsDisplay = 'Y' 
	        AND (gr.MemberOf != 'NOUSE' OR gr.MemberOf is null)
	        AND (gr.MemberOf != 'NOUNIT' OR gr.MemberOf is null)
		 	AND gr.GroupType = 'Region'
	  	  <if test="IsUse != null  and IsUse != 'All'.toString()">
		  	AND gr.IsUse = #{IsUse}
		  </if>
		  <if test="IsHR != null  and IsHR != 'All'.toString()">
		  	AND gr.IsHR = #{IsHR}
		  </if>
		  <if test="IsMail != null  and IsMail != 'All'.toString()">
		  	AND gr.IsMail = #{IsMail}
		  </if>
	      <if test="searchType != null and searchText != null">
	          <choose>
					 <when test="searchType == 'DisplayName'.toString()">
						 AND gr.DisplayName LIKE '%'||#{searchText}||'%'
					 </when>
					 <when test="searchType == 'RegionCode'.toString()">
					     AND gr.GroupCode LIKE '%'||#{searchText}||'%'
					 </when>
			 </choose>
		  </if>
		</trim>
    </select>
	
	<!-- 지역 리스트 가져오기(list) -->
    <select id="selectRegionList" parameterType="cmap" resultType="cmap">
        <include refid="oracle.include.pagingHeader" />
		SELECT  
				  gr.itemType AS "itemType"
				, gr.DomainCode AS "DomainCode"
				, gr.MultiDomainCode AS "MultiDomainCode"
				, gr.GroupCode AS "GroupCode"
				, gr.GroupType AS "GroupType"
				, gr.GroupName AS "GroupName"
				, gr.MultiGroupName AS "MultiGroupName"
				, gr.DomainName AS "DomainName"
				, gr.PrimaryMail AS "PrimaryMail"
				, gr.MemberOf AS "MemberOf"
				, gr.SortKey AS "SortKey"
				, gr.SortPath AS "SortPath"
				, gr.GroupID AS "GroupID"
				, gr.IsUse AS "IsUse"
				, gr.IsHR AS "IsHR"
				, gr.IsMail AS "IsMail"
				, gr.hasChild AS "hasChild"
				, gr.Description AS "Description"
			FROM (
				<![CDATA[
					SELECT 	  'group' AS itemType
							, dn.GroupCode AS DomainCode
							, dn.MultiDisplayName AS MultiDomainCode
							, gr.GroupCode
							, gr.GroupType
							, gr.DisplayName AS GroupName
							, gr.MultiDisplayName AS MultiGroupName
							, dn.DisplayName AS DomainName
							, gr.PrimaryMail			
							, gr.MemberOf
							, gr.SortKey
							, NVL(gr.SortPath, '') AS SortPath
							, gr.GroupID
							, gr.IsUse
							, gr.IsHR
							, gr.IsMail
							, (SELECT COUNT(0) FROM SYS_OBJECT_GROUP sog WHERE sog.MemberOf = gr.GroupCode AND sog.IsUse = 'Y') AS hasChild 
							, gr.Description
				    FROM SYS_OBJECT_GROUP gr
					LEFT JOIN SYS_OBJECT_GROUP dn ON gr.CompanyCode = dn.GroupCode
			    ]]>
			    <trim prefix="WHERE" prefixOverrides="AND |OR ">
			        AND gr.IsDisplay = 'Y' 
			        AND (gr.MemberOf != 'NOUSE' OR gr.MemberOf is null)
			        AND (gr.MemberOf != 'NOUNIT' OR gr.MemberOf is null)
				  	AND gr.GroupType = 'Region'
			  	  <if test="IsUse != null  and IsUse != 'All'.toString()">
				  	AND gr.IsUse = #{IsUse}
				  </if>
				  <if test="IsHR != null  and IsHR != 'All'.toString()">
				  	AND gr.IsHR = #{IsHR}
				  </if>
				  <if test="IsMail != null  and IsMail != 'All'.toString()">
				  	AND gr.IsMail = #{IsMail}
				  </if>
			      <if test="searchType != null and searchText != null">
			          <choose>
							 <when test="searchType == 'DisplayName'.toString()">
								 AND gr.DisplayName  like '%#{searchText}%'
							 </when>
							 <when test="searchType == 'RegionCode'.toString()">
							     AND gr.GroupCode  like '%#{searchText}%'
							 </when>
					 </choose>
				  </if>
				</trim>
				
			 )gr WHERE 1=1
			<!-- Order by 절 -->
			<trim prefix="ORDER BY">  
				<if test="sortColumn != null and sortDirection != null">
		    		<choose>
						<when test='sortColumn.equalsIgnoreCase("DomainName")'>DomainName</when>
						<when test='sortColumn.equalsIgnoreCase("GroupCode")'>GroupCode</when>
						<when test='sortColumn.equalsIgnoreCase("GroupName")'>GroupName</when>
						<when test='sortColumn.equalsIgnoreCase("IsUse")'>IsUse</when>
						<when test='sortColumn.equalsIgnoreCase("IsHR")'>IsHR</when>
						<when test='sortColumn.equalsIgnoreCase("IsMail")'>IsMail</when>
						<when test='sortColumn.equalsIgnoreCase("PrimaryMail")'>PrimaryMail</when>
						<when test='sortColumn.equalsIgnoreCase("Description")'>Description</when>
						<when test='sortColumn.equalsIgnoreCase("MultiGroupName")'>MultiGroupName</when>
						<otherwise>TO_NUMBER(SortKey)</otherwise>
					</choose>
					<choose>
						<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
						<otherwise> DESC</otherwise>
					</choose>
				</if> 
				<if test="sortColumn == null or sortDirection == null">
					TO_NUMBER(SortKey) ASC
			   </if>
			</trim>
		<include refid="oracle.include.pagingFooter" />
	</select>
	
	 <!-- 지역 개별 정보 가져오기 -->
    <select id="selectRegionInfo" parameterType="cmap" resultType="cmap">
		<![CDATA[
			SELECT   'group' AS "itemType"
					, dn.GroupCode AS "DomainCode"
					, gr.GroupCode AS "GroupCode"
					, gr.GroupType AS "GroupType"
					, gr.DisplayName AS "GroupName"
					, gr.MultiDisplayName AS "MultiGroupName"
					, dn.DisplayName AS "CompanyName"
					, gr.PrimaryMail AS "PrimaryMail"	
					, gr.MemberOf AS "MemberOf"
					, NVL(SUBSTR(gr.MemberOf,1, INSTR(gr.MemberOf,'_') -1), gr.MemberOf) AS "CompanyID"
					, gr.SortKey AS "SortKey"
					, NVL(gr.SortPath, '') AS "SortPath"
					, gr.GroupID AS "GroupID"
					, gr.IsUse AS "IsUse"
					, gr.IsHR AS "IsHR"
					, gr.IsMail AS "IsMail"
					, gr.Description AS "Description"
					, (SELECT COUNT(0) FROM SYS_OBJECT_GROUP sog WHERE sog.MemberOf = gr.GroupCode AND sog.IsUse = 'Y') AS "hasChild" 
		    FROM SYS_OBJECT_GROUP gr
			LEFT JOIN SYS_OBJECT_GROUP dn on gr.CompanyCode = dn.GroupCode
	    ]]>
	    <trim prefix="WHERE" prefixOverrides="AND |OR ">
	        gr.GroupType = 'Region' 
	        <if test="gr_code != null ">
		  		AND gr.GroupCode = #{gr_code}
		   </if>
		</trim>
	</select>
	
	<!-- 겸직 리스트 가져오기(cnt) -->
    <select id="selectAddJobListCnt" parameterType="cmap" resultType="java.lang.Long">
		<![CDATA[
			SELECT COUNT(*)
			FROM SYS_OBJECT_USER_BASEGROUP BG
			INNER JOIN SYS_OBJECT_USER A ON BG.UserCode = A.UserCode
	    ]]>
	    <trim prefix="WHERE" prefixOverrides="AND |OR ">
	        BG.JobType = 'AddJob' 
		  <if test="IsHR != null  and IsHR != 'All'.toString()">
		  	AND BG.IsHR = #{IsHR}
		  </if>
	      <if test="searchType != null and searchText != null">
	          <choose>
					 <when test="searchType == 'Users'.toString()">
						 AND A.MultiDisplayName LIKE '%'||#{searchText}||'%'
					 </when>
					 <when test="searchType == 'Company'.toString()">
					     AND BG.MultiCompanyName LIKE '%'||#{searchText}||'%'
					 </when>
					 <when test="searchType == 'Dept'.toString()">
					     AND BG.MultiDeptName LIKE '%'||#{searchText}||'%'
					 </when>
					 <when test="searchType == 'JobTitle'.toString()">
					     AND BG.MultiJobTitleName LIKE '%'||#{searchText}||'%'
					 </when>
					 <when test="searchType == 'JobPosition'.toString()">
					     AND BG.MultiJobPositionName LIKE '%'||#{searchText}||'%'
					 </when>
					 <when test="searchType == 'JobLevel'.toString()">
					     AND BG.MultiJobLevelName LIKE '%'||#{searchText}||'%'
					 </when>
			 </choose>
		  </if>
		</trim>
    </select>
	
	<!-- 겸직 리스트 가져오기(list) -->
    <select id="selectAddJobList" parameterType="cmap" resultType="cmap">
        <include refid="oracle.include.pagingHeader" />
		SELECT  BG.Seq AS NO
     		  , BG.UserCode AS "UserCode"
		      , BG.UserName AS "UserName"
		      , BG.MultiUserName AS "MultiUserName"
		      , BG.CompanyCode AS "CompanyCode"
		      , BG.CompanyName AS "CompanyName"
		      , BG.MultiCompanyName AS "MultiCompanyName"
		      , BG.DeptCode AS "DeptCode"
		      , BG.DeptName AS "DeptName"
		      , BG.MultiDeptName AS "MultiDeptName"
		      , BG.JobTitleCode AS "JobTitleCode"
		      , BG.JobTitleName AS "JobTitleName"
		      , BG.MultiJobTitleName AS "MultiJobTitleName"
		      , BG.JobPositionCode AS "JobPositionCode"
		      , BG.JobPositionName AS "JobPositionName"
		      , BG.MultiJobPositionName AS "MultiJobPositionName"
		      , BG.JobLevelCode AS "JobLevelCode"
		      , BG.JobType AS "JobType"
		      , BG.JobLevelName AS "JobLevelName"
		      , BG.MultiJobLevelName AS "MultiJobLevelName"
		      , BG.IsHR AS "IsHR"
		FROM (
		<![CDATA[
			SELECT 		
				  BG.Seq
				, BG.UserCode
				, ur.DisplayName AS UserName
				, ur.MultiDisplayName AS MultiUserName
				, BG.CompanyCode
				, BG.CompanyName
				, BG.MultiCompanyName
				, BG.DeptCode
				, BG.DeptName
				, BG.MultiDeptName
				, BG.JobTitleCode
				, BG.JobTitleName
				, BG.MultiJobTitleName
				, BG.JobPositionCode
				, BG.JobPositionName
				, BG.MultiJobPositionName
				, BG.JobLevelCode
				, BG.JobType
				, BG.JobLevelName
				, BG.MultiJobLevelName
				, BG.IsHR
			FROM SYS_OBJECT_USER_BASEGROUP BG
			INNER JOIN SYS_OBJECT_USER ur ON BG.UserCode = ur.UserCode
	    ]]>
	    <trim prefix="WHERE" prefixOverrides="AND |OR ">
	        BG.JobType = 'AddJob' 
		  <if test="IsHR != null  and IsHR != 'All'.toString()">
		  	AND BG.IsHR = #{IsHR}
		  </if>
	      <if test="searchType != null and searchText != null">
	           <choose>
					 <when test="searchType == 'Users'.toString()">
						 AND ur.MultiDisplayName LIKE '%'||#{searchText}||'%'
					 </when>
					 <when test="searchType == 'Company'.toString()">
					     AND BG.MultiCompanyName LIKE '%'||#{searchText}||'%'
					 </when>
					 <when test="searchType == 'Dept'.toString()">
					     AND BG.MultiDeptName LIKE '%'||#{searchText}||'%'
					 </when>
					 <when test="searchType == 'JobTitle'.toString()">
					     AND BG.MultiJobTitleName LIKE '%'||#{searchText}||'%'
					 </when>
					 <when test="searchType == 'JobPosition'.toString()">
					     AND BG.MultiJobPositionName LIKE '%'||#{searchText}||'%'
					 </when>
					 <when test="searchType == 'JobLevel'.toString()">
					     AND BG.MultiJobLevelName LIKE '%'||#{searchText}||'%'
					 </when>
			 </choose>
		  </if>
		</trim>
	 
	    )BG
	    <!-- Order by 절 -->
	    <trim prefix="ORDER BY">  
			<if test="sortColumn != null and sortDirection != null">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("CompanyName")'>CompanyName</when>
					<when test='sortColumn.equalsIgnoreCase("DeptName")'>DeptName</when>
					<when test='sortColumn.equalsIgnoreCase("JobTitleName")'>JobTitleName</when>
					<when test='sortColumn.equalsIgnoreCase("JobPositionName")'>JobPositionName</when>
					<when test='sortColumn.equalsIgnoreCase("JobLevelName")'>JobLevelName</when>
					<when test='sortColumn.equalsIgnoreCase("IsHR")'>IsHR</when>
					<otherwise>UserName</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if> 
			<if test="sortColumn == null or sortDirection == null">
				UserName ASC
		    </if>
		</trim>
		<include refid="oracle.include.pagingFooter" />
	</select>
	
	<!-- 겸직 개별 정보 가져오기 -->
    <select id="selectAddJobInfo" parameterType="cmap" resultType="cmap">
		<![CDATA[
			SELECT 
					 	  BG.Seq AS NO
						, BG.UserCode AS "UserCode"
					 	, BG.JobType AS "JobType"
						, ur.DisplayName AS "UserName"
						, ur.MultiDisplayName AS "MultiUserName"
						, BG.CompanyCode AS "CompanyCode"
						, BG.CompanyName AS "CompanyName"
						, BG.MultiCompanyName AS "MultiCompanyName"
						, BG.DeptCode AS "DeptCode"
						, BG.DeptName AS "DeptName"
						, BG.MultiDeptName AS "MultiDeptName"
						, BG.JobTitleCode AS "JobTitleCode"
						, BG.JobTitleName AS "JobTitleName"
						, BG.MultiJobTitleName AS "MultiJobTitleName"
						, BG.JobPositionCode AS "JobPositionCode"
						, BG.JobPositionName AS "JobPositionName"
						, BG.MultiJobPositionName AS "MultiJobPositionName"
						, BG.JobLevelCode AS "JobLevelCode"
						, BG.JobType AS "JobType"
						, BG.JobLevelName AS "JobLevelName"
						, BG.MultiJobLevelName AS "MultiJobLevelName"
						, ur.IsHR AS "IsHR"
			FROM SYS_OBJECT_USER_BASEGROUP BG
			INNER JOIN SYS_OBJECT_USER ur ON BG.UserCode = ur.UserCode
		 ]]>
		 <trim prefix="WHERE" prefixOverrides="AND |OR ">
		   	 BG.JobType = 'AddJob' 
		   	 <if test="id != null ">
		  		AND BG.Seq = #{id}
		  	</if>
		 </trim>
	</select>
 	
   	<!-- 겸직  정보 가져오기 -->
    <select id="selectAddJobInfoList" parameterType="cmap" resultType="cmap">
		<![CDATA[
			SELECT 
					 	  BG.Seq AS NO
						, BG.UserCode AS "UserCode"
					 	, BG.JobType AS "JobType"
						, ur.DisplayName AS "UserName"
						, ur.MultiDisplayName AS "MultiUserName"
						, BG.CompanyCode AS "CompanyCode"
						, BG.CompanyName AS "CompanyName"
						, BG.MultiCompanyName AS "MultiCompanyName"
						, BG.DeptCode AS "DeptCode"
						, BG.DeptName AS "DeptName"
						, BG.MultiDeptName AS "MultiDeptName"
						, BG.JobTitleCode AS "JobTitleCode"
						, BG.JobTitleName AS "JobTitleName"
						, BG.MultiJobTitleName AS "MultiJobTitleName"
						, BG.JobPositionCode AS "JobPositionCode"
						, BG.JobPositionName AS "JobPositionName"
						, BG.MultiJobPositionName AS "MultiJobPositionName"
						, BG.JobLevelCode AS "JobLevelCode"
						, BG.JobType AS "JobType"
						, BG.JobLevelName AS "JobLevelName"
						, BG.MultiJobLevelName AS "MultiJobLevelName"
						, ur.IsHR AS "IsHR"
			FROM SYS_OBJECT_USER_BASEGROUP BG
			INNER JOIN SYS_OBJECT_USER ur ON BG.UserCode = ur.UserCode
		 ]]>
			WHERE Seq IN
			<foreach collection="TargetID" item="item"  separator="," open="(" close=")">
			    #{item}
			</foreach>
	</select>
    
    <!-- 겸직 추가  -->
 	<insert id="insertAddJob" parameterType="cmap" > 		  
 		  INSERT INTO SYS_OBJECT_USER_BASEGROUP (
		   		UserCode
		   		, JobType
		   		, SortKey
 		   		, CompanyCode
 		   		, CompanyName
 		   		, MultiCompanyName
 		   		, CompanySortKey
 		   		, DeptCode
 		   		, DeptName
 		   		, MultiDeptName
 		   		, DeptSortKey
 		   		, JobLevelCode
 		   		, JobLevelName
 		   		, MultiJobLevelName
 		   		, JobLevelSortKey
 		   		, JobPositionCode
 		   		, JobPositionName
 		   		, MultiJobPositionName
 		   		, JobPositionSortKey
 		   		, JobTitleCode
 		   		, JobTitleName
 		   		, MultiJobTitleName
 		   		, JobTitleSortKey
 		   		, IsHR 
 		   		, RegistDate
			)
			SELECT 
		    				#{UR_Code} 
		    				, #{Type}
		    				, 0
			 		   		, #{AddJob_Company}
			 		   		, COMPANY.DisplayName
			 		   		, COMPANY.MultiDisplayName
			 		   		, COMPANY.SortKey
			 		   		, #{AddJob_Group}
			 		   		, DEPT.DisplayName
			 		   		, DEPT.MultiDisplayName
			 		   		, DEPT.SortKey
			 		   		, #{AddJob_Level}
			 		   		, JobLevel.DisplayName
			 		   		, JobLevel.MultiDisplayName
			 		   		, JobLevel.SortKey
			 		   		, #{AddJob_Position}
			 		   		, JobPosition.DisplayName
			 		   		, JobPosition.MultiDisplayName
			 		   		, JobPosition.SortKey
			 		   		, #{AddJob_Title}
			 		   		, JobTitle.DisplayName
			 		   		, JobTitle.MultiDisplayName
			 		   		, JobTitle.SortKey
			 		   		, #{IsHR}
			 		   		, SYSDATE
			FROM SYS_OBJECT_GROUP COMPANY
			LEFT JOIN SYS_OBJECT_GROUP DEPT ON DEPT.GroupType = 'Dept' AND DEPT.GroupCode = #{AddJob_Group}
			LEFT JOIN SYS_OBJECT_GROUP JobTitle ON JobTitle.GroupType = 'JobTitle' AND JobTitle.GroupCode = #{AddJob_Title}
			LEFT JOIN SYS_OBJECT_GROUP JobPosition ON JobPosition.GroupType = 'JobPosition' AND JobPosition.GroupCode = #{AddJob_Position}
			LEFT JOIN SYS_OBJECT_GROUP JobLevel ON JobLevel.GroupType = 'JobLevel' AND JobLevel.GroupCode = #{AddJob_Level}
			WHERE COMPANY.GroupCode = #{AddJob_Company} 
			  AND COMPANY.GroupType = 'Company'
 	</insert>
    
	<!-- 겸직 수정  -->
 	<insert id="updateAddJob" parameterType="cmap" > 		  
 		   UPDATE SYS_OBJECT_USER_BASEGROUP BG
			 SET ( 
		              BG.CompanyCode
		            , BG.CompanyName 
		            , BG.MultiCompanyName
		            , BG.CompanySortKey	
		            , BG.DeptCode
		            , BG.DeptName
		            , BG.MultiDeptName	
		            , BG.DeptSortKey
		            , BG.JobLevelCode
		            , BG.JobLevelName
		            , BG.MultiJobLevelName
		            , BG.JobLevelSortKey
		            , BG.JobPositionCode
		            , BG.JobPositionName
		            , BG.MultiJobPositionName
		            , BG.JobPositionSortKey	
		            , BG.JobTitleCode
		            , BG.JobTitleName
		            , BG.MultiJobTitleName 
		            , BG.JobTitleSortKey
		            , BG.ModifyDate
		            , BG.IsHR 	
		          ) = (
			             SELECT #{AddJob_Company}
			                  , COMPANY.DisplayName
			                  , COMPANY.MultiDisplayName 
			                  , COMPANY.SortKey
			                  , #{AddJob_Group}
			                  , DEPT.DisplayName
			                  , DEPT.MultiDisplayName
			                  , DEPT.SortKey
			                  , #{AddJob_Level}
			                  , JobLevel.DisplayName
			                  , JobLevel.MultiDisplayName
			                  , JobLevel.SortKey
			                  , #{AddJob_Position}
			                  , JobPosition.DisplayName
			                  , JobPosition.MultiDisplayName
			                  , JobPosition.SortKey
			                  , #{AddJob_Title}
			                  , JobTitle.DisplayName
			                  , JobTitle.MultiDisplayName
			                  , JobTitle.SortKey
			                  , SYSDATE
			                  , #{IsHR}	
			             FROM dual
			             LEFT JOIN SYS_OBJECT_GROUP COMPANY ON COMPANY.GroupType = 'Company' AND COMPANY.GroupCode = #{AddJob_Company}  
					     LEFT JOIN SYS_OBJECT_GROUP DEPT ON DEPT.GroupType = 'Dept' AND DEPT.GroupCode = #{AddJob_Group}
						 LEFT JOIN SYS_OBJECT_GROUP JobTitle ON JobTitle.GroupType = 'JobTitle' AND JobTitle.GroupCode = #{AddJob_Title}
						 LEFT JOIN SYS_OBJECT_GROUP JobPosition ON JobPosition.GroupType = 'JobPosition' AND JobPosition.GroupCode = #{AddJob_Position}
						 LEFT JOIN SYS_OBJECT_GROUP JobLevel ON JobLevel.GroupType = 'JobLevel' AND JobLevel.GroupCode = #{AddJob_Level}
			           )
					WHERE BG.Seq = #{id}
 	</insert>
 	
 	<!-- 겸직 목록 설정 변경 => 테이블 구조 변경으로 인하여 보류 -->
    <update id="updateAddJobSetting" parameterType="cmap" >
 		UPDATE SYS_OBJECT_USER_BASEGROUP
 		SET IsHR = #{ToBeValue}
 		WHERE Seq = #{id}
 		AND JobType='AddJob'
 	</update>
 	
 	<!-- 겸직 목록 삭제 -->
    <delete id="deleteAddJob" parameterType="cmap">
		DELETE FROM SYS_OBJECT_USER_BASEGROUP
		WHERE Seq IN
			<foreach collection="TargetID" item="item"  separator="," open="(" close=")">
			    #{item}
			</foreach>
	</delete>
 	
 	<!-- 메일 주소 중복 여부 조회 -->
    <select id="selectIsDuplicateMail" parameterType="cmap" resultType="cmap">
		SELECT MAX(CNT) AS "isDuplicate"
		FROM
		(
			SELECT COUNT(1) AS CNT
			FROM SYS_OBJECT_USER UR1
			<trim prefix="WHERE" prefixOverrides="AND |OR ">
			        MailAddress = #{MailAddress}
			        AND MailAddress IS NOT NULL
			   <if test="Code != null">
				  	AND UserCode != #{Code}
			   </if>
			</trim>
			
			UNION 
			
			SELECT COUNT(1) AS CNT
			FROM SYS_OBJECT_GROUP GR1
			<trim prefix="WHERE" prefixOverrides="AND |OR ">
			        PrimaryMail = #{MailAddress}
			        AND PrimaryMail IS NOT NULL 
			   <if test="Code != null">
				  	AND GroupCode != #{Code}
			   </if>
			</trim>
			
			UNION 
				
			SELECT COUNT(1) AS CNT
			FROM SYS_OBJECT_GROUP GR2
			<trim prefix="WHERE" prefixOverrides="AND |OR ">
			        SecondaryMail LIKE '%'||#{MailAddress}||'%'
			        AND SecondaryMail IS NOT NULL
			   <if test="Code != null">
				  	AND GroupCode != #{Code}
			   </if>
			</trim>
		) MAIL
    </select>
    
	 <!-- 부서 우선 순위 가져오기  -->
	<select id="selectDeptSortKey" parameterType="cmap" resultType="cmap">
 	    SELECT SortKey AS "SortKey"
 	         , SortPath AS "SortPath"
 	    FROM SYS_OBJECT_GROUP
 	    WHERE GroupCode = #{TargetCode}
 	</select>
	
	<!-- 부서 우선 순위 변경 -->
    <update id="updateDeptSortKey" parameterType="cmap" >
 		UPDATE SYS_OBJECT_GROUP
 		SET SortKey = #{TargetSortKey},
 		    SortPath = #{TargetSortPath}
 		WHERE GroupCode = #{TargetCode}
 	</update>

    <!-- 사용자 우선 순위 가져오기  -->
	<select id="selectUserSortKey" parameterType="cmap" resultType="cmap">
 	    SELECT SortKey
 	    FROM SYS_OBJECT_USER
 	    WHERE UserCode = #{TargetCode}
 	</select>
    
   	<!-- 사용자 우선 순위 변경 -->
    <update id="updateUserSortKey" parameterType="cmap" >
 		UPDATE SYS_OBJECT_USER
 		SET SortKey = #{TargetSortKey}
 		WHERE UserCode = #{TargetCode}
 	</update>
    
    <select id="selectJobInfoCount" parameterType="cmap" resultType="java.lang.Long">
        SELECT COUNT(GroupCode) AS COUNT 
        FROM SYS_OBJECT_GROUP A
		INNER JOIN SYS_OBJECT B ON A.GroupCode = B.ObjectCode  
		WHERE 
			CompanyCode = #{domainCode} 
			AND B.DeleteDate IS NULL 
			AND GroupType IN (#{groupType}) 
			AND MemberOf IN (
				SELECT DomainID|| '_'||#{groupType} FROM SYS_OBJECT_DOMAIN WHERE DomainCode = #{domainCode}
			)
    </select>
    
    <select id="selectJobInfoList" parameterType="cmap" resultType="cmap">
		SELECT 
			   GroupCode AS "GroupCode"
			 , DisplayName AS "DisplayName"
			 , GroupType AS "GroupType"
			 , MemberOf AS "MemberOf"
			 , MultiDisplayName AS "MultiDisplayName" 
		FROM SYS_OBJECT_GROUP A
		INNER JOIN SYS_OBJECT B ON A.GroupCode = B.ObjectCode  
		WHERE 
			CompanyCode = #{domainCode}   
			AND B.DeleteDate IS NULL
			AND GroupType IN (#{groupType}) 
			AND MemberOf IN (
				SELECT DomainID||'_'||#{groupType} FROM SYS_OBJECT_DOMAIN WHERE DomainCode = #{domainCode} 
			)
		ORDER BY A.GroupCode
    </select>
    	
	<!-- 회사 드롭다운 목록 가져오기 -->
    <select id="selectAvailableCompanyList" parameterType="cmap" resultType="cmap">
		<![CDATA[
			SELECT
				  CompanyCode AS "CompanyCode"
				, MultiDisplayName AS "CompanyName"
				, SUBSTR(SortKey, -1) AS "CompanyID"
		    FROM SYS_OBJECT_GROUP
		    WHERE groupType = 'Company' 
		      AND IsUse = 'Y'
	    ]]>
	    <!-- Order by 절 -->
	     <trim prefix="ORDER BY">  
			sortKey ASC
		</trim>
	</select>

   	<select id="selectServiceTypeList" parameterType="cmap" resultType="cmap">
        SELECT CN AS "optionValue", CONCAT(CONCAT(CONCAT('[',CN),']'),DISPLAYNAME) AS "optionText" FROM ADMANAGER_ACCOUNT WHERE ServiceType = 'MESSENGER'
    </select> 
    
	<update id="updateOrgUserPhotoPath" parameterType="cmap" >
        UPDATE SYS_OBJECT_USER
 		SET PhotoPath = #{PhotoPath}
 		WHERE UserCode = #{UserCode}
 	</update>
 	
 	 <insert id="insertUserDefaultInfo" parameterType="cmap">
        INSERT INTO SYS_OBJECT_USER
        (
			UserCode,
			LogonID,
			LogonPassword,
			EmpNo,
			NickName,
			DisplayName,
			MultiDisplayName,
			Address,
			MultiAddress,
			HomePage,
			PhoneNumber,
			Mobile,
			Fax,
			IPPhone,
			UseMessengerConnect,
			SortKey,
			SecurityLevel,
			Description,
			IsUse,
			IsHR,
			IsDisplay,
			EnterDate,
			RetireDate,
			PhotoPath,
			BirthDiv,
			BirthDate,
			UseMailConnect,
			MailAddress,
			ExternalMailAddress,
			ChargeBusiness,
			PhoneNumberInter,
			LanguageCode,
			MobileThemeCode,
			TimeZoneCode,
			RegistDate,
			ModifyDate,
			Reserved2,
			Reserved3,
			Reserved4,
			Reserved5,
			AD_ISUSE,
			EX_ISUSE,
			MSN_ISUSE
        ) 
        VALUES
        (
        	#{UserCode},
			#{LogonID},
			CRYPTO.ENC_AES128(#{LogonPassword},#{aeskey}),
			#{EmpNo},
			#{NickName},
			#{DisplayName},
			#{MultiDisplayName},
			#{Address},
			#{MultiAddress},
			#{HomePage},
			#{PhoneNumber},
			#{Mobile},
			#{Fax},
			#{IPPhone},
			#{UseMessengerConnect},
			#{SortKey},
			#{SecurityLevel},
			#{Description},
			#{IsUse},
			#{IsHR},
			#{IsDisplay},
			#{EnterDate},
			#{RetireDate},
			'',
			#{BirthDiv},
			#{BirthDate},
			#{UseMailConnect},
			#{MailAddress},
			#{ExternalMailAddress},
			#{ChargeBusiness},
			#{PhoneNumberInter},
			#{LanguageCode},
			#{MobileThemeCode},
			#{TimeZoneCode},
			SYSDATE,
			SYSDATE,
			#{Reserved2},
			#{Reserved3},
			#{Reserved4},
			#{Reserved5},
			#{AD_IsUse},
			#{EX_IsUse},
			#{MSN_IsUse}  	
        )
	</insert>
	
 	<insert id="insertUserDefaultInfo2" parameterType="cmap">
 	    INSERT INTO SYS_OBJECT_USER_INFO
        (
        	UserCode
        )
        VALUES
        (
        	#{UserCode}
        )
 	</insert>
 	
 	<insert id="insertUserBaseGroupInfo" parameterType="cmap">
         INSERT INTO SYS_OBJECT_USER_BASEGROUP
        (
			UserCode,
			JobType,
			SortKey,
			CompanyCode,
			CompanyName,
			MultiCompanyName,
			CompanySortKey,
			DeptCode,
			DeptName,
			MultiDeptName,
			DeptSortKey,
			RegionCode,
			RegionName,
			MultiRegionName,
			RegionSortKey,
			JobPositionCode,
			JobPositionName,
			MultiJobPositionName,
			JobPositionSortKey,
			JobTitleCode,
			JobTitleName,
			MultiJobTitleName,
			JobTitleSortKey,
			JobLevelCode,
			JobLevelName,
			MultiJobLevelName,
			JobLevelSortKey,
			RegistDate,
			ModifyDate
        ) 
        VALUES
        (
        	#{UserCode},
			#{JobType},
			'0',
			#{CompanyCode},
			#{CompanyName},
			(SELECT MultiDisplayName FROM SYS_OBJECT_GROUP WHERE GroupCode = #{CompanyCode} AND GroupType = 'Company'),
			(SELECT SortKey FROM SYS_OBJECT_GROUP WHERE GroupCode = #{CompanyCode} AND GroupType = 'Company'),
			#{DeptCode},
			#{DeptName},
			(SELECT MultiDisplayName FROM SYS_OBJECT_GROUP WHERE GroupCode = #{DeptCode} AND GroupType = 'Dept'),
			(SELECT SortKey FROM SYS_OBJECT_GROUP WHERE GroupCode = #{DeptCode} AND GroupType = 'Dept'),
			#{RegionCode},
			#{RegionName},
			(SELECT MultiDisplayName FROM SYS_OBJECT_GROUP WHERE GroupCode = #{RegionCode} AND GroupType = 'Region'),
			(SELECT SortKey FROM SYS_OBJECT_GROUP WHERE GroupCode = #{RegionCode} AND GroupType = 'Region'),
			#{JobPositionCode},
			#{JobPositionName},
			(SELECT MultiDisplayName FROM SYS_OBJECT_GROUP WHERE GroupCode = #{JobPositionCode} AND GroupType = 'JobPosition'),
			(SELECT SortKey FROM SYS_OBJECT_GROUP WHERE GroupCode = #{JobPositionCode} AND GroupType = 'JobPosition'),
			#{JobTitleCode},
			#{JobTitleName},
			(SELECT MultiDisplayName FROM SYS_OBJECT_GROUP WHERE GroupCode = #{JobTitleCode} AND GroupType = 'JobTitle'),
			(SELECT SortKey FROM SYS_OBJECT_GROUP WHERE GroupCode = #{JobTitleCode} AND GroupType = 'JobTitle'),
			#{JobLevelCode},
			#{JobLevelName},
			(SELECT MultiDisplayName FROM SYS_OBJECT_GROUP WHERE GroupCode = #{JobLevelCode} AND GroupType = 'JobLevel'),
			(SELECT SortKey FROM SYS_OBJECT_GROUP WHERE GroupCode = #{JobLevelCode} AND GroupType = 'JobLevel'),
			SYSDATE,
			SYSDATE
        )
	</insert>
 	
 	<insert id="insertUserApprovalInfo" parameterType="cmap">
        INSERT INTO SYS_OBJECT_USER_APPROVAL
        (	
        	UserCode,
			UseDeputy,
			DeputyCode,
			DeputyName,
			DeputyFromDate,
			DeputyToDate,
			AlertConfig,
			ApprovalUnitCode,
			ReceiptUnitCode,
			ApprovalCode,
			ApprovalFullCode,
			ApprovalFullName,
			UseApprovalMessageBoxView,
			UseMobile,
			UseApprovalPassword,
			RegistDate,
			ModifyDate
        )
        VALUES
        (
        	#{UserCode},
			#{UseDeputy},
			#{DeputyCode},
			#{DeputyName},
			#{DeputyFromDate},
			#{DeputyToDate},
			#{AlertConfig},
			#{ApprovalUnitCode},
			#{ReceiptUnitCode},
			#{ApprovalCode},
			#{ApprovalFullCode},
			#{ApprovalFullName},
			#{UseApprovalMessageBoxView},
			#{UseMobile},
			#{UseApprovalPassword},
			TO_DATE(#{RegistDate}, 'YYYY/MM/DD HH24:MI:SS'),
			TO_DATE(#{RegistDate}, 'YYYY/MM/DD HH24:MI:SS')
        )
    </insert>
 	
 	<insert id="insertUserGroupMember" parameterType="cmap">
         INSERT INTO SYS_OBJECT_GROUP_MEMBER
          (
        	GroupCode,
        	UserCode,
        	SortKey,
        	Role,
        	IsUse,
        	IsHR,
        	MemberStatus,
        	JoinDate
        ) 
       <trim prefix="VALUES" prefixOverrides=",">
           <choose>
               <when test="CompanyCode != null and CompanyCode != '' ">
		           , (#{CompanyCode}, #{UserCode}, 999, 'regular', 'Y', 'Y', 'A', SYSDATE)
               </when>
               <when test="DeptCode != null and DeptCode != '' ">
		           , ( #{DeptCode}, #{UserCode}, 999, 'regular', 'Y', 'Y', 'A', SYSDATE)
               </when>
               <when test="RegionCode != null and RegionCode != '' ">
		           , ( #{RegionCode}, #{UserCode}, 999, 'regular', 'Y', 'Y', 'A', SYSDATE)
               </when>
               <when test="JobPositionCode != null and JobPositionCode != '' ">
		            , ( #{JobPositionCode}, #{UserCode}, 999, 'regular', 'Y', 'Y', 'A', SYSDATE)
               </when>
               <when test="JobTitleCode != null and JobTitleCode != '' ">
		            , ( #{JobTitleCode}, #{UserCode}, 999, 'regular', 'Y', 'Y', 'A', SYSDATE)
               </when>
               <when test="JobLevelCode != null and JobLevelCode != '' ">
		            , ( #{JobLevelCode}, #{UserCode}, 999, 'regular', 'Y', 'Y', 'A', SYSDATE)
               </when>
           </choose>
        </trim>
    </insert>

    <delete id="deleteUserGroupDefaultMember" parameterType="cmap">
         DELETE FROM SYS_OBJECT_GROUP_MEMBER
		 WHERE UserCode = #{UserCode}
		 AND GroupCode IN (SELECT GroupCode FROM SYS_OBJECT_GROUP 
								WHERE GroupType IN ('JobTitle', 'JobPosition', 'JobLevel', 'Dept', 'Company')
						   )
    </delete>
 	
 	<update id="updateUserDefaultInfo" parameterType="cmap">
        UPDATE SYS_OBJECT_USER
        SET
			EmpNo = #{EmpNo},
			NickName = #{NickName},
			DisplayName = #{DisplayName},
			MultiDisplayName = #{MultiDisplayName},
			Address = #{Address},
			MultiAddress = #{MultiAddress},
			HomePage = #{HomePage},
			PhoneNumber = #{PhoneNumber},
			Mobile = #{Mobile},
			Fax = #{Fax},
			IPPhone = #{IPPhone},
			UseMessengerConnect = #{UseMessengerConnect},
			SortKey = #{SortKey},
			SecurityLevel = #{SecurityLevel},
			Description = #{Description},
			IsUse = #{IsUse},
			IsHR = #{IsHR},
			IsDisplay = #{IsDisplay},
			EnterDate = #{EnterDate},
			RetireDate = #{RetireDate},
			BirthDiv = #{BirthDiv},
			BirthDate = #{BirthDate},
			UseMailConnect = #{UseMailConnect},
			MailAddress = #{MailAddress},
			ExternalMailAddress = #{ExternalMailAddress},
			ChargeBusiness = #{ChargeBusiness},
			PhoneNumberInter = #{PhoneNumberInter},
			LanguageCode = #{LanguageCode},
			MobileThemeCode = #{MobileThemeCode},
			TimeZoneCode = #{TimeZoneCode},
			ModifyDate = SYSDATE,
			Reserved2 = #{Reserved2},
			Reserved3 = #{Reserved3},
			Reserved4 = #{Reserved4},
			Reserved5 = #{Reserved5},
			AD_ISUSE = #{AD_IsUse},
			EX_ISUSE = #{EX_IsUse},
			MSN_ISUSE = #{MSN_IsUse}
		WHERE UserCode = #{UserCode}
	</update>
 	
 	<update id="updateUserBaseGroupInfo" parameterType="cmap">
        UPDATE SYS_OBJECT_USER_BASEGROUP
	        SET
				CompanyCode = #{CompanyCode},
				CompanyName = #{CompanyName},
				MultiCompanyName = (SELECT MultiDisplayName FROM SYS_OBJECT_GROUP WHERE GroupCode = #{CompanyCode} AND GroupType = 'Company'),
				CompanySortKey = (SELECT SortKey FROM SYS_OBJECT_GROUP WHERE GroupCode = #{CompanyCode} AND GroupType = 'Company'),
				DeptCode = #{DeptCode},
				DeptName = #{DeptName},
				MultiDeptName = (SELECT MultiDisplayName FROM SYS_OBJECT_GROUP WHERE GroupCode = #{DeptCode} AND GroupType = 'Dept'),
				DeptSortKey = (SELECT SortKey FROM SYS_OBJECT_GROUP WHERE GroupCode = #{DeptCode} AND GroupType = 'Dept'),
				RegionCode = #{RegionCode},
				RegionName = #{RegionName},
				MultiRegionName = (SELECT MultiDisplayName FROM SYS_OBJECT_GROUP WHERE GroupCode = #{RegionCode} AND GroupType = 'Region'),
				RegionSortKey = (SELECT SortKey FROM SYS_OBJECT_GROUP WHERE GroupCode = #{RegionCode} AND GroupType = 'Region'),
				JobPositionCode = #{JobPositionCode},
				JobPositionName = #{JobPositionName},
				MultiJobPositionName = (SELECT MultiDisplayName FROM SYS_OBJECT_GROUP WHERE GroupCode = #{JobPositionCode} AND GroupType = 'JobPosition'),
				JobPositionSortKey = (SELECT SortKey FROM SYS_OBJECT_GROUP WHERE GroupCode = #{JobPositionCode} AND GroupType = 'JobPosition'),
				JobTitleCode = #{JobTitleCode},
				JobTitleName = #{JobTitleName},
				MultiJobTitleName = (SELECT MultiDisplayName FROM SYS_OBJECT_GROUP WHERE GroupCode = #{JobTitleCode} AND GroupType = 'JobTitle'),
				JobTitleSortKey = (SELECT SortKey FROM SYS_OBJECT_GROUP WHERE GroupCode = #{JobTitleCode} AND GroupType = 'JobTitle'),
				JobLevelCode = #{JobLevelCode},
				JobLevelName = #{JobLevelName},
				MultiJobLevelName = (SELECT MultiDisplayName FROM SYS_OBJECT_GROUP WHERE GroupCode = #{JobLevelCode} AND GroupType = 'JobLevel'),
				JobLevelSortKey = (SELECT SortKey FROM SYS_OBJECT_GROUP WHERE GroupCode = #{JobLevelCode} AND GroupType = 'JobLevel'),
				ModifyDate = TO_DATE(#{RegistDate},'yyyy/mm/dd hh24:mi:ss')
        WHERE UserCode = #{UserCode}
        AND JobType = 'Origin'
	</update>
    
 	<update id="updateUserApprovalInfo" parameterType="cmap">
        UPDATE SYS_OBJECT_USER_APPROVAL
	        SET
				UseDeputy = #{UseDeputy},
				DeputyCode = #{DeputyCode},
				DeputyName = #{DeputyName},
				DeputyFromDate = #{DeputyFromDate},
				DeputyToDate = #{DeputyToDate},
				AlertConfig = #{AlertConfig},
				ApprovalUnitCode = #{ApprovalUnitCode},
				ReceiptUnitCode = #{ReceiptUnitCode},
				ApprovalCode = #{ApprovalCode},
				ApprovalFullCode = #{ApprovalFullCode},
				ApprovalFullName = #{ApprovalFullName},
				UseApprovalMessageBoxView = #{UseApprovalMessageBoxView},
				UseMobile = #{UseMobile},
				UseApprovalPassword = #{UseApprovalPassword},
				ModifyDate = TO_DATE(#{RegistDate},'yyyy/mm/dd hh24:mi:ss')
        WHERE UserCode = #{UserCode}
    </update>
 	
 	<!-- 상위 분류 select box list(category)를 가져옴 -->
    <select id="selectDeptListForCategory" parameterType="cmap" resultType="cmap">
		
		SELECT A.GroupCode AS "GroupCode"
		     , A.GroupName AS "GroupName" 
		     FROM (
		
				SELECT 
						gr.GroupCode,
						FN_BASEGETDICTIONARY_S(#{lang}, gr.MultiDisplayName) AS GroupName,
						'1' AS exSort,
						gr.MemberOf,
						gr.GroupType,
						gr.SortPath
				FROM SYS_OBJECT_GROUP gr
				WHERE 1=1 
				<if test="groupCode != null and groupCode != ''">
				   AND gr.GroupCode = #{groupCode}
				</if>
				<if test="groupCode == null and groupCode == ''">
				   AND gr.GroupCode IS NULL
				</if>
				
				UNION ALL 
				
				SELECT 
						gr.GroupCode,
						FN_BASEGETDICTIONARY_S(#{lang}, gr.MultiDisplayName) AS GroupName,
						'2' AS exSort,
						gr.MemberOf,
						gr.GroupType,
						gr.SortPath
				FROM SYS_OBJECT_GROUP gr
		   		<if test="groupCode != null and groupCode != ''">
				   WHERE gr.GroupCode != #{groupCode}
				</if>
				<if test="groupCode == null and groupCode == ''">
				   WHERE gr.GroupCode IS NOT NULL
				</if>
			)A 
		    <trim prefix="WHERE" prefixOverrides="AND |OR ">
		        AND (A.MemberOf != 'NOUSE' OR A.MemberOf IS NULL)
		        AND (A.MemberOf != 'NOUNIT' OR A.MemberOf IS NULL)
		      <if test="groupCode != null">
			  	AND A.MemberOf = (SELECT MemberOf FROM SYS_OBJECT_GROUP WHERE GroupCode = #{groupCode} AND ROWNUM = 1)
			  </if>
			  <if test="groupType != null and groupType=='Dept'">
			  	AND A.GroupType in ('Dept')  	
			  </if>
			  <if test="groupType != null and groupType=='Company'">
			  	AND A.GroupType in ('Company')
			  </if>
			  <if test="groupType != null and groupType=='group'">
			  	AND A.GroupType != 'Dept'	
			  </if>
			</trim>
		    <!-- Order by 절 -->
			<trim prefix="ORDER BY">
			    <if test="groupCode != null and groupCode != ''">
			 	 	A.exSort ASC,
				</if>
			 	SortPath ASC
			</trim>
	    
	</select>
 	
 	<!--  하위 그룹 목록가져오기 -->
    <select id="selectSubGroupList" parameterType="cmap" resultType="cmap">
        <include refid="oracle.include.pagingHeader" />
       SELECT     C.GroupID AS "GroupID"
		        , C.GroupCode AS "GroupCode"
		        , C.CompanyCode AS "CompanyCode"
		        , C.GroupType AS "GroupType"
		        , C.MemberOf AS "MemberOf"
		        , C.GroupPath AS "GroupPath"
		        , C.RegionCode AS "RegionCode"
		        , C.DisplayName AS "DisplayName"
		        , C.MultiDisplayName AS "MultiDisplayName"
		        , C.ShortName AS "ShortName"
		        , C.MultiShortName AS "MultiShortName"
		        , C.OUName AS "OUName"
		        , C.OUPath AS "OUPath"
		        , C.SortKey AS "SortKey"
		        , C.SortPath AS "SortPath"
		        , C.IsUse AS "IsUse"
		        , C.IsDisplay AS "IsDisplay"
		        , C.IsMail AS "IsMail"
		        , C.IsHR AS "IsHR"
		        , C.PrimaryMail AS "PrimaryMail"
		        , C.SecondaryMail AS "SecondaryMail"
		        , C.ManagerCode AS "ManagerCode"
		        , C.Description AS "Description"
		        , C.ReceiptUnitCode AS "ReceiptUnitCode"
		        , C.ApprovalUnitCode AS "ApprovalUnitCode"
		        , C.Receivable AS "Receivable"
		        , C.Approvable AS "Approvable"
		        , C.RegistDate AS "RegistDate"
		        , C.ModifyDate AS "ModifyDate"
		        , C.Reserved1 AS "Reserved1"
		        , C.Reserved2 AS "Reserved2"
		        , C.Reserved3 AS "Reserved3"
		        , C.Reserved4 AS "Reserved4"
		        , C.Reserved5 AS "Reserved5"
		        , C.DomainName AS "DomainName"
		        , C.MultiDomainName AS "MultiDomainName"
		        , C.HasChild AS "HasChild"
		        , C.Depth AS "Depth"
		    FROM (
		        SELECT     
		      		A.*,
					B.DisplayName AS DomainName,
					B.MultiDisplayName AS MultiDomainName, 
		      		(SELECT COUNT(0) FROM SYS_OBJECT_GROUP sog WHERE sog.MemberOf = A.GroupCode AND sog.IsUse = 'Y') AS HasChild,     
		      		0 AS Depth 
		  		FROM SYS_OBJECT_GROUP A 
		  		INNER JOIN SYS_OBJECT_GROUP B ON A.CompanyCode = B.GroupCode
		   		WHERE A.MemberOf = #{gr_code}
		   		ORDER BY  A.SortPath asc
	   		 )C
   		 <include refid="oracle.include.pagingFooter" />
    </select>
 	
 	<!--  하위 그룹 목록 갯수 가져오기 -->
    <select id="selectSubGroupListCnt" parameterType="cmap" resultType="java.lang.Long">
    	SELECT COUNT(*)
  		FROM SYS_OBJECT_GROUP A 
  		INNER JOIN SYS_OBJECT_GROUP B ON A.CompanyCode = B.GroupCode
   		WHERE A.MemberOf = #{gr_code}
    </select>
 	
    <!-- 그룹 선택시 해당 그룹의 사용자 가져옴 -->
    <!-- 기존 .NET 에서는 사용자 정보를 가져올 때 메인이 되는 테이블이 BASE_GROUP_MEMBER 였지만 
    JAVA 에서는 BASE_OBJECT_UR이 주가 되기 떄문에 겸직등의 정보를 표시 하기 위해 UNION을 사용한다.  -->
    <select id="selectGroupUserList" parameterType="cmap" resultType="cmap">
		<![CDATA[
        	SELECT    'user' AS "itemType"
					, UR.UserID AS "UserID"
					, UR.UserCode AS "UserCode"
					, UR.MultiDisplayName AS "MultiDisplayName"
					, BG.JobLevelCode||'&'||BG.MultiJobLevelName AS "JobLevel"
					, BG.JobTitleCode||'&'||BG.MultiJobTitleName AS "JobTitle"
					, BG.JobPositionCode||'&'||BG.MultiJobPositionName AS "JobPosition"
					, NVL(UR.Mobile, '') AS "Mobile"
					, NVL(UR.MailAddress, '') AS "MailAddress"
					, NVL(UR.PhoneNumber, '') AS "PhoneNumber"
					, UR.EmpNo AS "EmpNo"
					, BG.DeptCode AS "DeptCode"
					, BG.MultiDeptName AS "MultiDeptName"
					, BG.CompanyCode AS "CompanyCode"
					, BG.MultiCompanyName AS "MultiCompanyName"
					, BG.JobType AS "JobType"
					, NVL(UR.PhoneNumberInter, '') AS "PhoneNumberInter"
					, UR.IsUse AS "IsUse"
					, UR.IsDisplay AS "IsDisplay"
					, UR.IsHR AS "IsHR"
					, UR.SortKey AS "SortKey"
		]]>					
			FROM SYS_OBJECT_USER UR
			INNER JOIN SYS_OBJECT_USER_BASEGROUP BG ON UR.UserCode = BG.UserCode
			INNER JOIN (
				SELECT UserCode, (CASE JobType WHEN 'addJob' THEN 'AddJob' ELSE 'Origin' END) AS JobType
				FROM SYS_OBJECT_GROUP_MEMBER 
				<if test="groupCode != null">
					WHERE GroupCode = #{groupCode}
				</if>
			) GM ON BG.JobType = GM.JobType AND UR.UserCode = GM.UserCode
			WHERE 1=1 
			<if test="companyCode != null and companyCode != 'ORGROOT'">
				AND BG.CompanyCode = #{companyCode} 
			</if>
			<if test="pageSize != null and pageOffset != null">
			   	AND ROWNUM BETWEEN #{pageSize} AND #{pageOffset}
			</if>
		<![CDATA[ 	Order By bg.JobTitleSortKey ASC, bg.JobLevelSortKey ASC, ur.SortKey ASC, ur.EnterDate ASC, ur.MultiDisplayName ASC ]]>
	</select>
 	
   <!-- 그룹 선택시 해당 그룹의 사용자 갯수를 가져옴 -->
    <select id="selectGroupUserListCnt" parameterType="cmap" resultType="java.lang.Long">
		<![CDATA[
			SELECT  COUNT(*)
			FROM SYS_OBJECT_USER UR
		]]>
			INNER JOIN SYS_OBJECT_USER_BASEGROUP BG ON UR.UserCode = BG.UserCode
			INNER JOIN (
					SELECT UserCode, (CASE JobType WHEN 'addJob' THEN 'AddJob' ELSE 'Origin' END) AS JobType
					FROM SYS_OBJECT_GROUP_MEMBER 
					<if test="groupCode != null">
						WHERE GroupCode = #{groupCode}
					</if>
			) GM ON BG.JobType = GM.JobType AND UR.UserCode = GM.UserCode
			<trim prefix="WHERE" prefixOverrides="AND |OR ">
				<if test="companyCode != null and companyCode != 'ORGROOT'">
					AND BG.CompanyCode = #{companyCode} 
				</if>
			</trim> 
	</select>
	
   	<!-- 상위 분류 select box list(category)를 가져옴 -->
    <select id="selectGroupListForCategory" parameterType="cmap" resultType="cmap">
		SELECT A.GroupCode ,
			   A.GroupName ,
			   A.MemberOf ,
			   A.GroupType ,
			   A.SortPath ,
			   A.exSort
		  FROM (
		<![CDATA[
			SELECT 
				gr.GroupCode,
				FN_BASEGETDICTIONARY_S(#{lang}, gr.MultiDisplayName) AS GroupName,
				gr.MemberOf,
				gr.GroupType,
				gr.SortPath,
				'1' AS exSort
			FROM SYS_OBJECT_GROUP gr
	    ]]>
	    	WHERE 1=1 
	    	<if test="groupCode != null and groupCode != ''">
			   AND gr.GroupCode = #{groupCode}
			</if>
			<if test="groupCode == null and groupCode == ''">
			   AND gr.GroupCode IS NULL
			</if>
			
			UNION ALL 
			
		<![CDATA[
			SELECT 
				gr.GroupCode,
				FN_BASEGETDICTIONARY_S(#{lang}, gr.MultiDisplayName) AS GroupName,
				gr.MemberOf,
				gr.GroupType,
				gr.SortPath,
				'2' AS exSort
			FROM SYS_OBJECT_GROUP gr
	    ]]>
	    	WHERE 1=1 
	    	<if test="groupCode != null and groupCode != ''">
			   AND gr.GroupCode != #{groupCode}
			</if>
			<if test="groupCode == null and groupCode == ''">
			   AND gr.GroupCode IS NOT NULL
			</if>
	    
			)A
		    <trim prefix="WHERE" prefixOverrides="AND |OR ">
		        AND (A.MemberOf != 'NOUSE' OR A.MemberOf is null) 
		        AND (A.MemberOf != 'NOUNIT' OR A.MemberOf is null)
		      <if test="groupCode != null">
			  	AND A.MemberOf = (SELECT MemberOf FROM SYS_OBJECT_GROUP WHERE GroupCode = #{groupCode} AND ROWNUM = 1 )
			  </if>
			   <if test="groupType != null">
			          <choose>
							 <when test="groupType == 'Company'.toString()">
								 AND A.GroupType = 'Company'
							 </when>
							 <when test="groupType == 'group'.toString()">
								 AND A.GroupType != 'Dept'
							 </when>
							 <otherwise>
							     AND A.GroupType = #{groupType}
							 </otherwise>
					 </choose>
		       </if>
			</trim>
		    <!-- Order by 절 -->
			<trim prefix="ORDER BY">
			    <if test="groupCode != null and groupCode != ''">
			 	   A.GroupCode ASC,
				</if>
			 	A.SortPath ASC
			</trim>
	</select>
	
    <!-- 그룹 사용여부 변경 -->
    <update id="updateIsUseGroup" parameterType="cmap">
	    <![CDATA[
			UPDATE
				SYS_OBJECT_GROUP
			SET
				IsUse = #{IsUse},
				ModifyDate = TO_DATE(#{ModifyDate},'yyyy/mm/dd hh24:mi:ss')
			WHERE GroupCode = #{GroupCode}
		]]>
	</update>
    
    <!-- 그룹 메일사용여부 변경 -->
    <update id="updateIsMailGroup" parameterType="cmap">
	    <![CDATA[
			UPDATE
				SYS_OBJECT_GROUP
			SET
				IsMail = #{IsMail},
				ModifyDate = TO_DATE(#{ModifyDate},'yyyy/mm/dd hh24:mi:ss')
			WHERE GroupCode = #{GroupCode}
		]]>
	</update>
    
	<!-- 사용자 메일사용여부 변경 -->
    <update id="updateIsMailUser" parameterType="cmap">
	    <![CDATA[
			UPDATE
				SYS_OBJECT_USER
			SET
				IsMail = #{IsMail},
				ModifyDate = TO_DATE(#{ModifyDate},'yyyy/mm/dd hh24:mi:ss')
			WHERE UserCode = #{UserCode}
		]]>
	</update>
    
	<!-- 그룹 삭제 -->
    <delete id="deleteGroup" parameterType="cmap">
	    DELETE FROM SYS_OBJECT_GROUP
		WHERE GroupCode IN
		<foreach collection="deleteData" item="item"  separator="," open="(" close=")">
		    #{item}
		</foreach>
	</delete>
    
    <!-- 하위 그룹 존재 여부 select -->
    <select id="selectHasChildGroup" parameterType="cmap" resultType="java.lang.Long">
		SELECT 
			(SELECT COUNT(0) 
			 FROM SYS_OBJECT_GROUP B 
			 WHERE B.MemberOf = A.GroupCode AND B.IsUse = 'Y')AS "HasChild"
		FROM SYS_OBJECT_GROUP A
		WHERE A.GroupCode = #{GroupCode} 
    </select>
      
    <!-- 하위 사용자 존재 여부 select -->
    <select id="selectHasUserGroup" parameterType="cmap" resultType="java.lang.Long">
		SELECT COUNT(A.UserCode) AS "HasUser"
		FROM SYS_OBJECT_USER A
		INNER JOIN SYS_OBJECT_USER_BASEGROUP B ON A.UserCode = B.UserCode
		INNER JOIN SYS_OBJECT_GROUP_MEMBER C ON A.UserCode = C.UserCode
		WHERE B.JobTitleCode = #{GroupCode} 
			OR B.JobPositionCode = #{GroupCode} 
			OR B.JobLevelCode = #{GroupCode} 
			OR B.RegionCode = #{GroupCode} 
			OR C.GroupCode = #{GroupCode} 
    </select>
    
    <!-- 그룹 정보 가져오기 select -->
    <select id="selectGroupInfo" parameterType="cmap" resultType="cmap">
        <![CDATA[
	       SELECT
	        	  A.GroupID AS "GroupID"
	        	, A.GroupCode AS "GroupCode"
				, A.GroupType AS "GroupType"
				, A.MemberOf AS "MemberOf"
				, (SELECT MultiDisplayName FROM SYS_OBJECT_GROUP WHERE GroupCode = A.MemberOf) AS "ParentName"
				, A.GroupPath AS "GroupPath"
				, A.MultiDisplayName AS "MultiDisplayName"
				, A.MultiShortName AS "MultiShortName"
				, A.SortKey AS "SortKey"
				, A.SortPath AS "SortPath"
				, A.OUName AS "OUName"
				, A.OUPath AS "OUPath"
				, A.IsUse AS "IsUse"
				, A.IsDisplay AS "IsDisplay"
				, A.IsMail AS "IsMail"
				, A.IsHR AS "IsHR"
				, A.PrimaryMail AS "PrimaryMail"
				, A.SecondaryMail AS "SecondaryMail"
				, A.Description AS "Description"
				, A.ReceiptUnitCode AS "ReceiptUnitCode"
				, A.ApprovalUnitCode AS "ApprovalUnitCode"
				, A.Receivable AS "Receivable"
				, A.Approvable AS "Approvable"
				, A.RegistDate AS "RegistDate"
				, A.ModifyDate AS "ModifyDate"
				, A.ManagerCode AS "ManagerCode"
          	    , NVL(A.ManagerCode||'|'||(SELECT DisplayName FROM SYS_OBJECT_USER WHERE UserCode = A.ManagerCode),'') AS "Manager"
      			, B.MultiDisplayName AS "CompanyName"
      			, B.GroupCode AS "CompanyCode"
			FROM SYS_OBJECT_GROUP A
			INNER JOIN SYS_OBJECT_GROUP B ON A.CompanyCode = B.GroupCode
			WHERE A.GroupCode = #{gr_code}
		]]>
    </select>
    
    <!-- 그룹 기타 정보 select -->
    <select id="selectGroupEtcInfo" parameterType="cmap" resultType="cmap">
 	    SELECT 
 	    	GroupPath AS "GroupPath",
 	    	SortPath AS "SortPath",
 	    	OUPath AS "OUPath",
 	    	(SELECT GroupID FROM SYS_OBJECT_GROUP WHERE GroupCode = #{CompanyCode}) AS "CompanyID"
 	    FROM SYS_OBJECT_GROUP
 	    WHERE GroupCode = #{MemberOf}
 	</select>
    
    <!-- 그룹 insert -->
    <insert id="insertGroupInfo" parameterType="cmap">
        INSERT INTO SYS_OBJECT_GROUP
        (
        	GroupCode,
        	CompanyCode,
        	GroupType,
        	MemberOf,
        	GroupPath,
        	OUPath,
        	OUName,
        	DisplayName,
        	MultiDisplayName,
        	ShortName,
        	MultiShortName,
        	PrimaryMail,
        	SecondaryMail,
        	Approvable,
        	Receivable,
        	ApprovalUnitCode,
        	ReceiptUnitCode,
        	SortKey,
        	SortPath,
        	IsUse,
        	IsDisplay,
        	IsMail,
        	IsHR,
        	RegistDate,
        	Description
        ) 
        VALUES
        (
        	#{GroupCode},
        	#{CompanyCode},
        	#{GroupType},
        	#{MemberOf},
        	#{GroupPath},
        	#{OUPath},
        	#{DisplayName}, 
        	#{DisplayName},
        	#{MultiDisplayName},
        	#{ShortName},
        	#{MultiShortName},
        	#{PrimaryMail},
        	#{SecondaryMail},
        	1,
        	1, 
        	#{GroupCode}, 
        	#{GroupCode}, 
        	#{SortKey},
        	#{SortPath},
        	#{IsUse},
        	'Y',
        	#{IsMail},
        	#{IsHR},
        	SYSDATE,
        	#{Description}    	
        )
    </insert>
	
    <!-- 그룹 update -->
    <update id="updateGroupInfo" parameterType="cmap">
        UPDATE SYS_OBJECT_GROUP
        SET 
        	MemberOf = #{MemberOf},
        	GroupPath = #{GroupPath},
        	OUPath = #{OUPath},
        	DisplayName = #{DisplayName},
        	MultiDisplayName = #{MultiDisplayName},
        	ShortName = #{ShortName},
        	MultiShortName = #{MultiShortName},
        	PrimaryMail = #{PrimaryMail},
        	SecondaryMail = #{SecondaryMail},
        	SortKey = #{SortKey},
        	SortPath = #{SortPath},
        	IsUse = #{IsUse},
        	IsMail = #{IsMail},
        	IsHR = #{IsHR},
        	ModifyDate = TO_DATE(#{ModifyDate},'yyyy/mm/dd hh24:mi:ss'),
        	Description = #{Description}
        WHERE GroupCode = #{GroupCode}
    </update>
    
	 <select id="selectDefaultSetInfoGroup" parameterType="cmap" resultType="cmap">
         SELECT
			A.DisplayName AS "GroupName",
        	B.DisplayName AS "CompanyName",
        	<if test="domainCode != null and groupType != null">
	        	(
		        	SELECT NVL(SUBSTR(GroupCode,1, INSTR(GroupCode,'_') -1),GroupCode)
		            FROM SYS_OBJECT_GROUP
					WHERE GroupCode LIKE '%'||#{groupType} and CompanyCode = #{domainCode} 
				) 
			</if>
			<if test="domainCode == null or groupType == null">
			    ''
		    </if>
			AS "CompanyID"
		FROM SYS_OBJECT_GROUP A
		INNER JOIN SYS_OBJECT_GROUP B ON A.CompanyCode = B.GroupCode AND B.GroupType = 'Company'
		<if test="groupType = 'Company'.toString()">
		    <if test="gr_code != null">
		    	WHERE  A.GroupCode = #{gr_code} 
		  </if>
		</if>
		<if test="groupType != 'Company'.toString()">
    		<if test="domainCode != null">
				WHERE B.GroupCode = #{domainCode} 
			</if>
	        <if test="gr_code != null">
		    	AND A.GroupCode = #{gr_code} 
		  </if>
		</if>

    </select>
	
	 <!-- 그룹 멤버 User insert -->
    <insert id="insertGroupMemberUser" parameterType="cmap">
        INSERT INTO SYS_OBJECT_GROUP_MEMBER
        (
        	GroupCode,
        	UserCode,
        	SortKey,
        	Role,
        	IsUse,
        	IsHR,
        	MemberStatus,
        	JoinDate
        ) 
        VALUES (
            #{GroupCode},
        	#{URList},
        	999,
        	'regular', 
        	'Y',
        	'Y',
        	'A',
        	SYSDATE
        )
    </insert>
    
	<!-- 그룹 멤버 Group insert -->
    <insert id="insertGroupMemberGroup" parameterType="cmap">
        INSERT INTO SYS_OBJECT_GROUP_MEMBERGROUP
        (
        	GroupCode,
        	MemberGroupCode,
        	SortKey,
        	Role,
        	IsUse,
        	IsHR,
        	MemberStatus,
        	JoinDate
        ) 
        VALUES (
            #{GroupCode},
        	#{GRList},
        	999,
        	'regular', 
        	'Y',
        	'Y',
        	'A',
        	SYSDATE
        )
    </insert>
    
	<!-- 그룹 멤버 User delete -->
    <delete id="deleteGroupMemberUser" parameterType="cmap">
	    DELETE FROM SYS_OBJECT_GROUP_MEMBER
		WHERE GroupMemberID IN
		<foreach collection="deleteDataUser" item="item"  separator="," open="(" close=")">
		    #{item}
		</foreach>
    </delete>
	
    <!-- 그룹 멤버 Group delete -->
    <delete id="deleteGroupMemberGroup" parameterType="cmap">
	    DELETE FROM SYS_OBJECT_GROUP_MEMBERGROUP
		WHERE MemberGroupID IN
		<foreach collection="deleteDataGroup" item="item"  separator="," open="(" close=")">
		    #{item}
		</foreach>
    </delete>
	
    <!-- 그룹 멤버 목록 select -->
    <select id="selectGroupMemberList" parameterType="cmap" resultType="cmap">
		SELECT ROWNUM
			 , A.Type AS "Type"
			 , A.Code AS "Code"
			 , A.CodeName AS "CodeName"
			 , A.MailAddress AS "MailAddress"
			 , A.MemberID AS "MemberID"
		FROM 
		(
			SELECT 'User' AS Type
					, GM.UserCode AS Code
					, NVL(UR.DisplayName, '') AS CodeName
					, NVL(UR.MailAddress, '') AS MailAddress
					, GM.GroupMemberID AS MemberID
			FROM SYS_OBJECT_GROUP_MEMBER GM
			LEFT JOIN SYS_OBJECT_USER UR ON GM.UserCode = UR.UserCode
			<trim prefix="WHERE" prefixOverrides="AND |OR ">
			    GM.GroupCode = #{groupCode} 
			</trim>
			
			UNION 
			
			SELECT 'Dept' AS Type
					, GM.MemberGroupCode AS Code
					, NVL(GR.DisplayName, '') AS CodeName
					, NVL(GR.PrimaryMail, '') AS MailAddress
					, GM.MemberGroupID AS MemberID
			FROM SYS_OBJECT_GROUP_MEMBERGROUP GM
			LEFT JOIN SYS_OBJECT_GROUP GR ON GM.MemberGroupCode = GR.GroupCode
			<trim prefix="WHERE" prefixOverrides="AND |OR ">
			    GM.GroupCode = #{groupCode} 
			</trim>
		) A WHERE 1=1
		<if test="pageSize != null and pageOffset != null">
		   AND ROWNUM BETWEEN #{pageOffset} AND #{pageSize}
		</if>
	</select>
    
	 <!-- 그룹 선택시 해당 그룹의 멤버 수를 가져옴 -->
    <select id="selectGroupMemberListCnt" parameterType="cmap" resultType="java.lang.Long">
		SELECT COUNT(*) FROM 
		(
			SELECT 'User' AS Type
					, GM.UserCode AS Code
					, UR.DisplayName AS CodeName
					, UR.MailAddress
					, GM.GroupMemberID AS MemberID
			FROM SYS_OBJECT_GROUP_MEMBER GM
			LEFT JOIN SYS_OBJECT_USER UR ON GM.UserCode = UR.UserCode
			<trim prefix="WHERE" prefixOverrides="AND |OR ">
			    GM.GroupCode = #{groupCode} 
			</trim>
			
			UNION 
			
			SELECT 'Dept' AS Type
					, GM.MemberGroupCode AS Code
					, GR.DisplayName AS CodeName
					, GR.PrimaryMail
					, GM.MemberGroupID AS MemberID
			FROM SYS_OBJECT_GROUP_MEMBERGROUP GM
			LEFT JOIN SYS_OBJECT_GROUP GR ON GM.MemberGroupCode = GR.GroupCode
			<trim prefix="WHERE" prefixOverrides="AND |OR ">
			    GM.GroupCode = #{groupCode} 
			</trim>
		) A
	</select>
    
    <!-- 비밀번호 초기화  -->
    <update id="resetuserpassword" parameterType="cmap">
        UPDATE SYS_OBJECT_USER
        SET 
        	LogonPassword =	CRYPTO.ENC_AES128(#{sNewPassword},#{aeskey}),
        	ModifyDate = TO_DATE(#{ModDate},'yyyy/mm/dd hh24:mi:ss')
        WHERE LogonID = #{UserID}
    </update>
    
    <update id="resetuserpasswordLock" parameterType="cmap">
        update sys_object_user
		set ACCOUT_LOCK = 'N'
			, PASSWORD_CHANGE_DATE = TO_DATE(#{ModDate},'yyyy/mm/dd hh24:mi:ss')
			, LOGIN_FAIL_COUNT = 0
			, TEMPORARY_PASSWORD_ISUSE  = 'Y'
		where usercode = #{UserID}
    </update>
    
    <!-- AD 정보 입력 -->
   	<insert id="insertUserADInfo" parameterType="cmap">
       INSERT INTO SYS_OBJECT_USER_AD (
		    USERID
			,AD_DISPLAYNAME
			,AD_FIRSTNAME
			,AD_LASTNAME
			,AD_INITIALS
			,AD_OFFICE
			,AD_HOMEPAGE
			,AD_COUNTRY
			,AD_COUNTRYID
			,AD_COUNTRYCODE
			,AD_STATE
			,AD_CITY
			,AD_STREETADDRESS
			,AD_POSTOFFICEBOX
			,AD_POSTALCODE
			,AD_USERACCOUNTCONTROL
			,AD_ACCOUNTEXPIRES
			,AD_PHONENUMBER 
			,AD_HOMEPHONE 
			,AD_PAGER 
			,AD_MOBILE
			,AD_FAX 
			,AD_IPPHONE
			,AD_INFO
			,AD_TITLE
			,AD_DEPARTMENT
			,AD_COMPANY
			,AD_MANAGERCODE 
		) VALUES (
		    #{UserCode},
			#{AD_DisplayName},
			#{AD_FirstName},
			#{AD_LastName},
			#{AD_Initials},
			#{AD_Office},
			#{AD_HomePage},
			#{AD_Country},
			#{AD_CountryID},
			#{AD_CountryCode},
			#{AD_State},
			#{AD_City},
			#{AD_StreetAddress},
			#{AD_PostOfficeBox},
			#{AD_PostalCode},
			#{AD_UserAccountControl},
			#{AD_AccountExpires},
			#{AD_PhoneNumber},
			#{AD_HomePhone},
			#{AD_Pager},
			#{AD_Mobile},
			#{AD_Fax},
			'',
			#{AD_Info},
			#{AD_Title},
			#{AD_Department},
			#{AD_Company},
			#{AD_ManagerCode}  	
        )
    </insert>
    <!-- Exchange 정보 입력 -->
   	<insert id="insertUserExchInfo" parameterType="cmap">
		INSERT INTO SYS_OBJECT_USER_EXCHANGE (
			USERID,
			EX_PRIMARYMAIL,
			EX_SECONDARYMAIL,
			EX_STORAGESERVER,
			EX_STORAGEGROUP,
			EX_STORAGESTORE,
			EX_CUSTOMATTRIBUTE01,
			EX_CUSTOMATTRIBUTE02,
			EX_CUSTOMATTRIBUTE03,
			EX_CUSTOMATTRIBUTE04,
			EX_CUSTOMATTRIBUTE05,
			EX_CUSTOMATTRIBUTE06,
			EX_CUSTOMATTRIBUTE07,
			EX_CUSTOMATTRIBUTE08,
			EX_CUSTOMATTRIBUTE09,
			EX_CUSTOMATTRIBUTE10,
			EX_CUSTOMATTRIBUTE11,
			EX_CUSTOMATTRIBUTE12,
			EX_CUSTOMATTRIBUTE13,
			EX_CUSTOMATTRIBUTE14,
			EX_CUSTOMATTRIBUTE15
		) VALUES (
		   	#{UserCode},
			#{EX_PrimaryMail},
			#{EX_SecondaryMail},
			#{EX_StorageServer},
			#{EX_StorageGroup},
			#{EX_StorageStore},
			#{EX_CustomAttribute01},
			#{EX_CustomAttribute02},
			#{EX_CustomAttribute03},
			#{EX_CustomAttribute04},
			#{EX_CustomAttribute05},
			#{EX_CustomAttribute06},
			#{EX_CustomAttribute07},
			#{EX_CustomAttribute08},
			#{EX_CustomAttribute09},
			#{EX_CustomAttribute10},
			#{EX_CustomAttribute11},
			#{EX_CustomAttribute12},
			#{EX_CustomAttribute13},
			#{EX_CustomAttribute14},
			#{EX_CustomAttribute15}
		)
    </insert>
    <!-- MSN 정보 입력 -->
   	<insert id="insertUserMSNInfo" parameterType="cmap">
		INSERT INTO SYS_OBJECT_USER_MESSENGER (
			USERID,
			MSN_POOLSERVERNAME,
			MSN_POOLSERVERDN,
			MSN_SIPADDRESS,
			MSN_ANONMY,
			MSN_MEETINGPOLICYNAME,
			MSN_MEETINGPOLICYDN,
			MSN_PHONECOMMUNICATION,
			MSN_PBX,
			MSN_LINEPOLICYNAME,
			MSN_LINEPOLICYDN,
			MSN_LINEURI,
			MSN_LINESERVERURI,
			MSN_FEDERATION,
			MSN_REMOTEACCESS,
			MSN_PUBLICIMCONNECTIVITY,
			MSN_INTERNALIMCONVERSATION,
			MSN_FEDERATEDIMCONVERSATION
		) VALUES (
		  #{UserCode},
			#{MSN_PoolServerName},
			#{MSN_PoolServerDN},
			#{MSN_SIPAddress},
			#{MSN_Anonmy},
			#{MSN_MeetingPolicyName},
			#{MSN_MeetingPolicyDN},
			#{MSN_PhoneCommunication},
			#{MSN_PBX},
			#{MSN_LinePolicyName},
			#{MSN_LinePolicyDN},
			#{MSN_LineURI},
			#{MSN_LineServerURI},
			#{MSN_Federation},
			#{MSN_RemoteAccess},
			#{MSN_PublicIMConnectivity},
			#{MSN_InternalIMConversation},
			#{MSN_FederatedIMConversation}
		)
    </insert>
    
   		<!-- AD 정보 수정 -->
   	<update id="updateUserADInfo" parameterType="cmap">
   	    UPDATE 
		SYS_OBJECT_USER_AD
			SET 
			 AD_DISPLAYNAME         = #{AD_DisplayName}
			, AD_FIRSTNAME           = #{AD_FirstName}
			, AD_LASTNAME            = #{AD_LastName}
			, AD_INITIALS            = #{AD_Initials}
			, AD_OFFICE              = #{AD_Office}
			, AD_HOMEPAGE            = #{AD_HomePage}
			, AD_COUNTRY             = #{AD_Country}
			, AD_COUNTRYID           = #{AD_CountryID}
			, AD_COUNTRYCODE         = #{AD_CountryCode}
			, AD_STATE               = #{AD_State}
			, AD_CITY                = #{AD_City}
			, AD_STREETADDRESS       = #{AD_StreetAddress}
			, AD_POSTOFFICEBOX       = #{AD_PostOfficeBox}
			, AD_POSTALCODE          = #{AD_PostalCode}
			, AD_USERACCOUNTCONTROL  = #{AD_UserAccountControl}
			, AD_ACCOUNTEXPIRES      = #{AD_AccountExpires}
			, AD_PHONENUMBER         = #{AD_PhoneNumber}
			, AD_HOMEPHONE           = #{AD_HomePhone}
			, AD_PAGER               = #{AD_Pager}
			, AD_MOBILE              = #{AD_Mobile}
			, AD_FAX                 = #{AD_Fax}
			, AD_IPPHONE             = ''
			, AD_INFO                = #{AD_Info}
			, AD_TITLE               = #{AD_Title}
			, AD_DEPARTMENT          = #{AD_Department}
			, AD_COMPANY             = #{AD_Company}
			, AD_MANAGERCODE         = #{AD_ManagerCode} 
		WHERE USERID = 	#{UserCode}
	</update>
	<!-- Exchange 정보 수정 -->
   	<update id="updateUserExchInfo" parameterType="cmap">
   	    UPDATE
		SYS_OBJECT_USER_EXCHANGE
		SET 
			EX_PRIMARYMAIL = #{EX_PrimaryMail},
			EX_SECONDARYMAIL = #{EX_SecondaryMail},
			EX_STORAGESERVER = #{EX_StorageServer},
			EX_STORAGEGROUP = #{EX_StorageGroup},
			EX_STORAGESTORE = #{EX_StorageStore},
			EX_CUSTOMATTRIBUTE01 = #{EX_CustomAttribute01},
			EX_CUSTOMATTRIBUTE02 = #{EX_CustomAttribute02},
			EX_CUSTOMATTRIBUTE03 = #{EX_CustomAttribute03},
			EX_CUSTOMATTRIBUTE04 = #{EX_CustomAttribute04},
			EX_CUSTOMATTRIBUTE05 = #{EX_CustomAttribute05},
			EX_CUSTOMATTRIBUTE06 = #{EX_CustomAttribute06},
			EX_CUSTOMATTRIBUTE07 = #{EX_CustomAttribute07},
			EX_CUSTOMATTRIBUTE08 = #{EX_CustomAttribute08},
			EX_CUSTOMATTRIBUTE09 = #{EX_CustomAttribute09},
			EX_CUSTOMATTRIBUTE10 = #{EX_CustomAttribute10},
			EX_CUSTOMATTRIBUTE11 = #{EX_CustomAttribute11},
			EX_CUSTOMATTRIBUTE12 = #{EX_CustomAttribute12},
			EX_CUSTOMATTRIBUTE13 = #{EX_CustomAttribute13},
			EX_CUSTOMATTRIBUTE14 = #{EX_CustomAttribute14},
			EX_CUSTOMATTRIBUTE15 = #{EX_CustomAttribute15}
		WHERE USERID = #{UserCode}
	</update>
	<!-- Messenger 정보 수정 -->
   	<update id="updateUserMSNInfo" parameterType="cmap">
  	    UPDATE SYS_OBJECT_USER_MESSENGER 
		SET
			MSN_POOLSERVERNAME = #{MSN_PoolServerName},
			MSN_POOLSERVERDN = #{MSN_PoolServerDN},
			MSN_SIPADDRESS = #{MSN_SIPAddress},
			MSN_ANONMY = #{MSN_Anonmy},
			MSN_MEETINGPOLICYNAME = #{MSN_MeetingPolicyName},
			MSN_MEETINGPOLICYDN = #{MSN_MeetingPolicyDN},
			MSN_PHONECOMMUNICATION = #{MSN_PhoneCommunication},
			MSN_PBX = #{MSN_PBX},
			MSN_LINEPOLICYNAME = #{MSN_LinePolicyName},
			MSN_LINEPOLICYDN = #{MSN_LinePolicyDN},
			MSN_LINEURI = #{MSN_LineURI},
			MSN_LINESERVERURI = #{MSN_LineServerURI},
			MSN_FEDERATION = #{MSN_Federation},
			MSN_REMOTEACCESS = #{MSN_RemoteAccess},
			MSN_PUBLICIMCONNECTIVITY = #{MSN_PublicIMConnectivity},
			MSN_INTERNALIMCONVERSATION = #{MSN_InternalIMConversation},
			MSN_FEDERATEDIMCONVERSATION = #{MSN_FederatedIMConversation}
		WHERE USERID = #{UserCode}
	</update>
	<select id="selectUserInfoByAdmin" parameterType="cmap" resultType="cmap">
		<![CDATA[
			SELECT 
				      ur.UserID AS "UserID"
					, ur.UserCode AS "UserCode"
					, ur.LogonID AS "LogonID"
					, ur.EmpNo AS "EmpNo"
					, ur.MultiDisplayName AS "MultiDisplayName"
					, ur.NickName AS "NickName"
					, ur.MultiAddress AS "MultiAddress"
					, ur.HomePage AS "HomePage"
					, ur.PhoneNumber AS "PhoneNumber"
					, ur.Mobile AS "Mobile"
					, ur.FAX AS "FAX" 
					, ur.IPPhone AS "IPPhone" 
					, ur.UseMessengerConnect AS "UseMessengerConnect" 
					, ur.SortKey AS "SortKey" 
					, ur.SecurityLevel AS "SecurityLevel" 
					, ur.Description AS "Description" 
					, ur.IsUse AS "IsUse" 
					, ur.IsHR AS "IsHR" 
					, ur.IsDisplay AS "IsDisplay" 
					, ur.EnterDate AS "EnterDate" 
					, ur.RetireDate AS "RetireDate" 
					, ur.PhotoPath AS "PhotoPath" 
					, ur.BirthDiv  AS "BirthDiv" 
					, ur.BirthDate AS "BirthDate" 
					, ur.UseMailConnect AS "UseMailConnect" 
					, ur.MailAddress AS "MailAddress" 
					, ur.ExternalMailAddress AS "ExternalMailAddress" 
					, ur.PhoneNumberInter AS "PhoneNumberInter" 
					, ur.Reserved2 AS "Reserved2" 
					, ur.Reserved3 AS "Reserved3" 
					, ur.Reserved4 AS "Reserved4" 
					, (SELECT MultiDisplayName FROM SYS_OBJECT_USER WHERE UserCode = ur.Reserved4) AS "ManagerName"
					, ur.Reserved5 AS "Reserved5" 
					, bg.CompanyCode AS "CompanyCode" 
					, bg.MultiCompanyName AS "MultiCompanyName" 
					, bg.DeptCode AS "DeptCode" 
					, bg.MultiDeptName AS "MultiDeptName" 
					, bg.RegionCode AS "RegionCode" 
					, bg.MultiRegionName AS "MultiRegionName" 
					, bg.JobPositionCode AS "JobPositionCode" 
					, bg.JobPositionName AS "JobPositionName" 
					, bg.JobTitleCode AS "JobTitleCode" 
					, bg.JobTitleName AS "JobTitleName" 
					, bg.JobLevelCode AS "JobLevelCode" 
					, bg.JobLevelName AS "JobLevelName" 
					, apv.UseDeputy AS "UseDeputy" 
					, apv.DeputyCode AS "DeputyCode" 
					, apv.DeputyName AS "DeputyName" 
					, apv.DeputyFromDate AS "DeputyFromDate" 
					, apv.DeputyToDate AS "DeputyToDate" 
					, apv.AlertConfig AS "AlertConfig" 
					, apv.ApprovalUnitCode AS "ApprovalUnitCode" 
					, (SELECT MultiDisplayName FROM SYS_OBJECT_GROUP WHERE GroupCode = apv.ApprovalUnitCode) AS "ApprovalUnitName"
					, apv.ReceiptUnitCode AS "ReceiptUnitCode" 
					, (SELECT MultiDisplayName FROM SYS_OBJECT_GROUP WHERE GroupCode = apv.ReceiptUnitCode) AS "ReceiptUnitName"
					, apv.UseApprovalMessageBoxView AS "UseApprovalMessageBoxView"
					, apv.UseMobile AS "UseMobile"
					, ur.AD_ISUSE
					, ur.EX_ISUSE
					, ur.MSN_ISUSE
					, AD.*
                    , EXCH.*
                    , MSN.*
                    , AD.USERID As "AD_USERID"
                    , EXCH.USERID As "EX_USERID"
                    , MSN.USERID As "MSN_USERID"
                    , ur.LOGONPASSWORD  As "LOGONPASSWORD"
			FROM SYS_OBJECT_USER ur
			LEFT JOIN SYS_OBJECT_USER_BASEGROUP bg ON ur.UserCode = bg.UserCode AND bg.JobType = 'Origin'
			LEFT JOIN SYS_OBJECT_USER_APPROVAL apv ON ur.UserCode = apv.UserCode
            LEFT JOIN SYS_OBJECT_USER_AD AD ON ur.UserCode = AD.USERID
            LEFT JOIN SYS_OBJECT_USER_EXCHANGE EXCH ON ur.UserCode = EXCH.USERID
            LEFT JOIN SYS_OBJECT_USER_MESSENGER MSN ON ur.UserCode = MSN.USERID
			WHERE ur.UserCode = #{UserCode}
		]]>
	</select>
	
	<select id="updatePasswordPolicyCount" parameterType="cmap" resultType="java.lang.Long">
        select count(*) from sys_object_pw_policy a
		inner join sys_object_domain b on a.DomainID = b.DomainID
		where 1=1
		and b.DomainCode = #{DomainCode}
    </select>
    
	<select id="getPolicy" parameterType="cmap" resultType="cmap">
        SELECT  a.DOMAINID AS DomainID
              , a.ISUSECOMPLEXITY AS IsUseComplexity
              , a.MAXCHANGEDATE AS MaxChangeDate
              , a.MINIMUMLENGTH AS MinimumLength
              , a.CHANGENOTICEDATE AS ChangeNoticeDate
        FROM SYS_OBJECT_PW_POLICY a
        inner join sys_object_domain b on a.DomainID = b.DomainID
        WHERE 1=1 
        AND b.DomainCode = #{DomainCode}
    </select>

</mapper>

