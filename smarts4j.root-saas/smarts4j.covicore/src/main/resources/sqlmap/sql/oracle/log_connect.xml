<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="sys.LogConnectLog">    
	
	<select id="selectgrid" parameterType="cmap" resultType="cmap">
		<include refid="oracle.include.pagingHeader"/>
		SELECT	  B.DeptName AS "DeptName"
				, B.LogID AS "LogID"
				, B.UserName AS "UserName"
				, B.UserCode AS "UserCode"
				, B.LogonID AS "LogonID"
				, B.Region AS "Region"
				, B.IPAddress AS "IPAddress"
				, B.OS AS "OS"
				, B.Browser AS "Browser"
				, B.Resolution AS "Resolution"
				, B.Year AS "Year"
				, B.Month AS "Month"
				, B.Week AS "Week"
				, B.Day AS "Day"
				, B.Hour AS "Hour"
				, B.LogonAgentInfo  AS "LogonAgentInfo"
				, B.SessionID AS "SessionID"
				, B.ReSessionCnt AS "ReSessionCnt"
				, B.StayTime AS "StayTime"
				, B.LogonDate AS "LogonDate"
				, B.LogoutDate AS "LogoutDate" 
		FROM (
			SELECT    A.*,
		     		(	SELECT Fn_BaseGetDictionary_S(#{lang}, NVL(soub.MultiDeptName,'')) 
						FROM sys_object_user_basegroup soub 
						WHERE soub.UserCode = A.UserCode and soub.JobType = 'Origin' 
			            AND ROWNUM = 1 
			        ) AS DeptName 
			FROM (
				SELECT LogID
					, (SELECT Fn_BaseGetDictionary_S(#{lang}, NVL(MultiDisplayName,'')) FROM sys_object_user sou WHERE sou.UserCode = c.UserCode) AS UserName
					, MachineName
					, c.UserCode
					, c.LogonID
					, Region
					, IPAddress
					, OS
					, Browser
					, Resolution
					, Year
					, Month
					, Week
					, Day
					, Hour
					, LogonAgentInfo
					, SessionID
					, ReSessionCnt
					, StayTime
					, LogonDate
					, LogoutDate
				FROM LOG_CONNECT c
				<trim prefix="WHERE" prefixOverrides="AND |OR ">
					<if test="startDate != null and startDate != '' and endDate != null and endDate != '' ">  
						LogonDate BETWEEN TO_DATE(#{startDate}, 'YY-MM-DD HH24:MI:SS') AND TO_DATE(#{endDate}, 'YY-MM-DD HH24:MI:SS')
					</if>
				</trim>
			)A
 		)B
 		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="searchText != null and searchText != '' ">
		 		( B.UserName LIKE CONCAT(CONCAT('%',#{searchText}), '%') OR B.DeptName LIKE CONCAT(CONCAT('%', #{searchText}), '%') )
			</if>
		</trim>
		<trim prefix="ORDER BY">
			<if test="sortColumn != null and sortDirection != null">
	 			<choose>
					<when test='sortColumn.equalsIgnoreCase("UserCode")'>UserCode</when>
					<when test='sortColumn.equalsIgnoreCase("UserName")'>UserName</when>
					<when test='sortColumn.equalsIgnoreCase("DeptName")'>DeptName</when>
					<when test='sortColumn.equalsIgnoreCase("OS")'>OS</when>
					<when test='sortColumn.equalsIgnoreCase("Browser")'>Browser</when>
					<when test='sortColumn.equalsIgnoreCase("IPAddress")'>IPAddress</when>
					<when test='sortColumn.equalsIgnoreCase("LogoutDate")'>LogoutDate</when>
					<otherwise>LogonDate</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
				<include refid="oracle.include.listOrderBy"/>
			</if>
		</trim>
		<include refid="oracle.include.pagingFooter"/>
	</select>	
	
	<select id="selectCount" resultType="java.lang.Long">
		SELECT COUNT(*) FROM(
	 		 SELECT B.DeptName AS "DeptName"
	 		      , B.LogID AS "LogID"
	 		      , B.UserName AS "UserName"
	 		      , B.UserCode AS "UserCode"
	 		      , B.LogonID AS "LogonID"
				  , B.Region AS "Region"
				  , B.IPAddress AS "IPAddress"
			      , B.OS AS "OS"
				  , B.Browser  AS "Browser"
				  , B.Resolution  AS "Resolution"
				  , B.Year  AS "Year"
				  , B.Month  AS "Month"
			  	  , B.Week AS "Week"
				  , B.Day AS "Day"
				  , B.Hour AS "Hour"
				  , B.LogonAgentInfo  AS "LogonAgentInfo"
				  , B.SessionID AS "SessionID"
				  , B.ReSessionCnt AS "ReSessionCnt"
				  , B.StayTime AS "StayTime"
				  , B.LogonDate AS "LogonDate"
				  , B.LogoutDate  AS "LogoutDate" 
	 		 FROM (
		 		 SELECT    A.*,
			     		(	SELECT Fn_BaseGetDictionary_S(#{lang}, NVL(soub.MultiDeptName,'')) 
							FROM sys_object_user_basegroup soub 
							WHERE soub.UserCode = A.UserCode and soub.JobType = 'Origin' 
				            AND ROWNUM = 1 
				        ) AS DeptName  		 		 
		 		 FROM (
						SELECT LogID
							, (SELECT Fn_BaseGetDictionary_S(#{lang}, NVL(MultiDisplayName,'')) FROM sys_object_user sou WHERE sou.UserCode = c.UserCode) AS UserName
							, MachineName
							, c.UserCode 
							, c.LogonID
							, Region
							, IPAddress
							, OS
							, Browser
							, Resolution
							, Year
							, Month
							, Week
							, Day
							, Hour
							, LogonAgentInfo
							, SessionID
							, ReSessionCnt
							, StayTime
							, LogonDate
							, LogoutDate
						FROM LOG_CONNECT c
						 <trim prefix="WHERE" prefixOverrides="AND |OR ">
							 <if test="startDate != null and startDate != '' and endDate != null and endDate != '' ">  
						         LogonDate BETWEEN TO_DATE(#{startDate}, 'YY-MM-DD HH24:MI:SS') AND TO_DATE(#{endDate}, 'YY-MM-DD HH24:MI:SS')
						 	 </if>
						 </trim>	 
					)A
	 		)B
	 		 <trim prefix="WHERE" prefixOverrides="AND |OR ">
			 	  <if test="searchText != null and searchText != '' ">
			 	    ( B.UserName LIKE CONCAT(CONCAT('%',#{searchText}), '%') OR B.DeptName LIKE CONCAT(CONCAT('%', #{searchText}), '%') )
			 	  </if>
	    	</trim>
	    )C
	</select>
	
 	<insert id="insertHttpConnetLog"  parameterType="cmap" >
	    INSERT INTO LOG_HTTP_CONNECT (
	    				LogType
	    				, Method
	    				, ConnetURL
	    				, RequestDate
	    				, ResultType
	    				, ResponseMsg
	    				, ResponseDate				
	    				
	    				)VALUES(
	    				  	
	    				#{LogType}
	    				, #{Method}
	    				, #{ConnetURL}
	    				, TO_DATE(#{RequestDate}, 'YYYY-MM-DD HH24:MI:SS')
	    				, #{ResultType}
	    				, #{ResponseMsg}
	    				, TO_DATE(#{ResponseDate}, 'YYYY-MM-DD HH24:MI:SS')
	    			)
	    
	</insert>
 	
 	<select id="selectHttpConnect" parameterType="cmap" resultType="cmap">			
		<include refid="oracle.include.pagingHeader"/>
		<![CDATA[
			SELECT    LogID AS "LogID"
			        , LogType AS "LogType"
					, Method AS "Method"
					, ConnectURL AS "ConnectURL"
					, RequestBody AS "RequestBody" 
					, RequestDate AS "RequestDate" 
					, ResultState AS "ResultState" 
			        , ResultType AS "ResultType" 
					, '('||NVL(ResponseMsg,'')||')'AS "ResponseMsg"
			        , NVL(ResponseDate,'')AS "ResponseDate"
			FROM LOG_HTTP_CONNECT
		]]>
		WHERE 1=1 
		<if test="startDate != null and startDate != '' and endDate != null and endDate != '' ">
		    AND ResponseDate BETWEEN TO_TIMESTAMP(#{startDate}, 'YY-MM-DD HH24:MI:SS') AND TO_TIMESTAMP(#{endDate}, 'YY-MM-DD HH24:MI:SS')
		</if>
		<if test="logType != null and logType != '' ">
		    AND LogType = #{logType}
		</if>
		<trim prefix="ORDER BY">
		  	<if test="sortColumn != null and sortDirection != null">
	 			<choose>
					<when test='sortColumn.equalsIgnoreCase("DeptName")'>DeptName</when>
					<when test='sortColumn.equalsIgnoreCase("LogType")'>LogType</when>
					<when test='sortColumn.equalsIgnoreCase("Method")'>Method</when>
					<when test='sortColumn.equalsIgnoreCase("ResultState")'>ResultState</when>
					<when test='sortColumn.equalsIgnoreCase("ResultType")'>ResultType</when>
					<when test='sortColumn.equalsIgnoreCase("ResponseDate")'>ResponseDate</when>
					<otherwise>LogID</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
				<include refid="oracle.include.listOrderBy"/>
			</if>
		</trim>
		<include refid="oracle.include.pagingFooter"/>
	</select>	
 	
 	<select id="selectHttpConnectCount" parameterType="cmap" resultType="java.lang.Long">
		<![CDATA[
			SELECT COUNT(*)
			FROM LOG_HTTP_CONNECT
		]]>		
		WHERE 1=1
		<if test="startDate != null and startDate != '' and endDate != null and endDate != '' ">
		   AND ResponseDate BETWEEN TO_TIMESTAMP(#{startDate}, 'YY-MM-DD HH24:MI:SS') AND TO_TIMESTAMP(#{endDate}, 'YY-MM-DD HH24:MI:SS')
		</if>
		<if test="logType != null and logType != '' ">
		   AND LogType = #{logType}
		</if>
	</select>
	
	<select id="selectDetailErrorLogMessage"  parameterType="cmap" resultType="String"> 
		SELECT ErrorMessage FROM log_error WHERE LogID = #{LogID}
	</select>	
</mapper>
