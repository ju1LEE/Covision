<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="sys.domain">
    
    <!-- 특정 도메인 정보 조회 -->
    <select id="selectone" parameterType="cmap" resultType="cmap">
    	SELECT	  DomainID AS "DomainID"
				, DomainCode AS "DomainCode"
				, DomainURL AS "DomainURL"
				, DomainType AS "DomainType"
				, MailDomain AS "MailDomain"
				, IsCPMail AS "IsCPMail"
				, DisplayName AS "DisplayName"
				, MultiDisplayName AS "MultiDisplayName"
				, MemberOf AS "MemberOf"
				, DomainPath AS "DomainPath"
				, SortKey AS "SortKey"
				, SortPath AS "SortPath"
				, IsUse AS "IsUse"
				, (
					SELECT COUNT(*)
					FROM SYS_OBJECT_USER U
					INNER JOIN SYS_OBJECT_USER_BASEGROUP UB ON U.UserCode = UB.UserCode AND UB.JobType = 'Origin'
					WHERE U.IsUse = 'Y'
					AND UB.Companycode = DomainCode
				) AS "ActiveUser"
				, ServiceUser AS "ServiceUser"
				, Description AS "Description"
				, RegistDate AS "RegistDate"
				, ServiceStart AS "ServiceStart"
				, ServiceEnd AS "ServiceEnd"
				, SubDomain AS "SubDomain"
				, OrgSyncType AS "OrgSyncType"
				, DomainRepName AS "DomainRepName"
				, DomainRepTel AS "DomainRepTel"
				, DomainCorpTel AS "DomainCorpTel"
				, DomainImagePath AS "DomainImagePath"
				, DomainZipcode AS "DomainZipcode"
				, DomainAddress AS "DomainAddress"
				, Memo AS "Memo"
				, DomainBannerPath AS "DomainBannerPath"
				, DomainBannerLink AS "DomainBannerLink"
				, DomainThemeCode AS "DomainThemeCode"
				, ChargerName AS "ChargerName"
				, ChargerTel AS "ChargerTel"
				, ChargerID AS "ChargerID"
				, ChargerEmail AS "ChargerEmail"
				, IsUseGoogleSchedule AS "IsUseGoogleSchedule"
				, (SELECT SettingValue FROM SSO_CONFIG WHERE DomainID = SOD.DomainID AND Code = 'sso_goclient_id') AS "GoogleClientID"
				, (SELECT SettingValue FROM SSO_CONFIG WHERE DomainID = SOD.DomainID AND Code = 'sso_goclient_key') AS "GoogleClientKey"
				, (SELECT SettingValue FROM SSO_CONFIG WHERE DomainID = SOD.DomainID AND Code = 'sso_redirect_url') AS "GoogleRedirectURL"
				, LicDomain AS "LicDomain"
				, LicUserCount AS "LicUserCount"
				, LicExpireDate AS "LicExpireDate"
				, LieExUserCount AS "LieExUserCount"
				, LicEx1Date AS "LicEx1Date"
			    , EntireMailID  AS "EntireMailID"
		FROM SYS_OBJECT_DOMAIN SOD
		WHERE DomainID = #{DomainID}
	</select>
    
	<!-- 도메인 목록 조회 -->
	<select id="selectCode" parameterType="cmap" resultType="cmap">
		/* queryid : sys.domain.selectCode */
		<![CDATA[
			SELECT DomainID AS "DomainID"
			     , DomainCode AS "DomainCode"
			     , DomainURL AS "DomainURL"
			     , DisplayName AS "DisplayName"
			     , MultiDisplayName AS "MultiDisplayName"
			     , ShortName AS "ShortName"
			     , MultiShortName AS "MultiShortName"
			FROM SYS_OBJECT_DOMAIN
			WHERE IsUse = 'Y' 
			AND DeleteDate IS NULL
		]]>
		<if test="assignedDomain.size() > 0" >
			AND DomainID IN 
			<foreach item="item" index="index" collection="assignedDomain" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test='isService == "Y"'>
      		AND	SYSDATE BETWEEN ServiceStart AND ServiceEnd
    	</if>
		ORDER BY SortKey
	</select>
    
	<!-- 도메인 목록 조회 Grid 용 -->
	<select id="selectgrid" parameterType="cmap" resultType="cmap">
		/* queryID : sys.domain.selectgrid */
		<include refid="oracle.include.pagingHeader"/>
		SELECT	  DomainID AS "DomainID"
				, DomainCode AS "DomainCode"
				, DomainURL AS "DomainURL"
				, DisplayName AS "DisplayName"
				, MemberOf AS "MemberOf"
				, DomainPath AS "DomainPath"
				, SortKey AS "SortKey"
				, IsUse AS "IsUse"
				, ActiveUser AS "ActiveUser"
				, ServiceUser AS "ServiceUser"
				, ServicePeriod AS "ServicePeriod"
				, Description AS "Description"
				, RegistDate AS "RegistDate"
		FROM (
			SELECT	  DomainID
					, DomainCode
					, DomainURL
					, FN_BASEGETDICTIONARY_S(#{lang}, MultiDisplayName) AS DisplayName
					, MemberOf
					, DomainPath
					, SortKey
					, IsUse
					, (
						SELECT COUNT(*)
						FROM SYS_OBJECT_USER U
						INNER JOIN SYS_OBJECT_USER_BASEGROUP UB ON U.UserCode = UB.UserCode AND UB.JobType = 'Origin'
						WHERE U.IsUse = 'Y'
						AND UB.Companycode = DomainCode
					) AS ActiveUser
					, ServiceUser
					, TO_CHAR(ServiceStart, 'YYYY-MM-DD')||' ~ '||TO_CHAR(ServiceEnd, 'YYYY-MM-DD') AS ServicePeriod
					, Description
					, TO_CHAR(RegistDate, 'YYYY-MM-DD HH24:MI') AS RegistDate
			FROM SYS_OBJECT_DOMAIN
			WHERE DeleteDate IS NULL
			<if test='isUse == "Y"'>
				AND SYSDATE between ServiceStart AND ServiceEnd
			</if>
		) A
		WHERE 1=1
		<if test='selectsearch != null and selectsearch != ""'>
		AND 	(
				UPPER(DomainCode) LIKE '%'||UPPER(#{selectsearch})||'%'
				OR UPPER(DomainURL) LIKE '%'||UPPER(#{selectsearch})||'%'
				OR UPPER(DisplayName) LIKE '%'||UPPER(#{selectsearch})||'%'
				)
		</if>
		<if test='DomainURL != null and DomainURL != ""'>
			AND DomainURL LIKE  #{DomainURL}||'%'
		</if>
		<!-- ORDER BY 절 -->
		<trim prefix="ORDER BY">
			<if test = "sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
				SortKey ASC 
			</if>
			<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("DomainURL")'>DomainURL</when>
					<when test='sortColumn.equalsIgnoreCase("DisplayName")'>DisplayName</when>
					<when test='sortColumn.equalsIgnoreCase("ActiveUser")'>ActiveUser</when>
					<when test='sortColumn.equalsIgnoreCase("ServiceUser")'>ServiceUser</when>
					<when test='sortColumn.equalsIgnoreCase("ServicePeriod")'>ServicePeriod</when>
					<when test='sortColumn.equalsIgnoreCase("IsUse")'>IsUse</when>
					<when test='sortColumn.equalsIgnoreCase("Description")'>Description</when>
					<otherwise>DomainCode</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
				<include refid="oracle.include.listOrderBy"/>
			</if>
		</trim>
		<include refid="oracle.include.pagingFooter"/>
	</select>
    
    <!-- 도메인 개수 조회 Grid 용 -->
 	<select id="selectgridcnt" resultType="java.lang.Long">
		/* queryID : sys.domain.selectgridcnt */
		SELECT COUNT(*)
		FROM SYS_OBJECT_DOMAIN
		WHERE DeleteDate IS NULL
		<if test='selectsearch != null and selectsearch != ""'>
		AND 	(
				UPPER(DomainCode) LIKE '%'||UPPER(#{selectsearch})||'%'
				OR UPPER(DomainURL) LIKE '%'||UPPER(#{selectsearch})||'%'
				OR UPPER(DisplayName) LIKE '%'||UPPER(#{selectsearch})||'%'
				)
		</if>
		<if test='isUse == "Y"'>
			AND SYSDATE between ServiceStart AND ServiceEnd
		</if>
	</select>
    
    <!-- 도메인 추가 시 중복 체크  -->
 	<select id="chkDuplicationObject"  parameterType="cmap" resultType="java.lang.Long">
 	    SELECT COUNT(*) FROM SYS_OBJECT
		WHERE ObjectCode = #{DomainCode}
 	</select>
	
	<!--  [도메인 추가] #1. 도메인 생성 (sys_object_domain, sys_object INSERT) -->
	<insert id="insertDomain" parameterType="cmap" useGeneratedKeys="true" keyProperty="DomainID">
		<![CDATA[
			INSERT INTO SYS_OBJECT_DOMAIN (
				DomainID,
				DomainCode,
				DomainURL,
				MailDomain,
				IsCPMail,
				DisplayName,
				MultiDisplayName,
				ShortName,
				MultiShortName,
				MemberOf,
				DomainPath,
				SortKey,
				SortPath,
				IsUse,
				ServiceUser,
				ServiceStart,
				ServiceEnd,
				Description,
				RegistDate,
				SubDomain,
				OrgSyncType,
				DomainCorpTel,
				DomainRepName,
				DomainRepTel,
				DomainAddress,
				ChargerName,
				ChargerTel,
				ChargerID,
				ChargerEmail,
				DomainImagePath,
				DomainBannerPath,
				DomainBannerLink,
			    LicDomain,
			    LicUserCount,
			    LicExpireDate,
			    LieExUserCount,
			    LicEx1Date,
			    DomainType,
			    EntireMailID
			)
			VALUES (
				(SELECT MAX(B.DomainID)+1 FROM SYS_OBJECT_DOMAIN B),
				#{DomainCode},
				#{Domain},
				#{MailDomain},
				#{IsCPMail},
				#{DisplayName},
				#{ExFullName},
				#{DisplayName},
				#{ExFullName},
				0,
				'0;',
				(SELECT MAX(B.SortKey)+1 FROM SYS_OBJECT_DOMAIN B),
				' ',
				'Y',
				#{ServiceUser},
				#{ServiceStart},
				#{ServiceEnd},
				' ',
				SYSDATE,
				#{SubDomain},
				#{OrgSyncType},
				#{DomainCorpTel},
				#{DomainRepName},
				#{DomainRepTel},
				#{DomainAddress},
				#{ChargerName},
				#{ChargerTel},
				#{ChargerID},
				#{ChargerEmail},
				#{DomainImagePath},
				#{DomainBannerPath},
				#{DomainBannerLink},
				#{LicDomain},
				#{LicUserCount},
				#{LicExpireDate},
				#{LieExUserCount},
				#{LicEx1Date},
				#{DomainType}, 
				#{EntireMailID}
			)
		]]>
		
		<selectKey keyProperty="DomainID" resultType="long" order="AFTER">
			SELECT DomainID FROM SYS_OBJECT_DOMAIN WHERE DomainCode = #{DomainCode}
      </selectKey>
	</insert>
	
	<insert id="insertDomainSysObject" parameterType="cmap">
		UPDATE SYS_OBJECT
		SET	  ObjectCode = #{DomainCode}
			, ObjectType = 'DN'
			, IsUse = 'Y'
			, Description = #{Description}
			, IsSync = 'Y'
			, RegistDate = SYSDATE
			, DeleteDate = NULL
		WHERE ObjectID = (SELECT B.DomainID FROM SYS_OBJECT_DOMAIN B WHERE B.DomainCode = #{DomainCode})
	</insert>
	
	<!--  [도메인 추가] #2. Company 그룹 생성 (sys_object_group INSERT) -->
	<insert id="insertCascadeCompanyGroup" parameterType="cmap">
		INSERT INTO SYS_OBJECT_GROUP (
	   		GroupCode, CompanyCode,	GroupType, MemberOf, GroupPath, DisplayName, MultiDisplayName, ShortName, MultiShortName,		
	   		OUName, OUPath, SortKey, SortPath, IsUse, IsDisplay, IsMail, IsHR, PrimaryMail, SecondaryMail,
	   		ManagerCode, Description, ReceiptUnitCode, ApprovalUnitCode, Receivable, Approvable, RegistDate
		)
		VALUES (
			#{DomainCode}, #{DomainCode}, 'Company', (SELECT DomainCode FROM SYS_OBJECT_DOMAIN WHERE DomainID = 0), ' ', #{DisplayName}, #{ExFullName}, #{DisplayName}, #{ExFullName},
			#{DisplayName}, '', (SELECT SortKey FROM SYS_OBJECT_DOMAIN WHERE DomainCode = #{DomainCode}), ' ', 'Y', 'Y', 'Y', 'Y', #{EntireMailID}||'@'||#{MailDomain}, '',
			NULL, #{Description}, #{DomainCode}, #{DomainCode}, '1', '1', SYSDATE
		)
	</insert> 
	
	<!-- [도메인 추가] #3. 퇴직부서 생성  (sys_object_group, sys_object INSERT) -->
	<insert id="insertRetireDept" parameterType="cmap">
	    INSERT INTO SYS_OBJECT_GROUP (
	    	GroupCode, CompanyCode, GroupType, MemberOf, GroupPath, DisplayName, MultiDisplayName, ShortName, MultiShortName,
			OUName, OUPath, SortKey, SortPath, IsUse, IsDisplay, IsMail, IsHR, PrimaryMail, SecondaryMail, ManagerCode, Description, 
			ReceiptUnitCode, ApprovalUnitCode, Receivable, Approvable, RegistDate
		)
		SELECT
			DomainID||'_RetireDept' AS GroupCode, 
			DomainCode AS CompanyCode, 
			'Dept' AS GroupType, 
			DomainCode AS MemberOf, 
			' ' AS GroupPath,
			'퇴직부서' AS DisplayName,
			'퇴직부서;Retirement Department;退職部門;退休署;;;;;;' AS MultiDisplayName,
			'퇴직부서' AS ShortName,
			'퇴직부서;Retirement Department;退職部門;退休署;;;;;;' AS MultiShortName,
			'퇴직부서' AS OUName,
			'' AS OUPath,
			'99999' SortKey,
			' ' AS SortPath,
			'Y' AS IsUse,
			'N' AS IsDisplay,
			'N' AS IsMail,
			'N' AS IsHR,
			NULL AS PrimaryMail,
			NULL AS SecondayMail,
			NULL AS ManagerCode,
			'퇴직부서' AS Description,
			DomainID||'_RetireDept' AS ReceiptUnitCode,
			DomainID||'_RetireDept' AS ApprovalUnitCode,
			'0' AS Receivable,
			'0' AS Approvable,
			SYSDATE AS RegistDate
		FROM SYS_OBJECT_DOMAIN
		WHERE DomainID = #{DomainID}
	</insert>
	
	<insert id="insertRetireDeptSysObjecct" parameterType="cmap">
	    INSERT INTO SYS_OBJECT (ObjectCode, ObjectType, IsUse, IsSync, Description, RegistDate)
 		VALUES(#{DomainID}||'_RetireDept', 'GR', 'Y', 'N', '퇴직부서(Retirement Department)', SYSDATE)
	</insert>
	
	<!--  [도메인 추가] #4.  임의 그룹 생성 (sys_object_group, sys_object INSERT) -->
	<insert id="insertCascadeDivision" parameterType="cmap">
		INSERT INTO SYS_OBJECT (ObjectCode, ObjectType, IsUse, IsSync, Description, RegistDate)
		SELECT #{DomainID}||'_'||GroupType, 'GR', 'Y', 'Y', Description, SYSDATE
		FROM SYS_OBJECT_GROUP_TYPE
		WHERE IsUse = 'Y'
		AND IsCreateGR = 'Y'
	</insert>
	
	<insert id="insertCascadeDivisionObjectGroup" parameterType="cmap">
	     INSERT INTO SYS_OBJECT_GROUP (
		 	GroupCode, CompanyCode, GroupType, MemberOf, GroupPath, DisplayName, MultiDisplayName, ShortName, MultiShortName,
			OUName, OUPath, SortKey, SortPath, IsUse, IsDisplay, IsMail, IsHR, PrimaryMail, SecondaryMail, ManagerCode, Description, ReceiptUnitCode,
			ApprovalUnitCode, Receivable, Approvable, RegistDate
		)
		SELECT	#{DomainID}||'_'||gt.GroupType AS GroupCode, 
				#{DomainCode} AS CompanyCode,
				'Division' AS GroupType, 
				#{DomainCode} AS MemberOf, 
				' ' AS GroupPath,
				gt.DisplayName AS DisplayName,
				gt.MultiDisplayName AS MultiDisplayName,
				gt.DisplayName AS MultiShortName,
				gt.MultiDisplayName AS MultiShortName,
				gt.DisplayName AS OUName,
				'' AS OUPath, 
				gt.SortKey AS SortKey,
				' ' AS SortPath,
				'Y' AS IsUse, 
				'Y' AS IsDisplay, 
				'N' AS IsMail,
				'N' AS IsHR,
				NULL AS PrimaryMail,
				NULL AS SecondayMail,
				NULL AS ManagerCode,
				gt.Description AS Description,
				#{DomainID}||'_'||gt.GroupType AS ReceiptUnitCode,
				#{DomainID}||'_'||gt.GroupType AS ApprovalUnitCode,
				'0' AS Receivable,
				'0' AS Approvable,
				SYSDATE AS RegistDate
		FROM SYS_OBJECT_GROUP_TYPE gt
		WHERE IsUse = 'Y' AND IsCreateGR = 'Y'
	</insert>
	
	<insert id="insertCompanytoExcel" parameterType="cmap">
		INSERT INTO COVI_SYNCDATA.EXCEL_ORGDEPT (
			GROUPCODE, COMPANYCODE, MEMBEROF, DISPLAYNAME, MULTIDISPLAYNAME, SORTKEY, ISUSE, ISHR, ISDISPLAY, ISMAIL, PRIMARYMAIL
		) VALUES (
			#{DomainCode}, #{DomainCode}, 'ORGROOT', #{DisplayName}, #{ExFullName}, (SELECT SortKey FROM SYS_OBJECT_DOMAIN WHERE DomainCode = #{DomainCode}), 'Y', 'Y', 'Y', 'Y', #{EntireMailID}||'@'||#{Domain}
		)
	</insert>
	
	<update id="createInitCompanyData" statementType="CALLABLE" parameterType="cmap">
		{ CALL SP_CREATEINITCOMPANYDATA(#{DomainCode}, #{UserCode}, #{ChargerID}, #{ChargerName}, #{ChargerTel}, #{ChargerEmail}, #{Domain}, #{MailDomain}, #{Key}, #{Password}) }
	</update>
	
	<!--  [도메인 수정] #1. 도메인 정보 수정 (sys_object_domain UPDATE) -->
	<update id="updateDomain" parameterType="cmap">
		UPDATE SYS_OBJECT_DOMAIN
		SET
			  DomainURL = #{Domain}
			, DisplayName = #{DisplayName}
			, ShortName = #{DisplayName}
			, MultiDisplayName = #{ExFullName}
			, MultiShortName = #{ExFullName}
			, ServiceUser = #{ServiceUser}
			, ServiceStart = #{ServiceStart}
			, ServiceEnd = #{ServiceEnd}
			, SubDomain = #{SubDomain}
			, OrgSyncType = #{OrgSyncType}
			, DomainCorpTel = #{DomainCorpTel}
			, DomainRepName = #{DomainRepName}
			, DomainRepTel = #{DomainRepTel}
			, DomainAddress = #{DomainAddress}
			, ChargerName = #{ChargerName}
			, ChargerTel = #{ChargerTel}
			, ChargerID = #{ChargerID}
			, ChargerEmail = #{ChargerEmail}
			<if test="DomainImagePath != null and DomainImagePath != ''">
				, DomainImagePath = #{DomainImagePath}
			</if>
			<if test="DomainBannerPath != null and DomainBannerPath != ''">
				, DomainBannerPath = #{DomainBannerPath}
			</if>
			<if test="DomainBannerLink != null and DomainBannerLink != ''">
				, DomainBannerLink = #{DomainBannerLink}
			</if>
			, LicDomain = #{LicDomain}
			, LicUserCount = #{LicUserCount}
			, LicExpireDate = #{LicExpireDate}
			, LieExUserCount = #{LieExUserCount}
			, LicEx1Date = #{LicEx1Date}
			, DomainType = #{DomainType} 
			, EntireMailID = #{EntireMailID}
		WHERE DomainID = #{DomainID}
	</update>
	
	<!--  [도메인 수정] #2. 객체 정보 수정 (sys_object UPDATE) -->
	<update id="updateObject" parameterType="cmap">
	    UPDATE SYS_OBJECT
	    SET Description = #{Description}
	    WHERE ObjectCode=#{DomainCode}
	</update>
	
    <!--  [도메인 수정] #3. 그룹 정보 수정 (sys_object_group UPDATE) -->
	<update id="updateGroup" parameterType="cmap">
		<![CDATA[
			UPDATE SYS_OBJECT_GROUP
			SET
				DisplayName = #{DisplayName},
				ShortName = #{DisplayName},
				MultiDisplayName = #{ExFullName},
				MultiShortName = #{ExFullName},
				Description = #{Description},
				PrimaryMail = #{EntireMailID}||'@'||#{Domain},
				OUName = #{DisplayName},
				ModifyDate = SYSDATE
			WHERE GroupCode = #{DomainCode}
		]]>
	</update>
    
    <!--  [도메인 수정] #4. 사용자 정보에 있는 도메인 정보 수정  (sys_object_user_basegroup UPDATE)-->
	<update id="updateUserBaseGroup" parameterType="cmap">
		<![CDATA[
			UPDATE SYS_OBJECT_USER_BASEGROUP
			SET   CompanyName = #{DisplayName}
				, MultiCompanyName = #{ExFullName}
			WHERE CompanyCode = #{DomainCode}
		]]>
	</update>
    
	<!-- [도메인 사용여부 변경]  #1. 도메인 사용 여부 수정 (sys_object_domain) -->
	<update id="updateDomainIsUse" parameterType="cmap">
		UPDATE SYS_OBJECT_DOMAIN
		SET IsUse = #{IsUse}
		WHERE DomainID = #{DomainID}
		AND DomainCode = #{DomainCode}
	</update>
    
	<!-- [도메인 사용여부 변경]  #2. 객체 사용 여부 수정 (sys_object_object) -->
	<update id="updateObjectIsUse" parameterType="cmap">
		UPDATE SYS_OBJECT
		SET IsUse = #{IsUse}
		WHERE ObjectCode = #{DomainCode}
		AND ObjectType = 'DN'
	</update>
	 	
 	<!-- [도메인 사용여부 변경]  #3. 그룹 사용 여부 수정 (sys_object_group) -->
	<update id="updateGroupIsUse" parameterType="cmap">
		UPDATE SYS_OBJECT_GROUP
		SET IsUse = #{IsUse}
		WHERE GroupCode = #{DomainCode}
		AND GroupType = 'Company'
	</update>
	
	<delete id="delete" parameterType="cmap">
        UPDATE SYS_OBJECT_DOMAIN
		SET DeleteDate = SYSDATE
		WHERE DomainID = #{DomainID}
		AND DomainCode = #{DomainCode}
	</delete>
	
	<!--[도메인 순서 변경] #1. 정렬키 변경 (sys_object_domain, sys_object_group UPDATE)  -->
	<update id="changeSortKey" parameterType="cmap">
		{	
			CALL
			DECLARE
			BEGIN
			    UPDATE SYS_OBJECT_DOMAIN SET SortKey = #{sortKey1} WHERE DomainCode = #{domainCode2} ;
			    UPDATE SYS_OBJECT_DOMAIN SET SortKey = #{sortKey2} WHERE DomainCode = #{domainCode1} ;
				
				UPDATE SYS_OBJECT_GROUP SET SortKey = #{sortKey1} WHERE GroupCode = #{domainCode2} ;
				UPDATE SYS_OBJECT_GROUP SET SortKey = #{sortKey2} WHERE GroupCode = #{domainCode1} ;
			END
		}
	</update>
	
	<select id="selectGroupOUPath" parameterType="cmap" resultType="String">
		 SELECT FN_COMOUPATHCREATE_S(GroupCode) 
		 FROM SYS_OBJECT_GROUP
		 <if test="DomainCode != null and DomainCode != '' "> <!--전체 업데이트-->
			WHERE CompanyCode = #{DomainCode}
		 </if>
	</select>
	
	<!--그룹 OUPath 업데이트 -->
	<update id="updateGroupOUPath" parameterType="cmap">
	    UPDATE SYS_OBJECT_GROUP
		SET OUPath = #{OUPath}
		<if test="DomainCode != null and DomainCode != '' "> <!--전체 업데이트-->
			WHERE CompanyCode = #{DomainCode}
		</if>
	</update>
	
	<!-- 전체 경로 update  ( [domain- SortPath], [group-SortPath, OUPath, GroupPath] )  -->
	<update id="updateAllPath" parameterType="cmap"> 
		UPDATE SYS_OBJECT_DOMAIN SET SortPath = #{DoSortPath} WHERE DomainCode = #{DomainCode}
	</update>
	
	<update id="updateAllPathCompanySort" parameterType="cmap"> 
	     UPDATE SYS_OBJECT_GROUP SET SortPath = #{SORTPATH_} WHERE CompanyCode = #{DomainCode} AND GroupCode = #{GROUPCODE_}
	</update>
	
	<update id="updateAllPathCompanyGroup" parameterType="cmap"> 
	    UPDATE SYS_OBJECT_GROUP SET GroupPath = #{PATH_} WHERE CompanyCode = #{DomainCode} AND GroupCode = #{GROUPCODE_}
	</update>
		
	<update id="updateAllPathCompanyOU" parameterType="cmap"> 
	    UPDATE SYS_OBJECT_GROUP SET OUPath = #{OUPATH_} WHERE CompanyCode = #{DomainCode} AND GroupCode = #{GROUPCODE_}
	</update>		
	
	<select id="selectComDnSortPath"  parameterType="cmap" resultType="String">  
	   SELECT FN_COMSORTPATHCREATE_S(DomainID, '', 'DN') FROM SYS_OBJECT_DOMAIN WHERE DomainCode = #{DomainCode}
	</select>
	
	<select id="selectAllPathList" parameterType="cmap" resultType="cmap">
	    SELECT FN_COMOBJECTPATHCREATE_S('', GroupCode, 'GR') AS PATH_
			 , FN_COMOUPATHCREATE_S(GroupCode) AS OUPATH_
			 , FN_COMSORTPATHCREATE_S('', GroupCode, 'GR') AS SORTPATH_
			 , GroupCode AS GROUPCODE_
			 , CompanyCode AS "DomainCode"
		FROM SYS_OBJECT_GROUP 
		WHERE CompanyCode = #{DomainCode}
	</select>
	
	<update id="updateDomainInfo" parameterType="cmap">
	    UPDATE SYS_OBJECT_DOMAIN
    	SET
    		  DisplayName = #{DisplayName}
			, MultiDisplayName = #{MultiDisplayName}
			, DomainRepName = #{DomainRepName}
			, DomainRepTel = #{DomainRepTel}
			, DomainCorpTel = #{DomainCorpTel}
		    , DomainImagePath = #{DomainImagePath}
		    , DomainBannerPath = #{DomainBannerPath}
		    , DomainBannerLink = #{DomainBannerLink}
			, DomainZipcode = #{DomainZipcode}
			, DomainAddress = #{DomainAddress}
			, Memo = #{Memo}
			, ChargerName = #{ChargerName}
			, ChargerTel = #{ChargerTel}
			, IsUseGoogleSchedule = #{IsUseGoogleSchedule}
    	WHERE 
    		DomainCode = #{DomainCode}
	</update>
	
	<insert id="insertDomainGoogleSchedule" parameterType="cmap">
		{
			CALL
			DECLARE
			BEGIN
				<if test="GoogleClientID != null and GoogleClientID != ''">
					<!-- Google Client ID -->
					MERGE INTO SSO_CONFIG S
					USING DUAL
						ON (S.CODE = 'sso_goclient_id' AND S.DOMAINID = #{DomainID})
					WHEN MATCHED THEN
						UPDATE SET
						  SETTINGVALUE = #{GoogleClientID}
						, MODIFIERCODE = #{UserCode}
						, MODIFIERDATE = SYSDATE
					WHEN NOT MATCHED THEN
						INSERT (S.CODE, S.DOMAINID, S.SSOAUTHTYPE, S.SSOTYPE, S.LABLE, S.SETTINGVALUE, S.DESCRIPTION)
						VALUES ('sso_goclient_id', #{DomainID}, 'O', 'S', 'Google Client ID', #{GoogleClientID}, 'Google Client ID');
				</if>
			    <if test="GoogleClientKey != null and GoogleClientKey != ''">
					<!-- Google Client Key -->
					MERGE INTO SSO_CONFIG S
					USING DUAL
						ON (S.CODE = 'sso_goclient_key' AND S.DOMAINID = #{DomainID})
					WHEN MATCHED THEN
						UPDATE SET
						  SETTINGVALUE = #{GoogleClientKey}
						, MODIFIERCODE = #{UserCode}
						, MODIFIERDATE = SYSDATE
					WHEN NOT MATCHED THEN
						INSERT (S.CODE, S.DOMAINID, S.SSOAUTHTYPE, S.SSOTYPE, S.LABLE, S.SETTINGVALUE, S.DESCRIPTION)
						VALUES ('sso_goclient_key', #{DomainID}, 'O', 'S', 'Google Client Key', #{GoogleClientKey}, 'Google Client Key (Secret Key)');
				</if>
				<if test="GoogleRedirectURL != null and GoogleRedirectURL != ''">
					<!-- Google Redirect URL -->
					MERGE INTO SSO_CONFIG S
					USING DUAL
						ON (S.CODE = 'sso_redirect_url' AND S.DOMAINID = #{DomainID})
					WHEN MATCHED THEN
						UPDATE SET
						  SETTINGVALUE = #{GoogleRedirectURL}
						, MODIFIERCODE = #{UserCode}
						, MODIFIERDATE = SYSDATE
					WHEN NOT MATCHED THEN
						INSERT (S.CODE, S.DOMAINID, S.SSOAUTHTYPE, S.SSOTYPE, S.LABLE, S.SETTINGVALUE, S.DESCRIPTION)
						VALUES ('sso_redirect_url', #{DomainID}, 'O', 'S', 'Google Redirect URL', #{GoogleRedirectURL}, 'Google OAuth Redirect URL');
				</if>
			END
		}
	</insert>
	
	<update id="updateDomainInfoDesign" parameterType="cmap">
		/* sys.domain.updateDomainInfoDesign */
		UPDATE 	SYS_OBJECT_DOMAIN
		SET
		<choose>
			<when test='DESIGN != null and DESIGN == "Y"'>
        DomainImagePath = #{DomainImagePath}
        , DomainBannerPath = #{DomainBannerPath}
        , DomainBannerLink = #{DomainBannerLink}
        , DomainThemeCode= #{DomainThemeCode}
      		</when>
      		<otherwise>
        DisplayName = #{DisplayName}
        , MultiDisplayName = #{MultiDisplayName}
        , DomainRepName = #{DomainRepName}
        , DomainRepTel = #{DomainRepTel}
        , DomainCorpTel = #{DomainCorpTel}
        , DomainZipcode = #{DomainZipcode}
        , DomainAddress = #{DomainAddress}
        , Memo = #{Memo}
        , ChargerName = #{ChargerName}
        , ChargerTel = #{ChargerTel}
        , IsUseGoogleSchedule = #{IsUseGoogleSchedule}
      		</otherwise>
		</choose>
		WHERE  DomainCode = #{DomainCode}
	</update>

	<select id="selectDomainLicenseList" parameterType="cmap" resultType="cmap">
		SELECT LicSeq "LicSeq", LicName "LicName", Description "Description", ServiceUser "ServiceUser"
				, ExtraExpiredate "ExtraExpiredate", ExtraServiceUser "ExtraServiceUser", LicUserCount "LicUserCount",LicExUserCount "LicExUserCount", LicEx1Date "LicEx1Date"
		FROM (
			SELECT	  SL.LicSeq
					, SL.LicName
					, SL.Description
					, SODL.ServiceUser
					, SODL.ExtraExpiredate
					, SODL.ExtraServiceUser
					, SODL.LicUserCount
					, SODL.LicExUserCount
					, SODL.LicEx1Date
					, CASE WHEN SL.IsOpt = 'Y' THEN lico.LicUsingCnt ELSE lic.LicUsingCnt END AS LicUsingCnt
			FROM sys_object_domain SOD
			INNER JOIN sys_object_domain_license SODL ON SODL.DomainID = SOD.DomainID
			INNER JOIN sys_license SL ON SL.LicSeq = SODL.LicSeq
			LEFT JOIN (SELECT LicSeq, COUNT(ou.Usercode) LicUsingCnt
				      FROM  sys_object_user ou
					  JOIN  sys_object_user_basegroup oub ON ou.UserCode = oub.UserCode AND oub.JobType = 'Origin'
					  JOIN  sys_object_domain od ON oub.CompanyCode = od.DomainCode
					 WHERE  od.DomainId = #{domainID}
					   AND  ou.IsUse = 'Y'
				  GROUP BY LICSEQ) lic ON SODL.LicSeq = lic.LicSeq AND SL.IsOpt = 'N'
			LEFT JOIN (SELECT lou.LicSeq, COUNT(ou.Usercode) LicUsingCnt
					     FROM  sys_object_user ou
					     JOIN  sys_license_opt_user lou ON ou.UserCode = lou.UserCode  
						WHERE  lou.DomainId = #{domainID}
						  AND  ou.IsUse = 'Y'
					 GROUP BY  lou.LicSeq) lico ON SODL.LicSeq = lico.LicSeq AND SL.IsOpt = 'Y'
			WHERE 1=1
			AND SL.IsUse = 'Y'
			AND SOD.DomainID = #{domainID}
			<if test="isOpt != null and isOpt != ''">
				AND SL.IsOpt = #{isOpt}
			</if>
		) RESULT
		ORDER BY LicSeq ASC 
	</select>
	
	<select id="selectDomainLicAddList" parameterType="cmap" resultType="cmap">
		SELECT	  LicSeq "LicSeq"
				, LicName "LicName"
				, ModuleName "ModuleName"
				, Description "Description"
				, ServiceUser "ServiceUser"
				, ExtraExpiredate "ExtraExpiredate"
				, ExtraServiceUser "ExtraServiceUser"
		FROM (
			SELECT	  SL.LicSeq
					, SL.LicName
					, ETC.ModuleName
					, SL.Description
					, SODL.ServiceUser
					, SODL.ExtraExpiredate
					, SODL.ExtraServiceUser
			FROM sys_license SL
			LEFT OUTER JOIN (
				SELECT	  SLB.LicSeq
						, LISTAGG(NVL(Fn_BaseGetDictionary_S(#{lang}, SBC.MultiCodeName), SBC.CodeName) , '/') WITHIN GROUP (ORDER BY LicSeq) AS ModuleName
				FROM sys_license_bizsection SLB
				INNER JOIN sys_base_code SBC ON SBC.Code = SLB.BizSection AND SBC.CodeGroup = 'BizSection' AND SBC.Reserved3 = 'Y'
				GROUP BY SLB.LicSeq
			) ETC ON ETC.LicSeq = SL.LicSeq
			LEFT OUTER JOIN sys_object_domain_license SODL ON SODL.LicSeq = SL.LicSeq AND SODL.DomainID = #{domainID}
			WHERE 1=1
			AND SL.IsUse = 'Y'
			<if test="isOpt != null and isOpt != ''">
				AND SL.IsOpt = #{isOpt}
			</if>
		) RESULT
		ORDER BY LicSeq ASC
	</select>
	
	<insert id="insertDomainLic" parameterType="cmap">
		/* queryId : sys.domain.insertDomainLic */
		<foreach collection="LicInfoList" item="item" open="" separator=";" close="">
			MERGE INTO sys_object_domain_license a
			USING (SELECT  #{item.LicSeq} LicSeq, #{DomainID} DomainID
							, to_char(ServiceStart, 'yyyymmdd') ServiceStart
							, to_char(ServiceEnd, 'yyyymmdd') ServiceEnd
							, LicExpireDate
					 FROM sys_object_domain WHERE DomainID = #{DomainID} ) b on (a.LicSeq = b.LicSeq AND a.DomainID = b.DomainID)
			WHEN MATCHED THEN    
			UPdATE SET ServiceUser = #{item.ServiceUser}
					, ServiceStart = b.ServiceStart
					, ServiceEnd = b.ServiceEnd
					
					, ExtraServiceUser =  #{item.ExtraServiceUser}
					, ExtraExpiredate = #{item.ExtraExpiredate}
					, LicUserCount	=#{item.LicUserCount}
					, LicExpireDate =b.LicExpireDate
					, LicExUserCount =	#{item.LicExUserCount}	
					, LicEx1Date		= #{item.LicEx1Date}
					, ModifierCode	=#{UserCode}	
					, ModifyDate  = SYSDATE
			WHEN NOT MATCHED THEN	
			INSERT (LicSeq		, DomainID		, ServiceUser	, ServiceStart, ServiceEnd	, ExtraServiceUser	, ExtraExpiredate	, LicUserCount	, LicExpireDate
				,	 LicExUserCount		, LicEx1Date		, RegisterCode		, RegistDate, ModifierCode, ModifyDate)
			VALUES ( #{item.LicSeq}
					, #{DomainID}
					, #{item.ServiceUser}
					, b.ServiceStart
					, b.ServiceEnd
					, #{item.ExtraServiceUser}
					, #{item.ExtraExpiredate}
					, #{item.LicUserCount}
					, b.LicExpireDate
					, #{item.LicExUserCount}
					, #{item.LicEx1Date}
					, #{UserCode}
					, SYSDATE
					, #{UserCode}
					, SYSDATE )

		</foreach>
	</insert>
	
	<delete id="deleteDomainLic" parameterType="cmap">
		DELETE FROM sys_object_domain_license
		WHERE DomainID = #{DomainID}
	</delete>	
</mapper>
