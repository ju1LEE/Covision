<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="admin.board">
   	<resultMap type="cmap" id="boardConfigResult">
 	    <result property="DefaultContents" column="DefaultContents" jdbcType="CLOB" javaType="java.lang.String" />
 	</resultMap>
 	
   	<resultMap type="cmap" id="bodyResult">
 	    <result property="Body" column="Body" jdbcType="CLOB" javaType="java.lang.String" />
 	</resultMap>
    
    <select id="selectAdmin_LeftBoardMenu" parameterType="cmap" resultType="cmap">
	    SELECT 
	    	MenuID AS "MenuID", 	
	    	DomainID AS "DomainID", 
	    	DisplayName AS "DisplayName",  
	    	SortKey AS "SortKey",   
	    	HasFolder AS "HasFolder",   
	    	URL AS "URL",   
	    	Description AS "Description"
	    FROM SYS_OBJECT_MENU
	    WHERE 1=1
	    AND IsUse = 'Y'
	    AND IsDisplay = 'Y'
	    AND IsAdmin = 'Y'
	    AND MenuType = 'Left'
	    AND BizSection = 'Board'
	    ORDER BY SortKey ASC
    </select>
    
    <!-- 회사목록 조회 : 요청받은 DomainID를 최상위로 위치하도록 조회 -->
    <select id="selectDomainList" parameterType="cmap" resultType="cmap">
	 	SELECT
	    	dn.DomainID AS "optionValue"
			, Fn_BaseGetDictionary_S(#{lang}, NVL(dn.MultiDisplayName,dn.DisplayName)) AS "optionText"
		FROM SYS_OBJECT_GROUP gr
		INNER JOIN SYS_OBJECT_DOMAIN dn on gr.CompanyCode = dn.DomainCode
		WHERE gr.GroupType = 'Company'
		<if test="assignedDomain.size() > 0" >
            AND DomainID IN 
            <foreach item="item" index="index" collection="assignedDomain" open="(" close=")" separator=",">
            	#{item}
    		</foreach>
        </if> 
		ORDER BY
		<if test="domainID != null and domainID != ''">
		 	 CASE WHEN dn.DomainID = #{domainID} THEN 0 ELSE 1 END,  
		</if>
		gr.SortKey ASC
    </select>
    
    <select id="selectMenuList" parameterType="cmap" resultType="cmap">
        SELECT MenuID AS "optionValue", 
			   FN_BASEGETDICTIONARY_S(#{lang}, MultiDisplayName) AS "optionText"
		FROM SYS_OBJECT_MENU
		WHERE IsUse = 'Y' 
		AND DeleteDate IS NULL
		AND MenuID IN 
		<foreach item="item" index="index" collection="menuID" open="(" close=")" separator=",">
            #{item}
    	</foreach>
    	<if test='menuAclDataArr != null and menuAclDataArr.length != 0'>
			AND MenuID IN  
			<foreach collection="menuAclDataArr" item="item" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
    </select>
    
    <!-- 메뉴조회: 업무담당자의 MenuID를 조회이전까지 사용 -->
    <select id="selectMenuByDomainID" parameterType="cmap" resultType="cmap">
        SELECT MenuID AS "menuID"
        FROM SYS_OBJECT_MENU
        WHERE DomainID = #{domainID}
        AND BizSection = #{bizSection}
        AND IsAdmin = 'N'
        AND MenuType = 'TopSub'
    </select>
    
    <!-- Folder Tree Menu 조회 -->
	<select id="selectTreeFolderMenu" parameterType="cmap" resultType="cmap">
		/* queryId : admin.board.selectTreeFolderMenu */
		SELECT
			  SOF.FolderID AS "FolderID"
			, SOF.MemberOf AS "MemberOf"
			, SOF.FolderType AS "itemType"
		    , SOF.FolderType AS "FolderType"
		    , SOF.FolderPath AS "FolderPath"
			, SOF.MenuID AS "MenuID"
			, ('board_'||SOF.FolderType) AS "type"
			, NVL(FN_BASEGETDICTIONARY_S(#{lang}, SOF.MultiDisplayName), SOF.DisplayName) AS "FolderName"
			, SOF.MemberOf AS "MemberOf"
			, SOF.DisplayName AS "DisplayName"
			, SOF.SortKey AS "SortKey"
			, SOF.SortPath AS "SortPath"
			, SOF.IsUse AS "IsUse"
			, SOF.IsDisplay AS "IsDisplay"
			, SOF.DeleteDate AS "DeleteDate"
			, SOF.RegistDate AS "RegistDate"
			, FN_BASEGETDICTIONARY_S(#{lang}, SOU.MultiDisplayName) AS "RegisterName"
			, (SELECT t.DisplayName FROM sys_object_folder_type t WHERE FolderType = SOF.FolderType AND BizSection IN (sof.ObjectType, 'Common')) AS "FolderTypeName"
			, (SELECT COUNT(0) FROM SYS_OBJECT_FOLDER SELF WHERE SELF.MemberOf = SOF.FolderID AND SELF.IsUse = 'Y' AND SELF.DeleteDate IS NULL) AS "hasChild"
			, SOF.RegisterCode AS "RegisterCode"
			, SOF.Description AS "Description"
			, SOD.DomainCode AS "DomainCode"
			, NVL(SOF.IsMobileSupport, 'N') AS "IsMobileSupport"
			, NVL(SOF.Reserved4,'N') AS "IsContents"
		FROM SYS_OBJECT_FOLDER SOF 
		LEFT JOIN SYS_OBJECT_DOMAIN SOD ON SOF.DomainID = SOD.DomainID
		LEFT OUTER JOIN SYS_OBJECT_USER SOU ON SOF.RegisterCode = SOU.UserCode
		WHERE SOF.DomainID = #{domainID}
		<choose>
		    <when test="communityID != null and communityID != ''">
				AND SOF.ObjectType = 'Community'
			</when>
			<otherwise>
				AND SOF.ObjectType = #{bizSection}
			</otherwise>
		</choose>
		AND SOF.MenuID IN
		<foreach item="item" index="index" collection="menuID" open="(" close=")" separator=",">
            #{item}
    	</foreach>
    	<if test="folderType != null and folderType != ''">
				AND SOF.FolderType = #{folderType}
		</if>
    	<if test="memberOf != null and memberOf != ''">
				AND SOF.MemberOf = #{memberOf}  AND (foldertype IN ('Root','Folder') OR sof.Reserved4='Y' )
		</if>
    	<if test='isContents == "Y"'>
			 AND (SOF.foldertype IN ('Root','Folder') OR SOF.reserved4='Y' )
		</if>
    	<if test='onlyFolder == "Y"'>
				AND SOF.FolderType IN ('Root','Folder')
		</if>

		<choose>
			<when test='useEasyAdmin != null and useEasyAdmin.equalsIgnoreCase("Y")'>
				<if test='isAll == "N"'>
		AND SOF.IsUse = 'Y'
		AND SOF.IsDisplay = 'Y'
		AND SOF.DeleteDate IS NULL
				</if>
			</when>
			<otherwise>
		AND SOF.DeleteDate IS NULL
			</otherwise> 
		</choose>
    	<!-- AND (NOT REGEXP_LIKE (SOF.FolderPath,(
	      SELECT LISTAGG('^' || FolderPath||folderid || ';', '|') WITHIN group(order by folderid) FROM SYS_OBJECT_FOLDER
          WHERE (IsUse = 'N' OR IsDisplay = 'N'))
        ) OR SOF.FolderPath IS NULL) -->
	ORDER BY SOF.FolderPath NULLS FIRST, SOF.SortKey ASC
	</select>
    
    <!-- 폴더 목록 Count -->
	<select id="selectFolderGridCount" resultType="java.lang.Long">
	SELECT COUNT(*) FROM (
		SELECT SOF.FolderID
			, SOF.RegisterCode
			, SOF.MenuID
			, SOF.FolderType
			, SOF.DisplayName 
			, SOF.MultiDisplayName
			, SOF.MemberOf
			, SOF.SortKey
			, SOF.IsUse
			, SOF.IsDisplay
			, SOF.DeleteDate
			, SOF.RegistDate
		FROM SYS_OBJECT_FOLDER SOF 
		LEFT OUTER JOIN SYS_OBJECT_USER SOU ON SOF.RegisterCode = SOU.UserCode
		WHERE 1=1
		<choose>
		    <when test="communityID != null and communityID !=''">
				AND SOF.ObjectType = 'Community'
			</when>
			<otherwise>
				AND SOF.ObjectType = #{bizSection}
			</otherwise>
		</choose>
		<choose>
		    <when test="menuID != null and menuID !=''">
		        AND SOF.DomainID = #{domainID}
				AND SOF.MenuID = #{menuID}
				AND SOF.MemberOf = #{folderID}
				AND SOF.FolderType != 'Root'
		    </when>
		    <otherwise>
				AND SOF.DomainID = #{domainID}
				AND SOF.MenuID IN ( 
					SELECT MenuID 
					FROM SYS_OBJECT_MENU  
					WHERE DeleteDate IS NULL
					AND IsUse = 'Y'
					AND BizSection = #{bizSection}
					AND DomainID = #{domainID} )
				AND SOF.FolderType = 'Root'
		    </otherwise>
	    </choose>
	    ) RESULT
	</select>
	
	<!-- 폴더 목록 Grid 데이터  -->
 	<select id="selectFolderGridList" parameterType="cmap" resultType="cmap">
 	    /* queryId : admin.board.selectFolderGridList */
 	    <include refid="oracle.include.pagingHeader" />
		SELECT  
			RESULT.FolderID AS "FolderID"
			, RESULT.RegisterCode AS "RegisterCode"
			, RESULT.DomainID  AS "DomainID"
			, RESULT.MenuID  AS "MenuID"
			, RESULT.FolderType AS "FolderType"
			, RESULT.FolderPath AS "FolderPath"
			, RESULT.DisplayName AS "DisplayName"
			, RESULT.MultiDisplayName AS "MultiDisplayName"
			, RESULT.MemberOf AS "MemberOf"
			, RESULT.SortKey AS "SortKey"
			, RESULT.IsUse AS "IsUse"	    
			, RESULT.IsDisplay AS "IsDisplay"	    	   
			, RESULT.DeleteDate AS "DeleteDate"	 	   
			, TO_CHAR(RESULT.RegistDate,'YYYY-MM-DD HH24:MI:SS') AS "RegistDate"	 		    
			FROM (
				SELECT SOF.FolderID
				, SOF.RegisterCode
				, SOF.DomainID
				, SOF.MenuID
				, SOF.FolderType
				, SOF.FolderPath
				, SOF.DisplayName 
				, SOF.MultiDisplayName
				, SOF.MemberOf
				, SOF.SortKey
				, SOF.IsUse
				, SOF.IsDisplay
				, SOF.DeleteDate
				, SOF.RegistDate
			FROM SYS_OBJECT_FOLDER SOF 
			LEFT OUTER JOIN SYS_OBJECT_USER SOU ON SOF.RegisterCode = SOU.UserCode
			WHERE 1=1
			<choose>
			    <when test="communityID != null and communityID !=''">
					AND SOF.ObjectType = 'Community'
				</when>
				<otherwise>
					AND SOF.ObjectType = #{bizSection}
				</otherwise>
			</choose>
			<choose>
			    <when test="menuID != null and menuID !=''">
			        AND SOF.DomainID = #{domainID}
					AND SOF.MenuID = #{menuID}
					AND SOF.MemberOf = #{folderID}
					AND SOF.FolderType != 'Root'
			    </when>
			    <otherwise>
					AND SOF.DomainID = #{domainID}
					AND SOF.MenuID IN ( 
						SELECT MenuID 
						FROM SYS_OBJECT_MENU 
						WHERE DeleteDate IS NULL
						AND IsUse = 'Y'
						AND BizSection = #{bizSection}
						AND DomainID = #{domainID} )
					AND SOF.FolderType IN ('Root', 'DocRoot') 
			    </otherwise>
		    </choose>
	    ) RESULT
	    <trim prefix="ORDER BY"  prefixOverrides =",">
			<choose>
			    <when test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
			        <choose>
						<when test='sortColumn.equalsIgnoreCase("FolderID")'>FolderID</when>
						<when test='sortColumn.equalsIgnoreCase("DisplayName")'>DisplayName</when>
						<when test='sortColumn.equalsIgnoreCase("DeleteDate")'>DeleteDate</when>
						<when test='sortColumn.equalsIgnoreCase("RegisterCode")'>RegisterCode</when>
						<when test='sortColumn.equalsIgnoreCase("IsDisplay")'>IsDisplay</when>
						<when test='sortColumn.equalsIgnoreCase("IsUse")'>IsUse</when>
						<when test='sortColumn.equalsIgnoreCase("RegistDate")'>RegistDate</when>
						<otherwise>SortKey</otherwise>
					</choose>
					<choose>
						<when test='sortDirection.equalsIgnoreCase("DESC")'> DESC</when>
						<otherwise> ASC</otherwise>
					</choose>
			    </when>
			    <otherwise>
					SortKey ASC
			    </otherwise>		  
		    </choose>
		</trim>
	    <include refid="oracle.include.pagingFooter" />
	</select>
	
	<select id="selectNextSortKey" parameterType="cmap" resultType="java.lang.Long">
		SELECT NVL(MAX(SOF.SortKey), 1)
		FROM SYS_OBJECT_FOLDER SOF 
		LEFT OUTER JOIN SYS_OBJECT_USER SOU ON SOF.RegisterCode = SOU.UserCode
		INNER JOIN SYS_OBJECT_FOLDER_TYPE SOFt ON SOF.FolderType = SOFt.FolderType AND SOFt.IsUse = 'Y'
		WHERE 1=1
		<choose>
		    <when test="folderType != 'Root'">
		        AND SOF.DomainID = #{domainID}
				AND SOF.MenuID = #{menuID}
				AND SOF.MemberOf = #{memberOf}
				AND SOF.FolderType != 'Root'
		    </when>
		    <otherwise>
				AND SOF.DomainID = #{domainID}
				AND SOF.MenuID IN ( 
					SELECT MenuID 
					FROM SYS_OBJECT_MENU 
					WHERE DeleteDate IS NULL
					AND IsUse = 'Y'
					AND BizSection = #{bizSection}
					AND DomainID = #{domainID} )
				AND SOF.FolderType = 'Root'
		    </otherwise>		  
	    </choose>
 	</select>
	
	<!-- 추가/수정 팝업에 표시되는 폴더 타입 목록 -->
 	<select id="selectFolderTypeList" parameterType="cmap" resultType="cmap">
 	    SELECT DisplayName AS "optionText"
 	    	  , FolderType AS "optionValue"
		FROM SYS_OBJECT_FOLDER_TYPE 
		WHERE 1=1
		AND IsUse = 'Y'
		AND BizSection in (#{bizSection}, 'Common')
		ORDER BY SortKey ASC
 	</select>
	
	<!-- base_code 테이블 데이터 조회 항목 -->
	<!-- 추가/수정 팝업에 표시되는 폴더 타입 목록 -->
	<select id="selectSecurityLevelList" parameterType="cmap" resultType="cmap">
		SELECT	  CodeName AS "optionText"
				, MultiCodeName AS "multiOptionText"
		  		, Code AS "optionValue"
		FROM SYS_BASE_CODE sbc
		WHERE CodeGroup LIKE 'SecurityLevel'
		AND SortKey != 0
		AND DomainID = (SELECT NVL(MAX(DomainID), 0) FROM SYS_BASE_CODE WHERE Code = sbc.Code AND CodeGroup LIKE 'SecurityLevel' AND DomainID = #{domainID})
		ORDER BY SortKey DESC
	</select>
	
	<!-- 추가/수정 팝업에 표시되는 폴더 타입 목록 -->
	<select id="selectRequestStatusList" parameterType="cmap" resultType="cmap">
		SELECT	  CodeName AS "optionText"
	    		, Code AS "optionValue"
		FROM SYS_BASE_CODE sbc
		WHERE CodeGroup LIKE 'RequestStatus'
		AND SortKey != 0
		AND DomainID = (SELECT NVL(MAX(DomainID), 0) FROM SYS_BASE_CODE WHERE Code = sbc.Code AND CodeGroup LIKE 'RequestStatus' AND DomainID = #{domainID})
		ORDER BY SortKey ASC
 	</select>
    
    <select id="selectPathInfo" parameterType="cmap" resultType="cmap">
 	    SELECT
 	    	  SortPath AS "SortPath"
 	    	, FolderPath AS "FolderPath"
 	    FROM SYS_OBJECT_FOLDER
 	    WHERE 1=1
 	    AND FolderID = #{memberOf}
 	</select>
    
    <!-- 확장옵선:카테고리 체크박스 선택시 나오는 대분류 조회항목 -->
 	<select id="selectLargeCategory" parameterType="cmap" resultType="cmap">
 	   SELECT    BC.CategoryID AS "CategoryID"
				,BC.FolderID AS "FolderID"
				,BC.MemberOf AS	"MemberOF"
				,BC.CategoryPath AS "CategoryPath"
,BC.DisplayName AS "DisplayName"
				,BC.ManagerCode AS "ManageCode"
				,BC.SortKey AS "SortKey"
				,BC.SortPath AS "SortPath"
				,SOU.MultiDisplayName AS "ManagerName"
		FROM BOARD_CATEGORY BC
		LEFT OUTER JOIN SYS_OBJECT_USER SOU ON (BC.ManagerCode = SOU.UserCode)
		WHERE 1=1
		AND BC.MemberOf IS NULL
		AND BC.FolderID = #{folderID}
		ORDER BY BC.SortPath
 	</select>
    
    <select id="selectSmallCategory" parameterType="cmap" resultType="cmap">
 	    SELECT BC.CategoryID AS "CategoryID"
			,BC.FolderID AS "FolderID"
			,BC.MemberOf AS	"MemberOF"
			,BC.CategoryPath AS "CategoryPath" 
			,BC.DisplayName AS "DisplayName"
			,BC.ManagerCode AS "ManageCode"
			,BC.SortKey AS "SortKey"
			,BC.SortPath AS "SortPath"
			,SOU.MultiDisplayName AS "ManagerName"
 	    FROM BOARD_CATEGORY BC
 	    LEFT OUTER JOIN SYS_OBJECT_USER SOU ON (BC.ManageCode = SOU.UserCode)
 	    WHERE 1=1
 	    AND BC.FolderID = #{folderID}
 	    AND BC.MemberOf = #{categoryID}
 	    ORDER BY BC.SortPath
 	</select>
    
    <!-- 폴더 타입의 기본설정 조회 -->
 	<select id="selectDefaultConfig" parameterType="cmap" resultMap="boardConfigResult">
 	    SELECT
			 UseFile AS "UseFile"
			,UseImage AS "UseImage"  
			,UseVideo AS "UseVideo"  
			,UsePopNotice AS "UsePopNotice"  
			,UseTopNotice AS "UseTopNotice"  
			,UseExpiredDate AS "UseExpiredDate"  
			,UseAnony AS "UseAnony"  
			,UseReply AS "UseReply"  
			,UseComment AS "UseComment"  
			,UseInterest AS "UseInterest"  
			,UseFavorite AS "UseFavorite"  
			,UseRecommend AS "UseRecommend"   
			,UseSecret AS "UseSecret"   
			,UseTag AS "UseTag"   
			,UseLink AS "UseLink"    
			,UsePrint AS "UsePrint"    
			,LimitFileSize AS "LimitFileSize"     
			,LimitFileCnt AS "LimitFileCnt"     
			,LimitCommentCnt AS "LimitCommentCnt"     
			,LimitLinkCnt  AS "LimitLinkCnt"     
			,RecentlyDay AS "RecentlyDay"     
			,ExpireDay AS "ExpireDay"    
			,NVL(DefaultContents, '') AS "DefaultContents"    
			,UseScrap AS "UseScrap"    
			,UseCopy AS "UseCopy"    
			,UseMessageAuth AS "UseMessageAuth"    
			,UseReport AS "UseReport"    
			,UseEvalPoint AS "UseEvalPoint"    
			,UseCommentRecommend AS "UseCommentRecommend"    
			,UseLogWrite AS "UseLogWrite"   
			,UseReadCnt AS "UseReadCnt"   
			,UseTrackback AS "UseTrackback"   
			,UseRSS AS "UseRSS"   
			,UseReaderView AS "UseReaderView"   
			,UseDefaultSecret AS "UseDefaultSecret"   
			,UseSatisfaction AS "UseSatisfaction"   
			,UseSatisfactionOrigin AS "UseSatisfactionOrigin" 
			,UseSatisfactionReply AS "UseSatisfactionReply" 
			,UseIncludeMaximumRead AS "UseIncludeMaximumRead" 
			,UseIncludeRecentReg AS "UseIncludeRecentReg" 
			,UseLinkedMessage AS "UseLinkedMessage" 
			,UseModificationRequest AS "UseModificationRequest" 
			,UseIncludeOverallSearch AS "UseIncludeOverallSearch" 
			,UseEmail AS "UseEmail" 
			,UseSendMailInBody AS "UseSendMailInBody" 
			,UseMigrationToDoc AS "UseMigrationToDoc" 
			,UseCheckOut AS "UseCheckOut" 
			,UseReservation AS "UseReservation" 
			,UseBoardDescription AS "UseBoardDescription" 
			,UseRecommendDisp AS "UseRecommendDisp" 
			,UseSubscription AS "UseSubscription" 
			,UseCategory AS "UseCategory" 
			,UseBodyForm AS "UseBodyForm" 
			,UseUserForm AS "UseUserForm" 
			,UseOwnerProcess AS "UseOwnerProcess" 
			,UseUserProcess AS "UseUserProcess" 
			,UseProgressState AS "UseProgressState" 
			,BoardTotalLimitFileSize AS "BoardTotalLimitFileSize" 
			,CurrentTotalFileSize  AS "CurrentTotalFileSize" 
			,UsePubDeptName AS "UsePubDeptName" 
			,UseMessageReadAuth AS "UseMessageReadAuth" 
			,UseMessageSecurityLevel AS "UseMessageSecurityLevel" 
		FROM BOARD_CONFIG_DEFAULT
		WHERE FolderType = #{folderType}
 	</select>
 	
    <!-- 폴더/게시판 속성 조회: 조회시 사용하는 컬럼명과 JSP에서 Element ID와 맵핑-->
 	<select id="selectBoardConfig" parameterType="cmap" resultMap="boardConfigResult">
		/* queryId : admin.board.selectBoardConfig */
	SELECT RESULT.MenuID AS "MenuID"
		 , RESULT.FolderType AS "FolderType"
		 , RESULT.DisplayName AS "DisplayName"
		 , RESULT.MultiDisplayName AS "MultiDisplayName"
		 , RESULT.MemberOf AS "MemberOf"
		 , RESULT.FolderPath AS "FolderPath"
		 , FN_FOLDERPATHBYLANGGET_S(#{lang}, RESULT.FolderPath) "FolderPathName"
		 , RESULT.SortKey  AS "SortKey"
		 , RESULT.SortPath  AS "SortPath"
		 , RESULT.IsInherited AS "IsInherited"
		 , RESULT.IsShared AS "IsShared"
		 , RESULT.IsUse AS "IsUse"
		 , RESULT.IsDisplay AS "IsDisplay"
		 , RESULT.IsURL AS "IsURL"
		 , NVL(RESULT.URL,'') AS "URL"
		 , RESULT.SecurityLevel  AS "SecurityLevel"
		 , RESULT.IsMobileSupport AS "IsMobileSupport"
		 , NVL(RESULT.IsMsgSecurity, 'N') AS "IsMsgSecurity"
		 , RESULT.IsAdminNotice AS "IsAdminNotice"
		 , RESULT.IsContents AS "IsContents"
		 , RESULT.Description AS "Description"
		 , RESULT.OwnerCode AS "OwnerCode"
		 , RESULT.IsFavorite AS "IsFavorite"
		 , RESULT.IsSubscribe AS "IsSubscribe"
		 , NVL(RESULT.RegisterName, '') AS "RegisterName"
		 , RESULT.CreateDate AS "CreateDate"
		 , RESULT.RegistDate2 AS "RegistDate2"
		 , RESULT.UseFile AS "UseFile"
		 , RESULT.UseImage AS "UseImage"
		 , RESULT.UseVideo AS "UseVideo"
		 , RESULT.UsePopNotice AS "UsePopNotice"
		 , RESULT.UseTopNotice AS "UseTopNotice"
		 , RESULT.UseExpiredDate AS "UseExpiredDate"
		 , RESULT.UseAnony AS "UseAnony"
		 , RESULT.UseReply AS "UseReply"
		 , RESULT.UseComment AS "UseComment"
		 , RESULT.UseInterest AS "UseInterest"
		 , RESULT.UseFavorite AS "UseFavorite"
		 , RESULT.UseRecommend AS "UseRecommend"
		 , RESULT.UseSecret AS "UseSecret"
		 , RESULT.UseTag AS "UseTag"
		 , RESULT.UseLink AS "UseLink"
		 , RESULT.UsePrint AS "UsePrint"
		 , RESULT.TotalFileSize AS "TotalFileSize"
		 , RESULT.LimitFileSize AS "LimitFileSize"
		 , RESULT.LimitFileCnt AS "LimitFileCnt"
		 , RESULT.LimitCommentCnt AS "LimitCommentCnt"
		 , RESULT.LimitLinkCnt AS "LimitLinkCnt"
		 , RESULT.RecentlyDay AS "RecentlyDay"
		 , RESULT.ExpireDay  AS "ExpireDay"
		 , NVL(SUBSTR(RESULT.DefaultContents, 1, dbms_lob.getlength(RESULT.DefaultContents)), '') AS "DefaultContents"
		 , RESULT.UseScrap AS "UseScrap"
		 , RESULT.UseCopy AS "UseCopy"
		 , RESULT.UseMessageAuth AS "UseMessageAuth"
		 , RESULT.UseReport AS "UseReport"
		 , RESULT.UseEvalPoint AS "UseEvalPoint"
		 , RESULT.UseCommentRecommend AS "UseCommentRecommend"
		 , RESULT.UseLogWrite AS "UseLogWrite"
		 , RESULT.UseReadCnt AS "UseReadCnt"
		 , RESULT.UseTrackback AS "UseTrackback"
		 , RESULT.UseRSS AS "UseRSS"
		 , RESULT.UseReaderView  AS "UseReaderView"
		 , RESULT.UseDefaultSecret AS "UseDefaultSecret"
		 , RESULT.UseSatisfaction AS "UseSatisfaction"
		 , RESULT.UseSatisfactionOrigin AS "UseSatisfactionOrigin"
		 , RESULT.UseSatisfactionReply  AS "UseSatisfactionReply" 
		 , RESULT.UseIncludeMaximumRead AS "UseIncludeMaximumRead"   
		 , RESULT.UseIncludeRecentReg AS "UseIncludeRecentReg"    
		 , RESULT.UseLinkedMessage AS "UseLinkedMessage"    
		 , RESULT.UseModificationRequest AS "UseModificationRequest"      
		 , RESULT.UseIncludeOverallSearch  AS "UseIncludeOverallSearch"    
		 , RESULT.UseEmail AS "UseEmail"      
		 , RESULT.UseCategory AS "UseCategory"      
		 , RESULT.UseBodyForm AS "UseBodyForm"      
		 , RESULT.UseUserForm  AS "UseUserForm"       
		 , RESULT.UseProgressState  AS "UseProgressState"        
		 , RESULT.UseOwnerProcess   AS "UseOwnerProcess"       
		 , RESULT.UseUserProcess   AS "UseUserProcess"
		 , RESULT.UseReplyProcess   AS "UseReplyProcess"
		 , NVL(RESULT.TopColor, '') AS "TopColor"       
		 , NVL(RESULT.RecentlyColor, '') AS "RecentlyColor"        
		 , RESULT.RegisterCode AS "RegisterCode"    
		 , RESULT.RegistDate  AS "RegistDate"
		 , RESULT.UseSendMailInBody   AS "UseSendMailInBody"    
		 , RESULT.UseMigrationToDoc   AS "UseMigrationToDoc"  
		 , RESULT.BoardTotalLimitFileSize AS "BoardTotalLimitFileSize"   
		 , RESULT.CurrentTotalFileSize  AS "BoardTotalLimitFileSize"   
		 , RESULT.UseCheckOut   AS "UseCheckOut"   
		 , RESULT.UseBoardDescription  AS "UseBoardDescription"   
		 , RESULT.UseRecommendDisp   AS "UseRecommendDisp"   
		 , RESULT.UseReservation   AS "UseReservation"   
		 , RESULT.UseSubscription  AS "UseSubscription"   
		 , RESULT.UsePubDeptName  AS "UsePubDeptName"   
		 , RESULT.UseMessageReadAuth  AS "UseMessageReadAuth"   
		 , RESULT.UseMessageSecurityLevel    AS "UseMessageSecurityLevel"   
		 , RESULT.UseAutoDocNumber    AS "UseAutoDocNumber"
		 , RESULT.EnableFileExtention    AS "EnableFileExtention"
		 , RESULT.MessageTarget AS "MessageTarget"
	     , RESULT.UseIcon AS "UseIcon"
	     , RESULT.SortCols AS "SortCols"
	     , RESULT.UseBody AS "UseBody"
	     , RESULT.hasChild AS "hasChild"
	     FROM (
	 	    SELECT 
	 	    	SOF.MenuID
	 	    	,SOF.FolderType
	 	    	,SOF.DisplayName 
	 	    	,SOF.MultiDisplayName
	 	    	,SOF.MemberOf
	 	    	,SOF.FolderPath
	 	    	,SOF.SortKey ,SOF.SortPath
	 	    	,NVL(SOF.IsInherited, 'N') AS IsInherited
	 	    	,SOF.IsShared
	 	    	,SOF.IsUse ,SOF.IsDisplay
	 	    	,SOF.IsURL
	 	    	,SOF.URL
	 	    	,SOF.SecurityLevel
	 	    	,SOF.IsMobileSupport
	 	    	,SOF.IsMsgSecurity
	 	    	,SOF.IsAdminNotice
	 	    	,SOF.Reserved4 IsContents
	 	    	,NVL(SOF.Description, '') AS Description
	 	    	,NVL(SOF.OwnerCode, '') AS OwnerCode
	 	    	,DECODE((SELECT COUNT(0) FROM SYS_FAVORITE WHERE TargetObjectType ='FD' AND TargetServiceType = 'Board' AND TargetID = #{folderID} AND UserCode = #{userCode}), 0, 'N', 'Y') AS IsFavorite
	 	    	,DECODE((SELECT COUNT(0) FROM SYS_SUBSCRIPTION WHERE TargetServiceType = 'Board' AND TargetID = #{folderID} AND RegisterCode = #{userCode}), 0, 'N', 'Y' ) AS IsSubscribe
	 	    	,(SELECT MultiDisplayName FROM SYS_OBJECT_USER WHERE UserCode = SOF.RegisterCode) AS RegisterName
	 	    	,TO_CHAR(SOF.RegistDate, 'YYYY.MM.DD HH24:MI:SS') AS CreateDate
	 	    	,TO_CHAR(NVL(BC.RegistDate, BCD.RegistDate), 'YYYY.MM.DD HH24:MI:SS') AS RegistDate2
	 	    	,NVL(BC.UseFile, BCD.UseFile) AS UseFile
	 	    	,NVL(BC.UseImage, BCD.UseImage) AS UseImage
	 	    	,NVL(BC.UseVideo, BCD.UseVideo) AS UseVideo
	 	    	,NVL(BC.UsePopNotice, BCD.UsePopNotice) AS UsePopNotice
	 	    	,NVL(BC.UseTopNotice, BCD.UseTopNotice) AS UseTopNotice
				,NVL(BC.UseExpiredDate, BCD.UseExpiredDate) AS UseExpiredDate
				,NVL(BC.UseAnony, BCD.UseAnony) AS UseAnony
				,NVL(BC.UseReply, BCD.UseReply) AS UseReply
				,NVL(BC.UseComment, BCD.UseComment) AS UseComment
				,NVL(BC.UseInterest, BCD.UseInterest) AS UseInterest
				,NVL(BC.UseFavorite, BCD.UseFavorite) AS UseFavorite
				,NVL(BC.UseRecommend, BCD.UseRecommend) AS UseRecommend
				,NVL(BC.UseSecret, BCD.UseSecret) AS UseSecret
				,NVL(BC.UseTag, BCD.UseTag) AS UseTag
				,NVL(BC.UseLink, BCD.UseLink) AS UseLink
				,NVL(BC.UsePrint, BCD.UsePrint) AS UsePrint
				,NVL(BC.TotalFileSize, 0) AS TotalFileSize
				,NVL(BC.LimitFileSize, 0) AS LimitFileSize
				,NVL(BC.LimitFileCnt, BCD.LimitFileCnt) AS LimitFileCnt
				,NVL(BC.LimitCommentCnt, BCD.LimitCommentCnt) AS LimitCommentCnt
				,NVL(BC.LimitLinkCnt, BCD.LimitLinkCnt) AS LimitLinkCnt
				,NVL(BC.RecentlyDay, BCD.RecentlyDay) AS RecentlyDay
				,NVL(BC.ExpireDay, BCD.ExpireDay) AS ExpireDay
				,NVL(BC.DefaultContents, NVL(BCD.DefaultContents, '')) AS DefaultContents
				,NVL(BC.UseScrap, BCD.UseScrap) AS UseScrap
				,NVL(BC.UseCopy, BCD.UseCopy) AS UseCopy
				,NVL(BC.UseMessageAuth, BCD.UseMessageAuth) AS UseMessageAuth
				,NVL(BC.UseReport, BCD.UseReport) AS UseReport
				,NVL(BC.UseEvalPoint, BCD.UseEvalPoint) AS UseEvalPoint
				,NVL(BC.UseCommentRecommend, BCD.UseCommentRecommend) AS UseCommentRecommend
				,NVL(BC.UseLogWrite, BCD.UseLogWrite) AS UseLogWrite
				,NVL(BC.UseReadCnt, BCD.UseReadCnt) AS UseReadCnt
				,NVL(BC.UseTrackback, BCD.UseTrackback) AS UseTrackback
				,NVL(BC.UseRSS, BCD.UseRSS) AS UseRSS
				,NVL(BC.UseReaderView, BCD.UseReaderView) AS UseReaderView
				,NVL(BC.UseDefaultSecret, BCD.UseDefaultSecret) AS UseDefaultSecret
				,NVL(BC.UseSatisfaction, BCD.UseSatisfaction) AS UseSatisfaction
				,NVL(BC.UseSatisfactionOrigin, BCD.UseSatisfactionOrigin) AS UseSatisfactionOrigin
				,NVL(BC.UseSatisfactionReply, BCD.UseSatisfactionReply) AS UseSatisfactionReply
				,NVL(BC.UseIncludeMaximumRead, BCD.UseIncludeMaximumRead) AS UseIncludeMaximumRead
				,NVL(BC.UseIncludeRecentReg, BCD.UseIncludeRecentReg) AS UseIncludeRecentReg
				,NVL(BC.UseLinkedMessage, BCD.UseLinkedMessage) AS UseLinkedMessage
				,NVL(BC.UseModificationRequest, BCD.UseModificationRequest) AS UseModificationRequest
				,NVL(BC.UseIncludeOverallSearch, BCD.UseIncludeOverallSearch) AS UseIncludeOverallSearch
				,NVL(BC.UseEmail, BCD.UseEmail) AS UseEmail
				,NVL(BC.UseCategory, BCD.UseCategory) AS UseCategory
				,NVL(BC.UseBodyForm, BCD.UseBodyForm) AS UseBodyForm
				,NVL(BC.UseUserForm, BCD.UseUserForm) AS UseUserForm
				,NVL(BC.UseProgressState, BCD.UseProgressState) AS UseProgressState
				,NVL(BC.UseOwnerProcess, BCD.UseOwnerProcess) AS UseOwnerProcess
				,NVL(BC.UseUserProcess, BCD.UseUserProcess) AS UseUserProcess
				,NVL(BC.UseReplyProcess, BCD.UseReplyProcess) AS UseReplyProcess
				,NVL(BC.TopColor, NVL(BCD.TopColor, '')) AS TopColor
				,NVL(BC.RecentlyColor, NVL(BCD.RecentlyColor, '')) AS RecentlyColor
				,NVL(BC.RegisterCode, BCD.RegisterCode) AS RegisterCode
				,TO_CHAR(NVL(BC.RegistDate, BCD.RegistDate), 'YYYY.MM.DD HH24:MI:SS') AS RegistDate
				,NVL(BC.UseSendMailInBody, BCD.UseSendMailInBody) AS UseSendMailInBody
				,NVL(BC.UseMigrationToDoc, BCD.UseMigrationToDoc) AS UseMigrationToDoc
				,NVL(BC.BoardTotalLimitFileSize, BCD.BoardTotalLimitFileSize) AS BoardTotalLimitFileSize
				,NVL(BC.CurrentTotalFileSize, BCD.CurrentTotalFileSize) AS CurrentTotalFileSize
				,NVL(BC.UseCheckOut, BCD.UseCheckOut) AS UseCheckOut 
				,NVL(BC.UseBoardDescription, BCD.UseBoardDescription) AS UseBoardDescription
				,NVL(BC.UseRecommendDisp, BCD.UseRecommendDisp) AS UseRecommendDisp
				,NVL(BC.UseReservation, BCD.UseReservation) AS UseReservation
				,NVL(BC.UseSubscription, BCD.UseSubscription) AS UseSubscription
				,NVL(BC.UsePubDeptName, BCD.UsePubDeptName) AS UsePubDeptName
				,NVL(BC.UseMessageReadAuth, NVL(BCD.UseMessageReadAuth, '')) AS UseMessageReadAuth
				,NVL(BC.UseMessageSecurityLevel, BCD.UseMessageSecurityLevel) AS UseMessageSecurityLevel
				,NVL(BC.UseAutoDocNumber, BCD.UseAutoDocNumber) AS UseAutoDocNumber
				,NVL(BC.MessageTarget, '{"Receivers":{"code":"","name":""},"Excepters":{"code":"","name":""}}') AS MessageTarget
				,NVL(BC.EnableFileExtention, '') AS EnableFileExtention
				,NVL(BC.UseIcon, '') AS UseIcon
				,BC.SortCols
				,NVL(BC.UseBody, 'Y') AS UseBody
				,(SELECT CASE WHEN COUNT(0) > 0 THEN 'Y' ELSE 'N' END FROM SYS_OBJECT_FOLDER SELF WHERE SELF.MemberOf = SOF.FolderID AND SELF.IsUse = 'Y' AND SELF.DeleteDate IS NULL) AS hasChild
	 	    FROM SYS_OBJECT_FOLDER SOF
	 	    LEFT OUTER JOIN BOARD_CONFIG BC ON (BC.FolderID = SOF.FolderID)
	 	    LEFT OUTER JOIN BOARD_CONFIG_DEFAULT BCD ON (BCD.FolderType = SOF.FolderType)
	 	    WHERE 1=1
	 	    AND SOF.FolderID = #{folderID}
 	    ) RESULT
 	</select>
    
    <!-- 담당자 이름 조회 -->
 	<select id="selectBoardOwnerName" parameterType="cmap" resultType="cmap">
 	    SELECT MultiDisplayName AS "MultiDisplayName"
 	    FROM SYS_OBJECT_USER
 	    WHERE UserCode IN 
 	    <foreach item="item" index="index" collection="ownerCodes" open="(" close=")" separator=",">
            #{item}
    	</foreach>
 	</select>
    
    <!-- 순서변경용 sortkey 조회 -->
    <select id="selectTargetBoardSortKey" parameterType="cmap" resultType="cmap">
        SELECT *
			FROM (
		        SELECT
			        	  FolderID AS "FolderID"
			        	, SortKey AS "SortKey"
			        	, MemberOf AS "MemberOf"
		        FROM SYS_OBJECT_FOLDER
		        WHERE 1=1
		        <if test="folderType == 'Root'" >
		            AND MenuID IN 
		            <foreach item="item" index="index" collection="menuID" open="(" close=")" separator=",">
		            	#{item}
		    		</foreach>
		        </if>
		        AND DomainID = #{domainID}
				AND FolderPath = #{folderPath}
				AND DeleteDate IS NULL
		        <choose>
				    <when test="mode == 'up'">
						AND SortKey &lt; #{orgSortKey}
						ORDER BY SortKey DESC
				    </when>
				    <otherwise>
						AND SortKey &gt; #{orgSortKey}
						ORDER BY SortKey ASC
				    </otherwise>		  
			    </choose>
		    )
    		WHERE ROWNUM =1  
    </select>
    
    <!-- 게시판 기본정보 등록 -->
 	<insert id="createBoard" parameterType="cmap" useGeneratedKeys="true">
 	    INSERT INTO SYS_OBJECT_FOLDER (
			 DomainID
			,MenuID
			,ObjectType
			,FolderType
			,DisplayName
			,MultiDisplayName
			,MemberOf
			,FolderPath
			,SortKey
			,SortPath
			,IsInherited
			,IsShared
			,IsUse
			,IsDisplay
			,IsURL
			,URL
			,SecurityLevel
			,IsMobileSupport
			,IsMsgSecurity
			,IsAdminNotice
			,Description
			,OwnerCode
			,RegisterCode
			,RegistDate
			,Reserved4
		) 
		VALUES 
		(
			 #{domainID}
			,#{menuID}
			,#{bizSection}
			,#{folderType}
			,#{displayName}
			,#{multiDisplayName}
			,#{memberOf}
			,#{folderPath}
			,#{sortKey}
			,#{sortPath}
			,'Y'
			,#{isShared}
			,#{isUse}
			,#{isDisplay}
			,#{isURL}
			,#{url}
			,#{securityLevel}
			,#{isMobileSupport}
			,#{isMsgSecurity}
			,#{isAdminNotice}
			,#{description}
			,#{ownerCode}
			,#{userCode}
			,SYSDATE
			,#{isContens}
		 )
		<selectKey keyProperty="folderID" resultType="long" order="AFTER">
			SELECT MAX(FOLDERID) FROM SYS_OBJECT_FOLDER
        </selectKey>
 	</insert>
    
    <!-- 폴더 추가시 최상위폴더/폴더 이외의 게시판들은 board_config_default 테이블의 데이터로 추가 -->
 	<insert id="createBoardConfig" parameterType="cmap">
 	    INSERT INTO BOARD_CONFIG 
	(
		 FolderID
		,UseBasicConfig
		,UseFile 
		,UseImage 
		,UseVideo
		,UsePopNotice 
		,UseTopNotice 
		,UseExpiredDate 
		,UseAnony 
		,UseReply 
		,UseComment 
		,UseInterest 
		,UseFavorite 
		,UseRecommend 
		,UseSecret 
		,UseTag
		,UseLink 
		,UsePrint 
		,LimitFileSize 
		,LimitFileCnt 
		,LimitCommentCnt 
		,LimitLinkCnt 
		,RecentlyDay 
		,ExpireDay 
		,DefaultContents 
		,UseScrap 
		,UseCopy 
		,UseCommentRecommend 
		,UseLogWrite
		,UseReadCnt 
		,UseTrackback 
		,UseRSS
		,UseReaderView 
		,UseDefaultSecret 
		,UseEmail 
		,UseCategory
		,UseBodyForm
		,UseUserForm
		,UseOwnerProcess
		,UseUserProcess
		,RegisterCode 
		,RegistDate
		,BoardTotalLimitFileSize
		,CurrentTotalFileSize
		,UseReservation
		,UsePubDeptName
		<if test='MessageTarget != null and MessageTarget != ""'>
			,MessageTarget
		</if>
	 )	
		SELECT 
			 #{folderID} 
			,'Y' 
			,UseFile 
			,UseImage 
			,UseVideo
			,UsePopNotice 
			,UseTopNotice 
			,UseExpiredDate 
			,UseAnony 
			,UseReply 
			,UseComment 
			,UseInterest 
			,UseFavorite 
			,UseRecommend 
			,UseSecret 
			,UseTag 
			,UseLink 
			,UsePrint 
			,LimitFileSize 
			,LimitFileCnt 
			,LimitCommentCnt 
			,LimitLinkCnt 
			,RecentlyDay 
			,ExpireDay 
			,DefaultContents 
			,UseScrap 
			,UseCopy 
			,UseCommentRecommend 
			,UseLogWrite
			,UseReadCnt 
			,UseTrackback 
			,UseRSS
			,UseReaderView 
			,UseDefaultSecret 
			,UseEmail 
			,UseCategory
			,UseBodyForm
			,UseUserForm
			,UseOwnerProcess
			,UseUserProcess
			,#{userCode}
			,SYSDATE
			,BoardTotalLimitFileSize
			,CurrentTotalFileSize
			,UseReservation
			,UsePubDeptName
			<if test='MessageTarget != null and MessageTarget != ""'>
				,#{MessageTarget}
			</if>
		FROM BOARD_CONFIG_DEFAULT
		WHERE FolderType = #{folderType}
 	</insert>
    
     	<update id="updateBoard" parameterType="cmap">
 	    UPDATE SYS_OBJECT_FOLDER 
		SET  FolderType = #{folderType}
			,LinkFolderID = #{linkFolderID}
			,DisplayName = #{displayName}
			,MultiDisplayName = #{multiDisplayName}
			,IsUse = #{isUse}
			,IsDisplay = #{isDisplay}
			,IsInherited = #{isInherited}
		<if test='useEasyAdmin == null or useEasyAdmin ==""'>
			,IsShared = #{isShared}
			,IsURL = #{isURL}
			,URL = #{url}
			,SecurityLevel = #{securityLevel}
			,IsMobileSupport = #{isMobileSupport}
			,IsMsgSecurity = #{isMsgSecurity}
			,IsAdminNotice = #{isAdminNotice}
			,Description=#{description}
		</if>
			,OwnerCode=#{ownerCode}
			,ModifierCode=#{userCode}
			,ModifyDate=SYSDATE
		WHERE FolderID=#{folderID}
 	</update>
 	
 	<update id="updateBoardIsInherited" parameterType="cmap">
 	    UPDATE SYS_OBJECT_FOLDER 
		   SET IsInherited = #{isInherited}
		 WHERE FolderID = #{folderID}
 	</update>
    
    <!-- 게시판 순서 수정 -->
    <update id="updateBoardSortKey" parameterType="cmap">
        UPDATE SYS_OBJECT_FOLDER
        SET
        	SortKey = #{sortKey}
        WHERE FolderID = #{folderID}
    </update>
	
	<select id="selectBoardConfigCnt" parameterType="cmap" resultType="java.lang.Long">
		SELECT COUNT(*)
		FROM BOARD_CONFIG
		WHERE FolderID = #{folderID}
	</select>
	
    <update id="updateBoardConfig" parameterType="cmap">
 	    UPDATE BOARD_CONFIG
 	    SET 
			 UseBasicConfig = #{useBaseConfig}
			,UseFile = #{useFile}
			,UseImage = #{useImage}
			,UseVideo = #{useVideo}
			,UsePopNotice = #{usePopNotice}
			,UseTopNotice = #{useTopNotice}
			,UseExpiredDate = #{useExpiredDate}
			,UseAnony = #{useAnony}
			,UseReply = #{useReply}
			,UseComment = #{useComment}
			,UseInterest = #{useInterest}
			,UseFavorite = #{useFavorite}
			,UseRecommend = #{useRecommend}
			,UseSecret = #{useSecret}
			,UsePrint = #{usePrint}
			,UseScrap = #{useScrap}
			,UseCopy = #{useCopy}
			,UseCommentRecommend = #{useCommentRecommend}
			,UseEvalPoint = #{useEvalPoint}
			,UseRecommendDisp = #{useRecommendDisp}
			,UseIncludeMaximumRead = #{useIncludeMaximumRead}
			,UseIncludeRecentReg = #{useIncludeRecentReg}
			,UseCheckOut = NVL(#{useCheckOut}, 'N')
			,UseIncludeOverallSearch = #{useIncludeOverallSearch}
			,UseSubscription = #{useSubscription}
			,UseSendMailInBody = #{useSendMailInBody}
			,UseMigrationToDoc = #{useMigrationToDoc}
			,UseSatisfaction = #{useSatisfaction}
			,UseSatisfactionOrigin = #{useSatisfactionOrigin}
			,UseLogWrite = #{useLogWrite}
			,UseReadCnt = #{useReadCnt}
			,UseReaderView = #{useReaderView}
			,UseDefaultSecret = #{useDefaultSecret}
			,UseAutoDocNumber = #{useAutoDocNumber}
			,UsePubDeptName = #{usePubDeptName}
			,UseOwnerProcess = #{useOwnerProcess}
			,UseUserProcess = #{useUserProcess}
			,UseReplyProcess = #{useReplyProcess}
			
		<if test='MessageTarget != null and MessageTarget != ""'>
			,MessageTarget = #{MessageTarget}
		</if>		
		<if test='useBody != null and useBody != ""'>
			,UseBody = #{useBody}
		</if>
				
		<if test='useEasyAdmin == null or useEasyAdmin ==""'>
			,UseReservation = #{useReservation}
			,UseLinkedMessage = #{useLinkedMessage}
			,UseTag = #{useTag}
			,UseLink = #{useLink}
			,BoardTotalLimitFileSize = #{boardTotalLimitFileSize}
			,TotalFileSize = #{totalFileSize}
			,LimitFileSize = #{limitFileSize}
			,LimitFileCnt = #{limitFileCnt}
			,LimitCommentCnt = #{limitCommentCnt}
			,LimitLinkCnt = #{limitLinkCnt}
			,RecentlyDay = #{recentlyDay}
			,ExpireDay = #{expireDay}
			,DefaultContents = #{defaultContents}
			,UseMessageAuth = #{useMessageAuth}
			,UseReport = #{useReport}
			,UseModificationRequest = #{useModificationRequest}
			,UseMessageSecurityLevel = #{useMessageSecurityLevel} 
			,UseCategory = #{useCategory}
			,UseBodyForm = #{useBodyForm}
			,UseUserForm = #{useUserForm}
			,UseMessageReadAuth = #{useMessageReadAuth}
			,UseBoardDescription = #{useBoardDescription}
			,UseProgressState = #{useProgressState}
			,EnableFileExtention = #{enableFileExtention}
		</if>
			,ModifierCode = #{userCode}
			,ModifyDate = SYSDATE
 	    WHERE FolderID = #{folderID}
 	</update>
    
   <!-- 하위 폴더 조회 -->
 	<select id="selectLowerFolderID" parameterType="cmap" resultType="cmap">
 	    SELECT LISTAGG(FolderID, ',') WITHIN GROUP ( ORDER BY FolderPath ASC) AS "folderIDs"
		FROM SYS_OBJECT_FOLDER
		WHERE 1=1
		AND FolderID != #{folderID}
		CONNECT BY PRIOR FolderID = MemberOf
		START WITH FolderID = #{folderID}
 	</select>
    
   <!-- 잘라내기한 폴더의 하위폴더 조회 -->
 	<select id="selectLowerFolderData" parameterType="cmap" resultType="cmap">
 	    SELECT FolderID AS "FolderID", SortKey AS "SortKey", SortPath AS "SortPath", FolderPath AS "FolderPath", MemberOf AS "MemberOf"
 	    FROM SYS_OBJECT_FOLDER
		WHERE 1=1
		AND FolderID != #{FolderID}
		CONNECT BY PRIOR FolderID = MemberOf
		START WITH FolderID = #{FolderID}
 	</select>
    
    	<!-- 상위 폴더 Path 조회 -->
 	<select id="selectParentPath" parameterType="cmap" resultType="cmap">
 	    SELECT FolderID AS "FolderID"
 	         , SortPath AS "SortPath"
 	         , FolderPath AS "FolderPath" 
 	      FROM SYS_OBJECT_FOLDER
		WHERE 1=1
		AND FolderID = #{memberOf}
 	</select>
    
     <update id="deleteLowerBoard" parameterType="cmap">
 	    UPDATE SYS_OBJECT_FOLDER
 	    SET
 	    	 DeleteDate = SYSDATE
 	    	,ModifierCode = #{userCode}
 	    WHERE 1=1
 	    <if test='folderIDArr != null and folderIDArr.length != 0'>
			AND FolderID IN  
			<foreach collection="folderIDArr" item="item" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
 	</update>
    
    <update id="deleteBoard" parameterType="cmap">
 	    UPDATE SYS_OBJECT_FOLDER
 	    SET
 	    	 DeleteDate = SYSDATE
 	    	,ModifierCode = #{userCode}
 	    	
 	    WHERE 1=1
 	    AND FolderID = #{folderID}
 	</update>
    
   	<!-- 표시, 사용 여부 업데이트 -->
 	<update id="updateFlag" parameterType="cmap">
 	    UPDATE SYS_OBJECT_FOLDER 
		SET  <if test='flagKey.equalsIgnoreCase("IsUse")'>IsUse = #{flagValue},</if>
			<if test='flagKey.equalsIgnoreCase("IsDisplay")'>IsDisplay =#{flagValue},</if>
			ModifierCode = #{userCode},
			ModifyDate = SYSDATE
		WHERE FolderID=#{folderID}
 	</update> 
    
 	<update id="restoreFolder" parameterType="cmap">
 	    UPDATE SYS_OBJECT_FOLDER
		SET DeleteDate = NULL,
			ModifierCode = #{userCode},
			ModifyDate = SYSDATE
		WHERE FolderID=#{folderID}
 	</update>
    
   	<!-- 게시판 설명 조회 -->
 	<select id="selectBoardDescription" parameterType="cmap" resultMap="bodyResult">
 	    SELECT 
 	    	 ContentsID AS "ContentsID"
 	    	,Body AS "Body"
 	    FROM SYS_CONTENTS
 	    WHERE 1=1
 	    AND ObjectID = #{folderID}
 	    AND ObjectType = 'FD_EV'
 	    AND MessageID = #{folderID}
 	</select>

    <insert id="createBoardDescription" parameterType="cmap" >
 	    INSERT INTO SYS_CONTENTS(Body, ObjectID, ObjectType, MessageID, BodySize)
 	    VALUES (#{boardDescription}, #{folderID}, 'FD_EV', #{folderID}, #{bodySize})
 	</insert>

	 <update id="updateBoardDescription" parameterType="cmap">
 	    UPDATE SYS_CONTENTS
 	    SET
 	    	 Body = #{boardDescription}
 	    	,BodySize = #{bodySize}
 	    WHERE 1=1
 	    AND ObjectID = #{folderID}
 	    AND ObjectType = 'FD_EV'
 	    AND MessageID = #{folderID}
 	</update>
	
	<delete id="deleteBoardDescription" parameterType="cmap">
 	    DELETE FROM SYS_CONTENTS
 	    WHERE 1=1
 	    AND ObjectID = #{folderID}
 	    AND ObjectType = 'FD_EV'
 	    AND MessageID = #{folderID}
 	</delete>
 	
 	<!-- 확장 옵션 설정 탭: 대분류/소분류 조회 -->
    <select id="selectCategoryList" parameterType="cmap" resultType="cmap">
        SELECT CategoryID||'|'||DisplayName||'|'||NVL(ManagerCode,'')||'|'||SortPath AS "optionValue"
        	  , FN_BASEGETDICTIONARY_S(#{lang}, DisplayName) as "optionText"
		FROM BOARD_CATEGORY
		WHERE 1=1
		AND FolderID = #{folderID}
		<choose>
		    <when test="memberOf != null and memberOf != ''">
		        AND MemberOf = #{memberOf}
		    </when>
		    <otherwise>
		        AND MemberOf IS NULL
		    </otherwise>		  
	    </choose>
		ORDER BY SortKey ASC
    </select>
 	
 	<!-- 확장옵션 설정 탭: 대분류/소분류 추가 -->
    <insert id="createCategory" parameterType="cmap" useGeneratedKeys="true">
 	    INSERT INTO BOARD_CATEGORY (
			FolderID
			<if test="memberOf != null and memberOf != ''">
		 	 	,MemberOf
			</if>
			 ,DisplayName
			 ,SortKey
		) 
		VALUES 
		(
			#{folderID}
			<if test="memberOf != null and memberOf != ''">
		 	 	,#{memberOf}
			</if>
			,#{displayName}
			,#{sortKey}
		 )
		<selectKey keyProperty="categoryID" resultType="long" order="AFTER">
			SELECT BOARD_CATEGORY_SEQ.CURRVAL FROM dual
        </selectKey>
 	</insert>
 	
 	<update id="updateCategoryPath" parameterType="cmap">
        UPDATE BOARD_CATEGORY
		SET CategoryPath = #{categoryPath}
			,SortPAth = #{sortPath}
		WHERE CategoryID=#{categoryID}
    </update>
    
    <update id="updateCategory" parameterType="cmap">
        UPDATE BOARD_CATEGORY
		SET DisplayName = #{displayName}
		WHERE CategoryID=#{categoryID}
    </update>

 	<!-- 카테고리 삭제 및 게시글에 할당된 카테고리 값 초기화 -->
    <update id="initMessageCategoryID" parameterType="cmap">
        UPDATE BOARD_MESSAGE
        SET
        	CategoryID = NULL
        WHERE 1=1
        AND CategoryID IN (
        	SELECT CategoryID
        	FROM BOARD_CATEGORY
        	WHERE ((CategoryID = #{categoryID} ) OR (MemberOf = #{categoryID}) )
        )
    </update> 
    
 	<delete id="deleteCategory" parameterType="cmap">
        DELETE FROM BOARD_CATEGORY
        WHERE 1=1
        AND ((CategoryID = #{categoryID} ) OR (MemberOf = #{categoryID}) )
    </delete>
 	
 	<!-- 확장옵션 탭: 사용자 정의 컬럼 Grid 조회 -->
    <select id="selectUserDefFormGridList" parameterType="cmap" resultType="cmap">
        SELECT  RESULT.UserFormID AS "UserFormID"
		      , RESULT.FolderID AS "FolderID"
		      , RESULT.SortKey AS "SortKey" 
		      , RESULT.FieldType AS "FieldType" 
		      , RESULT.FieldSize AS "FieldSize" 
		      , RESULT.FieldLimitCnt AS "FieldLimitCnt" 
		      , RESULT.IsList AS "IsList" 
		      , RESULT.IsOption AS "IsOption" 
		      , RESULT.IsCheckVal AS "IsCheckVal"
		      , RESULT.IsSearchItem AS "IsSearchItem"
			  , RESULT.FieldName AS "FieldName"
              , RESULT.OptionCnt AS "OptionCnt" 
           FROM (
		      SELECT  BU.UserFormID, 
		        	  BU.FolderID, 
		        	  BU.SortKey, 
		        	  BU.FieldType, 
		        	  BU.FieldSize, 
		        	  BU.FieldLimitCnt, 
		        	  BU.IsList, 
		        	  BU.IsOption, 
		        	  NVL(BU.IsCheckVal, 'N') AS IsCheckVal, 
		        	  BU.IsSearchItem, 
					  BU.FieldName,
					(SELECT COUNT(*) 
						FROM BOARD_USERFORM_OPTION 
						WHERE UserFormID=BU.UserFormID
						AND FolderID=#{folderID}
					) AS OptionCnt 
			FROM BOARD_USERFORM BU
		WHERE 1=1
		AND BU.FolderID=#{folderID}
		AND BU.DeleteDate IS NULL 
		) RESULT
		ORDER BY SortKey ASC
    </select>
 	
    <select id="selectUserDefFormGridCount" resultType="java.lang.Long">
        SELECT COUNT(*) FROM (
	        	SELECT  BU.UserFormID
				FROM BOARD_USERFORM BU
				WHERE 1=1
			AND BU.FolderID = #{folderID}
			AND BU.DeleteDate IS NULL 
		)RESULT
    </select>
 	
 	 <!-- 사용자 정의 필드 옵션 -->
     <select id="selectUserDefFieldOptionList" parameterType="cmap" resultType="cmap">
        SELECT
        	  OptionID AS "OptionID"
        	, UserFormID AS "UserFormID"
        	, FolderID AS "FolderID"
        	, SortKey AS "SortKey"
        	, OptionName AS "OptionName"
        	, OptionValue AS "OptionValue"
        FROM BOARD_USERFORM_OPTION
        WHERE 1=1
        AND UserFormID = #{userFormID}
        AND FolderID = #{folderID}
    </select>
 
 	<!-- 순서변경용 sortkey 조회 -->
    <select id="selectTargetUserDefFieldSortKey" parameterType="cmap" resultType="cmap">
        SELECT
        	  UserFormID AS "UserFormID"
        	, SortKey AS "SortKey"
        FROM BOARD_USERFORM
        WHERE 1=1
        <choose>
		    <when test="mode == 'up'">
				AND FolderID = #{folderID}
				AND SortKey &lt; #{orgSortKey} 
				AND DeleteDate IS NULL
				AND ROWNUM = 1 
				ORDER BY SortKey DESC
		    </when>
		    <otherwise>
		        AND FolderID = #{folderID}
				AND SortKey &gt; #{orgSortKey} 
				AND DeleteDate IS NULL
				AND ROWNUM = 1 
				ORDER BY SortKey ASC
		    </otherwise>		  
	    </choose>
	   
    </select>
 	
 	<!-- 사용자 정의 필드 추가 -->
    <insert id="createUserDefField" parameterType="cmap" useGeneratedKeys="true">
        INSERT INTO BOARD_USERFORM
		(FolderID, SortKey, FieldName, FieldType, FieldSize, FieldLimitCnt, IsList, IsOption, IsCheckVal, IsSearchItem)
			VALUES
		(#{folderID}, #{sortKey}, #{fieldName}, #{fieldType}, #{fieldSize}, #{fieldLimitCnt}, #{isList}, #{isOption}, #{isCheckVal}, #{isSearchItem})
		<selectKey keyProperty="userFormID" resultType="long" order="AFTER">
			SELECT BOARD_USERFORM_SEQ.CURRVAL FROM dual
        </selectKey>
    </insert>
 	  
    <!-- 사용자 정의 필드 옵션 추가 -->
    <insert id="createUserDefFieldOption" parameterType="cmap">
        INSERT INTO BOARD_USERFORM_OPTION 
        (UserFormID, FolderID, SortKey, OptionName, OptionValue)
		VALUES 
		(#{userFormID}, #{folderID}, #{sortKey}, #{optionName}, #{optionValue})
    </insert>
 	
 	<!-- 사용자 정의 필드 수정 -->
    <update id="updateUserDefField" parameterType="cmap">
        UPDATE BOARD_USERFORM
        SET
        	  FieldName = #{fieldName}
        	, FieldType = #{fieldType}
        	, FieldSize = #{fieldSize}
        	, FieldLimitCnt = #{fieldLimitCnt}
        	, IsList = #{isList}
        	, IsOption = #{isOption}
        	, IsCheckVal = #{isCheckVal}
        	, isSearchItem = #{isSearchItem}
        WHERE 1=1
        AND UserFormID = #{userFormID}
    </update>

 	<!-- 사용자 정의 필드 순서 수정 -->
    <update id="updateUserDefFieldSortKey" parameterType="cmap">
        UPDATE BOARD_USERFORM
        SET
        	SortKey = #{sortKey}
        WHERE UserFormID = #{userFormID}
    </update>
 	
 	 <!-- 사용자 정의 필드 정보 삭제 -->
     <update id="deleteUserDefField" parameterType="cmap">
        UPDATE BOARD_USERFORM 
        SET
        	DeleteDate = SYSDATE
        WHERE UserFormID IN
        <foreach item="item" index="index" collection="userFormIDs" open="(" close=")" separator=",">
            #{item}
    	</foreach>
    </update>
 	
 	<!-- 사용자 정의 필드 옵션 삭제 -->
    <delete id="deleteUserDefFieldOption" parameterType="cmap">
        DELETE FROM BOARD_USERFORM_OPTION
        WHERE 1=1
        <choose>
		    <when test="optionID != null and optionID != ''">
		        AND OptionID = #{optionID}
		    </when>
		    <when test="userFormIDs != null and userFormIDs != ''">
		        AND UserFormID IN
		        <foreach item="item" index="index" collection="userFormIDs" open="(" close=")" separator=",">
		            #{item}
		    	</foreach>
		    </when>
		    <otherwise>
		        AND UserFormID = #{userFormID}
		        AND FolderID = #{folderID}
		    </otherwise>		  
	    </choose>
    </delete>
 	
 	<!-- 삭제되는 필드는 게시글에서 설정한 필드의 value도 삭제  -->
    <delete id="deleteBoardMessageUserFormValue" parameterType="cmap">
		DELETE FROM BOARD_MESSAGE_USERFORM_VALUE 
		WHERE FolderID = #{folderID}
    </delete>
 	
 	<!-- 진행 상태 조회 -->
    <select id="selectProgressStateList" parameterType="cmap" resultType="cmap">
        SELECT	StateID|| '|'|| DisplayName AS "optionValue"
			   ,FN_BASEGETDICTIONARY_S(#{lang}, DisplayName) AS "optionText"
		FROM BOARD_PROGRESSSTATE
		WHERE FolderID = #{folderID}
		ORDER BY SortKey ASC
    </select>
 
 	<!-- 진행상태 추가 -->
    <insert id="createProgressState" parameterType="cmap">
        INSERT INTO BOARD_PROGRESSSTATE(FolderID, DisplayName, SortKey)
        VALUE (#{folderID}, #{displayName}, #{sortKey})
    </insert>
 	
    <!-- 진행상태 수정 -->
    <update id="updateProgressState" parameterType="cmap">
        UPDATE BOARD_PROGRESSSTATE
        SET
        	DisplayName = #{displayName}
        WHERE 1=1
        AND StateID = #{stateID}
    </update>
 	
    <delete id="deleteProgressState" parameterType="cmap">
        DELETE FROM BOARD_PROGRESSSTATE 
        WHERE 1=1
        AND FolderID = #{folderID} 
        AND StateID = #{stateID}
    </delete>
 	
    <!-- CHECK: 진행상태 삭제시 이전의 진행상태의 ID를 사용중인 게시물이 존재한다면 다른 stateID값으로 치환해주는 작업 필요한지 확인 -->
    <select id="selectBodyForm" parameterType="cmap" resultType="cmap">
        SELECT BodyFormID AS "BodyFormID"
        	 , FormPath AS "FormPath"
        	 , FormName AS "FormName"
        	 , IsInit AS "IsInit"
        FROM BOARD_BODYFORM
        WHERE 1=1
        AND FolderID = #{folderID}
    </select>
    
    <insert id="createBodyForm" parameterType="cmap">
        INSERT INTO BOARD_BODYFORM(FolderID, FormPath, FormName, IsInit, FILEID)
        VALUES(#{folderID}, #{formPath}, #{formName}, 'N', #{fileId})
    </insert>
    
    <delete id="deleteBodyForm" parameterType="cmap">
        DELETE FROM BOARD_BODYFORM
        WHERE 1=1
        AND BodyFormID = #{bodyFormID}
    </delete>

    <!-- Param으로 들어온 BodyFormID의 IsInit을 Y -->
    <update id="updateBodyFormInit" parameterType="cmap">
        UPDATE BOARD_BODYFORM
        SET
        	IsInit = 'Y'
        WHERE 1=1
        AND BodyFormID = #{bodyFormID}
        AND folderID = #{folderID}
    </update>

    <!-- Param으로 들어온 BodyFormID외의 양식정보를 N -->
    <update id="updateBodyFormInitN" parameterType="cmap">
        UPDATE BOARD_BODYFORM
        SET
        	IsInit = 'N'
        WHERE 1=1
        AND BodyFormID != #{bodyFormID}
        AND folderID = #{folderID}
    </update>
     
	<!-- 폴더 붙여넣기 -->
	<!-- 붙여넣을 폴더의 SortKey 정보 조회 -->
	<select id="selectTargetFolderSortKey" parameterType="cmap" resultType="cmap">
		SELECT NVL(MAX(SortKey), 0) + 1 AS "SortKey"
		FROM SYS_OBJECT_FOLDER
		WHERE MemberOf = #{targetFolderID}
	</select>
	
	<update id="updateOrginalFolder" parameterType="cmap">
		UPDATE SYS_OBJECT_FOLDER
		SET	  MenuID = #{targetMenuID}
			, MemberOf = #{targetFolderID}
			, sortKey = #{sortKey}
			, sortPath = #{sortPath}
			, folderPath = #{folderPath}
		WHERE FolderID = #{orgFolderID}
	</update>
	
	<!-- 하위폴더 경로정보 업데이트 -->
	<update id="updateLowerFolder" parameterType="cmap">
		DECLARE
			v_SortKey VARCHAR2(10);
			v_SortPath VARCHAR2(300);
			v_FolderPath VARCHAR2(300);
		<foreach collection="folderIDArr" item="item" separator=";" open="BEGIN" close="; END;">
			SELECT NVL(MAX(SortKey), 0) + 1 INTO v_SortKey FROM SYS_OBJECT_FOLDER WHERE MemberOf = #{item};
			v_SortPath := FN_COMSORTPATHCREATE_S(#{item}, '', 'FD');
			v_FolderPath := FN_COMOBJECTPATHCREATE_S(#{item}, '', 'FD');
			
			UPDATE SYS_OBJECT_FOLDER
			SET	  MenuID = #{targetMenuID}
				, SortKey = v_SortKey
				, SortPath = v_SortPath
				, FolderPath = v_FolderPath
			WHERE FolderID = #{item}
		</foreach>
	</update>
    
    <!-- 폴더 삭제시 현재 사용중인 파일 용량 수정 -->
    <update id="updateCurrentFileSizeByFolder" parameterType="cmap">
        UPDATE BOARD_CONFIG board_config   
			SET 
			CurrentTotalFileSize = NVL(CurrentTotalFileSize, 0) - ( 
				SELECT 
					SUM(SIZE_) 
				FROM SYS_FILE CF
				INNER JOIN BOARD_MESSAGE BM ON (CF.MessageID = BM.MessageID)
				WHERE BM.FolderID = board_config.FolderID 
			) 
		WHERE FolderID = #{folderID}
    </update>
    
    <!-- 승인 프로세스 CRUD -->
    <select id="selectProcessTarget" parameterType="cmap" resultType="cmap">
        SELECT ProcessID AS "ProcessID"
        FROM SYS_PROCESS_TARGET
        WHERE 1=1
        AND ObjectType = 'FD'
        AND ObjectID = #{folderID}
    </select>
    
    <!-- 승인 프로세스 행위 정의 데이터 표시 -->
    <select id="selectProcessPerformerList" parameterType="cmap" resultType="cmap">
        SELECT PerformerID AS "PerformerID"
        	 , ProcessID AS "ProcessID"
        	 , ActorCode AS "ActorCode"
        	 , ActorRole AS "ActorRole"
        	 , ActivityType AS "ActivityType" 
        	 , Step AS "Step" 
        	 , SubStep AS "SubStep" 
        	 ,(SELECT FN_BASEGETDICTIONARY_S(#{lang},MultiDisplayName) FROM SYS_OBJECT_USER WHERE UserCode = A.ActorCode) AS "DisplayName"
        	 ,(SELECT LISTAGG(FN_BASEGETDICTIONARY_S(#{lang},MultiDeptName), ',') WITHIN GROUP (order by MultiDeptName) FROM SYS_OBJECT_USER_BASEGROUP WHERE UserCode = A.ActorCode) AS "DeptName"
        FROM SYS_PROCESS_PERFORMER A
		WHERE 1=1
		AND ProcessID = #{processID}
	 	ORDER BY Step, SubStep ASC	
    </select>
    
    <insert id="createProcessDef" parameterType="cmap" useGeneratedKeys="true">
        INSERT INTO SYS_PROCESS_TARGET(ObjectID, ObjectType, ActivityCnt, IsUse, DisplayName, Description, RegisterCode)
        VALUES(#{objectID}, #{objectType}, #{activityCnt}, 'Y', #{displayName}, #{displayName}, #{userCode})
        
        <selectKey keyProperty="processID" resultType="long" order="AFTER">
			SELECT SYS_PROCESS_TARGET_SEQ.CURRVAL FROM dual
        </selectKey>
    
    </insert>
    
    <update id="updateProcessDef" parameterType="cmap" >
        UPDATE SYS_PROCESS_TARGET 
        SET
        	  ActivityCnt = #{activityCnt}
        	, ModifierCode = #{userCode}
     	WHERE ProcessID = #{processID} 
    </update>
    
    <delete id="deleteProcessDef" parameterType="cmap">
        DELETE FROM SYS_PROCESS_TARGET
        WHERE ProcessID = #{processID}
    </delete>
    
    <!-- 승인 프로세스 행위 정의 테이블 추가/삭제 -->
    <insert id="createProcessActivityDef" parameterType="cmap">
        INSERT INTO SYS_PROCESS_PERFORMER(ProcessID, ActorCode, ActorRole,ActivityType, Step, SubStep, DisplayName, RegisterCode)
        VALUES(#{processID}, #{actorCode}, #{actorRole}, #{activityType}, #{step}, #{subStep}, (SELECT MultiDisplayName FROM SYS_OBJECT_USER WHERE UserCode = #{actorCode}), #{userCode})
    </insert>
    
    <delete id="deleteProcessActivityDef" parameterType="cmap">
        DELETE FROM SYS_PROCESS_PERFORMER
        WHERE ProcessID = #{processID}
    </delete>
    
 	<!-- 소유자, 담당부서 변경 -->
    <update id="changeDocInfo" parameterType="cmap">
        UPDATE BOARD_MESSAGE SET
        	<choose>
        	    <when test="ownerCode != null and ownerCode != '' and registDept != null and registDept != ''">
        	        OwnerCode = #{ownerCode}
        			,RegistDept = #{registDept}
        	    </when>
        	    <otherwise>
        	        <if test="ownerCode != null and ownerCode != ''">
					 	 OwnerCode = #{ownerCode}
					</if>
					<if test="registDept != null and registDept != ''">
					 	 RegistDept = #{registDept}
					</if>
        	    </otherwise>
        	</choose>
        WHERE 1=1
  		AND MessageID IN 
		<foreach item="item" index="index" collection="messageID" open="(" close=")" separator=",">
			#{item}
		</foreach>
    </update>
  
    <!-- 문서번호 표시, 사용 여부 업데이트 -->
 	<update id="updateDocNumberFlag" parameterType="cmap">
 	    UPDATE DOC_NUMBER_MGR 
		SET IsUse = #{flagValue}
		WHERE ManagerID = #{managerID}
 	</update>
    
    <insert id="createDocNumber" parameterType="cmap">
    	<selectKey keyProperty="NextSeq" resultType="String" order="BEFORE">
			SELECT NVL(MAX(Seq) + 1, 0) AS NextSeq FROM DOC_NUMBER_MGR WHERE DomainID = #{domainID}
		</selectKey>
 	    INSERT INTO DOC_NUMBER_MGR
 	    	(DomainID, Seq, FieldType, FieldLength, LanguageCode, Separator, IsUse)
 	    VALUES
 	    	(#{domainID}, #{NextSeq}, #{fieldType}, #{fieldLength}, #{languageCode}, #{separator}, #{isUse})
 	</insert>
    
    <update id="updateDocNumber" parameterType="cmap">
 	    UPDATE DOC_NUMBER_MGR SET
 	    	 DomainID = #{domainID}
 	    	,Seq = #{seq}
 	    	,FieldType = #{fieldType}
 	    	,FieldLength = #{fieldLength}
 	    	,LanguageCode = #{languageCode}
 	    	,Separator = #{separator}
 	    	,IsUse = #{isUse}
 	    WHERE 1=1
 	    AND ManagerID = #{managerID}
 	</update>
    
    <delete id="deleteDocNumber" parameterType="cmap">
 	    DELETE FROM DOC_NUMBER_MGR 
 	    WHERE ManagerID IN
 	    <foreach item="item" index="index" collection="managerID" open="(" close=")" separator=",">
            #{item}
    	</foreach>
 	</delete>
    
	<!-- base code 목록 조회 -->
	<select id="selectBaseCodeList"  parameterType="cmap" resultType="cmap">
		SELECT	  Code AS "optionValue"
				, CodeName AS "optionText"
		FROM SYS_BASE_CODE sbc
		WHERE 1=1
		AND CodeGroup = #{codeGroup}
		AND Code !=  #{codeGroup}
		AND IsUse = 'Y'
		AND DomainID = (SELECT NVL(MAX(DomainID), 0) FROM SYS_BASE_CODE WHERE Code = sbc.Code AND CodeGroup = #{codeGroup} AND DomainID = #{domainID})
		ORDER BY SortKey ASC
	</select>
    
    <select id="selectDocNumberInfo" parameterType="cmap" resultType="cmap">
        SELECT ManagerID AS "ManagerID"
             , DomainID AS "DomainID"
             , Seq AS "Seq"
             , FieldType AS "FieldType"
             , FieldLength AS "FieldLength"
             , LanguageCode AS "LanguageCode"
             , Separator AS "Separator"
             , IsUse AS "IsUse"
             , CreateDate AS "CreateDate"
             , DeleteDate AS "DeleteDate"
        FROM DOC_NUMBER_MGR
        WHERE 1=1
        AND ManagerID = #{managerID}
    </select>
    
    <select id="selectCommunityList" parameterType="cmap" resultType="cmap">
 	    SELECT   CommunityName AS "optionText"
			   , CU_ID AS "optionValue"
		FROM COMMUNITY 
		WHERE 1=1 
 	    AND CU_ID = #{communityID}
 	</select>
    
 	<select id="selectCommunityFolderTypeList" parameterType="cmap" resultType="cmap">
		  SELECT A.optionText AS "optionText"
		     , A.optionValue AS "optionValue"
		     , A.Sort AS "Sort"
		     , A.SortKey AS "SortKey"
		  FROM (
		     SELECT DisplayName AS optionText
		 	    	, FolderType AS optionValue
		 	    	, '0' AS Sort
					, SortKey 
				FROM SYS_OBJECT_FOLDER_TYPE 
				WHERE 1=1
				AND IsUse = 'Y'
				AND BizSection IN ('Board', 'Common')
				AND FolderType IN ('Root','Folder')
			
				UNION ALL 
				
				SELECT MAX(soft.DisplayName) AS optionText
				       , cbd.FolderType As optionValue
				       , '1' AS Sort
				       , MIN(cbd.SortKey) AS SortKey
				FROM COMMUNITY_BOARD_DEFAULT cbd 
				INNER JOIN COMMUNITY c ON c.DefaultBoardType = cbd.CommunityType AND (cbd.DN_ID = 0 OR cbd.DN_ID = c.DN_ID)  
				INNER JOIN SYS_OBJECT_FOLDER_TYPE soft ON cbd.FolderType = soft.FolderType AND BizSection = 'Community'
				WHERE 1=1
				AND c.CU_ID = #{communityID}
				AND cbd.FolderType != 'Schedule'
				GROUP BY cbd.FolderType
		)A
		ORDER BY Sort ASC, SortKey ASC  
 	</select>
 	
 	<select id="selectCommunityNotRootFolderTypeList" parameterType="cmap" resultType="cmap">
		  SELECT A.optionText AS "optionText"
			     , A.optionValue AS "optionValue"
			     , A.Sort AS "Sort"
			     , A.SortKey AS "SortKey"
		  FROM (
			  SELECT DisplayName AS optionText
			       , FolderType AS optionValue
			       , '0' AS Sort
			       , SortKey 
			  FROM SYS_OBJECT_FOLDER_TYPE 
			  WHERE 1=1
			  AND IsUse = 'Y'
			  AND BizSection IN ('Board', 'Common')
			  AND FolderType = 'Folder'
			
			  UNION ALL 
			  
			  SELECT MAX(soft.DisplayName) AS optionText
			       , cbd.FolderType As optionValue
			       , '1' AS Sort
			       , MIN(cbd.SortKey) AS SortKey
			  FROM COMMUNITY_BOARD_DEFAULT cbd 
			  INNER JOIN COMMUNITY c ON c.DefaultBoardType = cbd.CommunityType AND (cbd.DN_ID = 0 OR cbd.DN_ID = c.DN_ID)  
			  INNER JOIN SYS_OBJECT_FOLDER_TYPE soft ON cbd.FolderType = soft.FolderType AND BizSection = 'Community'
			  WHERE 1=1
			  AND c.CU_ID = #{communityID}
			  AND cbd.FolderType != 'Schedule'
			  GROUP BY cbd.FolderType
		  )A
		  ORDER BY Sort ASC, SortKey ASC  
 	</select>
 	
 	<select id="selectCommunityMenuTopCount"  parameterType="cmap" resultType="java.lang.Long">
	    SELECT COUNT(*) 
	    FROM COMMUNITY_MENU_TOP
	    WHERE 1=1
	    AND CU_ID = #{communityID}
	    AND FD_ID = #{folderID}
	    AND SortKey = 0
	</select>
	
	<insert id="createCommunityMenuTop" parameterType="cmap">
		INSERT INTO COMMUNITY_MENU_TOP(CU_ID, FD_ID, SortKey)
		SELECT	  #{communityID}
				, #{folderID}
				, NVL(MAX(SortKey), -1) + 1
		FROM COMMUNITY_MENU_TOP
		WHERE CU_ID = #{CU_ID}
	</insert>
	
	<select id="selectFieldLangInfos" parameterType="cmap" resultType="cmap">
		/* queryID = admin.board.selectFieldLangInfos */
		SELECT	NVL( Fn_BaseGetDictionary_S(#{compLang}, T3.MultiDisplayName), T3.DisplayName) AS "compNm"
				, NVL( Fn_BaseGetDictionary_S(#{compSnmLang}, T3.MultiShortName), T3.ShortName) AS "compSnm" 
				, NVL( Fn_BaseGetDictionary_S(#{deptNmLang}, T2.MultiDisplayName), T2.DisplayName ) AS "deptNm"
				, NVL(Fn_BaseGetDictionary_S(#{deptSnmLang}, T2.MultiShortName), T2.ShortName) AS "deptSnm" 
				, ( SELECT 	MAX(NVL(FN_BASEGETDICTIONARY_S(#{cateNmLang}, MultiDisplayName), DisplayName ))
            		FROM    SYS_OBJECT_FOLDER
            		WHERE   DomainID = #{DN_ID}
            		AND ObjectType = 'Doc' AND IsUse = 'Y' AND DeleteDate IS NULL AND FolderType = 'Root') AS "folderNm"
		FROM    SYS_OBJECT_USER_BASEGROUP T1
		        INNER JOIN SYS_OBJECT_GROUP T2 ON T2.GROUPCODE = #{DEPTID} AND T2.COMPANYCODE = #{DN_Code}
		        INNER JOIN SYS_OBJECT_DOMAIN T3 ON T3.DOMAINCODE = #{DN_Code}
		WHERE   1=1
		AND     T1.USERCODE = #{USERID}
		AND     T1.DEPTCODE = #{DEPTID}
	</select>
	
	<update id="updateExpiredDay" parameterType="cmap">
		UPDATE board_message
	    <choose>
		    <when test="expireDay != null and expireDay != '' and expireDay != 0 ">
				SET ExpiredDate = RegistDate + #{expireDay}
		    </when>
		    <otherwise>
				SET ExpiredDate = DEFAULT
		    </otherwise>		  
	    </choose>
		WHERE FolderID = #{folderID}
		AND ExpiredDate <![CDATA[>]]> SYSDATE
    </update>
	
	<update id="updateFieldSeq" parameterType="cmap">
		/* queryID = admin.board.updateFieldSeq */
		UPDATE 	DOC_NUMBER_MGR
		SET		SEQ = #{Seq}
		WHERE 	MANAGERID = #{ManagerID}
		AND     DOMAINID = #{DomainID}
		AND     FIELDTYPE = #{FieldType}
	</update>
	
	<select id="selectPrevNextField" parameterType="cmap" resultType="cmap">
        /* queryID = admin.board.selectPrevNextField */
        SELECT 		T.ManagerID AS "ManagerID"
        			, T.DomainID AS "DomainID"
        			, T.Seq AS "Seq"
        			, T.FieldType AS "FieldType"
        			, T.FieldLength AS "FieldLength"
        			, T.LanguageCode AS "LanguageCode"
        			, T.Separator AS "Separator"
        			, T.IsUse AS "IsUse"
        			, T.CreateDate AS "CreateDate"
        			, T.DeleteDate AS "DeleteDate"
        FROM (
	        	SELECT  ManagerID, DomainID, Seq, FieldType, FieldLength, LanguageCode, Separator, IsUse, CreateDate, DeleteDate
				FROM 	DOC_NUMBER_MGR
				WHERE   DomainID = #{DomainID}
			<choose>
				<when test="Status == 'DOWN'">AND Seq <![CDATA[>]]> #{Seq}</when>
				<when test="Status == 'UP'">AND Seq <![CDATA[<]]> #{Seq}</when>
			</choose>
	        	ORDER BY Seq <if test="Status == 'UP'"> DESC</if>
		) T
		WHERE ROWNUM = 1
    </select>
	
	<select id="selectInheritedACLList" parameterType="cmap" resultType="cmap">
		SELECT	  objectID AS "objectID"
				, folderID AS "folderID"
				, memberOf as "memberOf"
		FROM (
			SELECT	  FolderID AS objectID
					, FolderID AS folderID
					, MemberOf AS memberOf
					, ';' || FolderPath AS FolderPath
			FROM sys_object_folder
			WHERE DomainID = #{domainID}
		) A
		WHERE FolderPath LIKE '%;'||#{folderID}||';%'
	</select>
	
	<update id="updateCategoryManager" parameterType="cmap">
 	    UPDATE BOARD_CATEGORY 
		   SET MANAGERCODE = #{categoryManagerCode}
		 WHERE CATEGORYID = #{categoryID}
 	</update>
 	
</mapper>
