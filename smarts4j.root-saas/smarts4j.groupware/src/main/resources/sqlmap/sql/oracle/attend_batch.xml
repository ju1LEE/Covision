<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="attend.adminBatch">
	
	<!-- 외부 시스템 I/F 활성화 여부 -->
	<select id="getDomainId" resultType="cmap">
		SELECT
			COMPANYCODE AS "CompanyCode"
		FROM SYS_OBJECT_DOMAIN D
			JOIN ATTEND_MST M
				ON D.DOMAINCODE = M.COMPANYCODE
		WHERE 1=1
		<if test="OthYn != null and OthYn != ''">
			AND OTHYN = #{OthYn}
		</if>
	</select>

	<!-- 결근 BATCH 처리 -->
	<update id="setAbsentData" statementType="CALLABLE" parameterType= "cmap" >
		{CALL SP_ATTEND_SETCOMMUTEABSENTUPD(#{CompanyCode , mode=IN, jdbcType=VARCHAR},#{RetCount, mode=OUT, jdbcType=INTEGER})}
	</update>
	
	<!-- 근무일정 자동생성 -->
	<update id="autoCreateScheduleJob" statementType="CALLABLE" parameterType= "cmap">
	 	{CALL SP_ATTEND_AUTOCREATESKEDJOB(#{Month}, #{HolidayFlag}, #{CompanyCode}, #{USERID}, #{RetCount, mode=OUT, jdbcType=INTEGER}, #{RetValue, mode=OUT, jdbcType=VARCHAR})}
	</update>

	<!-- 외부 출퇴근 시스템 I/F리스트
	<select id="getCommuteDataByOtherSystem" statementType="CALLABLE" parameterType= "cmap"  resultType="cmap">
		{CALL sp_attend_getCommuteByOtherSys(#{CompanyCode , mode=IN, jdbcType=VARCHAR})}
	</select>  -->

	<select id="getCommuteByOtherSystemType" parameterType= "cmap"  resultType="string">
		SELECT SETTINGVALUE
		FROM SYS_BASE_CONFIG A
		JOIN SYS_OBJECT_DOMAIN B ON A.DOMAINID = B.DOMAINID AND B.DOMAINCODE = #{CompanyCode}
		WHERE SETTINGKEY = 'AttBatchDeviceName'
	</select>

	<select id="getCommuteByOtherSystemBatchDate" parameterType= "cmap"  resultType="string">
		SELECT SETTINGVALUE FROM SYS_BASE_CONFIG A WHERE SETTINGKEY = 'AttendanceBatchDay'
	</select>

	<select id="getCommuteByOtherSystmeSecom" parameterType= "cmap"  resultType="cmap">
		<![CDATA[
		SELECT
			TO_CHAR(TO_DATE(WORKDATE, 'YYYYMMDD'),'YYYY-MM-DD') AS "workdate"
			, USERCODE AS "usercode"
			, CASE WHEN WSTIME != '' THEN TO_CHAR(TO_DATE(WSTIME, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS') END AS "wstime"
			, CASE WHEN WCTIME != '' THEN TO_CHAR(TO_DATE(WCTIME, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS') END AS "wctime"
			, STARTBATCH AS "startbatch"
			, ENDBATCH AS "endbatch"
			, COMMUSEQ AS "commuSeq"
			, ATTCONFIRMYN AS "AttConfirmYn"
		FROM
		(
			SELECT
				BASIC.WORKDATE
				, ATT.TARGETDATE
				, U.USERCODE
				, BASIC.WSTIME
				, ATT.STARTTIME
				, BASIC.WCTIME
				, ATT.ENDTIME
				, CASE WHEN BASIC.WSTIME = '' OR BASIC.WSTIME >= TO_CHAR(ATT.STARTTIME, 'YYYYMMDDHH24MISS') OR StartChangeYn = 'Y' THEN NULL ELSE 'Y' END AS STARTBATCH
				, CASE WHEN BASIC.WCTIME = '' OR BASIC.WCTIME <=  TO_CHAR(ATT.ENDTIME, 'YYYYMMDDHH24MISS') OR EndChangeYn = 'Y' THEN NULL ELSE 'Y' END AS ENDBATCH
				, ATT.COMMUSEQ
				, ATT.ATTCONFIRMYN
			FROM
				(
					SELECT distinct
						WORKDATE
						, WSTIME
						, WCTIME
						, SABUN
						, BWS
						, BWC
					FROM LEGACY_SECOM.T_SECOM_WORKHISTORY
					WHERE
						(BWS = 1 OR BWC = 1)
						AND SABUN != ''
						AND WORKDATE >= TO_CHAR((SYSDATE - #{batchDate}),'YYYYMMDD')
				) BASIC
				JOIN SYS_OBJECT_USER U ON BASIC.SABUN = U.EMPNO
				LEFT JOIN (
					SELECT
						ACM.USERCODE
						, ACM.ATTCONFIRMYN
						, ACM.STARTCHANGEYN
						, ACM.ENDCHANGEYN
						, ACM.ATTSTARTTIME AS STARTTIME
						, ACM.ATTENDTIME AS ENDTIME
						, ACM.TARGETDATE
						, ACM.COMMUSEQ
					FROM
						ATTEND_COMMUTING_MST ACM
					WHERE
					ACM.TARGETDATE >= SYSDATE - #{batchDate}
				) ATT ON U.USERCODE = ATT.USERCODE AND BASIC.WORKDATE = TO_CHAR(ATT.TARGETDATE, 'YYYYMMDD')
		) A
		WHERE (STARTBATCH IS NOT NULL OR ENDBATCH IS NOT NULL)
		ORDER BY WORKDATE ASC]]>
	</select>

	<select id="getCommuteByOtherSystmeAdt" parameterType= "cmap"  resultType="cmap">
		SELECT
			TO_CHAR(TO_DATE(WORKDATE, 'YYYYMMDD'),'YYYY-MM-DD') AS "workdate"
			, USERCODE AS "usercode"
			, CASE WHEN WSTIME != '' THEN TO_CHAR(TO_DATE(WSTIME, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS') END AS "wstime"
			, CASE WHEN WCTIME != '' THEN TO_CHAR(TO_DATE(WCTIME, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS') END AS "wctime"
			, STARTBATCH AS "startbatch"
			, ENDBATCH AS "endbatch"
			, COMMUSEQ AS "commuSeq"
			, ATTCONFIRMYN AS "AttConfirmYn"
		FROM
		(
			SELECT
				BASIC.WORKDATE
				, ATT.TARGETDATE
				, U.USERCODE
				, BASIC.WSTIME
				, ATT.STARTTIME
				, SECOM.WCTIME
				, ATT.ENDTIME
				, CASE WHEN ATT.STARTCHANNEL != 'S' OR BASIC.WSTIME = '' OR BASIC.WSTIME >= TO_CHAR(ATT.STARTTIME, 'YYYYMMDDHH24MISS') THEN NULL ELSE 'Y' END AS STARTBATCH
				, CASE WHEN ATT.ENDCHANNEL != 'E' OR BASIC.WCTIME = '' OR BASIC.WCTIME <![CDATA[ <= ]]> TO_CHAR(ATT.ENDTIME, 'YYYYMMDDHH24MISS') THEN NULL ELSE 'Y' END AS ENDBATCH
				, ATT.HISSEQ
				, ATT.COMMUSEQ
				, ATT.ATTCONFIRMYN
			FROM
			(
				SELECT
					WORKDATE
					, MAX(WSTIME) AS WSTIME
					, MAX(WCTIME) AS WCTIME
					, SABUN
					,MAX(BWS) AS BWS
					,MAX(BWC) AS BWC
				FROM
				(
					SELECT
						CASE
							WHEN E_MODE = 1 THEN E_DATE
							ELSE (
								SELECT
									E_DATE
								FROM (
									SELECT
										B.E_DATE
									FROM LEGACY_SECOM.ADT_DATA B
									WHERE B.E_IDNO = E_IDNO
										AND B.E_DATE BETWEEN TO_CHAR((TO_DATE(E_DATE, 'YYYYMMDD') - INTERVAL '1' DAY), 'YYYYMMDD') AND E_DATE
										AND B.E_MODE = 1
										AND B.E_DATE||B.E_TIME <![CDATA[ < ]]> E_DATE||E_TIME
									ORDER BY B.E_DATE DESC
								)
								WHERE ROWNUM <![CDATA[ <= ]]> 1
							)
						END AS WORKDATE
						, CASE WHEN E_MODE = 1 THEN MIN(A.E_DATE||A.E_TIME)	END AS WSTIME
						, CASE WHEN E_MODE = 2 THEN MAX(A.E_DATE||A.E_TIME) END AS WCTIME
						, SUBSTR(E_IDNO, -6) AS SABUN
						, CASE WHEN E_MODE = 1 THEN 1 ELSE 0 END AS BWS
						, CASE WHEN E_MODE = 2 THEN 1 ELSE 0 END AS BWC
					FROM LEGACY_SECOM.ADT_DATA A
					WHERE
						E_MODE IN (1,2)
						AND E_DATE >= TO_CHAR((SYSDATE - INTERVAL #{batchDate} DAY),'YYYYMMDD')
					GROUP BY
						E_DATE
						, E_IDNO
						, E_NAME
						, E_MODE
				) R
				GROUP BY
					WORKDATE
					, SABUN
			) BASIC
			JOIN SYS_OBJECT_USER U ON BASIC.SABUN = U.EMPNO
			LEFT JOIN (
				SELECT
					ACM.USERCODE
					, ACM.ATTCONFIRMYN
					, ACH.STARTCHANGEYN
					, ACH.ENDCHANGEYN
					, ACM.ATTSTARTTIME AS STARTTIME
					, ACM.ATTENDTIME AS ENDTIME
					, ACM.TARGETDATE
					, ACH.HISSEQ
					, ACH.COMMUSEQ
					, ACH.ENDCHANNEL
					, ACH.STARTCHANNEL
				FROM
					ATTEND_COMMUTING_MST ACM
					JOIN ATTEND_COMMUTING_HISTORY ACH ON ACM.COMMUSEQ = ACH.COMMUSEQ
				WHERE
					ACM.TARGETDATE >= TO_CHAR((SYSDATE - INTERVAL #{batchDate} DAY), 'YYYY-MM-DD')
					AND (ACH.STARTCHANNEL = 'S' OR ACH.ENDCHANNEL = 'S')
			) ATT ON U.USERCODE = ATT.USERCODE AND BASIC.WORKDATE = TO_CHAR(ATT.TARGETDATE, 'YYYYMMDD')
		) A
		WHERE (STARTBATCH IS NOT NULL OR ENDBATCH IS NOT NULL)
		ORDER BY WORKDATE ASC
	</select>

	<select id="getAttAlarmTimeCheck" parameterType= "cmap"  resultType="cmap">
		SELECT dayList as "dayList",
		UserCode as "UserCode",
		DeptFullPath as "DeptFullPath",
		DisplayName as "DisplayName",
		DeptName as "DeptName",
		JobPositionName as "JobPositionName",
		JobTitleName as "JobTitleName",
		weekd as "weekd",
		SchName as "SchName",
		WorkingSystemType as "WorkingSystemType",
		WorkSts as "WorkSts",
		AttDayStartTime as "AttDayStartTime",
		AttDayEndTime as "AttDayEndTime",
		AttAlarmStartTime as "AttAlarmStartTime",
		AttAlarmEndTime as "AttAlarmEndTime",
		AttAlarmLateTime as "AttAlarmLateTime",
		AttAlarmOverTime as "AttAlarmOverTime",
		AttStartTime as "AttStartTime",
		AttEndTime as "AttEndTime",
		TO_CHAR(AttDayStartTime,'YYYY-MM-DD HH24:MI') as "AttDayStartTime_F",
		TO_CHAR(AttDayEndTime,'YYYY-MM-DD HH24:MI') as "AttDayEndTime_F",
		TO_CHAR(AttAlarmStartTime,'YYYY-MM-DD HH24:MI') as "AttAlarmStartTime_F",
		TO_CHAR(AttAlarmEndTime,'YYYY-MM-DD HH24:MI') as "AttAlarmEndTime_F",
		TO_CHAR(AttAlarmLateTime,'YYYY-MM-DD HH24:MI') as "AttAlarmLateTime_F",
		TO_CHAR(AttAlarmOverTime,'YYYY-MM-DD HH24:MI') as "AttAlarmOverTime_F",
		NVL(TO_CHAR(AttStartTime,'YYYY-MM-DD H24:MI:SS'),'NONETAG') as "AttStartTime_F",
		NVL(TO_CHAR(AttEndTime,'YYYY-MM-DD H24:MI:SS'),'NONETAG') as "AttEndTime_F",
		StartSts as "StartSts",
		EndSts as "EndSts",
		DomainID as "DomainID",
		CFG_AlarmAttStartNoticeYn as "CFG_AlarmAttStartNoticeYn",
		CFG_AlarmAttStartNoticeMin as "CFG_AlarmAttStartNoticeMin",
		CFG_AlarmAttEndNoticeYn as "CFG_AlarmAttEndNoticeYn",
		CFG_AlarmAttEndNoticeMin as "CFG_AlarmAttEndNoticeMin",
		CFG_AlarmAttLateYn as "CFG_AlarmAttLateYn",
		CFG_AlarmAttOvertimeYn as "CFG_AlarmAttOvertimeYn",
		CFG_AttStartTimeTermMin as "CFG_AttStartTimeTermMin",
		CFG_AttEndTimeTermMin as "CFG_AttEndTimeTermMin",
		SET_AlarmAttStartMedia as "SET_AlarmAttStartMedia",
		SET_AlarmAttEndMedia as "SET_AlarmAttEndMedia",
		SET_AttLateMedia as "SET_AttLateMedia",
		SET_AttOvertimeMedia as "SET_AttOvertimeMedia",
		UR_TimeZone as "UR_TimeZone"
		FROM (SELECT dl.dayList,
		weekd,
		TargetUserCode UserCode,
		m.AttStartTime,
		m.AttEndTime,
		m.StartSts,
		m.EndSts,
		j.WorkSts,
		CASE WHEN j.AttDayStartTime = NULL THEN '' ELSE TO_CHAR(j.AttDayStartTime,'YYYY-MM-DD HH24:MI:SS') END as AttDayStartTime,
		CASE WHEN j.AttDayEndTime = NULL THEN '' ELSE TO_CHAR(j.AttDayEndTime,'YYYY-MM-DD HH24:MI:SS') END as AttDayEndTime,
		j.AttDayStartTime - (1/1440*TO_NUMBER(CFG_AlarmAttStartNoticeMin)) as AttAlarmStartTime,
		j.AttDayEndTime - (1/1440*TO_NUMBER(CFG_AlarmAttEndNoticeMin)) as AttAlarmEndTime,
		j.AttDayStartTime + (1/1440*TO_NUMBER(CFG_AttStartTimeTermMin)) as AttAlarmLateTime,
		j.AttDayEndTime + (1/1440*TO_NUMBER(CFG_AttEndTimeTermMin)) as AttAlarmOverTime,
		NVL(s.SchName, '') SchName,
		NVL(s.WorkingSystemType, 0) as WorkingSystemType,
		DeptFullPath,
		DisplayName,
		DeptName,
		JobPositionName,
		JobTitleName,
		EnterDate,
		JobPositionSortKey,
		SortKey,
		JobLevelSortKey,
		JobTitlecode,
		DomainID,
		CFG_AlarmAttStartNoticeYn,
		CFG_AlarmAttStartNoticeMin,
		CFG_AlarmAttEndNoticeYn,
		CFG_AlarmAttEndNoticeMin,
		CFG_AlarmAttLateYn,
		CFG_AlarmAttOvertimeYn,
		CFG_AttStartTimeTermMin,
		CFG_AttEndTimeTermMin,
		SET_AlarmAttStartMedia,
		SET_AlarmAttEndMedia,
		SET_AttLateMedia,
		SET_AttOvertimeMedia,
		UR_TimeZone
		FROM (
		SELECT daylist,
		weekd,
		UserCode TargetUserCode,
		DeptFullPath,
		DisplayName,
		DeptName,
		JobPositionName,
		JobTitleName,
		EnterDate,
		PhotoPath,
		DeptCode,
		JobPositionSortKey,
		DeptSortKey,
		SortKey,
		JobLevelSortKey,
		JobTitlecode,
		DomainID,
		CFG_AlarmAttStartNoticeYn,
		CFG_AlarmAttStartNoticeMin,
		CFG_AlarmAttEndNoticeYn,
		CFG_AlarmAttEndNoticeMin,
		CFG_AlarmAttLateYn,
		CFG_AlarmAttOvertimeYn,
		CFG_AttStartTimeTermMin,
		CFG_AttEndTimeTermMin,
		CASE WHEN CFG_AlarmAttStartNoticeYn='N' THEN ';' ELSE SET_AlarmAttStartMedia END as SET_AlarmAttStartMedia,
		CASE WHEN CFG_AlarmAttEndNoticeYn='N' THEN ';' ELSE SET_AlarmAttEndMedia END as SET_AlarmAttEndMedia,
		CASE WHEN CFG_AlarmAttLateYn='N' THEN ';' ELSE SET_AttLateMedia END as SET_AttLateMedia,
		CASE WHEN CFG_AlarmAttOvertimeYn='N' THEN ';' ELSE SET_AttOvertimeMedia END as SET_AttOvertimeMedia,
		UR_TimeZone
		FROM (SELECT daylist, weekd FROM attend_daylist WHERE dayList = TO_DATE('#{TodayDate}','YYYY-MM-DD')) ddl,
		(SELECT u.UserCode,
		CASE WHEN LENGTH(Fn_BaseGetDictionary_S(#{lang}, u.MultiDisplayName)) > 0 THEN
		Fn_BaseGetDictionary_S(#{lang}, u.MultiDisplayName) ELSE u.DisplayName END as DisplayName,
		Fn_BaseGetDictionary_S(#{lang}, b.MultiDeptName) DeptName,
		Fn_BaseGetDictionary_S(#{lang}, b.MultiJobPositionName) JobPositionName,
		Fn_BaseGetDictionary_S(#{lang}, b.MultiJobTitleName) JobTitleName,
		u.EnterDate,
		b.JobPositionSortKey,
		b.JobLevelSortKey,
		b.JobTitlecode,
		b.DeptSortKey,
		b.SortKey,
		u.PhotoPath,
		b.DeptCode,
		(SELECT DisplayName
		FROM sys_object_group r
		WHERE GroupCode = sog.MemberOf) as DeptFullPath,
		sog.CompanyCode,
		sog.GroupCode,
		sbc_as.DomainID,
		DECODE(bn_as.USE_AttWorkStartNotify,'N','N',NVL(sbc_as.AlarmAttStartNoticeToUserYn,'N')) as CFG_AlarmAttStartNoticeYn,
		NVL(sbc_as.AlarmAttStartNoticeMin,'0') as CFG_AlarmAttStartNoticeMin,
		DECODE(bn_ae.USE_AttWorkEndNotify,'N','N',NVL(sbc_ae.AlarmAttEndNoticeToUserYn,'N')) as CFG_AlarmAttEndNoticeYn,
		NVL(sbc_ae.AlarmAttEndNoticeMin,'0') as CFG_AlarmAttEndNoticeMin,
		DECODE(bn_late.USE_AttLateNotify,'N','N',NVL(sbc_late.AlarmAttLateToAdminUserYn,'N')) as CFG_AlarmAttLateYn,
		DECODE(bn_ot.USE_AttOvertimeNotify,'N','N',NVL(sbc_ot.AlarmAttOvertimeToAdminUserYn,'N')) as CFG_AlarmAttOvertimeYn,
		NVL(DECODE(sbc_st.AttStartTimeTermMin,'','0',sbc_st.AttStartTimeTermMin), '0') as CFG_AttStartTimeTermMin,
		NVL(DECODE(sbc_et.AttEndTimeTermMin,'','0',sbc_et.AttEndTimeTermMin), '0') as CFG_AttEndTimeTermMin,
		NVL(sms_as.MediaType, bn_as.DEF_AttWorkStartNotify) as SET_AlarmAttStartMedia,
		NVL(sms_ae.MediaType, bn_ae.DEF_AttWorkEndNotify) as SET_AlarmAttEndMedia,
		NVL(sms_late.MediaType, bn_late.DEF_AttLateNotify) as SET_AttLateMedia,
		NVL(sms_ot.MediaType, bn_ot.DEF_AttOvertimeNotify) as SET_AttOvertimeMedia,
		NVL( (SELECT Reserved1 from sys_base_code where CodeGroup = 'TimeZone' AND Code = u.TimeZoneCode and IsUse='Y'), '09:00:00')  AS UR_TimeZone
		FROM (select * from sys_object_user_basegroup
		<if test='DN_Code != null and DN_Code != ""'>
			where CompanyCode = #{DN_Code}
		</if>
		) b
		JOIN sys_object_user u ON b.UserCode = u.UserCode
		AND u.IsUse = 'Y' AND u.IsDisplay = 'Y' AND u.ACCOUT_LOCK = 'N'
		LEFT JOIN sys_object_group sog ON b.DeptCode = sog.GroupCode
		LEFT JOIN sys_object_domain sod ON sog.CompanyCode = sod.DomainCode
		LEFT JOIN (
		SELECT a.SettingValue as AlarmAttStartNoticeToUserYn
		, b.SettingValue as AlarmAttStartNoticeMin
		, a.DomainID
		FROM (SELECT BizSection,
		DomainID,
		SettingKey,
		SettingValue
		FROM sys_base_config
		WHERE IsUse = 'Y'
		AND SettingKey = 'AlarmAttStartNoticeToUserYn') a,
		(SELECT BizSection,
		DomainID,
		SettingKey,
		SettingValue
		FROM sys_base_config
		WHERE IsUse = 'Y'
		AND SettingKey = 'AlarmAttStartNoticeMin') b
		WHERE a.BizSection = b.BizSection
		AND a.DomainID = b.DomainID
		AND a.BizSection = 'Attend'
		) sbc_as ON sbc_as.DomainID = sod.DomainID
		LEFT JOIN (
		SELECT a.SettingValue as AlarmAttEndNoticeToUserYn
		, b.SettingValue as AlarmAttEndNoticeMin
		, a.DomainID
		FROM (SELECT BizSection,
		DomainID,
		SettingKey,
		SettingValue
		FROM sys_base_config
		WHERE IsUse = 'Y'
		AND SettingKey = 'AlarmAttEndNoticeToUserYn') a,
		(SELECT BizSection,
		DomainID,
		SettingKey,
		SettingValue
		FROM sys_base_config
		WHERE IsUse = 'Y'
		AND SettingKey = 'AlarmAttEndNoticeMin') b
		WHERE a.BizSection = b.BizSection
		AND a.DomainID = b.DomainID
		AND a.BizSection = 'Attend'
		) sbc_ae ON sbc_ae.DomainID = sod.DomainID
		LEFT JOIN (
		SELECT BizSection,
		DomainID,
		SettingKey,
		SettingValue as AlarmAttLateToAdminUserYn
		FROM sys_base_config
		WHERE IsUse = 'Y'
		AND BizSection = 'Attend'
		AND SettingKey = 'AlarmAttLateToAdminUserYn'
		) sbc_late ON sbc_late.DomainID = sod.DomainID
		LEFT JOIN (
		SELECT BizSection,
		DomainID,
		SettingKey,
		SettingValue as AlarmAttOvertimeToAdminUserYn
		FROM sys_base_config
		WHERE IsUse = 'Y'
		AND BizSection = 'Attend'
		AND SettingKey = 'AlarmAttOvertimeToAdminUserYn'
		) sbc_ot ON sbc_ot.DomainID = sod.DomainID
		LEFT JOIN (
		SELECT Code,
		Reserved3 AS DEF_AttWorkStartNotify,
		IsUse AS USE_AttWorkStartNotify
		, A.DOMAINID AS bnas_DOMAINID
		FROM sys_base_code A
		WHERE codeGroup = 'TodoMsgType'
		AND ReservedInt = 1
		AND Code = 'AttWorkStartNotify'
		AND BizSection = 'Attend'
		) bn_as ON bnas_DOMAINID = sod.DomainID
		LEFT JOIN sys_messaging_setting sms_as
		ON b.UserCode = sms_as.UserCode AND bn_as.Code = sms_as.ServiceType
		LEFT JOIN (
		SELECT Code,
		Reserved3 AS DEF_AttWorkEndNotify,
		IsUse AS USE_AttWorkEndNotify
		FROM sys_base_code A
		WHERE codeGroup = 'TodoMsgType'
		AND ReservedInt = 1
		AND Code = 'AttWorkEndNotify'
		AND BizSection = 'Attend'
		AND DomainID = (SELECT DomainID
		FROM sys_base_code
		WHERE Code = A.Code
		AND CodeGroup = 'TodoMsgType'
		AND ROWNUM=1)
		) bn_ae ON DOMAINID = sod.DomainID
		LEFT JOIN sys_messaging_setting sms_ae
		ON b.UserCode = sms_ae.UserCode AND bn_ae.Code = sms_ae.ServiceType
		LEFT JOIN (
		SELECT Code,
		Reserved3 AS DEF_AttLateNotify,
		IsUse AS USE_AttLateNotify
		FROM sys_base_code A
		WHERE codeGroup = 'TodoMsgType'
		AND ReservedInt = 1
		AND Code = 'AttLateNotify'
		AND BizSection = 'Attend'
		AND DomainID = (SELECT DomainID
		FROM sys_base_code
		WHERE Code = A.Code
		AND CodeGroup = 'TodoMsgType'
		AND ROWNUM=1)
		) bn_late ON DOMAINID = sod.DomainID
		LEFT JOIN sys_messaging_setting sms_late
		ON b.UserCode = sms_late.UserCode AND bn_late.Code = sms_late.ServiceType
		LEFT JOIN (
		SELECT Code,
		Reserved3 AS DEF_AttOvertimeNotify,
		IsUse AS USE_AttOvertimeNotify
		FROM sys_base_code A
		WHERE codeGroup = 'TodoMsgType'
		AND ReservedInt = 1
		AND Code = 'AttOvertimeNotify'
		AND BizSection = 'Attend'
		AND DomainID = (SELECT DomainID
		FROM sys_base_code
		WHERE Code = A.Code
		AND CodeGroup = 'TodoMsgType'
		AND ROWNUM=1)
		) bn_ot ON DOMAINID = sod.DomainID
		LEFT JOIN sys_messaging_setting sms_ot
		ON b.UserCode = sms_ot.UserCode AND bn_ot.Code = sms_ot.ServiceType
		LEFT JOIN (
		SELECT BizSection,
		DomainID,
		SettingKey,
		SettingValue as AttStartTimeTermMin
		FROM sys_base_config
		WHERE IsUse = 'Y'
		AND BizSection = 'Attend'
		AND SettingKey = 'AttStartTimeTermMin'
		) sbc_st ON sbc_st.DomainID = sod.DomainID
		LEFT JOIN (
		SELECT BizSection,
		DomainID,
		SettingKey,
		SettingValue as AttEndTimeTermMin
		FROM sys_base_config
		WHERE IsUse = 'Y'
		AND BizSection = 'Attend'
		AND SettingKey = 'AttEndTimeTermMin'
		) sbc_et ON sbc_et.DomainID = sod.DomainID

		) u
		) dl
		LEFT JOIN attend_commuting_mst m
		ON dl.dayList = m.TargetDate AND dl.TargetUserCode = m.UserCode
		LEFT JOIN attend_job j
		ON dl.dayList = j.JobDate AND dl.TargetUserCode = j.UserCode
		LEFT JOIN attend_schedule s
		ON j.SchSeq = s.SchSeq

		WHERE s.SchName <![CDATA[<>]]> NULL
		) tbl
	</select>
</mapper>

