<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="user.survey">
	 <resultMap type="cmap" id="clobResult">
 	    <result property="Description" column="Description" jdbcType="CLOB" javaType="java.lang.String" />
 	    <result property="SDescription" column="SDescription" jdbcType="CLOB" javaType="java.lang.String" />
 	    <result property="FileID" column="FileID" jdbcType="CLOB" javaType="java.lang.String" />
 	</resultMap>
 	
 	<resultMap type="cmap" id="clobResult2">
		<result property="Paragraph" column="Paragraph" jdbcType="CLOB" javaType="java.lang.String" />
		<result property="Description" column="Description" jdbcType="CLOB" javaType="java.lang.String" />
		<result property="SDescription" column="SDescription" jdbcType="CLOB" javaType="java.lang.String" />
    </resultMap>
    
	<insert id="insertSurvey" parameterType="cmap" useGeneratedKeys="true">	
		INSERT INTO SURVEY (
				  CompanyCode
				, Subject
				, SubjectHtml
				, Description
				, IsDescriptionUseEditor
				, SurveyStartDate
				, SurveyEndDate
				, ResultViewStartDate
				, ResultViewEndDate
				, QuestionCount
				, TargetRespondentType
				, TargetResultViewType
				, SurveyType
				, State
				, IsImportance
				, IsAnonymouse
				, IsGrouping
				, IsSendTodo
				, IsSendMail
				, RegisterCode
				, RegisterDeptCode
				, RegistDate
				, ModifyDate
				, ReviewerCode
				, ReviewerDeptCode
				, ApproverCode
				, ApproverDeptCode
				, CommunityID )
	    VALUES ( #{companyCode}
	           , #{subject}
	           , #{subjectHtml}
	           , #{description}
	           , #{isDescriptionUseEditor}
	           , #{surveyStartDate}
	           , TO_DATE(CONCAT(#{surveyEndDate},' 23:59:59'),'YYYY-MM-DD HH24:MI:SS')
	           , #{resultViewStartDate}
	           , TO_DATE(CONCAT(#{resultViewEndDate},' 23:59:59'),'YYYY-MM-DD HH24:MI:SS')
	           , #{questionCount},
	    		#{targetRespondentType}, #{targetResultViewType}, #{surveyType}, #{state},
	    		#{isImportance}, #{isAnonymouse}, #{isGrouping}, #{isSendTodo},
	    		#{isSendMail}, #{registerCode}, #{registerDeptCode}, TO_DATE(#{localCurrentDate}, 'YYYY-MM-DD HH24:MI:SS'),
	    		TO_DATE(#{localCurrentDate}, 'YYYY-MM-DD HH24:MI:SS'), #{reviewerCode}, #{reviewerDeptCode}, #{approverCode},
	    		#{approverDeptCode}, #{communityID}   )
	    		
	    	<selectKey keyProperty="SurveyID" resultType="java.lang.Long" order="AFTER">
				SELECT  MAX(SURVEYID) FROM SURVEY
	        </selectKey>
	    		
	</insert>
	
	<insert id="insertSurveyQuestion" parameterType="cmap" useGeneratedKeys="true">	
		INSERT  INTO SURVEY_QUESTION (SurveyID, QuestionType, QuestionNO, GroupingNo,
				  							 GroupName, Paragraph, Question, Description,
				  							 IsRequired, RequiredInfo, IsEtc, ItemCount, NextGroupingNo,
				  							 NextDefaultQuestionNO    )
	    VALUES (#{surveyID}, #{questionType}, #{questionNO}, #{groupingNo},
	    		#{groupName}, #{paragraph}, #{question}, #{description},
	    		#{isRequired}, #{requiredInfo}, #{isEtc}, #{itemCount}, #{nextGroupingNo},
	    		#{nextDefaultQuestionNO} )
	    		
	    		
	    	<selectKey keyProperty="QuestionID" resultType="java.lang.Long" order="AFTER">
				 SELECT SURVEY_QUESTION_SEQ.CURRVAL FROM dual
	        </selectKey>		
	    		
	</insert>
	
	<insert id="insertSurveyQuestionItem" parameterType="cmap" useGeneratedKeys="true" >	
		INSERT 
		  INTO SURVEY_QUESTION_ITEM (SurveyID, QuestionID, ItemNO, Item,
			  									  NextQuestionNO
			  						   			 )
	    VALUES (#{surveyID}, #{questionID}, #{itemNO}, #{item},
	    		#{nextQuestionNO}
	    	   )
	    	   
	    	<selectKey keyProperty="ItemID" resultType="java.lang.Long" order="AFTER">
				 SELECT SURVEY_QUESTION_ITEM_SEQ.CURRVAL FROM dual
	        </selectKey>		
	    		   
	</insert>
	
	<select id="selectSurveyQuestionItemList" parameterType="cmap" resultMap="clobResult2">
		SELECT A.ITEMID AS "ItemID"
		     , A.QUESTIONID AS "QuestionID"
		     , A.ITEMNO AS "ItemNO"
		     , A.ITEM AS "Item"
		     , A.NEXTQUESTIONNO AS "NextQuestionNO"
		     , TO_CHAR(A.FILEID)  AS "FileID"
		     , A.QUESTIONTYPE AS "QuestionType"
		     , A.QUESTIONNO AS "QuestionNO"
		     , A.GROUPNAME AS "GroupName"
		     , A.GROUPINGNO AS "GroupingNo"
		     , A.PARAGRAPH AS "Paragraph"
		     , A.QUESTION AS "Question"
		     , A.DESCRIPTION AS "Description"
		     , A.ISREQUIRED AS "IsRequired"
		     , A.REQUIREDINFO AS "RequiredInfo"
		     , A.ISETC AS "IsEtc"
		     , A.NEXTGROUPINGNO AS "NextGroupingNo"
		     , A.NEXTDEFAULTQUESTIONNO AS "NextDefaultQuestionNO"
		     , A.SURVEYID AS "SurveyID"
		     , A.COMPANYCODE AS "CompanyCode"
		     , A.SUBJECT AS "Subject"
		     , A.SUBJECTHTML AS "SubjectHtml"
		     , A.SDESCRIPTION AS "SDescription"
		     , A.ISDESCRIPTIONUSEEDITOR AS "IsDescriptionUseEditor"
		     , A.SURVEYSTARTDATE AS "SurveyStartDate"
		     , A.SURVEYENDDATE AS "SurveyEndDate"
		     , A.RESULTVIEWSTARTDATE AS "ResultViewStartDate"
		     , A.RESULTVIEWENDDATE AS "ResultViewEndDate"
		     , A.TARGETRESPONDENTTYPE AS "TargetRespondentType"
		     , A.TARGETRESULTVIEWTYPE AS "TargetResultViewType"
		     , A.SURVEYTYPE AS "SurveyType"
		     , A.STATE AS "State"
		     , A.ISIMPORTANCE AS "IsImportance"
		     , A.ISANONYMOUSE AS "IsAnonymouse"
		     , A.ISGROUPING AS "IsGrouping"
		     , A.ISSENDTODO AS "IsSendTodo"
		     , A.ISSENDMAIL AS "IsSendMail"
		     , A.REGISTERCODE AS "RegisterCode"
		     , A.ReviewerCode AS "ReviewerCode"
		     , A.APPROVERCODE AS "ApproverCode" 
		     , A.GROUPOPTIONS AS "ReviewerCode" 
		     , A.ITEMOPTIONS AS "itemOptions"
		     , A.GROUPMOVEOPTIONS  AS "GroupMoveOptions"
			 ,  (CASE WHEN IsGrouping = 'Y' THEN (CASE WHEN groupOptions IS NULL THEN '99' 
												   	  ELSE groupOptions || ',' || '99' 
												   	   END
												)
				 	  END) AS "GroupDivOptions",
			   (CASE WHEN IsGrouping = 'N' THEN (CASE WHEN itemOptions IS NULL THEN '99' 
											   		  ELSE itemOptions || ',' || '99' 
											   		   END)
				 	  END) AS "ItemDivOptions",
			   GroupMoveOptions,				 	  
			   (CASE WHEN QuestionType = 'S' THEN '객관식'
			   		 WHEN QuestionType = 'D' THEN '주관식'
			   		 WHEN QuestionType = 'M' THEN '복수응답'
			   		 WHEN QuestionType = 'N' THEN '순위선택'
			     	  END
			   ) AS "questionTypeNm",
			   (SELECT LISTAGG(FileID, ';' ) WITHIN GROUP(ORDER BY FileID)
			   	  FROM SYS_FILE D 
			   	 WHERE D.ServiceType = 'Survey'
			   	   AND A.FileID LIKE '%;' || D.FileID || ';%') AS "updateFileIds",
	   	   	    ( SELECT D.UserCode || ';' || D.DisplayName
                FROM sys_object_user D
                WHERE A.ReviewerCode = D.UserCode) AS "reviewerCodeText",
              ( SELECT D.UserCode || ';' || D.DisplayName
                FROM sys_object_user D
                WHERE A.ApproverCode = D.UserCode) AS "approverCodeText",
                (SELECT D.DisplayName
				   FROM sys_object_user D
				  WHERE A.ReviewerCode = D.UserCode) AS reviewerName,
			    (SELECT D.DisplayName
				   FROM sys_object_user D
				  WHERE A.ApproverCode = D.UserCode) AS approverName,
				(SELECT D.DisplayName
				   FROM sys_object_user D
				  WHERE A.RegisterCode = D.UserCode) AS registerName				
        FROM (SELECT A.ItemID, B.QuestionID,
  			   A.ItemNO, A.Item, A.NextQuestionNO, A.FileID,
			   B.QuestionType, B.QuestionNO, B.GroupingNo, B.GroupName,
			   B.Paragraph, B.Question, B.Description, B.IsRequired, B.RequiredInfo, B.IsEtc, 
			   B.NextGroupingNo, B.NextDefaultQuestionNO, 
			   C.SurveyID, C.CompanyCode, C.Subject, C.SubjectHtml, 
			   C.Description AS SDescription,
			   C.IsDescriptionUseEditor, 
			   TO_CHAR(C.SurveyStartDate,'YYYY.MM.DD') AS SurveyStartDate,
			   TO_CHAR(C.SurveyEndDate,'YYYY.MM.DD') AS SurveyEndDate,
			   TO_CHAR(C.ResultViewStartDate,'YYYY.MM.DD') AS ResultViewStartDate,
			   TO_CHAR(C.ResultViewEndDate,'YYYY.MM.DD') AS ResultViewEndDate, 
			   C.TargetRespondentType, C.TargetResultViewType, C.SurveyType, C.State, 
			   C.IsImportance, C.IsAnonymouse, C.IsGrouping, C.IsSendTodo, C.IsSendMail, 
			   C.RegisterCode, C.ReviewerCode, C.ApproverCode,
			   (CASE WHEN C.IsGrouping = 'Y' THEN (
                SELECT DISTINCT LISTAGG(D.GroupingNo, ',') WITHIN GROUP(ORDER BY D.GroupingNo)
                FROM survey_question D
                WHERE B.SurveyID = D.SurveyID
                AND B.GroupingNo <![CDATA[<]]> D.GroupingNo
            ) ELSE NULL
					  END) AS groupOptions,
			   (CASE WHEN C.IsGrouping = 'N' THEN (
                  SELECT LISTAGG(D.QuestionNO, ',') WITHIN GROUP(ORDER BY D.QuestionNo)
                  FROM survey_question D
                  WHERE A.SurveyID = D.SurveyID
                  AND B.QuestionNO <![CDATA[<]]> D.QuestionNO
					) ELSE NULL
					  END) AS itemOptions,
			   (CASE WHEN C.IsGrouping = 'Y' THEN (
                SELECT DISTINCT LISTAGG(D.GroupingNo, ',') WITHIN GROUP(ORDER BY D.GroupingNo)
							FROM survey_question D
							WHERE B.SurveyID = D.SurveyID
							AND B.GroupingNo != D.GroupingNo
            ) ELSE NULL
					  END) AS GroupMoveOptions
		  FROM survey_question_item A
		  LEFT JOIN survey_question B
		    ON A.SurveyID = B.SurveyID
		   AND A.QuestionID = B.QuestionID
		  LEFT JOIN survey C
		    ON A.SurveyID = C.SurveyID
		   AND B.SurveyID = C.SurveyID
		 WHERE C.SurveyID = #{surveyID}
 	   ) A
 	   ORDER BY A.ItemID 
	</select>
	<select id="selectSurveyQuestionRespondentTarget" parameterType="cmap" resultType="cmap">
		 SELECT TargetType "type",TargetCode "code", CASE WHEN TargetType = 'UR' THEN B.DisplayName ELSE C.DisplayName END "label" 
		 FROM   SURVEY_TARGET_RESPONDENT A
	     LEFT JOIN SYS_OBJECT_USER B
		    ON A.TargetCode = B.UserCode
	     LEFT JOIN SYS_OBJECT_GROUP C
		    ON A.TargetCode = C.GroupCode
		 WHERE A.SurveyID = #{surveyID}
	</select>
	<select id="selectSurveyQuestionResultviewTarget" parameterType="cmap" resultType="cmap">
		 SELECT TargetType "type",TargetCode "code", CASE WHEN TargetType = 'UR' THEN B.DisplayName ELSE C.DisplayName END "label" 
		 FROM   survey_target_resultview A
	     LEFT JOIN SYS_OBJECT_USER B
		    ON A.TargetCode = B.UserCode
	     LEFT JOIN SYS_OBJECT_GROUP C
		    ON A.TargetCode = C.GroupCode
		 WHERE A.SurveyID = #{surveyID}
	</select>
	
	<delete id="deleteQuestionItem" parameterType="cmap">
		DELETE FROM survey_question_item 
		 WHERE SurveyID = #{surveyID}
	</delete>
	
	<delete id="deleteQuestion" parameterType="cmap">
		DELETE FROM survey_question 
		 WHERE SurveyID = #{surveyID}
	</delete>
	
	<delete id="deleteSurveyTarget" parameterType="cmap">
		DELETE FROM survey_target_respondent
		WHERE SurveyID = #{surveyID}
	</delete>
		
	<delete id="deleteSurveyTargetRV" parameterType="cmap">
		DELETE FROM survey_target_resultview
		WHERE SurveyID = #{surveyID}
	</delete>
	
	<update id="updateSurvey" parameterType="cmap">
		UPDATE survey
		   SET CompanyCode = #{companyCode},
		   	   Subject = #{subject},
		   	   SubjectHtml = #{subjectHtml},
		   	   Description = #{description},
		   	   IsDescriptionUseEditor = #{isDescriptionUseEditor},
		   	   SurveyStartDate = #{surveyStartDate},
		   	   SurveyEndDate =  TO_DATE(CONCAT(#{surveyEndDate},' 23:59:59'),'YYYY-MM-DD HH24:MI:SS'),
		   	   ResultViewStartDate = #{resultViewStartDate},
		   	   ResultViewEndDate = TO_DATE(CONCAT(#{resultViewEndDate},' 23:59:59'),'YYYY-MM-DD HH24:MI:SS'),
		   	   QuestionCount = #{questionCount},
		   	   TargetRespondentType = #{targetRespondentType},
		   	   TargetResultViewType = #{targetResultViewType},
		   	   SurveyType = #{surveyType},
		   	   IsImportance = #{isImportance},
		   	   IsAnonymouse = #{isAnonymouse},
		   	   IsGrouping = #{isGrouping},
		   	   IsSendTodo = #{isSendTodo},
		   	   IsSendMail = #{isSendMail},
		   	   RegisterCode = #{registerCode},
		   	   ModifyDate = TO_DATE(#{localCurrentDate}, 'YYYY-MM-DD HH24:MI:SS'),
		   	   ReviewerCode = #{reviewerCode},
		   	   ApproverCode = #{approverCode},
		   	   State = #{state}
		 WHERE SurveyID = #{surveyID}
	</update>
	
	<insert id="insertQuestionItemAnswer" parameterType="cmap">	
		INSERT INTO SURVEY_QUESTION_ITEM_ANSWER (SurveyID, QuestionID, ItemID,
														 AnswerItem, EtcOpinion, RespondentCode, RespondentDeptCode,
														 Weighting
				  						    			)
	    VALUES (#{surveyID}, #{questionID}, #{itemID},
	    		#{answerItem}, #{etcOpinion}, #{respondentCode}, #{respondentDeptCode},
	    		#{weighting}
	    	   )
	</insert>
	
	<insert id="insertSurveyEtcOpinion" parameterType="cmap">	
		INSERT INTO SURVEY_RESPONDENT (SurveyID, EtcOpinion, RespondentCode, RespondentDeptCode, RegistDate)
	    VALUES (#{surveyID}, #{etcOpinion}, #{respondentCode}, #{respondentDeptCode}, TO_DATE(#{localCurrentDate}, 'YYYY-MM-DD HH24:MI:SS'))
	</insert>
		
	<delete id="deleteQuestionItemAnswer" parameterType="cmap">
		DELETE FROM SURVEY_QUESTION_ITEM_ANSWER
		WHERE SurveyID = #{surveyID}
		AND RespondentCode = #{respondentCode}
	</delete>
	
	<delete id="deleteSurveyEtcOpinion" parameterType="cmap">
		DELETE FROM SURVEY_RESPONDENT
		WHERE SurveyID = #{surveyID}
		AND RespondentCode = #{respondentCode}
	</delete>
	
	<select id="selectQuestionItemAnswerList" parameterType="cmap" resultType="cmap">
		SELECT  B.SurveyID AS "SurveyID"
		      , B.QuestionID AS "QuestionID"
		      , B.AnswerItemId AS "AnswerItemId"
		      , B.AnswerItem  AS "AnswerItem"
		      , B.EtcOpinion AS "EtcOpinion"
		      , A.RespondentCode AS "RespondentCode" 
		FROM survey_respondent A
		LEFT JOIN ( SELECT SurveyID, QuestionID, EtcOpinion, RespondentCode,
		   			LISTAGG(ItemID ,';') WITHIN GROUP (ORDER BY Weighting) AS AnswerItemId,
					LISTAGG(AnswerItem, ';') WITHIN GROUP (ORDER BY Weighting) AS AnswerItem
		 			FROM SURVEY_QUESTION_ITEM_ANSWER
	  				WHERE SurveyID = #{surveyID}
	 				GROUP BY SurveyID, QuestionID, RespondentCode, EtcOpinion ) B ON A.SurveyID = B.SurveyID AND A.RespondentCode = B.RespondentCode
		 WHERE A.SurveyID =#{surveyID}
		 <if test="viewType!=null and viewType.equalsIgnoreCase('myAnswer')">
			  AND A.RespondentCode =#{userID}
		</if>
	</select> 
	
	<!-- 나의 설문 - 내가 작성한 설문 목록 조회 -->
	<select id="selectMySurveyList" parameterType="cmap" resultMap="clobResult">
	   <include refid="oracle.include.pagingHeader"/>
	   SELECT  my.SurveyID AS "SurveyID"
				, my.Subject AS "Subject"
				, my.SubjectHtml AS "SubjectHtml"
				, my.IsImportance AS "IsImportance"
				, my.State AS "State"
				, my.SurveyStartDate AS "SurveyStartDate"
				, my.SurveyEndDate AS "SurveyEndDate"
				, my.RegisterCode AS "RegisterCode"
				, my.RegisterName AS "RegisterName"
				, my.MailAddress AS "MailAddress"
				, my.IsTargetRespondent AS "IsTargetRespondent"
				, my.joinFg AS "joinFg"
				, my.Description AS "Description"
				, my.CommunityID AS "CommunityID"
				, my.RegistDate AS "RegistDate"
				, my.ModifyDate AS "ModifyDate"
	   FROM (SELECT a.SurveyID
				, a.Subject
				, a.SubjectHtml
				, a.IsImportance
				, a.State
				, TO_CHAR(a.SurveyStartDate,'YYYY.MM.DD') AS SurveyStartDate
				, TO_CHAR(a.SurveyEndDate,'YYYY.MM.DD') AS SurveyEndDate
				, a.RegisterCode
				, b.MultiDisplayName AS RegisterName
				, b.MailAddress AS MailAddress
				, Fn_SurveyTargetRespondent_R(a.SurveyID,#{userId}) AS IsTargetRespondent
				, (SELECT DECODE(COUNT(*), 0, 'N', 'Y') FROM survey_respondent d WHERE d.SurveyID = a.SurveyID AND d.RespondentCode = #{userId}) AS joinFg
				, a.Description
				, a.CommunityID
				, a.RegistDate
				, a.ModifyDate
		FROM survey a
		LEFT JOIN sys_object_user b ON a.RegisterCode = b.UserCode
		WHERE a.DeleteDate IS NULL
	<if test='schState != null and schState != ""'>
		AND a.State = #{schState}
	</if>
		AND a.State != 'A'
		AND a.RegisterCode = #{userId}
					) my
		<trim prefix="WHERE"  prefixOverrides="AND|OR">
			<if test='communityId != null and communityId != ""'>
				<choose>
					<when test='communityId gt 0'>
						AND my.CommunityID = #{communityId}
					</when>
					<otherwise>
						AND my.CommunityID = 0
					</otherwise>
				</choose>
			</if>
			<if test='simpleSchTxt != null and simpleSchTxt !=""'>
					AND my.Subject LIKE '%' || #{simpleSchTxt} || '%'
			</if>
			<if test='schTxt != null and schTxt !=""'>
				<choose>
					<when test='schContentType == "subject"'>
						AND my.Subject LIKE '%' || #{schTxt} || '%'
					</when>
					<when test='schContentType == "register"'>
					    AND Fn_BaseGetDictionary_S(#{lang}, my.RegisterName) LIKE '%' || #{schTxt} || '%'
					</when>
					<when test='schContentType == "description"'>
						AND my.Description LIKE '%' || REGEXP_REPLACE(#{schTxt},q'(%|\'|\")', '\"') || '%'
					</when>
					<when test='isMobile != null and isMobile == "Y"'>
					    AND (
					    	my.Subject LIKE '%' || #{schTxt} || '%'
					    	OR Fn_BaseGetDictionary_S(#{lang}, my.RegisterName) LIKE '%' || #{schTxt} || '%'
					    	OR my.Description LIKE '%' || REGEXP_REPLACE(#{schTxt},q'(%|\'|\")', '\"') || '%'
			    		)
					</when>
				</choose>
			</if>
			<if test="startDate != null and startDate != '' and endDate != null and endDate != '' ">
				AND (   (   my.SurveyStartDate BETWEEN #{startDate} AND #{endDate} ) 
				OR ( my.SurveyEndDate BETWEEN#{startDate} AND #{endDate} )      )
			</if>
		</trim>
		<trim prefix='ORDER BY'>
			<if test="sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
				ModifyDate DESC
			</if>
			<if test="sortColumn != '' and sortColumn != null and sortDirection != '' and sortDirection != null">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("Subject")'>Subject</when>
					<when test='sortColumn.equalsIgnoreCase("SurveyStartDate")'>SurveyStartDate</when>
					<otherwise>State</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
				<include refid="oracle.include.listOrderBy"/>
			</if>
		</trim>
		<include refid="oracle.include.pagingFooter"/>
	</select>
	
	<!-- 나의 설문 - 내가 작성한 설문 목록 개수 -->
	<select id="selectMySurveyListCnt" parameterType="cmap" resultType="java.lang.Long">
	   SELECT COUNT(*)
	   FROM (SELECT a.SurveyID
							, a.Subject
							, TO_CHAR(a.SurveyStartDate,'YYYY.MM.DD') AS SurveyStartDate
							, TO_CHAR(a.SurveyEndDate,'YYYY.MM.DD') AS SurveyEndDate
							, b.MultiDisplayName AS RegisterName
							, a.Description
							, a.CommunityID
					FROM survey a
					LEFT JOIN sys_object_user b ON a.RegisterCode = b.UserCode
					WHERE a.DeleteDate IS NULL
				<if test='schState != null and schState != ""'>
					AND a.State = #{schState}
				</if>
					AND a.State != 'A'
					AND a.RegisterCode = #{userId}
					) my
		<trim prefix="WHERE"  prefixOverrides="AND|OR">
			<if test='communityId != null and communityId != ""'>
				<choose>
					<when test='communityId gt 0'>
						AND my.CommunityID = #{communityId}
					</when>
					<otherwise>
						AND my.CommunityID = 0
					</otherwise>
				</choose>
			</if>
			<if test='simpleSchTxt != null and simpleSchTxt !=""'>
					AND my.Subject LIKE '%' || #{simpleSchTxt} || '%'
			</if>
			<if test='schTxt != null and schTxt !=""'>
				<choose>
					<when test='schContentType == "subject"'>
						AND my.Subject LIKE '%' || #{schTxt} || '%'
					</when>
					<when test='schContentType == "register"'>
					    AND Fn_BaseGetDictionary_S(#{lang}, my.RegisterName) LIKE '%' || #{schTxt} || '%'
					</when>
					<when test='schContentType == "description"'>
						AND my.Description LIKE '%' || REGEXP_REPLACE(#{schTxt},q'(%|\'|\")', '\"') || '%'
					</when>
					<when test='isMobile != null and isMobile == "Y"'>
					    AND (
					    	my.Subject LIKE '%' || #{schTxt} || '%'
					    	OR Fn_BaseGetDictionary_S(#{lang}, my.RegisterName) LIKE '%' || #{schTxt} || '%'
					    	OR my.Description LIKE '%' || REGEXP_REPLACE(#{schTxt},q'(%|\'|\")', '\"') || '%'
			    		)
					</when>
				</choose>
			</if>
			<if test="startDate != null and startDate != '' and endDate != null and endDate != '' ">
				AND (   (   my.SurveyStartDate BETWEEN #{startDate} AND #{endDate} ) 
				OR ( my.SurveyEndDate BETWEEN#{startDate} AND #{endDate} )      )
			</if>
		</trim>
	</select>
	
	<!-- 나의 설문 - 내가 참여한 설문 목록 조회 -->
	<select id="selectJoinSurveyList" parameterType="cmap" resultMap="clobResult">
	   	<include refid="oracle.include.pagingHeader"/>	
	    SELECT parti.SurveyID AS "SurveyID"
				, parti.Subject AS "Subject"
				, parti.SubjectHtml AS "SubjectHtml"
				, parti.IsImportance AS "IsImportance"
				, parti.State AS "State"
				, parti.SurveyStartDate AS "SurveyStartDate"
				, parti.SurveyEndDate AS "SurveyEndDate"
				, parti.IsTargetResultView AS "IsTargetResultView"
				, parti.RegisterCode AS "RegisterCode"
				, parti.RegisterName AS "RegisterName"
				, parti.MailAddress AS "MailAddress"
				, parti.Description AS "Description"
				, parti.CommunityID AS "CommunityID"
				, parti.RegistDate AS "RegistDate"
	     FROM ( SELECT a.SurveyID
						, a.Subject
						, a.SubjectHtml
						, a.IsImportance
						, a.State
						, TO_CHAR(a.SurveyStartDate,'YYYY.MM.DD') AS SurveyStartDate
						, TO_CHAR(a.SurveyEndDate,'YYYY.MM.DD') AS SurveyEndDate
						, Fn_SurveyTargetResultView_R(a.SurveyID, #{userId}) AS IsTargetResultView
						, a.RegisterCode
						, c.MultiDisplayName AS RegisterName
						, c.MailAddress AS MailAddress
						, a.Description
						, a.CommunityID
						, a.RegistDate
				FROM survey a
				INNER JOIN survey_respondent b ON a.SurveyID = b.SurveyID AND b.respondentCode = #{userId}
				LEFT JOIN sys_object_user c ON a.RegisterCode = c.UserCode
				WHERE a.DeleteDate IS NULL
			) parti
		<trim prefix="WHERE"  prefixOverrides="AND|OR">
			<if test='communityId != null and communityId != ""'>
				<choose>
					<when test='communityId gt 0'>
						AND parti.CommunityID = #{communityId}
					</when>
					<otherwise>
						AND parti.CommunityID = 0
					</otherwise>
				</choose>
			</if>
			<if test='simpleSchTxt != null and simpleSchTxt !=""'>
					AND parti.Subject LIKE '%' || #{simpleSchTxt} || '%'
			</if>
			<if test='schTxt != null and schTxt !=""'>
				<choose>
					<when test='schContentType == "subject"'>
						AND parti.Subject LIKE '%' || #{schTxt} || '%'
					</when>
					<when test='schContentType == "register"'>
					    AND Fn_BaseGetDictionary_S(#{lang}, parti.RegisterName) LIKE '%' || #{schTxt} || '%'
					</when>
					<when test='schContentType == "description"'>
						AND parti.Description LIKE '%' || REGEXP_REPLACE(#{schTxt},q'(%|\'|\")', '\"') || '%'
					</when>
					<when test='isMobile != null and isMobile == "Y"'>
					    AND (
					    	parti.Subject LIKE '%' || #{schTxt} || '%'
					    	OR Fn_BaseGetDictionary_S(#{lang}, parti.RegisterName) LIKE '%' || #{schTxt} || '%'
					    	OR parti.Description LIKE '%' || REGEXP_REPLACE(#{schTxt},q'(%|\'|\")', '\"') || '%'
			    		)
					</when>
				</choose>
			</if>
			<if test="startDate != null and startDate != '' and endDate != null and endDate != '' ">
				AND (   (   parti.SurveyStartDate BETWEEN #{startDate} AND #{endDate} ) 
				OR ( parti.SurveyEndDate BETWEEN#{startDate} AND #{endDate} )      )
			</if>
		</trim>
		<trim prefix='ORDER BY'>
			<if test="sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
				RegistDate DESC
			</if>
			<if test="sortColumn != '' and sortColumn != null and sortDirection != '' and sortDirection != null">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("Subject")'>Subject</when>
					<when test='sortColumn.equalsIgnoreCase("SurveyStartDate")'>SurveyStartDate</when>
					<when test='sortColumn.equalsIgnoreCase("RegisterName")'>RegisterName</when>
					<otherwise>State</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
				<include refid="oracle.include.listOrderBy"/>
			</if>
		</trim>
		<include refid="oracle.include.pagingFooter"/>
	</select>
	<!-- 나의 설문 - 내가 참여한 설문 목록 조회 -->
	<select id="selectJoinSurveyListCnt" parameterType="cmap" resultType="java.lang.Long">
	   		SELECT COUNT(*) FROM (
				SELECT a.SurveyID
						, a.Subject
						, a.State
						, TO_CHAR(a.SurveyStartDate,'YYYY.MM.DD') AS SurveyStartDate
						, TO_CHAR(a.SurveyEndDate,'YYYY.MM.DD') AS SurveyEndDate
						, c.MultiDisplayName AS RegisterName
						, a.Description
						, a.CommunityID
						, a.RegistDate
				FROM survey a
				INNER JOIN survey_respondent b ON a.SurveyID = b.SurveyID AND b.respondentCode = #{userID}
				LEFT JOIN sys_object_user c ON a.RegisterCode = c.UserCode
				WHERE a.DeleteDate IS NULL
			) parti
		<trim prefix="WHERE"  prefixOverrides="AND|OR">
			<if test='communityId != null and communityId != ""'>
				<choose>
					<when test='communityId gt 0'>
						AND parti.CommunityID = #{communityId}
					</when>
					<otherwise>
						AND parti.CommunityID = 0
					</otherwise>
				</choose>
			</if>
			<if test='simpleSchTxt != null and simpleSchTxt !=""'>
					AND parti.Subject LIKE '%' || #{simpleSchTxt} || '%'
			</if>
			<if test='schTxt != null and schTxt !=""'>
				<choose>
					<when test='schContentType == "subject"'>
						AND parti.Subject LIKE '%' || #{schTxt} || '%'
					</when>
					<when test='schContentType == "register"'>
					    AND Fn_BaseGetDictionary_S(#{lang}, parti.RegisterName) LIKE '%' || #{schTxt} || '%'
					</when>
					<when test='schContentType == "description"'>
						AND parti.Description LIKE '%' || REGEXP_REPLACE(#{schTxt},q'(%|\'|\")', '\"') || '%'
					</when>
					<when test='isMobile != null and isMobile == "Y"'>
					    AND (
					    	parti.Subject LIKE '%' || #{schTxt} || '%'
					    	OR Fn_BaseGetDictionary_S(#{lang}, parti.RegisterName) LIKE '%' || #{schTxt} || '%'
					    	OR parti.Description LIKE '%' || REGEXP_REPLACE(#{schTxt},q'(%|\'|\")', '\"') || '%'
			    		)
					</when>
				</choose>
			</if>
			<if test="startDate != null and startDate != '' and endDate != null and endDate != '' ">
				AND (   (   parti.SurveyStartDate BETWEEN #{startDate} AND #{endDate} ) 
				OR ( parti.SurveyEndDate BETWEEN#{startDate} AND #{endDate} )      )
			</if>
		</trim>
	</select>
	
	<!-- 진행중인 설문 목록  -->
	<select id="selectProceedSurveyList" parameterType="cmap" resultType="cmap">
	   <include refid="oracle.include.pagingHeader"/>
	   SELECT Proc.SurveyID AS "SurveyID"
			, Proc.Subject AS "Subject"
			, Proc.SubjectHtml AS "SubjectHtml"
			, Proc.IsImportance AS "IsImportance"
			, Proc.D_SurveyStartDate AS "D_SurveyStartDate"
			, Proc.D_SurveyEndDate AS "D_SurveyEndDate"
			, Proc.D_ResultViewStartDate AS "D_ResultViewStartDate"
			, Proc.D_ResultViewEndDate AS "D_ResultViewEndDate"
			, Proc.SurveyStartDate AS "SurveyStartDate"
			, Proc.SurveyEndDate AS "SurveyEndDate"
			, Proc.RegisterCode AS "RegisterCode"
			, Proc.RegisterName AS "RegisterName"
			, Proc.MailAddress AS "MailAddress"
			, Proc.readFg AS "readFg"
			, Proc.IsTargetRespondent AS "IsTargetRespondent"
			, Proc.IsTargetResultView AS "IsTargetResultView"
			, Proc.joinFg AS "joinFg"
			, Proc.joinRate AS "joinRate"
			, Proc.CommunityID AS "CommunityID"
			, Proc.Description AS "Description"
			, Proc.RegistDate AS "RegistDate"
	   FROM (SELECT a.SurveyID
				, a.Subject
				, a.SubjectHtml
				, a.IsImportance
				, a.SurveyStartDate AS D_SurveyStartDate
				, a.SurveyEndDate AS D_SurveyEndDate
				, a.ResultViewStartDate AS D_ResultViewStartDate
				, a.ResultViewEndDate AS D_ResultViewEndDate
				, TO_CHAR(a.SurveyStartDate,'YYYY.MM.DD') AS SurveyStartDate
				, TO_CHAR(a.SurveyEndDate,'YYYY.MM.DD') AS SurveyEndDate
				, a.RegisterCode
				, b.MultiDisplayName AS RegisterName
				, b.MailAddress AS MailAddress
				, DECODE(C.ReadID , NULL, 'N', 'Y') AS readFg
				, Fn_SurveyTargetRespondent_R(a.SurveyID, #{userId}) AS IsTargetRespondent
				, Fn_SurveyTargetResultView_R(a.SurveyID, #{userId}) AS IsTargetResultView
				, (SELECT DECODE(COUNT(*), 0, 'N', 'Y') FROM survey_respondent d WHERE d.SurveyID = a.SurveyID AND d.RespondentCode = #{userId}) AS joinFg
				, Fn_SurveyRate_R(a.SurveyID) AS joinRate
				, a.CommunityID
				, a.Description
				, a.RegistDate
		FROM survey a
		LEFT JOIN sys_object_user b ON a.RegisterCode = b.UserCode
		LEFT JOIN survey_target_read C ON a.SurveyID = c.SurveyID AND c.TargetCode = #{userId}
		WHERE a.State = 'F'
		AND a.DeleteDate IS NULL
		) Proc
		<trim prefix="WHERE"  prefixOverrides="AND|OR">
		   	( 
		  		<![CDATA[
		  		( Proc.IsTargetRespondent = 'Y' AND  D_SurveyStartDate <= TO_DATE(#{localCurrentDate},'YYYY-MM-DD HH24:MI:SS') AND D_SurveyEndDate >= TO_DATE(#{localCurrentDate},'YYYY-MM-DD HH24:MI:SS')   ) -- 설문 기간이면서 설문 대상
				OR ( Proc.IsTargetResultView = 'Y' AND D_ResultViewStartDate <= TO_DATE(#{localCurrentDate},'YYYY-MM-DD HH24:MI:SS') AND D_ResultViewEndDate>=TO_DATE(#{localCurrentDate},'YYYY-MM-DD HH24:MI:SS') )  --  조회 기간이면서 결과 공개 대상
		  		]]>
			)		
			<if test='communityId != null and communityId != ""'>
				<choose>
					<when test='communityId gt 0'>
						AND Proc.CommunityID = #{communityId}
					</when>
					<otherwise>
						AND Proc.CommunityID = 0
					</otherwise>
				</choose>
			</if>
			<if test='simpleSchTxt != null and simpleSchTxt !=""'>
					AND Proc.Subject LIKE	'%' || #{simpleSchTxt} || '%'
			</if>
			<if test='schTxt != null and schTxt !=""'>
				<choose>
					<when test='schContentType == "subject"'>
						AND Proc.Subject LIKE '%' || #{schTxt} || '%'
					</when>
					<when test='schContentType == "register"'>
					    AND Fn_BaseGetDictionary_S(#{lang}, Proc.RegisterName) LIKE '%' || #{schTxt} || '%'
					</when>
					<when test='schContentType == "description"'>
						AND Proc.Description LIKE '%' || REGEXP_REPLACE(#{schTxt},q'(%|\'|\")', '\"') || '%'
					</when>
					<when test='isMobile != null and isMobile == "Y"'>
					    AND (
					    	Proc.Subject LIKE '%' || #{schTxt} || '%'
					    	OR Fn_BaseGetDictionary_S(#{lang}, Proc.RegisterName) LIKE '%' || #{schTxt} || '%'
					    	OR Proc.Description LIKE '%' || REGEXP_REPLACE(#{schTxt},q'(%|\'|\")', '\"') || '%'
			    		)
					</when>
				</choose>
			</if>
			<if test="startDate != null and startDate != '' and endDate != null and endDate != '' ">
				AND (   (   Proc.SurveyStartDate BETWEEN #{startDate} AND #{endDate} ) 
				OR ( Proc.SurveyEndDate BETWEEN#{startDate} AND #{endDate} )      )
			</if>
			<if test='notReadFg != null and notReadFg !="" and notReadFg =="Y"'>
				AND Proc.readFg = 'N'
			</if>
		</trim>
		<trim prefix='ORDER BY'>
			<if test="sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
				IsImportance DESC , RegistDate DESC
			</if>
			<if test="sortColumn != '' and sortColumn != null and sortDirection != '' and sortDirection != null">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("Subject")'>Subject</when>
					<when test='sortColumn.equalsIgnoreCase("SurveyStartDate")'>SurveyStartDate</when>
					<when test='sortColumn.equalsIgnoreCase("RegisterName")'>RegisterName</when>
					<otherwise>joinRate</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
				<include refid="oracle.include.listOrderBy"/>
			</if>
		</trim>
		<include refid="oracle.include.pagingFooter"/>
	</select>
	
	<!-- 진행중인 설문 목록 개수  -->
	<select id="selectProceedSurveyListCnt" parameterType="cmap" resultType="java.lang.Long">
	   SELECT COUNT(*) 
	   FROM (SELECT  a.Subject
	   						, a.SurveyStartDate AS D_SurveyStartDate
							, a.SurveyEndDate AS D_SurveyEndDate
							, a.ResultViewStartDate AS D_ResultViewStartDate
							, a.ResultViewEndDate AS D_ResultViewEndDate
							<if test="startDate != null and startDate != '' and endDate != null and endDate != '' ">
								, TO_CHAR(a.SurveyStartDate,'YYYY.MM.DD') AS SurveyStartDate
								, TO_CHAR(a.SurveyEndDate,'YYYY.MM.DD') AS SurveyEndDate
							</if>
							, a.RegisterCode
							, b.MultiDisplayName AS RegisterName
							, DECODE(c.ReadID, NULL, 'N', 'Y') AS readFg
							, Fn_SurveyTargetRespondent_R(a.SurveyID, #{userId}) AS IsTargetRespondent
							, Fn_SurveyTargetResultView_R(a.SurveyID, #{userId}) AS IsTargetResultView
							, a.CommunityID
							, a.Description
					FROM survey a
					LEFT JOIN sys_object_user b ON a.RegisterCode = b.UserCode
					LEFT JOIN survey_target_read c ON a.SurveyID = c.SurveyID AND c.TargetCode = #{userId}
					WHERE a.State = 'F'
					AND a.DeleteDate IS NULL
					) Proc
		<trim prefix="WHERE"  prefixOverrides="AND|OR">
			 	( 
		  		<![CDATA[
		  		( Proc.IsTargetRespondent = 'Y' AND D_SurveyStartDate <= TO_DATE(#{localCurrentDate},'YYYY-MM-DD HH24:MI:SS') AND D_SurveyEndDate >= TO_DATE(#{localCurrentDate},'YYYY-MM-DD HH24:MI:SS')  ) -- 설문 기간이면서 설문 대상
				OR ( Proc.IsTargetResultView = 'Y' AND D_ResultViewStartDate <= TO_DATE(#{localCurrentDate},'YYYY-MM-DD HH24:MI:SS') AND D_ResultViewEndDate>= TO_DATE(#{localCurrentDate},'YYYY-MM-DD HH24:MI:SS') )  --  조회 기간이면서 결과 공개 대상
		  		]]>
			)			
			<if test='communityId != null and communityId != ""'>
				<choose>
					<when test='communityId gt 0'>
						AND Proc.CommunityID = #{communityId}
					</when>
					<otherwise>
						AND Proc.CommunityID = 0
					</otherwise>
				</choose>
			</if>
			<if test='simpleSchTxt != null and simpleSchTxt !=""'>
					AND Proc.Subject LIKE '%' || #{simpleSchTxt} || '%'
			</if>
			<if test='schTxt != null and schTxt !=""'>
				<choose>
					<when test='schContentType == "subject"'>
						AND Proc.Subject LIKE '%' || #{schTxt} || '%'
					</when>
					<when test='schContentType == "register"'>
					    AND Fn_BaseGetDictionary_S(#{lang}, Proc.RegisterName) LIKE '%' || #{schTxt} || '%'
					</when>
					<when test='schContentType == "description"'>
						AND Proc.Description LIKE '%' || REGEXP_REPLACE(#{schTxt},q'(%|\'|\")', '\"') || '%'
					</when>
					<when test='isMobile != null and isMobile == "Y"'>
					    AND (
					    	Proc.Subject LIKE '%' || #{schTxt} || '%'
					    	OR Fn_BaseGetDictionary_S(#{lang}, Proc.RegisterName) LIKE '%' || #{schTxt} || '%'
					    	OR Proc.Description LIKE '%' || REGEXP_REPLACE(#{schTxt},q'(%|\'|\")', '\"') || '%'
			    		)
					</when>
				</choose>
			</if>
			<if test="startDate != null and startDate != '' and endDate != null and endDate != '' ">
				AND (   (   Proc.SurveyStartDate BETWEEN #{startDate} AND #{endDate} ) 
				OR ( Proc.SurveyEndDate BETWEEN#{startDate} AND #{endDate} )      )
			</if>
			<if test='notReadFg != null and notReadFg !="" and notReadFg =="Y"'>
				AND Proc.readFg = 'N'
			</if>
		</trim>
	</select>
	
	<!-- 완료된 설문 목록 -->
	<select id="selectCompleteSurveyList" parameterType="cmap" resultMap="clobResult">
   	   <include refid="oracle.include.pagingHeader"/>
	   SELECT Comp.SurveyID AS "SurveyID"
	   		, Comp.Subject AS "Subject"
	   		, Comp.SubjectHtml AS "SubjectHtml"
	   		, Comp.IsImportance  AS "IsImportance"
	   		, Comp.D_ResultViewStartDate  AS "D_ResultViewStartDate"
	   		, Comp.D_ResultViewEndDate  AS "D_ResultViewEndDate"
	   		, Comp.SurveyStartDate  AS "SurveyStartDate"
	   		, Comp.SurveyEndDate   AS "SurveyEndDate"
	   		, Comp.RegisterCode  AS "RegisterCode"
	   		, Comp.RegisterName AS "RegisterName"
	   		, Comp.MailAddress AS "MailAddress"
	   		, Comp.readFg AS "readFg"
	   		, Comp.IsTargetResultView AS "IsTargetResultView"
	   		, Comp.joinRate  AS "joinRate"
	   		, Comp.CommunityID  AS "CommunityID"
	   		, Comp.Description AS "Description"
	   		, Comp.RegistDate AS "RegistDate"
	   FROM (SELECT a.SurveyID
					, a.Subject
					, a.SubjectHtml
					, a.IsImportance
					, a.ResultViewStartDate AS D_ResultViewStartDate
					, a.ResultViewEndDate AS D_ResultViewEndDate
					, TO_CHAR(a.SurveyStartDate,'YYYY.MM.DD') AS SurveyStartDate
					, TO_CHAR(a.SurveyEndDate,'YYYY.MM.DD') AS SurveyEndDate
					, a.RegisterCode
					, b.MultiDisplayName AS RegisterName
					, b.MailAddress AS MailAddress
					, DECODE(C.ReadID, NULL, 'N', 'Y') AS readFg
					, Fn_SurveyTargetResultView_R(a.SurveyID, #{userId}) AS IsTargetResultView
					, Fn_SurveyRate_R(a.SurveyID) AS joinRate
					, a.CommunityID
					, a.Description
					, a.RegistDate
			FROM survey a
			LEFT JOIN sys_object_user b ON a.RegisterCode = b.UserCode
			LEFT JOIN survey_target_read C ON a.SurveyID = c.SurveyID AND c.TargetCode = #{userId}
			WHERE a.State = 'G' -- 상태가 완료
			AND a.DeleteDate IS NULL
			) Comp
		<trim prefix="WHERE"  prefixOverrides="AND|OR">
			 AND Comp.IsTargetResultView = 'Y'  -- 결과 공개 대상자 
			 <![CDATA[
			 AND D_ResultViewStartDate <= TO_DATE(#{localCurrentDate},'YYYY-MM-DD HH24:MI:SS') AND D_ResultViewEndDate >= TO_DATE(#{localCurrentDate},'YYYY-MM-DD HH24:MI:SS')   -- 조회 기간
			 ]]>
			<if test='communityId != null and communityId != ""'>
				<choose>
					<when test='communityId gt 0'>
						AND Comp.CommunityID = #{communityId}
					</when>
					<otherwise>
						AND Comp.CommunityID = 0
					</otherwise>
				</choose>
			</if>
			<if test='simpleSchTxt != null and simpleSchTxt !=""'>
					AND Comp.Subject LIKE '%' || #{simpleSchTxt} || '%'
			</if>
			<if test='schTxt != null and schTxt !=""'>
				<choose>
					<when test='schContentType == "subject"'>
						AND Comp.Subject LIKE '%' || #{schTxt} || '%'
					</when>
					<when test='schContentType == "register"'>
					    AND Fn_BaseGetDictionary_S(#{lang}, Comp.RegisterName) LIKE '%' || #{schTxt} || '%'
					</when>
					<when test='schContentType == "description"'>
						AND Comp.Description LIKE '%' || REGEXP_REPLACE(#{schTxt},q'(%|\'|\")', '\"') || '%'
					</when>
					<when test='isMobile != null and isMobile == "Y"'>
					    AND (
					    	Comp.Subject LIKE '%' || #{schTxt} || '%'
					    	OR Fn_BaseGetDictionary_S(#{lang}, Comp.RegisterName) LIKE '%' || #{schTxt} || '%'
					    	OR Comp.Description LIKE '%' || REGEXP_REPLACE(#{schTxt},q'(%|\'|\")', '\"') || '%'
			    		)
					</when>
				</choose>
			</if>
			<if test="startDate != null and startDate != '' and endDate != null and endDate != '' ">
				AND (   (   Comp.SurveyStartDate BETWEEN #{startDate} AND #{endDate} ) 
				OR ( Comp.SurveyEndDate BETWEEN#{startDate} AND #{endDate} )      )
			</if>
			<if test='notReadFg != null and notReadFg !="" and notReadFg =="Y"'>
				AND Comp.readFg = 'N'
			</if>
		</trim>
		<trim prefix='ORDER BY'>
			<if test="sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
				RegistDate DESC
			</if>
			<if test="sortColumn != '' and sortColumn != null and sortDirection != '' and sortDirection != null">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("Subject")'>Subject</when>
					<when test='sortColumn.equalsIgnoreCase("SurveyStartDate")'>SurveyStartDate</when>
					<when test='sortColumn.equalsIgnoreCase("RegisterName")'>RegisterName</when>
					<otherwise>joinRate</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
				<include refid="oracle.include.listOrderBy"/>
			</if>
		</trim>
		<include refid="oracle.include.pagingFooter"/> 
	</select>
	
	<!-- 완료된 설문 목록 개수 -->
	<select id="selectCompleteSurveyListCnt" parameterType="cmap" resultType="java.lang.Long">
   	   SELECT COUNT(*)
	   FROM (SELECT  a.Subject
				, a.ResultViewStartDate AS D_ResultViewStartDate
				, a.ResultViewEndDate AS D_ResultViewEndDate
				, TO_CHAR(a.SurveyStartDate, 'YYYY.MM.DD') AS SurveyStartDate
				, TO_CHAR(a.SurveyEndDate, 'YYYY.MM.DD') AS SurveyEndDate
				, a.RegisterCode
				, b.MultiDisplayName AS RegisterName
				, DECODE(C.ReadID, NULL, 'N', 'Y') AS readFg
				, Fn_SurveyTargetResultView_R(a.SurveyID, #{userId}) AS IsTargetResultView
				, a.CommunityID
				, a.Description
		FROM survey a
		LEFT JOIN sys_object_user b ON a.RegisterCode = b.UserCode
		LEFT JOIN survey_target_read C ON a.SurveyID = c.SurveyID AND c.TargetCode = #{userId}
		WHERE a.State = 'G'
		AND a.DeleteDate IS NULL
		) Comp
		<trim prefix="WHERE"  prefixOverrides="AND|OR">
		 	 AND Comp.IsTargetResultView = 'Y'  -- 결과 공개 대상자 
			 <![CDATA[
			 AND D_ResultViewStartDate <= TO_DATE(#{localCurrentDate},'YYYY-MM-DD HH24:MI:SS') AND D_ResultViewEndDate >= TO_DATE(#{localCurrentDate},'YYYY-MM-DD HH24:MI:SS')   -- 조회 기간
			 ]]>
			<if test='communityId != null and communityId != ""'>
				<choose>
					<when test='communityId gt 0'>
						AND Comp.CommunityID = #{communityId}
					</when>
					<otherwise>
						AND Comp.CommunityID = 0
					</otherwise>
				</choose>
			</if>
			<if test='simpleSchTxt != null and simpleSchTxt !=""'>
					AND Comp.Subject LIKE '%' || #{simpleSchTxt} || '%'
			</if>
			<if test='schTxt != null and schTxt !=""'>
				<choose>
					<when test='schContentType == "subject"'>
						AND Comp.Subject LIKE '%' || #{schTxt} || '%'
					</when>
					<when test='schContentType == "register"'>
					    AND Fn_BaseGetDictionary_S(#{lang}, Comp.RegisterName) LIKE '%' || #{schTxt} || '%'
					</when>
					<when test='schContentType == "description"'>
						AND Comp.Description LIKE '%' || REGEXP_REPLACE(#{schTxt},q'(%|\'|\")', '\"') || '%'
					</when>
					<when test='isMobile != null and isMobile == "Y"'>
					    AND (
					    	Comp.Subject LIKE '%' || #{schTxt} || '%'
					    	OR Fn_BaseGetDictionary_S(#{lang}, Comp.RegisterName) LIKE '%' || #{schTxt} || '%'
					    	OR Comp.Description LIKE '%' || REGEXP_REPLACE(#{schTxt},q'(%|\'|\")', '\"') || '%'
			    		)
					</when>
				</choose>
			</if>
			<if test="startDate != null and startDate != '' and endDate != null and endDate != '' ">
				AND (    (  Comp.SurveyStartDate BETWEEN #{startDate} AND #{endDate} ) 
				OR ( Comp.SurveyEndDate BETWEEN#{startDate} AND #{endDate} )      )
			</if>
			<if test='notReadFg != null and notReadFg !="" and notReadFg =="Y"'>
				AND Comp.readFg = 'N'
			</if>
		</trim>
	</select>
	
	<!-- 임시저장 설문 목록 -->
	<select id="selectTempSaveSurveyList" parameterType="cmap" resultType="cmap">
   	   <include refid="oracle.include.pagingHeader"/>
	   SELECT TempSave.SurveyID AS "SurveyID"
	   		, TempSave.Subject AS "Subject"
	   		, TempSave.Description AS "Description"
	   		, TempSave.CommunityID AS "CommunityID"
	   		, TempSave.RegisterName AS "RegisterName"
	   		, TempSave.RegistDate AS "RegistDate"
	   FROM (SELECT a.SurveyID
					, a.Subject
					, a.CommunityID
					, a.Description
					, Fn_BaseGetDictionary_S(#{lang}, b.MultiDisplayName) AS RegisterName
					, TO_CHAR(a.RegistDate,'YYYY-MM-DD HH24:MI:SS') AS RegistDate
					FROM survey a
					LEFT JOIN sys_object_user b ON a.RegisterCode = b.UserCode
					WHERE a.State = 'A'
					AND a.DeleteDate IS NULL
					AND a.RegisterCode = #{userId}
					) TempSave
		<trim prefix="WHERE"  prefixOverrides="AND|OR">
			<if test='communityId != null and communityId != ""'>
				<choose>
					<when test='communityId gt 0'>
						AND TempSave.CommunityID = #{communityId}
					</when>
					<otherwise>
						AND TempSave.CommunityID = 0
					</otherwise>
				</choose>
			</if>
			<if test='simpleSchTxt != null and simpleSchTxt !=""'>
					AND TempSave.Subject LIKE '%' || #{simpleSchTxt} || '%'
			</if>
			<if test='schTxt != null and schTxt !=""'>
				<choose>
					<when test='schContentType == "subject"'>
						AND TempSave.Subject LIKE '%' || #{schTxt} || '%'
					</when>
					<when test='schContentType == "description"'>
						AND TempSave.Description LIKE '%' || REGEXP_REPLACE(#{schTxt},q'(%|\'|\")', '\"') || '%'
					</when>
					<when test='isMobile != null and isMobile == "Y"'>
					    AND (
					    	TempSave.Subject LIKE '%' || #{schTxt} || '%'
					    	OR TempSave.Description LIKE '%' || REGEXP_REPLACE(#{schTxt},q'(%|\'|\")', '\"') || '%'
			    		)
					</when>
				</choose>
			</if>
			<!-- 임시저장의 등록 기간으로 체크  -->
			<if test="startDate != null and startDate != '' and endDate != null and endDate != '' ">
				AND TempSave.RegistDate BETWEEN #{startDate} and #{endDate}
			</if>
		</trim>
		<trim prefix='ORDER BY'>
			<if test="sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
				RegistDate DESC
			</if>
			<if test="sortColumn != '' and sortColumn != null and sortDirection != '' and sortDirection != null">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("Subject")'>Subject</when>
					<otherwise>RegistDate</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
				<include refid="oracle.include.listOrderBy"/>
			</if>
		</trim>
		<include refid="oracle.include.pagingFooter"/>
	</select>
	
	<!-- 임시저장 설문 목록 개수 -->
	<select id="selectTempSaveSurveyListCnt" parameterType="cmap" resultType="java.lang.Long">
   	    SELECT COUNT(*)
	   FROM (SELECT a.SurveyID
							, a.Subject
							, a.CommunityID
							, a.Description
							, Fn_BaseGetDictionary_S(#{lang}, b.MultiDisplayName) AS RegisterName
							, TO_CHAR(a.RegistDate,'YYYY-MM-DD HH24:MI:SS') AS RegistDate
					FROM survey a
					LEFT JOIN sys_object_user b ON a.RegisterCode = b.UserCode
					WHERE a.State = 'A'
					AND a.DeleteDate IS NULL
					AND a.RegisterCode = #{userId}
					) TempSave
		<trim prefix="WHERE"  prefixOverrides="AND|OR">
			<if test='communityId != null and communityId != ""'>
				<choose>
					<when test='communityId gt 0'>
						AND TempSave.CommunityID = #{communityId}
					</when>
					<otherwise>
						AND TempSave.CommunityID = 0
					</otherwise>
				</choose>
			</if>
			<if test='simpleSchTxt != null and simpleSchTxt !=""'>
					AND TempSave.Subject LIKE '%'||#{simpleSchTxt}||'%'
			</if>
			<if test='schTxt != null and schTxt !=""'>
				<choose>
					<when test='schContentType == "subject"'>
						AND TempSave.Subject LIKE '%'||#{schTxt}||'%'
					</when>
					<when test='schContentType == "description"'>
						AND TempSave.Description LIKE '%'||REGEXP_REPLACE(#{schTxt},q'(%|\'|\")', '\"')||'%'
					</when>
					<when test='isMobile != null and isMobile == "Y"'>
					    AND (
					    	TempSave.Subject LIKE '%'||#{schTxt}||'%'
					    	OR TempSave.Description LIKE '%'||REGEXP_REPLACE(#{schTxt},q'(%|\'|\")', '\"')||'%'
			    		)
					</when>
				</choose>
			</if>
			<!-- 임시저장의 등록 기간으로 체크  -->
			<if test="startDate != null and startDate != '' and endDate != null and endDate != '' ">
				AND TempSave.RegistDate BETWEEN #{startDate} and #{endDate}
			</if>
		</trim>
	</select>
	
	<!-- 승인 및 검토요청 -->
	<select id="selectReqApprovalSurveyList" parameterType="cmap" resultMap="clobResult">
	   <include refid="oracle.include.pagingHeader"/>
	   SELECT ReqApproval.SurveyID AS "SurveyID"
	   		, ReqApproval.Subject AS "Subject"
	   		, ReqApproval.SubjectHtml AS "SubjectHtml"
	   		, ReqApproval.IsImportance AS "IsImportance"
	   		, ReqApproval.State  AS "State"
	   		, ReqApproval.SurveyStartDate AS "SurveyStartDate"
	   		, ReqApproval.SurveyEndDate AS "SurveyEndDate"
	   		, ReqApproval.RegisterCode AS "RegisterCode"
	   		, ReqApproval.RegisterName AS "RegisterName" 
	   		, ReqApproval.MailAddress AS "MailAddress" 
	   		, ReqApproval.Description AS "Description"  
	   		, ReqApproval.RegistDate AS "RegistDate"   
	   		, ReqApproval.CommunityID AS "CommunityID"   
	   		, ReqApproval.ReviewerCode AS "ReviewerCode"   
	   		, ReqApproval.ApproverCode  AS "ApproverCode"   
	   FROM (SELECT a.SurveyID
				, a.Subject
				, a.SubjectHtml
				, a.IsImportance
				, a.State
				, TO_CHAR(a.SurveyStartDate,'YYYY.MM.DD') AS SurveyStartDate
				, TO_CHAR(a.SurveyEndDate,'YYYY.MM.DD') AS SurveyEndDate
				, a.RegisterCode
				, b.MultiDisplayName AS RegisterName
				, b.MailAddress AS MailAddress
				, a.Description
				, a.RegistDate
				, a.CommunityID
				, NVL(a.ReviewerCode,'') AS ReviewerCode
				, NVL(a.ApproverCode,'') AS ApproverCode
		FROM survey a
		LEFT JOIN sys_object_user b ON a.RegisterCode = b.UserCode
		WHERE a.DeleteDate IS NULL
		AND ((a.State = 'B' AND a.ReviewerCode =  #{userId}) -- 검토 대기 상태인데 내가 검토자인 것
			OR (a.State = 'C' AND a.ApproverCode =  #{userId} ) )-- 승인 대기 상태인데 내가 승인자인 것
		) ReqApproval
		<trim prefix="WHERE"  prefixOverrides="AND|OR">
			<if test='communityId != null and communityId != ""'>
				<choose>
					<when test='communityId gt 0'>
						AND ReqApproval.CommunityID = #{communityId}
					</when>
					<otherwise>
						AND ReqApproval.CommunityID = 0
					</otherwise>
				</choose>
			</if>
			<if test='simpleSchTxt != null and simpleSchTxt !=""'>
					AND ReqApproval.Subject LIKE	'%' || #{simpleSchTxt} || '%'
			</if>
			<if test='schTxt != null and schTxt !=""'>
				<choose>
					<when test='schContentType == "subject"'>
						AND ReqApproval.Subject LIKE '%' || #{schTxt} || '%'
					</when>
					<when test='schContentType == "register"'>
					    AND Fn_BaseGetDictionary_S(#{lang}, ReqApproval.RegisterName) LIKE '%' || #{schTxt} || '%'
					</when>
					<when test='schContentType == "description"'>
						AND ReqApproval.Description LIKE '%' || REGEXP_REPLACE(#{schTxt},q'(%|\'|\")', '\"') || '%'
					</when>
					<when test='isMobile != null and isMobile == "Y"'>
					    AND (
					    	ReqApproval.Subject LIKE '%' || #{schTxt} || '%'
					    	OR Fn_BaseGetDictionary_S(#{lang}, ReqApproval.RegisterName) LIKE '%' || #{schTxt} || '%'
					    	OR ReqApproval.Description LIKE '%' || REGEXP_REPLACE(#{schTxt},q'(%|\'|\")', '\"') || '%'
			    		)
					</when>
				</choose>
			</if>
			<if test="startDate != null and startDate != '' and endDate != null and endDate != '' ">
				AND (   (   ReqApproval.SurveyStartDate BETWEEN #{startDate} AND #{endDate} ) 
				OR ( ReqApproval.SurveyEndDate BETWEEN#{startDate} AND #{endDate} )      )
			</if>
		</trim>
		<trim prefix='ORDER BY'>
			<if test="sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
				RegistDate DESC
			</if>
			<if test="sortColumn != '' and sortColumn != null and sortDirection != '' and sortDirection != null">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("Subject")'>Subject</when>
					<when test='sortColumn.equalsIgnoreCase("SurveyStartDate")'>SurveyStartDate</when>
					<when test='sortColumn.equalsIgnoreCase("RegisterName")'>RegisterName</when>
					<otherwise>State</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
				<include refid="oracle.include.listOrderBy"/>
			</if>
		</trim>
		<include refid="oracle.include.pagingFooter"/> 
	</select>
	
	
	<!-- 승인 및 검토요청 목록 개수 -->
	<select id="selectReqApprovalSurveyListCnt" parameterType="cmap" resultType="java.lang.Long">
	   SELECT COUNT(*)
	   FROM (SELECT a.Subject
				, a.State
				, TO_CHAR(a.SurveyStartDate,'YYYY.MM.DD') AS SurveyStartDate
				, TO_CHAR(a.SurveyEndDate,'YYYY.MM.DD') AS SurveyEndDate
				, a.RegisterCode
				, b.MultiDisplayName AS RegisterName
				, a.Description
				, a.RegistDate
				, a.CommunityID
		FROM survey a
		LEFT JOIN sys_object_user b ON a.RegisterCode = b.UserCode
		WHERE a.DeleteDate IS NULL
		AND ((a.State = 'B' AND a.ReviewerCode =  #{userId}) -- 검토 대기 상태인데 내가 검토자인 것
			OR (a.State = 'C' AND a.ApproverCode =  #{userId} ) )-- 승인 대기 상태인데 내가 승인자인 것
		) ReqApproval
		<trim prefix="WHERE"  prefixOverrides="AND|OR">
			<if test='communityId != null and communityId != ""'>
				<choose>
					<when test='communityId gt 0'>
						AND ReqApproval.CommunityID = #{communityId}
					</when>
					<otherwise>
						AND ReqApproval.CommunityID = 0
					</otherwise>
				</choose>
			</if>
			<if test='simpleSchTxt != null and simpleSchTxt !=""'>
					AND ReqApproval.Subject LIKE '%' || #{simpleSchTxt} || '%'
			</if>
			<if test='schTxt != null and schTxt !=""'>
				<choose>
					<when test='schContentType == "subject"'>
						AND ReqApproval.Subject LIKE '%' || #{schTxt} || '%'
					</when>
					<when test='schContentType == "register"'>
					    AND Fn_BaseGetDictionary_S(#{lang}, ReqApproval.RegisterName) LIKE '%' || #{schTxt} || '%'
					</when>
					<when test='schContentType == "description"'>
						AND ReqApproval.Description LIKE '%' || REGEXP_REPLACE(#{schTxt},q'(%|\'|\")', '\"') || '%'
					</when>
					<when test='isMobile != null and isMobile == "Y"'>
					    AND (
					    	ReqApproval.Subject LIKE '%' || #{schTxt} || '%'
					    	OR Fn_BaseGetDictionary_S(#{lang}, ReqApproval.RegisterName) LIKE '%' || #{schTxt} || '%'
					    	OR ReqApproval.Description LIKE '%' || REGEXP_REPLACE(#{schTxt},q'(%|\'|\")', '\"') || '%'
			    		)
					</when>
				</choose>
			</if>
			<if test="startDate != null and startDate != '' and endDate != null and endDate != '' ">
				AND (   (   ReqApproval.SurveyStartDate BETWEEN #{startDate} AND #{endDate} ) 
				OR ( ReqApproval.SurveyEndDate BETWEEN#{startDate} AND #{endDate} )      )
			</if>
		</trim>
	</select>
	
  	<select id="selectSurveyListCnt" resultType="java.lang.Long">
		SELECT COUNT(*) AS cnt
		  FROM (SELECT A.SurveyID, RegisterCode,
				 	   DECODE((SELECT COUNT(*) 
				 	   		FROM survey_respondent C 
				 	   		WHERE C.SurveyID = A.SurveyID 
				 	   		AND C.RespondentCode = #{userId}) , 0, 'N', 'Y') AS joinFg,
					   (CASE WHEN (ReviewerCode = #{userId} OR ApproverCode = #{userId}) THEN 'Y'
					 		ELSE 'N' 
					 		END) AS approverFg				 	   		  
				  FROM survey A
				  LEFT JOIN sys_object_user B
				    ON A.RegisterCode = B.UserCode				  
				 WHERE 1 = 1
				 <if test='communityId != null and communityId != ""'>
					<choose>
						<when test='communityId gt 0'>
							AND CommunityID = #{communityId}
			            </when>
			            <otherwise>
							AND (CommunityID is null or CommunityID = 0)
			            </otherwise>
					</choose>
				 </if>
				 <if test='reqType != null and reqType !=""'>
					 <choose>
						<when test='reqType == "proceed"'>
						   AND State = 'F'
			            </when>
			            <when test='reqType == "complete"'>
			               AND State = 'G'
			            </when>
			            <when test='reqType == "tempSave"'>
			               AND State = 'A'
			               AND A.RegisterCode = #{userId} 
			            </when>		                 
			            <otherwise>
			               AND State IN ('B', 'C')
			            </otherwise>
		        	 </choose>
	        	 </if>
				 <if test='schTxt != null and schTxt !=""'>
					<choose>
						<when test='schContentType == "subject"'>
						   AND A.Subject LIKE '%' || REGEXP_REPLACE(#{schTxt},q'(%|\'|\")', '\"') || '%'
			            </when>
			            <when test='schContentType == "register"'>
			               AND B.DisplayName LIKE '%' || #{schTxt} || '%'
			            </when>	                
			            <otherwise>
			               AND A.Description LIKE '%' || REGEXP_REPLACE(#{schTxt},q'(%|\'|\")', '\"') || '%' 
			            </otherwise>
					</choose>
				 </if>
				 <if test="startDate != null and startDate != '' and endDate != null and endDate != '' ">
				     AND  (  (TO_CHAR(A.SurveyStartDate, 'YYYY.MM.DD') BETWEEN #{startDate} AND #{endDate} ) OR  (TO_CHAR( A.SurveyEndDate, 'YYYY.MM.DD') BETWEEN  #{startDate}  AND #{endDate} )  )
		  		 </if>
			   ) A
		    LEFT JOIN (SELECT A.SurveyID,
							  SUM(CASE WHEN TargetCode = #{userId} THEN 1 
							  		ELSE 0 
							  		END) AS existCnt
					     FROM (SELECT A.SurveyID, A.TargetCode
				  				 FROM survey_target_respondent A			    
				   			    WHERE A.TargetType = 'UR'
				   			    AND A.TargetCode =  #{userId} 
				 			    UNION 
							    SELECT A.SurveyID, B.UserCode
								FROM survey_target_respondent A
								INNER JOIN ( SELECT A.UserCode, A.GroupCode, B.GroupPath 
												FROM sys_object_group_member A
												INNER JOIN sys_object_group B ON A.GroupCode = B.GroupCode
												WHERE A.UserCode = #{userId}
												AND A.IsUse= 'Y'
												) B
								WHERE A.TargetType = 'GR'
								AND A.TargetCode = B.GroupCode OR ';' || B.GroupPath LIKE '%;' || A.TargetCode || ';%'
				   			  ) A
					    GROUP BY A.SurveyID				   			 
				   	   ) B
		     ON A.SurveyID = B.SurveyID
		   LEFT JOIN survey_target_read C
		     ON A.SurveyID = C.SurveyID
		    AND C.TargetCode = #{userId}
		  WHERE 1 = 1
		  
		 <if test='schMySel != null and schMySel !=""'>
			<choose>
				<when test='schMySel == "written"'>
				   AND RegisterCode = #{userId}
	            </when>
	            <when test='schMySel == "participated"'>
	               AND joinFg = 'Y'
	            </when>	                
	            <otherwise>
	                    
	            </otherwise>
	        </choose>
		</if>
		 <if test='notReadFg != null and notReadFg !="" and notReadFg =="Y"'>
		  		AND C.ReadID IS NULL
		</if>	  
	    <if test='reqType != null and reqType !=""'>
			<choose>
				<when test='reqType == "proceed" or reqType == "complete" or reqType == "tempSave"'>
					AND (RegisterCode = #{userId} or existCnt <![CDATA[>]]> 0)
            	</when>
            <otherwise>
		  		AND approverFg = 'Y'
            </otherwise>
       		</choose>
      	</if>
	</select>
	
	<delete id="deleteSurvey" parameterType="cmap">
	   BEGIN
		DELETE 
		  FROM survey_target_respondent
		 WHERE SurveyID IN
	           <foreach collection="surveyIdArr" item="surveyId" open="(" close=")" separator=",">
	           	#{surveyId}
	           </foreach>;
		DELETE 
		  FROM survey_target_resultview
		 WHERE SurveyID IN
	           <foreach collection="surveyIdArr" item="surveyId" open="(" close=")" separator=",">
	           	#{surveyId}
	           </foreach>;	           
		DELETE
		  FROM survey_question_item
		 WHERE SurveyID IN
	           <foreach collection="surveyIdArr" item="surveyId" open="(" close=")" separator=",">
	           	#{surveyId}
	           </foreach>;
		DELETE
		  FROM survey_question
		 WHERE SurveyID IN
	           <foreach collection="surveyIdArr" item="surveyId" open="(" close=")" separator=",">
	           	#{surveyId}
	           </foreach>;
		DELETE
		  FROM survey
		 WHERE SurveyID IN
	           <foreach collection="surveyIdArr" item="surveyId" open="(" close=")" separator=",">
	           	#{surveyId}
	           </foreach>;
	   END; 
	</delete>
	
	<update id="updateSurveyState" parameterType="cmap">
		BEGIN
	    <foreach collection="surveyIdArr" item="surveyId"> 
			UPDATE survey a
			 SET a.ModifyDate = TO_DATE(#{localCurrentDate}, 'YYYY-MM-DD HH24:MI:SS')
			<if test='state != "del"'>
				<choose>
					 <when test='state == "C"'>
					 	,a.State =(
				        			SELECT * FROM (
								  			SELECT CASE WHEN (b.ApproverCode IS NULL || b.ApproverCode = '') THEN 'F' ELSE 'C' END FROM survey b WHERE b.SurveyID = #{surveyId}
						 			 ) temp
						  )
						  ,a.ReviewerDate = TO_DATE(#{localCurrentDate}, 'YYYY-MM-DD HH24:MI:SS')
					 </when>
					 <when test='state == "D"'>
					 	,a.State = #{state}
					 	,a.ReviewerDate = TO_DATE(#{localCurrentDate}, 'YYYY-MM-DD HH24:MI:SS')
					 </when>
					 <when test='state == "F" or state == "X"'>
					 	,a.State = #{state}
						,a.ApproverDate = TO_DATE(#{localCurrentDate}, 'YYYY-MM-DD HH24:MI:SS')
					 </when>
					 <otherwise> <!-- 설문조기마감 -->
					 	,a.State = #{state}
					 </otherwise>
				</choose>
			
			</if>
			<if test='state == "del"'>		<!-- 삭제 처리시에만, DeleteDate 업데이트  -->
			 	,a.DeleteDate = TO_DATE(#{localCurrentDate}, 'YYYY-MM-DD HH24:MI:SS')
			</if>
			WHERE a.SurveyID = #{surveyId};
		</foreach>
		END;
	</update>
	
	<select id="selectAnswerForChart" parameterType="cmap" resultType="cmap">
		SELECT A.QuestionID AS "QuestionID"
			 , A.Weighting  as "Weighting"
		     , A.ItemID AS "ItemID"
		     , A.AnswerItem AS "AnswerItem"
		     , MAX(A.EtcOpinion) AS "EtcOpinion"
		     , MAX(A.RespondentCode)  AS "RespondentCode"
		     , MAX(B.QuestionType) AS "QuestionType"
		     , COUNT(*) AS "CNT"
		 FROM survey_question_item_answer A
		 LEFT JOIN survey_question B ON A.QuestionID = B.QuestionID
		 WHERE A.SurveyID = #{surveyID}
		 AND B.QuestionType != 'N'
		 GROUP BY A.QuestionID, A.Weighting, A.ItemID, A.AnswerItem
		 
		 UNION ALL
		 
		 SELECT A.QuestionID AS "QuestionID"
		 	 , A.Weighting  as "Weighting"	
		     , A.ItemID AS "ItemID"
		     , MAX(A.AnswerItem) AS "AnswerItem"
		     , MAX(A.EtcOpinion) AS "EtcOpinion"
		     , MAX(A.RespondentCode) AS "RespondentCode"
		     , MAX(B.QuestionType) AS "QuestionType"
		     ,  COUNT(*) AS "CNT"
		 FROM survey_question_item_answer A
		 LEFT JOIN survey_question B ON A.QuestionID = B.QuestionID
		 WHERE A.SurveyID = #{surveyID}
		 AND B.QuestionType = 'N'
		 GROUP BY A.QuestionID, A.Weighting, A.ItemID
	</select>
	
	<select id="selectTargetRespondentList" parameterType="cmap" resultType="cmap">
		<include refid="oracle.include.pagingHeader"/> 
		SELECT B.SurveyID AS "SurveyID"
			 , B.TargetCode AS "TargetCode"
			 , B.RespondentID AS "RespondentID"
			 , B.PhotoPath AS "PhotoPath"
			 , B.DisplayName AS "DisplayName"
			 , B.DeptName AS "DeptName"
			 , B.EtcOpinion AS "EtcOpinion"
			 , TO_CHAR(B.RegistDate,'YYYY.MM.DD HH24:MM') AS "RegistDate"
			 , B.RegisterCode AS "RegisterCode"
			 FROM (
			    SELECT    A.SurveyID 
			    		, A.TargetCode
			    		, CONCAT('User-', A.RespondentID) AS RespondentID
			    		, B.PhotoPath
						, Fn_BaseGetDictionary_S(#{lang}, B.MultiDisplayName ) AS DisplayName
						, Fn_BaseGetDictionary_S(#{lang}, C.MultiDeptName ) AS DeptName
						, D.EtcOpinion
						, D.RegistDate
						, E.RegisterCode
					FROM 
					 	(
						 	SELECT A.SurveyID , A.TargetCode , A.RespondentID
							FROM survey_target_respondent A
							WHERE A.SurveyID = #{surveyID} AND A.TargetType = 'UR'
							 
							UNION
							 
							SELECT A.SurveyID, B.UserCode , A.RespondentID
							FROM survey_target_respondent A 
							INNER JOIN ( SELECT A.UserCode, B.GroupCode, C.GroupPath FROM sys_object_user_basegroup A
											LEFT JOIN sys_object_group_member B ON A.UserCode = B.UserCode AND B.IsUse= 'Y'
											LEFT JOIN sys_object_group C ON B.GroupCode = C.GroupCode AND C.IsDisplay = 'Y' AND C.IsUse = 'Y') B
							ON (A.TargetCode = B.GroupCode OR ';' || B.GroupPath LIKE '%;' || A.TargetCode || ';%' ) AND A.TargetType = 'GR'				
							WHERE A.SurveyID = #{surveyID}
						) A
					 INNER JOIN sys_object_user B ON A.TargetCode = B.UserCode AND B.IsUse = 'Y' AND B.IsDisplay = 'Y'
					 INNER JOIN sys_object_user_basegroup C ON  A.TargetCode = C.UserCode AND C.JobType = 'Origin'
					 INNER JOIN SURVEY E ON E.SurveyID = #{surveyID}  
					 LEFT JOIN survey_respondent D ON A.SurveyID = D.SurveyID  AND A.TargetCode = D.RespondentCode
				<trim prefix='WHERE'  prefixOverrides="AND | OR">
					 <if test='targetType != null and targetType !="" and schTxt != null and schTxt !="" ' >
						<choose>
							<when test='targetType == "ur"'>
								AND Fn_BaseGetDictionary_S(#{lang}, B.MultiDisplayName ) LIKE '%' || #{schTxt} || '%'
				            </when>
				            <otherwise>
				                AND Fn_BaseGetDictionary_S(#{lang}, C.MultiDeptName )  LIKE '%' || #{schTxt} || '%'
				            </otherwise>
						</choose>
					 </if>
					 <if test='targetJoin != null and targetJoin !=""'>
						<choose>
							<when test='targetJoin == "attendance"'>
								AND D.RegistDate IS NOT NULL		   
				            </when>
				            <otherwise>
				                AND D.RegistDate IS NULL
				            </otherwise>
						</choose>
					 </if>
				 </trim>
			)B
		 <trim prefix='ORDER BY'>
			<if test='sortColumn != null and sortDirection != null'>
				<choose>
					<when test='sortColumn.equalsIgnoreCase("DeptName")'>DeptName</when>
					<when test='sortColumn.equalsIgnoreCase("RegistDate")'>RegistDate</when>
					<when test='sortColumn.equalsIgnoreCase("EtcOpinion")'>EtcOpinion</when>
					<otherwise>DisplayName</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
				<include refid="oracle.include.listOrderBy"/>
			</if>
		</trim>
		<include refid="oracle.include.pagingFooter"/>		  
	</select>
	
  	<select id="selectTargetRespondentListCnt" resultType="java.lang.Long">
			SELECT  COUNT(*)
			FROM 
			 	(
				 	SELECT A.SurveyID , A.TargetCode 
					FROM survey_target_respondent A
					WHERE A.SurveyID = #{surveyID} AND A.TargetType = 'UR'
					 
					UNION
					 
					SELECT A.SurveyID ,  B.UserCode
					FROM survey_target_respondent A 
					INNER JOIN ( SELECT A.UserCode, B.GroupCode, C.GroupPath FROM sys_object_user_basegroup A
									LEFT JOIN sys_object_group_member B ON A.UserCode = B.UserCode AND B.IsUse='Y'
									LEFT JOIN sys_object_group C ON B.GroupCode = C.GroupCode AND C.IsDisplay = 'Y' AND C.IsUse = 'Y') B
					ON (A.TargetCode = B.GroupCode OR ';' || B.GroupPath LIKE '%;' || A.TargetCode || ';%' ) AND A.TargetType = 'GR'				
					WHERE A.SurveyID = #{surveyID}
				) A
			 INNER JOIN sys_object_user B ON A.TargetCode = B.UserCode AND B.IsUse = 'Y' AND B.IsDisplay = 'Y'
			 INNER JOIN sys_object_user_basegroup C ON  A.TargetCode = C.UserCode AND C.JobType = 'Origin' 
			 INNER JOIN SURVEY E ON E.SurveyID = #{surveyID}  
			 LEFT JOIN survey_respondent D ON A.SurveyID = D.SurveyID  AND A.TargetCode = D.RespondentCode
		<trim prefix='WHERE'  prefixOverrides="AND | OR">
			 <if test='targetType != null and targetType !="" and schTxt != null and schTxt !="" ' >
				<choose>
					<when test='targetType == "ur"'>
						AND Fn_BaseGetDictionary_S(#{lang}, B.MultiDisplayName ) LIKE '%' || #{schTxt} || '%'
		            </when>
		            <otherwise>
		                AND Fn_BaseGetDictionary_S(#{lang}, C.MultiDeptName )  LIKE '%' || #{schTxt} || '%'
		            </otherwise>
				</choose>
			 </if>
			 <if test='targetJoin != null and targetJoin !=""'>
				<choose>
					<when test='targetJoin == "attendance"'>
						AND D.RegistDate IS NOT NULL		   
		            </when>
		            <otherwise>
		                AND D.RegistDate IS NULL
		            </otherwise>
				</choose>
			 </if>
		 </trim>
	</select>
	
	<!-- 미참여자 코드 조회  -->
	<select id="selectNotAttendanceCodes" parameterType="cmap"  resultType="cmap">
		SELECT  TargetCode AS "TargetCode"
		FROM 
		 	(
			 	SELECT A.SurveyID , A.TargetCode 
				FROM survey_target_respondent A
				WHERE A.SurveyID = #{surveyID} AND A.TargetType = 'UR'
				 
				UNION
				 
				SELECT A.SurveyID, B.UserCode
				FROM survey_target_respondent A 
				INNER JOIN ( SELECT A.UserCode, B.GroupCode, C.GroupPath FROM sys_object_user_basegroup A
								LEFT JOIN sys_object_group_member B ON A.UserCode = B.UserCode AND B.IsUse= 'Y'
								LEFT JOIN sys_object_group C ON B.GroupCode = C.GroupCode AND C.IsDisplay = 'Y' AND C.IsUse = 'Y') B
				ON (A.TargetCode = B.GroupCode OR ';' || B.GroupPath LIKE '%;' || A.TargetCode || ';%' ) AND A.TargetType = 'GR'				
				WHERE A.SurveyID = #{surveyID}
			) A
      		INNER JOIN sys_object_user B ON A.TargetCode = B.UserCode AND B.IsUse = 'Y' AND B.IsDisplay = 'Y'
			INNER JOIN sys_object_user_basegroup C ON  A.TargetCode = C.UserCode AND C.JobType = 'Origin' 
		  	LEFT JOIN survey_respondent D ON A.SurveyID = D.SurveyID  AND A.TargetCode = D.RespondentCode
     		WHERE D.RegistDate IS NULL
	</select>
	
	<select id="selectTargetResultviewList" parameterType="cmap" resultType="cmap">
		<include refid="oracle.include.pagingHeader"/> 	
		 SELECT B.SurveyID AS "SurveyID"
		 	  , B.TargetCode AS "TargetCode"
		 	  , B.PhotoPath AS "PhotoPath"
		 	  , B.DisplayName AS "DisplayName"
		 	  , B.DeptName AS "DeptName"
		 	  , B.EtcOpinion AS "EtcOpinion"
		 	FROM (
				SELECT    A.SurveyID  AS SurveyID
			    		, A.TargetCode AS TargetCode
			    		, B.PhotoPath AS PhotoPath
						, Fn_BaseGetDictionary_S(#{lang}, B.MultiDisplayName ) AS DisplayName
						, Fn_BaseGetDictionary_S(#{lang}, C.MultiDeptName ) AS DeptName
						, D.EtcOpinion AS EtcOpinion
					FROM 
					 	(
						 	SELECT A.SurveyID , A.TargetCode 
							FROM survey_target_resultview A
							WHERE A.SurveyID = #{surveyID} AND A.TargetType = 'UR'
							 
							UNION
							 
							SELECT A.SurveyID, B.UserCode
							FROM survey_target_resultview A 
							INNER JOIN ( SELECT A.UserCode, B.GroupCode, C.GroupPath FROM sys_object_user_basegroup A
											LEFT JOIN sys_object_group_member B ON A.UserCode = B.UserCode AND B.IsUse='Y'
											LEFT JOIN sys_object_group C ON B.GroupCode = C.GroupCode AND C.IsDisplay = 'Y' AND C.IsUse = 'Y') B
							ON (A.TargetCode = B.GroupCode OR ';' || B.GroupPath LIKE '%;' || A.TargetCode || ';%' ) AND A.TargetType = 'GR'				
							WHERE A.SurveyID = #{surveyID}
						) A
					 INNER JOIN sys_object_user B ON A.TargetCode = B.UserCode AND B.IsUse = 'Y' AND B.IsDisplay = 'Y'
					 INNER JOIN sys_object_user_basegroup C ON  A.TargetCode = C.UserCode AND C.JobType = 'Origin'
					 LEFT JOIN survey_respondent D ON A.SurveyID = D.SurveyID  AND A.TargetCode = D.RespondentCode
					 <trim prefix="WHERE" prefixOverrides="AND|OR">
						 <if test='targetType != null and targetType !="" and schTxt != null and schTxt !="" ' >
						 	<choose>
								<when test='targetType == "ur"'>
									AND Fn_BaseGetDictionary_S(#{lang}, B.MultiDisplayName ) LIKE '%' || #{schTxt} || '%'
				            	</when>
					            <otherwise>
					            	AND Fn_BaseGetDictionary_S(#{lang}, C.MultiDeptName ) LIKE '%' || #{schTxt} || '%'
					            </otherwise>
							</choose>
					   	 </if>	   	
					   	 <if test='targetJoin != null and targetJoin !=""'>
							<choose>
								<when test='targetJoin == "attendance"'>
									AND A.RegistDate IS NOT NULL		   
					            </when>
								<when test='targetJoin == "nonAttendance"'>
									AND A.RegistDate IS NULL		   
					            </when>
							</choose>
						 </if>			 
					 </trim>
				)B
				<trim prefix='ORDER BY'>
					<if test="sortColumn != '' and sortColumn != null and sortDirection != '' and sortDirection != null">
						<choose>
							<when test='sortColumn.equalsIgnoreCase("DisplayName")'>DisplayName</when>
							<when test='sortColumn.equalsIgnoreCase("DeptName")'>DeptName</when>
							<otherwise>RegistDate</otherwise>
						</choose>
						<choose>
							<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
							<otherwise> DESC</otherwise>
						</choose>
						<include refid="oracle.include.listOrderBy"/>
					</if>
				</trim>
		<include refid="oracle.include.pagingFooter"/>
	</select>
	
  	<select id="selectTargetResultviewListCnt" resultType="java.lang.Long">
		SELECT COUNT(*) 
		FROM 
		 	(
			 	SELECT A.SurveyID , A.TargetCode 
				FROM survey_target_resultview A
				WHERE A.SurveyID = #{surveyID} AND A.TargetType = 'UR'
				 
				UNION
				 
				SELECT A.SurveyID, B.UserCode
				FROM survey_target_resultview A 
				INNER JOIN ( SELECT A.UserCode, B.GroupCode, C.GroupPath FROM sys_object_user_basegroup A
								LEFT JOIN sys_object_group_member B ON A.UserCode = B.UserCode  AND B.IsUse='Y'
								LEFT JOIN sys_object_group C ON B.GroupCode = C.GroupCode AND C.IsDisplay = 'Y' AND C.IsUse = 'Y') B
				ON (A.TargetCode = B.GroupCode OR ';' || B.GroupPath LIKE '%;' || A.TargetCode || ';%' ) AND A.TargetType = 'GR'				
				WHERE A.SurveyID = #{surveyID}
			) A
		 INNER JOIN sys_object_user B ON A.TargetCode = B.UserCode AND B.IsUse = 'Y' AND B.IsDisplay = 'Y'
		 INNER JOIN sys_object_user_basegroup C ON  A.TargetCode = C.UserCode AND C.JobType = 'Origin'
		 LEFT JOIN survey_respondent D ON A.SurveyID = D.SurveyID  AND A.TargetCode = D.RespondentCode
		 <trim prefix="WHERE" prefixOverrides="AND|OR">
			 <if test='targetType != null and targetType !="" and schTxt != null and schTxt !="" ' >
			 	<choose>
					<when test='targetType == "ur"'>
						AND Fn_BaseGetDictionary_S(#{lang}, B.MultiDisplayName ) LIKE '%' || #{schTxt} || '%'
	            	</when>
		            <otherwise>
		            	AND Fn_BaseGetDictionary_S(#{lang}, C.MultiDeptName ) LIKE '%' || #{schTxt} || '%'
		            </otherwise>
				</choose>
		   	 </if>	   	
		   	 <if test='targetJoin != null and targetJoin !=""'>
				<choose>
					<when test='targetJoin == "attendance"'>
						AND A.RegistDate IS NOT NULL		   
		            </when>
					<when test='targetJoin == "nonAttendance"'>
						AND A.RegistDate IS NULL		   
		            </when>
				</choose>
			 </if>			 
		 </trim>
	</select>
	
	<select id="selectSurveyManageList" parameterType="cmap" resultType="cmap">
		/* queryId = user.survey.selectSurveyManageList */
		<include refid="oracle.include.pagingHeader"/>
		SELECT  SurveyID AS "SurveyID"
	          , State AS "State"
	          , Subject  AS "Subject"
	          , RegisterName AS "RegisterName"
	          , SurveyStartDate AS "SurveyStartDate"
	          , SurveyEndDate AS "SurveyEndDate"
	          , StateName AS "StateName"
			  , RegistDate AS "RegistDate"
			  , CompanyName AS "CompanyName"
			  , (SELECT COUNT(sr.RespondentCode) FROM survey_respondent sr WHERE sr.SurveyID = SurveyID) as "RespondentCnt"
		FROM(
			SELECT  a.SurveyID
		          , a.State
		          , a.Subject
		          , Fn_BaseGetDictionary_S(#{lang},  b.MultiDisplayName) AS RegisterName
		          , TO_CHAR(a.SurveyStartDate,'YYYY-MM-DD') AS SurveyStartDate
		          , TO_CHAR(a.SurveyEndDate,'YYYY-MM-DD') AS SurveyEndDate
		          , (CASE WHEN a.State = 'B' THEN '검토대기'
				 		 WHEN a.State = 'D' THEN '검토거부'
				 		 WHEN a.State = 'C' THEN '승인대기'
				 		 WHEN a.State = 'X' THEN '승인거부'
				 		 WHEN a.State = 'F' THEN '진행중'
				 		 WHEN a.State = 'G' THEN '설문종료'
				 	 END   ) AS StateName
				  , a.RegistDate
				  , Fn_BaseGetDictionary_S(#{lang}, c.MultiDisplayName) AS CompanyName
			FROM survey a
			LEFT JOIN sys_object_user b ON a.RegisterCode = b.UserCode
			LEFT JOIN sys_object_domain c ON a.CompanyCode = c.DomainCode
			WHERE a.State IN ('B','C','F','G')
			AND a.DeleteDate IS NULL
		  	<choose>
		  		<when test="companyCode != null and companyCode != ''">
		  	AND a.CompanyCode = #{companyCode}
		  		</when>
		  		<otherwise>
		  			<if test="domainId != null and domainId != ''">
		  	AND c.DomainID = #{domainId}
		  			</if>		
		  		</otherwise>
		  	</choose>
		   	<if test='schTxt != null and schTxt !=""'>
				<choose>
					<when test='selType == "subject"'>
						AND a.Subject LIKE '%' || #{schTxt} || '%'
	            	</when>
					<when test='selType == "registerName"'>
						AND Fn_BaseGetDictionary_S(#{lang},  b.MultiDisplayName) LIKE '%' || #{schTxt} || '%'
	            	</when>
				</choose>
			</if>
			<if test='state != null and state !=""'>
				AND a.State = #{state}
			</if>
		) 
		<trim prefix='ORDER BY'>
			<if test="sortColumn != '' and sortColumn != null and sortDirection != '' and sortDirection != null">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("Subject")'>Subject</when>
					<when test='sortColumn.equalsIgnoreCase("RegisterName")'>RegisterName</when>
					<when test='sortColumn.equalsIgnoreCase("SurveyStartDate")'>SurveyStartDate</when>
					<when test='sortColumn.equalsIgnoreCase("SurveyEndDate")'>SurveyEndDate</when>
					<when test='sortColumn.equalsIgnoreCase("StateName")'>StateName</when>
					<otherwise>RegistDate</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
				<include refid="oracle.include.listOrderBy"/>
			</if>
		</trim>
		<include refid="oracle.include.pagingFooter"/>
	</select>
	
  	<select id="selectSurveyManageListCnt" resultType="java.lang.Long">
		SELECT COUNT(*)
		 FROM survey a
		 LEFT JOIN sys_object_user b ON a.RegisterCode = b.UserCode
		 LEFT JOIN sys_object_domain c ON a.CompanyCode = c.DomainCode
		 WHERE a.State IN ('B','C','F','G')
		 AND a.DeleteDate IS NULL
		<choose>
			<when test="companyCode != null and companyCode != ''">
		 AND a.CompanyCode = #{companyCode}
		  	</when>
		  	<otherwise>
		  		<if test="domainId != null and domainId != ''">
		  	AND c.DomainID = #{domainId}
		  		</if>		
		  	</otherwise>
		 </choose>
	   	<if test='schTxt != null and schTxt !=""'>
			<choose>
				<when test='selType == "subject"'>
					AND a.Subject LIKE '%' || REGEXP_REPLACE(#{schTxt},q'(%|\'|\")', '\"') || '%'
            	</when>
				<when test='selType == "registerName"'>
					AND Fn_BaseGetDictionary_S(#{lang},  b.MultiDisplayName) LIKE '%' || #{schTxt} || '%'
            	</when>
			</choose>
		</if>
		<if test='state != null and state !=""'>
			AND a.State = #{state}
		</if>
	</select>	
		
	<select id="selectSurveyReportList" parameterType="cmap" resultType="cmap">
		SELECT A.ItemNO AS "ItemNO"
			  , A.AnswerItem as "AnswerItem"
			 , A.RespondentCode AS "RespondentCode"
			 , NVL(A.Weighting,'0') AS "Weighting"
			 , A.QuestionID AS "QuestionID"
			 , A.QuestionNO AS "QuestionNO"
			 , A.QuestionType AS "QuestionType"
			 , A.QuestionTypeNm AS "QuestionTypeNm"
			 , A.JobLevelCode AS "JobLevelCode"
			 , A.JobLevelName AS "JobLevelName"
			 , A.DeptCode AS "DeptCode"
			 , A.DeptName AS "DeptName"
			 , A.DisplayName AS "DisplayName"
			 , A.CompanyName  AS "CompanyName"
		FROM (SELECT A.ItemNO
				  , B.AnswerItem 
				  , B.RespondentCode
				  , DECODE(B.Weighting, NULL, 0, B.Weighting) AS Weighting
				  , C.QuestionID
				  , C.QuestionNO
				  , C.QuestionType
				  , (CASE WHEN C.QuestionType = 'S' THEN '객관식'
				  	     WHEN C.QuestionType = 'D' THEN '주관식'
				  		  WHEN C.QuestionType = 'M' THEN '복수응답'
				  	     WHEN C.QuestionType = 'N' THEN '순위선택' END ) AS QuestionTypeNm
				  , D.JobLevelCode
				  , D.JobLevelName
				  , D.DeptCode
				  , D.DeptName
				  , F.DisplayName
				  , D.CompanyName
			 FROM survey_question_item A
			 LEFT JOIN survey_question_item_answer B  ON A.ItemID = B.ItemID
			 LEFT JOIN survey_question C ON A.QuestionID = C.QuestionID
			 LEFT JOIN sys_object_user_basegroup D  ON B.RespondentCode = D.UserCode AND D.JobType = 'Origin'
			 LEFT JOIN sys_object_user F  ON B.RespondentCode = F.UserCode
			WHERE A.SurveyID = #{surveyID}
			AND B.RespondentCode IS NOT NULL
			AND F.IsUse = 'Y' AND F.IsDisplay = 'Y' 
			--GROUP BY C.QuestionNO, A.ItemNO, B.RespondentCode
	  ) A 
	</select>
	
	<insert id="insertSurveyRespondentTarget" parameterType="cmap">	
		INSERT   INTO survey_target_respondent (SurveyID, TargetCode, TargetType, TargetDeptCode, RegistDate )
	    VALUES (#{surveyId}, #{targetCode}, #{targetType}, #{targetDeptCode}, TO_DATE(#{localCurrentDate}, 'YYYY-MM-DD HH24:MI:SS')  )
	</insert>
	
	<insert id="insertsurveyresultviewTarget" parameterType="cmap">	
		INSERT  INTO survey_target_resultview (SurveyID, TargetCode, TargetType, TargetDeptCode, RegistDate)
	    VALUES (#{surveyId}, #{targetCode}, #{targetType}, #{targetDeptCode}, TO_DATE(#{localCurrentDate}, 'YYYY-MM-DD HH24:MI:SS') )
	</insert>
	
	<insert id="insertSurveyRespondentTargetCmnty" parameterType="cmap">
	    INSERT INTO survey_target_respondent(SurveyID, TargetCode, TargetType, TargetDeptCode, RegistDate )
		SELECT 	#{surveyId}
				,UR_CODE
				,'UR'
				,null
				,TO_DATE(#{localCurrentDate}, 'YYYY-MM-DD HH24:MI:SS')
		FROM COMMUNITY_MEMBER
		WHERE CU_ID = #{communityID}
		AND MemberStatus = 'R'	    
	</insert>
	
	<insert id="insertsurveyresultviewTargetCmnty" parameterType="cmap">	
		INSERT INTO survey_target_resultview (SurveyID, TargetCode, TargetType, TargetDeptCode, RegistDate)
	    SELECT 	#{surveyId}
				,UR_CODE
				,'UR'
				,null
				,TO_DATE(#{localCurrentDate}, 'YYYY-MM-DD HH24:MI:SS')
		FROM COMMUNITY_MEMBER
		WHERE CU_ID = #{communityID}
		AND MemberStatus = 'R'
	</insert>
	
	<update id="updateSurveyTargetRead" parameterType="cmap">
		MERGE INTO survey_target_read G 
		USING dual ON (G.SurveyID = #{surveyId} AND G.TargetCode = #{userId})
		WHEN MATCHED THEN 
	   		UPDATE SET G.ModifyDate = TO_DATE(#{localCurrentDate}, 'YYYY-MM-DD HH24:MI:SS')
	   	WHEN NOT MATCHED THEN 
			INSERT (G.SurveyID, G.TargetCode, G.ModifyDate)
			VALUES (#{surveyId}, #{userId}, TO_DATE(#{localCurrentDate}, 'YYYY-MM-DD HH24:MI:SS'))
	</update>
	
	<update id="updateSurveyQuestionItemFileId" parameterType="cmap">
		UPDATE survey_question_item
		SET FileID = #{fileId}
		WHERE ItemID = #{itemId}
	</update>
	
	<select id="selectSurveyData" parameterType="cmap" resultMap="clobResult">
	   SELECT   A.SurveyID AS "SurveyID"
	          , A.CompanyCode AS "CompanyCode"
	          , A.Subject AS "Subject"
	          , A.SubjectHtml AS "SubjectHtml"
	          , A.Description AS "Description"
	          , A.IsDescriptionUseEditor AS "IsDescriptionUseEditor"
	          , A.SurveyStartDate AS "SurveyStartDate"
	          , A.SurveyEndDate AS "SurveyEndDate"
	          , A.ResultViewStartDate AS "ResultViewStartDate"
	          , A.ResultViewEndDate  AS "ResultViewEndDate"
	          , A.QuestionCount AS "QuestionCount"
	          , A.RespondentCount  AS "RespondentCount"
	          , A.TargetRespondentType  AS "TargetRespondentType"
	          , A.TargetResultViewType  AS "TargetResultViewType"
	          , A.SurveyType  AS "SurveyType"
	          , A.State  AS "State"
	          , A.IsImportance  AS "IsImportance"
	          , A.IsAnonymouse  AS "IsAnonymouse"
	          , A.IsGrouping  AS "IsGrouping"
	          , A.IsSendTodo  AS "IsSendTodo"
	          , A.IsSendMail  AS "IsSendMail"
	          , A.RegisterCode  AS "RegisterCode"
	          , A.RegisterDeptCode AS "RegisterDeptCode"
	          , TO_CHAR(A.RegistDate,'YYYY-MM-DD') AS "RegistDate"
	          , A.ModifyDate AS "ModifyDate"
	          , A.DeleteDate AS "DeleteDate"
	          , A.ReviewerCode AS "ReviewerCode"
	          , A.ReviewerDeptCode  AS "ReviewerDeptCode"
	          , A.ApproverCode  AS "ApproverCode"
	          , A.ApproverDeptCode  AS "ApproverDeptCode"
	          , A.ReviewerDate AS "ReviewerDate"
	          , A.ApproverDate AS "ApproverDate"
	          , A.CommunityID AS "CommunityID"
		      ,(SELECT COUNT( G.SurveyID) FROM survey_respondent G  LEFT JOIN sys_object_user U ON G.RESPONDENTCODE = U.UserCode  WHERE G.SurveyID =  #{surveyID}   AND U.IsUse = 'Y' AND U.IsDisplay = 'Y' ) AS "respondentCnt"
			  , D.DomainID
		FROM survey A
		LEFT OUTER JOIN sys_object_domain D ON D.DomainCode = A.CompanyCode
		WHERE A.SurveyID =  #{surveyID}
	</select>
	
	
	<select id="selectArrSurveyData" parameterType="cmap" resultType="cmap">
	    SELECT S.surveyID AS "surveyID"
	         , S.subject AS "subject"
	         , S.state AS "state"
	         , S.registerCode AS "registerCode"
	         , S.reviewerCode AS "reviewerCode"
	         , S.approverCode AS "approverCode"
	         , D.DomainID AS "domainID"
		FROM survey S
		LEFT OUTER JOIN sys_object_domain D ON D.DomainCode = S.CompanyCode
		WHERE S.SurveyID IN 
	   <foreach collection="surveyIdArr" item="surveyID" open="(" close=")" separator=",">
            #{surveyID}
       </foreach>
	</select>
	
    <!-- 엑셀저장 : 설문자료 저장 -->	
	<select id="selectSurveyRawDataExcelList" parameterType="cmap" resultType="cmap">
		SELECT	  R.SurveyID AS "SurveyID"
				, R.QuestionID AS "QuestionID"
				, R.RespondentCode AS "RespondentCode"
				, R.RespondentDeptCode AS "RespondentDeptCode"
				, R.Question  AS "Question"
				, R.QuestionType AS "QuestionType"
				, R.AnswerItemID AS "AnswerItemID"
				, R.AnswerItem AS "AnswerItem"
				, U.DisplayName AS "RespondentName"
				, D.DeptName AS "RespondentDeptName"
		FROM (
			SELECT 
				DISTINCT	A.RespondentCode,
		   					A.SurveyID, 
							A.QuestionID,
							A.RespondentDeptCode,
							Q.Question,
							Q.QuestionType,
							(SELECT LISTAGG(ItemID,',')WITHIN GROUP(ORDER BY ItemID) FROM survey_question_item_answer WHERE SurveyID = A.SurveyID AND QuestionID = A.QuestionID AND RespondentCode = A.RespondentCode GROUP BY QuestionID) AS AnswerItemID, 
							DECODE (A.EtcOpinion, ''
								 , (CASE Q.QuestionType 
								 		 WHEN 'M' THEN (SELECT LISTAGG(AnswerItem,',')WITHIN GROUP(ORDER BY AnswerItem) FROM survey_question_item_answer WHERE SurveyID = A.SurveyID AND QuestionID = A.QuestionID AND RespondentCode = A.RespondentCode GROUP BY QuestionID)
								 		 WHEN 'N' THEN (SELECT LISTAGG(AnswerItem,',')WITHIN GROUP(ORDER BY Weighting) FROM survey_question_item_answer WHERE SurveyID = A.SurveyID AND QuestionID = A.QuestionID AND RespondentCode = A.RespondentCode GROUP BY QuestionID)
										 ELSE A.AnswerItem END)
								 , '기타의견: '|| (SELECT LISTAGG(A.EtcOpinion,',')WITHIN GROUP(ORDER BY A.EtcOpinion) FROM dual)
							) AS AnswerItem
				FROM survey_question Q
				LEFT JOIN survey_question_item_answer A ON A.SurveyID = Q.SurveyID AND A.QuestionID = Q.QuestionID
				WHERE A.SurveyID = #{surveyID}
				ORDER BY A.RespondentCode, A.SurveyID, A.QuestionID
		) R
		LEFT JOIN sys_object_user U ON R.RespondentCode = U.UserCode
		LEFT JOIN (SELECT * FROM sys_object_user_basegroup WHERE JobType = 'Origin') D ON U.UserCode = D.UserCode AND D.DeptCode = R.RespondentDeptCode
	</select>
	
	<!-- 엑셀저장 : 설문통계 저장 -->
	<select id="selectSurveyStatisticsExcelList" parameterType="cmap" resultType="cmap">
		<![CDATA[
			SELECT R.SurveyID AS "SurveyID"
			    ,  R.QuestionID AS "QuestionID"
			    ,  R.QuestionType AS "QuestionType"
			    ,  R.Weighting as "Weighting"
			    ,  R.AnswerItemID AS "AnswerItemID"
			    ,  R.AnswerItem AS "AnswerItem"
			    ,  R.AnswerCnt AS "AnswerCnt"
			    ,  R.TotalAnswerCnt AS "TotalAnswerCnt"
			    ,  R.TotalUserCnt AS "TotalUserCnt"
			    , (CASE WHEN R.QuestionType in ('S','N') THEN
							
			          (case when R.AnswerCnt > 0 then TRUNC(100 * (R.AnswerCnt / R.TotalUserCnt),1) else 0 end ) || '%'
			          
							WHEN R.QuestionType = 'M' THEN
			        
			         (case when R.AnswerCnt > 0 then TRUNC(100 * (R.AnswerCnt / R.TotalAnswerCnt),1) else 0 end ) || '%'
								
							WHEN R.QuestionType = 'D' THEN
								R.AnswerItem
			        ELSE
								''
							END) AS "AnswerResult"
			FROM (
			      SELECT 
			            	A.SurveyID 
			              , A.QuestionID 
			              , Q.QuestionType
						  ,	A.Weighting
			              , A.ItemID AS AnswerItemID 
			              , DECODE (COUNT(A.EtcOpinion), 0
  										, A.AnswerItem
                                        , '기타의견: '|| (SELECT LISTAGG(AA.EtcOpinion,',') WITHIN GROUP(ORDER BY AA.EtcOpinion) FROM survey_question_item_answer AA
                            							WHERE AA.SurveyID = A.SurveyID and AA.QuestionID = A.QuestionID and AA.ItemID = A.ItemID)
                                    )AS AnswerItem
						  ,	COUNT(A.ItemId) AS AnswerCnt
						  , (SELECT COUNT(AnswerID) 
                             FROM survey_question_item_answer C 
                             WHERE C.SurveyID = A.SurveyID and c.QuestionID = a.QuestionID) AS TotalAnswerCnt
                           ,(
			                SELECT COUNT(*)
			                FROM (
			                  SELECT SurveyID, RespondentCode
			                  FROM survey_question_item_answer
			                  GROUP BY SurveyId, RespondentCode
			                ) S2
			                WHERE S2.SurveyId = A.SurveyID
			              ) AS TotalUserCnt
			            FROM 
			              survey_question_item_answer A, 
			              survey_question Q
			            WHERE A.SurveyID = Q.SurveyID and A.QuestionID = Q.QuestionID and A.SurveyID =  #{surveyID}
			            GROUP BY A.SurveyID, A.QuestionID, A.Weighting, A.ItemID, Q.QuestionType, AnswerItem
			      ) R
			      ORDER BY R.QuestionID, R.Weighting, R.AnswerItemID
		]]>
	</select>

	<!-- 미참여자 코드 조회  -->
	<select id="selectAttendanceCodes" parameterType="cmap"  resultType="cmap">
		SELECT TargetCode as "TargetCode"
		FROM
		(
		SELECT A.SurveyID , A.TargetCode
		FROM survey_target_respondent A
		WHERE A.SurveyID = #{surveyID} AND A.TargetType = 'UR'

		UNION

		SELECT A.SurveyID, B.UserCode
		FROM survey_target_respondent A
		INNER JOIN ( SELECT A.UserCode, B.GroupCode, C.GroupPath FROM sys_object_user_basegroup A
		LEFT JOIN sys_object_group_member B ON A.UserCode = B.UserCode AND B.IsUse= 'Y'
		LEFT JOIN sys_object_group C ON B.GroupCode = C.GroupCode AND C.IsDisplay = 'Y' AND C.IsUse = 'Y') B
		ON (A.TargetCode = B.GroupCode OR ';'||B.GroupPath LIKE '%;'||A.TargetCode||';%' )	 AND A.TargetType = 'GR'
		WHERE A.SurveyID = #{surveyID}
		) A
		INNER JOIN sys_object_user B ON A.TargetCode = B.UserCode AND B.IsUse = 'Y' AND B.IsDisplay = 'Y'
		INNER JOIN sys_object_user_basegroup C ON  A.TargetCode = C.UserCode AND C.JobType = 'Origin'
		<if test="targetType != null and targetType == 'notAttendance'.toString()">
			LEFT JOIN survey_respondent AS D ON A.SurveyID = D.SurveyID  AND A.TargetCode = D.RespondentCode
			WHERE D.RegistDate IS NULL
		</if>
	</select>
	
	<select id="getSurveyTargetViewRead" parameterType="cmap"  resultType="String">
		SELECT Fn_SurveyTargetResultView_R(#{surveyId}, #{userId}) AS IsTargetResultView from dual
	</select>
	
	<insert id="insertCollabSurvey" parameterType="cmap">
		MERGE INTO collab_survey
		USING DUAL
			ON (SurveyID = #{objectID} )
		WHEN MATCHED THEN
		UPDATE SET
			  PrjSeq		= #{prjSeq}
			, PrjType		= #{prjType}
			, PrjTxt		= #{prjTxt}
			, SectionSeq	= #{sectionSeq}
		WHEN NOT MATCHED THEN
			INSERT (SurveyID, PrjSeq, PrjType, PrjTxt, SectionSeq)
			VALUES (#{objectID},#{prjSeq}, #{prjType}, #{prjTxt}, #{sectionSeq} )
	</insert>
	
	<select id="selectCollabSurvey" parameterType="cmap" resultType="cmap">
		SELECT	  SurveyID AS "surveyID"
				, PrjSeq AS "prjSeq"
				, PrjType AS "prjType"
				, PrjTxt AS "prjTxt"
				, SectionSeq AS "sectionSeq"
		FROM collab_survey
		WHERE SurveyID = #{surveyID}
	</select>
	
	<select id="selectCollabSurveyCnt" parameterType="cmap" resultType="java.lang.Long">
		SELECT COUNT(*)
		FROM collab_survey
		WHERE SurveyID IN
		<foreach collection="surveyIdArr" item="surveyId" open="(" close=")" separator=",">
			#{surveyId}
		</foreach>
	</select>
	
	<delete id="deleteCollabSurvey" parameterType="cmap">
		DELETE FROM collab_survey 
		WHERE SurveyID IN
		<foreach collection="surveyIdArr" item="surveyId" open="(" close=")" separator=",">
			#{surveyId}
		</foreach>
	</delete>
</mapper>
