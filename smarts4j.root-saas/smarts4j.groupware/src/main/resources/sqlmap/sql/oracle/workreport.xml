<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="groupware.workreport">
	
 	<select id="selectSetWorkTimeList" parameterType="cmap" resultType="cmap">
 		/* queryID : groupware.workreport.selectSetWorkTimeList */
		<include refid="oracle.include.pagingHeader"></include>
 	    SELECT year AS "year"
			, month AS "month"
			, workday AS "workday"
			, registdate AS "registdate"
			, modifydate AS "modifydate"
		  FROM WORKREPORT_WORKDAY		
		<where>
		    <if test="year != null and year != ''">
		        year = #{year}
		    </if>
		</where>
		
		<trim prefix="ORDER BY">
			<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection != ''">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("month")'>"month"</when>
					<when test='sortColumn.equalsIgnoreCase("workday")'>"workday"</when>
					<when test='sortColumn.equalsIgnoreCase("registdate")'>"registdate"</when>
					<when test='sortColumn.equalsIgnoreCase("modifydate")'>"modifydate"</when>
					<otherwise>"year"</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
				<include refid="oracle.include.listOrderBy"/>
			</if>
		</trim>
		<include refid="oracle.include.pagingFooter"></include>
	</select>
	
 	<select id="selectSetWorkTimeCnt" parameterType="cmap" resultType="java.lang.Long">
 		/* queryID : groupware.workreport.selectSetWorkTimeCnt */
		SELECT COUNT(*) AS "CNT" 
		  FROM WORKREPORT_WORKDAY
		<where>
		    <if test="year != null and year != ''">
		        year = #{year}
		    </if>
		</where>
	</select>
	
 	<select id="cntWorkTimeSetting" parameterType="cmap" resultType="cmap">
 	    SELECT COUNT(*) AS "CNT"
 	      FROM WORKREPORT_WORKDAY
 	     WHERE YEAR = #{year} AND MONTH = #{month}
 	</select>
 	
 	<insert id="insertWorkTimeSetting" parameterType="cmap">
 		INSERT INTO WORKREPORT_WORKDAY (YEAR, MONTH, WORKDAY, REGISTDATE)
 		VALUES (#{year}, #{month}, #{workDay}, SYSDATE)    
 	</insert>
 	
 	<update id="updateWorkTimeSetting" parameterType="cmap">
 	    UPDATE WORKREPORT_WORKDAY
 	       SET WORKDAY = #{workDay},
 	       	   MODIFYDATE = TO_DATE(TO_CHAR(SYSTIMESTAMP, 'YYYY-MM-DD HH24:MI:SS'),'YYYY-MM-DD HH24:MI:SS')
 	     WHERE YEAR = #{year} AND MONTH = #{month}    
 	</update>
 	
 	<delete id="deleteWorkTimeSetting" parameterType="cmap">
 		DELETE FROM WORKREPORT_WORKDAY 
 		 WHERE CONCAT(YEAR, MONTH) IN
 		 <foreach collection="checked" item="item" index="index" separator="," open="(" close=")">
		    #{item}
		</foreach>    
 	</delete>
 	
 	
 	
 	<select id="duplicateCate" parameterType="cmap" resultType="java.lang.Long">
 	    SELECT COUNT(*) AS "CNT"
 	      FROM 
 	     <choose>
 	         <when test="cate == 'type'">
 	             WORKREPORT_JOB_CATE_TYPE
 	         </when>
 	         <otherwise>
 	             WORKREPORT_JOB_CATE_DIVISION
 	         </otherwise>
 	     </choose>
 	     WHERE 
 	     <choose>
 	         <when test="cate == 'type'">
 	             typeCode = #{code}
 	         </when>
 	         <otherwise>
 	             divisionCode = #{code}
 	         </otherwise>
 	     </choose>
 	</select>
 	
 	<insert id="insertCate" parameterType="cmap">
 	    INSERT INTO 
 	    <choose>
 	         <when test="cate == 'type'">
 	             WORKREPORT_JOB_CATE_TYPE (typeCode, displayName)
 	         </when>
 	         <otherwise>
 	             WORKREPORT_JOB_CATE_DIVISION (divisionCode, displayName)
 	         </otherwise>
 	     </choose>
 	     VALUES (#{code}, #{name})
 	</insert>
 	
 	
 	<select id="selectCateTypeList" parameterType="cmap" resultType="cmap">
 	    <include refid="oracle.include.pagingHeader" />
 	    SELECT TypeCode AS "code"
 	    	, displayName AS "name"
 	    	, 0 AS "refcnt"
 	      FROM WORKREPORT_JOB_CATE_TYPE
 	     ORDER BY displayName ASC
 	    <include refid="oracle.include.pagingFooter" />
 	</select>
 	
 	<select id="selectCateDivList" parameterType="cmap" resultType="cmap">
		<include refid="oracle.include.pagingHeader" />
 	    SELECT DivisionCode AS "code"
 	   		, displayName AS "name"
 	   		, 0 AS "refcnt"
 	  	FROM WORKREPORT_JOB_CATE_DIVISION
 	    ORDER BY displayName ASC
 	    <include refid="oracle.include.pagingFooter" />
 	</select>
 	
 	<select id="selectCateTypeCnt" parameterType="cmap" resultType="java.lang.Long">
 	    SELECT COUNT(*)
 	      FROM WORKREPORT_JOB_CATE_TYPE
 	</select>
 	
 	<select id="selectCateDivCnt" parameterType="cmap" resultType="java.lang.Long">
 	   SELECT COUNT(*)
 	      FROM WORKREPORT_JOB_CATE_DIVISION
 	</select>
 	
 	<delete id="deleteCate" parameterType="cmap">
 	    DELETE FROM 
 	    <choose>
 	         <when test="cate == 'type'">
 	             WORKREPORT_JOB_CATE_TYPE WHERE typeCode = #{code}
 	         </when>
 	         <otherwise>
 	             WORKREPORT_JOB_CATE_DIVISION WHERE divisionCode = #{code}
 	         </otherwise>
 	     </choose>
 	</delete>
 	
 	<insert id="insertDivisionDefaultType" parameterType="cmap">
 	    INSERT INTO WORKREPORT_JOB_CATE (DivisionCode, TypeCode)
 	    VALUES 
 	    <foreach collection="newcode" item="item" separator=",">
 	        (#{seldiv}, #{item})
 	    </foreach>
 	</insert>
 	
 	<delete id="deleteDivisionDefaultType" parameterType="cmap">
 	    DELETE FROM WORKREPORT_JOB_CATE 
 	     WHERE DivisionCode = #{seldiv} AND TypeCode IN 
 	     <foreach collection="delcode" item="item" separator="," open="(" close=")">
 	         #{item}
 	     </foreach>
 	</delete>
 	
 	<select id="selectCateTypeSelList" parameterType="cmap" resultType="cmap">
 	    SELECT A.TypeCode AS "code"
 	    	, B.displayName AS "name"
 	      FROM WORKREPORT_JOB_CATE A
 	    INNER JOIN WORKREPORT_JOB_CATE_TYPE B
 	        ON A.TypeCode = B.TypeCode
 	    WHERE A.DivisionCode = #{code}
 	    ORDER BY B.displayName ASC
 	</select>
 	
 	<insert id="insertWork" parameterType="cmap">
 	    INSERT INTO WORKREPORT_JOB (JobName, JobDivision, IsUse, ManagerCode, CreatorCode, CreateDate, StartDate,EndDate)
 	    VALUES (#{jobName}, #{jobDivision}, #{useYN}, #{managerCode}, #{creatorCode}, SYSDATE , #{startDate}, #{endDate})
 	</insert>
 	
 	<select id="selectWorkJobCnt" parameterType="cmap" resultType="java.lang.Long">
 		/* queryID : groupware.workreport.selectWorkJobCnt */
    	SELECT COUNT(*) CNT FROM WORKREPORT_JOB A
    	INNER JOIN WORKREPORT_JOB_CATE_DIVISION C ON A.JobDivision = C.DivisionCode
    	<trim prefix="WHERE" prefixOverrides="AND |OR ">
	        <if test="division != null and division != ''">
	            A.JobDivision = #{division}
	        </if>
	        <if test="useyn != null and useyn != ''">
	            AND A.IsUse = #{useyn}
	        </if>
	        <if test="searchtext != null and searchtext != ''">
	            AND A.JobName like '%'||#{searchtext}||'%'
	        </if>
    	</trim>
 	</select>
 	
 	<select id="selectWorkJobList" parameterType="cmap" resultType="cmap">
 		/* queryID : groupware.workreport.selectWorkJobList */
 	    <include refid="oracle.include.pagingHeader" />
 	    SELECT B.JobID AS "JobID"
 	    		, B.JobName AS "JobName"
 	    		, B.JobDivision AS "JobDivision"
	 	    	, B.ManagerCode AS "ManagerCode"
	 	    	, B.IsUse AS "IsUse"
	 	    	, B.CreateDate AS "CreateDate"
	 	    	, B.CreatorCode AS "CreatorCode"
	 	    	, B.ManagerName AS "ManagerName"
	 	    	, B.JobDivisionName AS "JobDivisionName"
 	    FROM (
	 	    SELECT A.JobID AS JobID
	 	    	, A.JobName AS JobName
	 	    	, A.JobDivision AS JobDivision
	 	    	, A.ManagerCode AS ManagerCode
	 	    	, A.IsUse AS IsUse
	 	    	, A.CreateDate AS CreateDate
	 	    	, A.CreatorCode AS CreatorCode
	 	    	, NVL(B.DisplayName, '') AS ManagerName
	 	    	, C.DisplayName AS JobDivisionName
	 	      FROM WORKREPORT_JOB A
	 	    LEFT OUTER JOIN sys_object_user B ON A.ManagerCode = B.UserCode
	 	    INNER JOIN WORKREPORT_JOB_CATE_DIVISION C ON A.JobDivision = C.DivisionCode
	 	    <trim prefix="WHERE" prefixOverrides="AND |OR ">
	 	        <if test="division != null and division != ''">
	 	            A.JobDivision = #{division}
	 	        </if>
	 	        <if test="useyn != null and useyn != ''">
	 	            AND A.IsUse = #{useyn}
	 	        </if>
	 	        <if test="searchtext != null and searchtext != ''">
	 	            AND A.JobName like '%'||#{searchtext}||'%'
	 	        </if>
	 	    </trim>
	 	    ) B
	 	    <trim prefix="ORDER BY">
				<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection != ''">
					<choose>
						<when test='sortColumn.equalsIgnoreCase("JobDivisionName")'>"JobDivisionName"</when>
						<when test='sortColumn.equalsIgnoreCase("ManagerName")'>"ManagerName"</when>
						<when test='sortColumn.equalsIgnoreCase("CreateDate")'>"CreateDate"</when>
						<when test='sortColumn.equalsIgnoreCase("IsUse")'>"IsUse"</when>
						<otherwise>"JobName"</otherwise>
					</choose>
					<choose>
						<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
						<otherwise> DESC</otherwise>
					</choose>
					<include refid="oracle.include.listOrderBy"/>
				</if>   
			</trim>
		<include refid="oracle.include.pagingFooter" />
 	</select>
 	
 	<update id="updateWorkUseYn" parameterType="cmap">
 	    UPDATE WORKREPORT_JOB
 	       SET IsUse = #{useyn}
 	     WHERE JobID = #{jobid} 
 	</update>
 	
 	<delete id="deleteWorkJob" parameterType="cmap">
 	    DELETE FROM WORKREPORT_JOB
 	     WHERE JobID IN 
 	     <foreach collection="deleteids" item="item" open="(" separator="," close=")">
 	         #{item}
 	     </foreach>
 	</delete>
 	
 	<select id="selectOneWorkJob" parameterType="cmap" resultType="cmap">
 		 SELECT A.JobID AS "JobID"
 		 	, A.JobName AS "JobName"
 		 	, A.JobDivision AS "JobDivision"
 		 	, A.ManagerCode AS "ManagerCode"
 		 	, A.IsUse AS "IsUse"
 		 	, A.CreateDate AS "CreateDate"
 		 	, A.CreatorCode AS "CreatorCode"
 		 	, NVL(B.DisplayName, '') AS "ManagerName"
 		 	, C.DisplayName AS "JobDivisionName"
 		 	, A.StartDate AS "StartDate"
 		 	, A.EndDate AS "EndDate"
 	      FROM WORKREPORT_JOB AS A
 	    LEFT OUTER JOIN sys_object_user AS B ON A.ManagerCode = B.UserCode
 	    INNER JOIN WORKREPORT_JOB_CATE_DIVISION AS C ON A.JobDivision = C.DivisionCode
 	    WHERE JobID = #{jobid}
 	</select>
 	
 	<update id="updateWork" parameterType="cmap">
 	    UPDATE WORKREPORT_JOB
 	       SET JobName = #{jobName},
 	       	   JobDivision = #{jobDivision},
 	       	   ManagerCode = #{managerCode},
 	       	   IsUse = #{useYN},
 	       	   StartDate = #{startDate},
 	       	   EndDate = #{endDate}
 	     WHERE JobID = #{jobId}
 	</update>
 	
 	<select id="duplicateOSGrade" parameterType="cmap" resultType="java.lang.Long">
 	    SELECT COUNT(*) 
 	      FROM WORKREPORT_GRADE 
 	     WHERE ApplyYear = #{year} AND GradeKind = #{grade} AND MemberType = #{memberType}
 	</select>
 	
 	<insert id="insertOSGrade" parameterType="cmap">
 	    INSERT INTO WORKREPORT_GRADE (ApplyYear, MemberType, GradeKind, MonthPrice, DayPrice, MonthPriceEx, GradeSeq)
 	    VALUES (#{year}, #{memberType}, #{grade}, #{mmAmount}, #{mdAmount}, #{mmExAmount}, #{seq})
 	</insert>
 	
 	<select id="countOSGrade" parameterType="cmap" resultType="java.lang.Long">
 	    SELECT COUNT(*)
 	      FROM WORKREPORT_GRADE
 	     WHERE ApplyYear = #{year} AND MemberType = 'O' AND GradeKind IN ('S', 'H', 'M', 'N')
	</select>
	
 	<select id="listOSGrade" parameterType="cmap" resultType="cmap">
 	    SELECT * 
 	      FROM WORKREPORT_GRADE
 	     WHERE ApplyYear = #{year} AND MemberType = 'O' AND GradeKind IN ('S', 'H', 'M', 'N')
 	     ORDER BY GradeSeq ASC
 	</select>
 	
 	<delete id="deleteOSGrade" parameterType="cmap">
 	    DELETE FROM WORKREPORT_GRADE
 	     WHERE ApplyYear = #{year} AND MemberType = 'O'
 	</delete>
 	
 	<update id="updateOSGrade" parameterType="cmap">
 	    UPDATE WORKREPORT_GRADE
 	       SET MonthPrice = #{MonthPrice}, 
 	           MonthPriceEx = #{MonthPriceEx}
 	     WHERE ApplyYear = #{ApplyYear} AND MemberType = 'O' AND GradeKind = #{GradeKind}
 	</update>
 	
 	<insert id="reuseOSGrade" parameterType="cmap">
 	    INSERT INTO WORKREPORT_GRADE (ApplyYear, MemberType, GradeKind, MonthPrice, DayPrice, MonthPriceEx, GradeSeq)
 	    SELECT #{ApplyYear}, G.MemberType, G.GradeKind, G.MonthPrice, G.DayPrice, G.MonthPriceEx, G.GradeSeq
 	      FROM WORKREPORT_GRADE AS G
 	     WHERE ApplyYear = (#{ApplyYear} - 1) AND MemberType = 'O'
 	        ON DUPLICATE KEY UPDATE MonthPrice = G.MonthPrice, MonthPriceEx = G.MonthPriceEx
 	</insert>
 	
 	
 	<select id="checkcalendar" parameterType="cmap" resultType="java.lang.Long">
 	    SELECT CASE COUNT(*) WHEN 0 THEN 0 ELSE max(CalID) END AS CalID
 	      FROM WORKREPORT_CALENDAR
 	     WHERE StartDate = #{StartDate}
 	</select>
 	
 	<select id="nextweekofmonth" parameterType="cmap" resultType="java.lang.Long">
 	    SELECT NVL(MAX(WeekOfMonth), 0) + 1 FROM WORKREPORT_CALENDAR WHERE Year = #{Year} AND Month = #{Month}
 	</select>
 	
 	<insert id="insertcalendar" parameterType="cmap" useGeneratedKeys="true">
 	    INSERT INTO WORKREPORT_CALENDAR (Year, Month, Day, WeekOfMonth, StartDate, EndDate)
 	    VALUES (#{Year}, #{Month}, #{Day}, #{WeekOfMonth}, #{StartDate}, #{EndDate})
 	    
 	    <selectKey keyProperty="CalID" resultType="Integer" order="AFTER">
 	        SELECT WORKREPORT_CALENDAR_SEQ.CURRVAL FROM dual
 	    </selectKey>
 	</insert>
 	
 	<select id="selectcalendar" parameterType="cmap" resultType="cmap">
 	    SELECT * 
 	      FROM WORKREPORT_CALENDAR
 	     WHERE CalID = #{calID}
 	</select>
 	
 	<select id="selectcalendarbeforeandnext" parameterType="cmap" resultType="cmap">
 	   <![CDATA[
 	    SELECT NVL((
			 SELECT CalID AS "CalID"
			  FROM WORKREPORT_CALENDAR 
			 WHERE StartDate < (SELECT StartDate FROM WORKREPORT_CALENDAR WHERE CalID = #{calID})
			 ORDER BY StartDate DESC
			 LIMIT 0, 1), 0) AS `BEFORE`, 
			 NVL((SELECT CalID AS "CalID"
			  FROM WORKREPORT_CALENDAR 
			 WHERE StartDate > (SELECT StartDate FROM WORKREPORT_CALENDAR WHERE CalID = #{calID})
			 ORDER BY StartDate ASC
			 LIMIT 0, 1), 0) AS `NEXT`
		]]>
 	</select>
 	
 	<select id="selectcalendardate" parameterType="cmap" resultType="cmap">
 	    <![CDATA[
 	    	SELECT * FROM WORKREPORT_CALENDAR WHERE #{date} >= StartDate AND #{date} <= EndDate
		]]>
 	</select>
 	    
 	
 	<select id="getregulargrade" parameterType="cmap" resultType="cmap">
 	   <![CDATA[
 	   	   SELECT 'R' AS "MemberType"
 	   	   ,  #{JobPositionCode} AS "JobPositionCode", 
       CASE 
	    WHEN (#{JobPositionCode} > (   SELECT GroupCode FROM sys_object_group WHERE CompanyCode = #{DN_Code} AND GroupType='JobPosition' AND DisplayName = '대리')) 
		 	   THEN 'B'
	    WHEN (#{JobPositionCode} <= (   SELECT GroupCode FROM sys_object_group WHERE CompanyCode = #{DN_Code} AND GroupType='JobPosition' AND DisplayName = '대리')) AND
	   	   (#{JobPositionCode} > (   SELECT GroupCode FROM sys_object_group WHERE CompanyCode = #{DN_Code} AND GroupType='JobPosition' AND DisplayName = '과장')) 
		      THEN 'N'
		 WHEN (#{JobPositionCode} <= (SELECT GroupCode FROM sys_object_group WHERE CompanyCode = #{DN_Code} AND GroupType='JobPosition' AND DisplayName = '과장')) AND
	    	   (#{JobPositionCode} > (SELECT GroupCode FROM sys_object_group WHERE CompanyCode = #{DN_Code} AND GroupType='JobPosition' AND DisplayName = '차장')) 
		      THEN 'M'   
		 WHEN (#{JobPositionCode} <= (SELECT GroupCode FROM sys_object_group WHERE CompanyCode = #{DN_Code} AND GroupType='JobPosition' AND DisplayName = '차장')) AND
	   	   (#{JobPositionCode} > (SELECT GroupCode FROM sys_object_group WHERE CompanyCode = #{DN_Code} AND GroupType='JobPosition' AND DisplayName = '부장')) 
		      THEN 'H'
		 WHEN #{JobPositionCode} <= (SELECT GroupCode FROM sys_object_group WHERE CompanyCode = #{DN_Code} AND GroupType='JobPosition' AND DisplayName = '부장')
		      THEN 'S'
 	    ELSE 'N' END AS "GradeKind"
 	    FROM DUAL
 	    ]]>
 	</select>
 	
 	<select id="getoutsourcinggrade" parameterType="cmap" resultType="cmap">
 	    SELECT 'O' AS "MemberType", '' AS "JobPositionCode", GradeKind AS "GradeKind"
 	    FROM WORKREPORT_OUTSOURCING WHERE OUR_Code = #{userid}
 	</select>
 	
 	<insert id="insertWorkReport" parameterType="cmap" useGeneratedKeys="true">
 	    INSERT INTO WORKREPORT 
 	    	   (UR_Code, GR_Code, CalID, CreateDate, LastWeekPlan, NextWeekPlan, 
 	    	    MonDayReport, TuesDayReport, WedDayReport, ThuDayReport, FriDayReport,
 	    	    SatDayReport, SunDayReport, State, JobPositionCode, MemberType, GradeKind)
 	    VALUES (#{UR_Code}, #{GR_Code}, #{CalID}, SYSDATE, #{LastWeekPlan}, #{NextWeekPlan}, #{MonDayReport}, 
 	    		#{TuesDayReport}, #{WedDayReport}, #{ThuDayReport}, #{FriDayReport}, #{SatDayReport}, #{SunDayReport},
 	    		'W', #{JobPositionCode}, #{MemberType}, #{GradeKind})
 	    <selectKey keyProperty="WorkReportID" resultType="Integer" order="AFTER">
 	        SELECT WORKREPORT_SEQ FROM dual
 	    </selectKey>
 	</insert>
 	
 	<insert id="insertTimeCard" parameterType="cmap">
 	    INSERT INTO WORKREPORT_TIMECARD 
 	    	   (WorkReportID, WorkDate, JobID, TypeCode, Year, Month, Day, Hour)
 	    VALUES
 	    <foreach collection="list" item="item" separator=", ">
 	        (#{key}, #{item.workDate}, #{item.jobId}, #{item.jobType}, #{item.year}, #{item.month}, #{item.day}, #{item.hour})
 	    </foreach>
 	</insert>
 	
 	<select id="selectBaseReport" parameterType="cmap" resultType="cmap">
 	    SELECT A.*, NVL(B.DisplayName, C.Name) AS UR_Name 
		  FROM WORKREPORT A
		  LEFT OUTER JOIN sys_object_user B
			 ON A.UR_Code = B.UserCode 
		  LEFT OUTER JOIN WORKREPORT_OUTSOURCING C
		    ON A.UR_Code = C.OUR_Code 
 	     WHERE A.UR_Code = #{userCode} AND A.WorkReportID = #{workReportID} AND A.CalID = #{calID}
 	</select>
 	
 	<select id="selectTimeSheetReport" parameterType="cmap" resultType="cmap">
 	    SELECT A.*
 	    	, B.JobDivision AS "DivisionCode"
 	    	, B.JobName AS "JobName"
 	    	, NVL(C.displayName, '') AS "DivisionName"
 	    	, NVL(D.displayName, '') AS "TypeName" FROM (
			SELECT JobID
				, TypeCode
				, SUM(CASE WorkDate WHEN (SELECT TO_CHAR(TO_DATE(StartDate) + INTERVAL '0' DAY , 'YYYY-MM-DD')  FROM  WORKREPORT_CALENDAR WHERE CalID = #{calID}) THEN Hour ELSE 0 END) AS "FRI",
				 SUM(CASE  WorkDate WHEN (SELECT TO_CHAR(TO_DATE(StartDate) + INTERVAL '1' DAY , 'YYYY-MM-DD')  FROM  WORKREPORT_CALENDAR WHERE CalID = #{calID}) THEN Hour ELSE 0 END) AS "SAT",
				 SUM(CASE  WorkDate WHEN (SELECT TO_CHAR(TO_DATE(StartDate) + INTERVAL '2' DAY , 'YYYY-MM-DD')  FROM  WORKREPORT_CALENDAR WHERE CalID = #{calID}) THEN Hour ELSE 0 END) AS "SUN",
				 SUM(CASE  WorkDate WHEN (SELECT TO_CHAR(TO_DATE(StartDate) + INTERVAL '3' DAY , 'YYYY-MM-DD')  FROM  WORKREPORT_CALENDAR WHERE CalID = #{calID}) THEN Hour ELSE 0 END) AS "MON",
				 SUM(CASE  WorkDate WHEN (SELECT TO_CHAR(TO_DATE(StartDate) + INTERVAL '4' DAY , 'YYYY-MM-DD')  FROM  WORKREPORT_CALENDAR WHERE CalID = #{calID}) THEN Hour ELSE 0 END) AS "TUE",
				 SUM(CASE  WorkDate WHEN (SELECT TO_CHAR(TO_DATE(StartDate) + INTERVAL '5' DAY , 'YYYY-MM-DD')  FROM  WORKREPORT_CALENDAR WHERE CalID = #{calID}) THEN Hour ELSE 0 END) AS "WED",
				 SUM(CASE  WorkDate WHEN (SELECT TO_CHAR(TO_DATE(StartDate) + INTERVAL '6' DAY , 'YYYY-MM-DD')  FROM  WORKREPORT_CALENDAR WHERE CalID = #{calID}) THEN Hour ELSE 0 END) AS "THU",
				 SUM(Hour) AS "SUM"
			  FROM WORKREPORT_TIMECARD WHERE WorkReportID = #{workReportID} 
			 GROUP BY JobID, TypeCode) AS A
		 INNER JOIN WORKREPORT_JOB AS B
		    ON A.JobID = B.JobID
		  LEFT OUTER JOIN WORKREPORT_JOB_CATE_DIVISION AS C
		    ON B.JobDivision = C.DivisionCode
		  LEFT OUTER JOIN WORKREPORT_JOB_CATE_TYPE AS D
		    ON A.TypeCode = D.TypeCode
 	     ORDER BY A.JobID ASC, A.TypeCode ASC
 	</select>
 	
 	<select id="selectWorkReportID" parameterType="cmap" resultType="cmap">
 	    SELECT NVL(WorkReportID, 0) AS "WorkReportID"
 	    	, COUNT(*), NVL(State, 'W') AS "State",
 	    		NVL( (SELECT DisplayName FROM sys_object_user WHERE UserCode = #{userCode}), '' ) AS "UR_Name",
    	 		NVL( (SELECT JobPositionName FROM sys_object_user_basegroup WHERE UserCode = #{userCode} AND JobType = 'Origin'), '' ) AS "JobPositionName"
 	    FROM WORKREPORT 
 	    WHERE CalID = #{calID} AND UR_Code = #{userCode}
 	</select>
 	
 	<update id="updateWorkReport" parameterType="cmap">
 	    UPDATE WORKREPORT
 	       SET LastWeekPlan = #{LastWeekPlan},
 	           NextWeekPlan = #{NextWeekPlan},
 	           MonDayReport = #{MonDayReport},
 	           TuesDayReport = #{TuesDayReport},
 	           WedDayReport = #{WedDayReport},
 	           ThuDayReport = #{ThuDayReport},
 	           FriDayReport = #{FriDayReport},
 	           SatDayReport = #{SatDayReport},
 	           SunDayReport = #{SunDayReport}
 	     WHERE WorkReportID = #{WorkReportID} AND UR_Code = #{UR_Code}
 	</update>
 	
 	<update id="updateTimeCard" parameterType="cmap">
 	    MERGE INTO WORKREPORT_TIMECARD G 
		USING (
		    SELECT G.WorkReportID, G.WorkDate, G.JobID, G.TypeCode
		      FROM WORKREPORT_TIMECARD G
		     WHERE WorkReportID = #{item.workReportId}
		)E ON (G.WorkReportID = E.WorkReportID)
		WHEN MATCHED THEN 
		UPDATE SET G.WorkReportID = E.WorkReportID, G.WorkDate = E.WorkDate, G.JobID = E.JobID, G.TypeCode = E.TypeCode, , G.Year=E.Year, G.Month=E.Month, G.Day=E.Day, Hour = VALUES(Hour)
		WHEN NOT MATCHED THEN 
		INSERT (G.WorkReportID, G.WorkDate, G.JobID, G.TypeCode, G.Year, G.Month, G.Day, G.Hour)
		VALUES 
		<foreach collection="list" item="item" separator=", ">
 	        (#{item.workReportId}, #{item.workDate}, #{item.jobId}, #{item.jobType}, #{item.year}, #{item.month}, #{item.day}, #{item.hour})
 	    </foreach>
 	</update>
 	
 	<delete id="clearZeroHourData">
		DELETE FROM WORKREPORT_TIMECARD WHERE Hour = 0 AND WorkReportID = #{workReportID}
 	</delete>
 	
 	<delete id="deleteTimeCard" parameterType="cmap">
 	    DELETE FROM WORKREPORT_TIMECARD
 	     WHERE WorkReportID = #{key}
 	       AND (JobID, TypeCode) NOT IN 
 	     <foreach collection="list" item="item" separator="," open=" (" close=")">
 	        (#{item.jobId}, #{item.jobType})
 	    </foreach>
 	</delete>
 	
 	<select id="selectManageUsers" parameterType="cmap" resultType="cmap">
 	   <![CDATA[
 	   SELECT * 
	     FROM WORKREPORT_OUTSOURCING 
		WHERE (FirstCode = #{currentUser} OR SecondCode = #{currentUser})
		  AND ContractStartDate <= (SELECT EndDate FROM WORKREPORT_CALENDAR WHERE CalID = #{calId}) 
		  AND ContractEndDate >= (SELECT StartDate FROM WORKREPORT_CALENDAR WHERE CalID = #{calId})
 	   ]]>
 	</select>
 	
 	<select id="chkIsManagerByUserCode" parameterType="cmap" resultType="java.lang.Long">
 	    SELECT COUNT(*) 
  	      FROM WORKREPORT_OUTSOURCING 
 		 WHERE OUR_Code = #{usercode} AND (FirstCode = #{currentUser} OR SecondCode = #{currentUser})
 	</select>
 	
 	<select id="selectWorkReportMyListCnt" parameterType="cmap" resultType="java.lang.Long">
 		/* queryID : groupware.workreport.selectWorkReportMyListCnt */
		SELECT COUNT(*) 
		  FROM (
			SELECT C.Month, C.StartDate, C.EndDate, C.WeekOfMonth, W.WorkReportID, W.UR_Code, W.GR_Code, C.CalID, W.CreateDate,
			  		 W.ReportDate, W.ApprovalDate, W.ApproverCode, NVL(W.State, 'W') AS State, W.Comment_, U.DisplayName AS ApproverName
			  FROM (SELECT * FROM WORKREPORT_CALENDAR WHERE EndDate <![CDATA[ >= ]]>( SELECT NVL(EnterDate, '1970-01-01') FROM sys_object_user WHERE UserCode = #{userCode})) C
			  LEFT OUTER JOIN (SELECT * FROM WORKREPORT WHERE UR_Code = #{userCode}) W
			    ON C.CalID = W.CalID 
			 LEFT OUTER JOIN sys_object_user U
			    ON W.ApproverCode = U.UserCode ) TB
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
 	        <if test="startDate != null and startDate != ''">
 	            TO_DATE(StartDate, 'YYYY-MM-DD') <![CDATA[ >= ]]> TO_DATE(#{startDate}, 'YYYY-MM-DD')
 	        </if>
 	        <if test="endDate != null and endDate != ''">
 	            AND TO_DATE(EndDate, 'YYYY-MM-DD') <![CDATA[ <= ]]> TO_DATE(#{endDate}, 'YYYY-MM-DD')
 	        </if>
 	        <if test="(division != null and division != '') or (jobid != null and jobid != '') or (type != null and type != '')">
 	             AND ( SELECT COUNT(*) FROM WORKREPORT_TIMECARD A
			  		INNER JOIN WORKREPORT_JOB B 
			     	   ON A.JobID = B.JobID  
	 		  		WHERE WorkReportID = TB.WorkReportID 
	 		  			<if test="division != null and division != ''">
	 		  			    AND B.JobDivision = #{division}
	 		  			</if>
	 		  			<if test="jobid != null and jobid != ''">
	 		  			    AND A.JobID = #{jobid}
	 		  			</if>
	 		  			<if test="type != null and type != ''">
	 		  			    AND A.TypeCode = #{type}
	 		  			</if>
	 		  	  ) > 0
 	        </if>
 	    </trim>
 	</select>
 	
 	<select id="selectWorkReportMyList" parameterType="cmap" resultType="cmap">
 	    /* queryID : groupware.workreport.selectWorkReportMyList */
 	    <include refid="oracle.include.pagingHeader" />
 	    SELECT 
		 	   Month AS "Month",
		 	   StartDate AS "StartDate",
		 	   EndDate AS "EndDate",
		 	   WeekOfMonth AS "WeekOfMonth",
		 	   WorkReportID AS "WorkReportID",
		 	   UR_Code AS "UR_Code",
		 	   GR_Code AS "GR_Code",
		 	   CalID AS "CalID",
		 	   CreateDate AS "CreateDate",
		 	   ReportDate AS "ReportDate",
		 	   ApprovalDate AS "ApprovalDate",
		 	   ApproverCode AS "ApproverCode",
		 	   State AS "State", Comment_ AS "Comment",
		 	   ApproverName AS "ApproverName"
		  FROM (
			SELECT C.Month, C.StartDate, C.EndDate, C.WeekOfMonth, W.WorkReportID, W.UR_Code, W.GR_Code, C.CalID, W.CreateDate,
			  		 W.ReportDate, W.ApprovalDate, W.ApproverCode, NVL(W.State, 'W') AS State, W.Comment_, U.DisplayName AS ApproverName
			  FROM (SELECT * FROM WORKREPORT_CALENDAR WHERE EndDate <![CDATA[ >= ]]> ( SELECT NVL(EnterDate, '1970-01-01') FROM sys_object_user WHERE UserCode = #{userCode})) C
			  LEFT OUTER JOIN (SELECT * FROM WORKREPORT WHERE UR_Code = #{userCode}) W
			    ON C.CalID = W.CalID 
			  LEFT OUTER JOIN sys_object_user U
			    ON W.ApproverCode = U.UserCode ) TB
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
 	        <if test="startDate != null and startDate != ''">
 	            TO_CHAR(StartDate, 'YYYY-MM-DD') <![CDATA[ >= ]]> TO_CHAR(#{startDate}, 'YYYY-MM-DD')
 	        </if>
 	        <if test="endDate != null and endDate != ''">
 	            AND TO_CHAR(EndDate, 'YYYY-MM-DD') <![CDATA[ <= ]]> TO_CHAR(#{endDate}, 'YYYY-MM-DD')
 	        </if>
 	        <if test="(division != null and division != '') or (jobid != null and jobid != '') or (type != null and type != '')">
 	             AND ( SELECT COUNT(*) FROM WORKREPORT_TIMECARD A
				  		INNER JOIN WORKREPORT_JOB B 
				     	   ON A.JobID = B.JobID  
		 		  		WHERE WorkReportID = TB.WorkReportID 
		 		  			<if test="division != null and division != ''">
		 		  			    AND B.JobDivision = #{division}
		 		  			</if>
		 		  			<if test="jobid != null and jobid != ''">
		 		  			    AND A.JobID = #{jobid}
		 		  			</if>
		 		  			<if test="type != null and type != ''">
		 		  			    AND A.TypeCode = #{type}
		 		  			</if>
		 		  	  ) > 0
 	        </if>
 	    </trim>
 	    <trim prefix="ORDER BY">
			<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection != ''">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("StartDate")'>"StartDate"</when>
					<when test='sortColumn.equalsIgnoreCase("EndDate")'>"EndDate"</when>
					<when test='sortColumn.equalsIgnoreCase("ReportDate")'>"ReportDate"</when>
					<when test='sortColumn.equalsIgnoreCase("State")'>"State"</when>
					<when test='sortColumn.equalsIgnoreCase("ApprovalDate")'>"ApprovalDate"</when>
					<when test='sortColumn.equalsIgnoreCase("ApproverName")'>"ApproverName"</when>
					<otherwise>"Month"</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
				<include refid="oracle.include.listOrderBy"/>
			</if>   
		</trim>
 	   <include refid="oracle.include.pagingFooter" />
 	</select>
 	
 	<update id="reportWorkReport" parameterType="cmap">
 	    UPDATE WORKREPORT
 	       SET State = 'I', ReportDate = SYSDATE
 	     WHERE WorkReportID = #{workReportID}
 	</update>
 	
 	<update id="collectWorkReport" parameterType="cmap">
 	    UPDATE WORKREPORT
 	       SET State = 'W', ReportDate = null
 	     WHERE WorkReportID = #{workReportId}
 	</update>
 	
 	<update id="approvalWorkReport" parameterType="cmap">
 	    UPDATE WORKREPORT
 	       SET State = 'A', 
 	       	   ApprovalDate = SYSDATE, 
 	       	   ApproverCode = #{approvorCode}
 	       	   <if test="comment != null">
 	       	       , comment = #{comment}
 	       	   </if>
 	     WHERE WorkReportID IN 
 	     <foreach collection="workReportIds" item="item" open="(" close=")" separator=",">
 	         #{item}
 	     </foreach>
 	</update>
 	
 	<update id="rejectWorkReport" parameterType="cmap">
 	    UPDATE WORKREPORT
 	       SET State = 'R'
			   <if test="comment != null">
 	       	       , comment = #{comment}
 	       	   </if>
 	     WHERE WorkReportID IN
 	     <foreach collection="workReportIds" item="item" open="(" close=")" separator=",">
 	         #{item}
 	     </foreach>
 	</update>
 	
 	<select id="selectTeamMembers" parameterType="cmap" resultType="cmap">
 		/* groupware.workreport.selectTeamMembers*/
	 	SELECT A.JobPositionName AS "JobPositionName" 
				, A.UserCode AS "UR_Code"
				, A.DisplayName AS "UR_Name"
				, NVL(D.NotReportCnt, 0) AS "NotReportCnt"
				, NVL(D.NotApprovalCnt, 0) AS "NotApprovalCnt"
				, E.Year AS "RecentYear"
				, E.Month AS "RecentMonth"
				, E.Day AS "RecentDay"
				, E.WeekOfMonth AS "RecentWeekOfMonth"
				, E.State AS "RecentState"
		FROM (
				SELECT UR.UserCode, UR.DisplayName, UR.IsUse, UR.IsDisplay, BUR.JobPositionName, BUR.JobTitleSortKey, BUR.JobPositionSortKey, UR.EnterDate 
				FROM sys_object_user UR
				LEFT JOIN sys_object_user_basegroup BUR  ON UR.UserCode = BUR.UserCode  AND BUR.JobType ='Origin'
				WHERE BUR.DeptCode IN (	SELECT GroupCode FROM  sys_object_group GR  
											  	WHERE GR.GroupPath LIKE '%'||#{groupCode}||'%')							  
		) A
		 LEFT OUTER JOIN (
								SELECT UserCode
								, COUNT(CASE WHEN State = 'W' OR State = 'R'
                            THEN state
                            ELSE null
                            END)  AS NotReportCnt
								, COUNT(DECODE(State , 'I', state, null)) AS NotApprovalCnt
								FROM (
										SELECT A.UserCode
												, B.*
												, NVL(C.State, 'W') AS State 
										FROM (
													SELECT UR.UserCode, UR.EnterDate
													FROM sys_object_user UR
													LEFT JOIN sys_object_user_basegroup BUR  ON UR.UserCode = BUR.UserCode AND BUR.JobType ='Origin'
													WHERE BUR.DeptCode IN (SELECT GroupCode FROM  sys_object_group GR 
																				  	WHERE GR.GroupPath LIKE '%'||#{groupCode}||'%')			
										) A
										LEFT OUTER JOIN WORKREPORT_CALENDAR B ON  B.EndDate <![CDATA[>=]]> NVL(A.EnterDate, '1970-01-01')  
										LEFT OUTER JOIN WORKREPORT C ON A.UserCode = C.UR_Code AND B.CalID = C.CalID
								) TB
								GROUP BY UserCode 
		) D ON A.UserCode = D.UserCode
		LEFT OUTER JOIN (
								SELECT A.UserCode
								, B.*
								, NVL(C.State, 'W') AS State
								FROM (
										SELECT UR.UserCode
										FROM sys_object_user UR
										LEFT JOIN sys_object_user_basegroup BUR  ON UR.UserCode = BUR.UserCode  AND BUR.JobType ='Origin'
										WHERE BUR.DeptCode IN (SELECT GroupCode FROM sys_object_group GR 
																  	WHERE GR.GroupPath LIKE '%'||#{groupCode}||'%')			
								) A
								RIGHT OUTER JOIN WORKREPORT_CALENDAR B ON B.StartDate <![CDATA[<]]> TO_CHAR(SYSDATE, 'YYYY-MM-DD') AND B.EndDate <![CDATA[>=]]> TO_CHAR(SYSDATE, 'YYYY-MM-DD')
								LEFT OUTER JOIN WORKREPORT C ON A.UserCode = C.UR_Code AND B.CalID = C.CalID 
		 ) E ON A.UserCode = E.UserCode
		 WHERE A.IsUse = 'Y' AND A.IsDisplay = 'Y'
		 <if test="userCode != null">
			 AND A.UserCode = #{userCode}
		 </if>
		 ORDER BY A.JobTitleSortKey, A.JobPositionSortKey, A.EnterDate, A.DisplayName
 	</select>
 	
 	<select id="selectWorkReportTeamListCnt" parameterType="cmap" resultType="java.lang.Long">
 		/* queryID : groupware.workreport.selectWorkReportTeamListCnt */
 	    SELECT COUNT(*) FROM 
		(
			SELECT C.Month, C.StartDate, C.EndDate, C.WeekOfMonth, W.WorkReportID, U.UserCode AS UR_Code, C.CalID, U.DisplayName AS UR_Name,
	   	     	W.ReportDate, W.ApprovalDate, NVL(W.State, 'W') AS State, W.Comment_, BG.JobPositionCode, BG.JobPositionName
		  	FROM (
				SELECT * FROM sys_object_user WHERE UserCode IN 
				<foreach collection="members" item="item" separator="," open=" (" close=")">
 	        		#{item}
 	    		</foreach>
			) U
			 RIGHT OUTER JOIN WORKREPORT_CALENDAR C ON 1=1
			  LEFT OUTER JOIN WORKREPORT W ON U.UserCode = W.UR_Code AND C.CalID = W.CalID
			 INNER JOIN sys_object_user_basegroup BG ON U.UserCode = BG.UserCode AND BG.JobType = 'Origin'
		) TB
		WHERE State != 'W' 
 	        <if test="startDate != null and startDate != ''">
 	        	AND TO_CHAR(StartDate, 'YYYY-MM-DD') <![CDATA[ >= ]]> TO_CHAR(#{startDate}, 'YYYY-MM-DD')
 	        </if>
 	        <if test="endDate != null and endDate != ''">
 	            AND TO_CHAR(EndDate, 'YYYY-MM-DD') <![CDATA[ <= ]]> TO_CHAR(#{endDate}, 'YYYY-MM-DD')
 	        </if>
 	        <if test="state != null and state != ''">
 	            AND State = #{state}
 	        </if>
 	        <if test="(division != null and division != '') or (jobid != null and jobid != '') or (type != null and type != '')">
 	             AND ( SELECT COUNT(*) FROM WORKREPORT_TIMECARD A
			  		INNER JOIN WORKREPORT_JOB B 
			     	   ON A.JobID = B.JobID  
	 		  		WHERE WorkReportID = TB.WorkReportID 
	 		  			<if test="division != null and division != ''">
	 		  			    AND B.JobDivision = #{division}
	 		  			</if>
	 		  			<if test="jobid != null and jobid != ''">
	 		  			    AND A.JobID = #{jobid}
	 		  			</if>
	 		  			<if test="type != null and type != ''">
	 		  			    AND A.TypeCode = #{type}
	 		  			</if>
	 		  	  ) > 0
 	        </if>
 	</select>
 	
 	<select id="selectWorkReportTeamList" parameterType="cmap" resultType="cmap">
 		/* queryID : groupware.workreport.selectWorkReportTeamList */
 	    <include refid="oracle.include.pagingHeader"/>
 	    SELECT * FROM 
		(
			SELECT C.Month, C.StartDate, C.EndDate, C.WeekOfMonth, W.WorkReportID, U.UserCode AS UR_Code, C.CalID, U.DisplayName AS UR_Name,
	   	     	W.ReportDate, W.ApprovalDate, NVL(W.State, 'W') AS State, W.Comment_, BG.JobPositionCode, BG.JobPositionName
		  	FROM (
				SELECT * FROM sys_object_user WHERE UserCode IN 
				<foreach collection="members" item="item" separator="," open=" (" close=")">
 	        		#{item}
 	    		</foreach>
			) U
			 RIGHT OUTER JOIN WORKREPORT_CALENDAR C ON 1=1
			  LEFT OUTER JOIN WORKREPORT W ON U.UserCode = W.UR_Code AND C.CalID = W.CalID
			 INNER JOIN sys_object_user_basegroup BG ON U.UserCode = BG.UserCode AND BG.JobType = 'Origin'
		) TB
		WHERE State != 'W' 
 	        <if test="startDate != null and startDate != ''">
 	           	AND TO_CHAR(StartDate, 'YYYY-MM-DD') <![CDATA[ >= ]]> TO_CHAR(#{startDate}, 'YYYY-MM-DD')
 	        </if>
 	        <if test="endDate != null and endDate != ''">
 	            AND TO_CHAR(EndDate, 'YYYY-MM-DD') <![CDATA[ <= ]]> TO_CHAR(#{endDate}, 'YYYY-MM-DD')
 	        </if>
 	        <if test="state != null and state != ''">
 	            AND State = #{state}
 	        </if>
 	        <if test="(division != null and division != '') or (jobid != null and jobid != '') or (type != null and type != '')">
 	             AND ( SELECT COUNT(*) FROM WORKREPORT_TIMECARD A
			  		INNER JOIN WORKREPORT_JOB B 
			     	   ON A.JobID = B.JobID  
	 		  		WHERE WorkReportID = TB.WorkReportID 
	 		  			<if test="division != null and division != ''">
	 		  			    AND B.JobDivision = #{division}
	 		  			</if>
	 		  			<if test="jobid != null and jobid != ''">
	 		  			    AND A.JobID = #{jobid}
	 		  			</if>
	 		  			<if test="type != null and type != ''">
	 		  			    AND A.TypeCode = #{type}
	 		  			</if>
	 		  	  ) > 0
 	        </if>
		ORDER BY StartDate DESC, JobPositionCode ASC, UR_Name ASC
 	    <include refid="oracle.include.pagingFooter"/>
 	</select>
 	
 	<select id="selectTeamProject" parameterType="cmap" resultType="cmap">
		SELECT UR_Code, GR_Code, UR_Name, JobPositionName, SUM(Hour) AS MonthHour, TotalHour, JobName, JobID FROM (
			SELECT W.UR_Code, W.CalID, J.JobName, W.GR_Code, W.MemberType, TotalHour, UR.DisplayName AS UR_Name, BG.JobPositionName, GR.GroupPath,
					BG.JobTitleSortKey, BG.JobPositionSortKey, UR.EnterDate,
				    T.*, Year || LPAD(Month, 2, 0) AS YearMonth  FROM WORKREPORT_TIMECARD T
			 INNER JOIN (SELECT * FROM WORKREPORT WHERE State = 'A') W ON T.WorkReportID = W.WorkReportID
			 INNER JOIN WORKREPORT_JOB J ON T.JobID = J.JobID 
			 INNER JOIN (SELECT UR_Code, JobID, SUM(Hour)  TotalHour FROM (
									SELECT WA.UR_Code, WA.MemberType, WA.GR_Code, GRA.GroupPath, TA.* FROM WORKREPORT_TIMECARD TA
									 INNER JOIN (SELECT * FROM WORKREPORT WHERE State = 'A') WA ON TA.WorkReportID = WA.WorkReportID
									 INNER JOIN WORKREPORT_JOB JA ON TA.JobID = JA.JobID
									 LEFT OUTER JOIN sys_object_group GRA ON WA.GR_Code = GRA.GroupCode
							) TBA
									WHERE MemberType = 'R' AND GroupPath like '%'||#{grcode}||';%'
									GROUP BY UR_Code, JobID
							) SUMT ON W.UR_Code = SUMT.UR_Code AND T.JobID = SUMT.JobID
			 LEFT OUTER JOIN sys_object_user UR ON W.UR_Code = UR.UserCode
			 LEFT OUTER JOIN sys_object_group GR ON W.GR_Code = GR.GroupCode
			 LEFT OUTER JOIN sys_object_user_basegroup BG ON UR.UserCode = BG.UserCode AND BG.JobType = 'Origin'
			) TB
		WHERE MemberType = 'R' AND GroupPath like '%'||#{grcode}||';%' AND 
			  YearMonth <![CDATA[ >= ]]> #{startDate} AND YearMonth <![CDATA[ <= ]]> #{endDate}
		GROUP BY UR_Code, JobID
		ORDER BY JobTitleSortKey, JobPositionSortKey, EnterDate, UR_Name
 	</select>
 	
 	<select id="selectTeamProjectSummary" parameterType="cmap" resultType="cmap">
		SELECT SUM(Hour) AS MonthHour, TotalHour, JobName, JobID FROM (
			SELECT W.UR_Code, W.CalID, J.JobName, W.GR_Code, W.MemberType, TotalHour, UR.DisplayName AS UR_Name, BG.JobPositionName, GR.GroupPath,
				    T.*, CONCAT(Year, LPAD(Month, 2, 0)) AS YearMonth  FROM WORKREPORT_TIMECARD T
			 INNER JOIN (SELECT * FROM WORKREPORT WHERE State = 'A')  W ON T.WorkReportID = W.WorkReportID
			 INNER JOIN WORKREPORT_JOB J ON T.JobID = J.JobID 
			 INNER JOIN (SELECT UR_Code, JobID, SUM(Hour) AS TotalHour FROM (
									SELECT WA.UR_Code, WA.MemberType, WA.GR_Code, GRA.GroupPath, TA.* FROM WORKREPORT_TIMECARD TA
									 INNER JOIN (SELECT * FROM WORKREPORT WHERE State = 'A') WA ON TA.WorkReportID = WA.WorkReportID
									 INNER JOIN WORKREPORT_JOB JA ON TA.JobID = JA.JobID
									 LEFT OUTER JOIN sys_object_group GRA ON WA.GR_Code = GRA.GroupCode
							) TBA
									WHERE MemberType = 'R' AND GroupPath like '%'||#{grcode}||';%' 
									GROUP BY UR_Code, JobID
							)  SUMT ON W.UR_Code = SUMT.UR_Code AND T.JobID = SUMT.JobID
			 LEFT OUTER JOIN sys_object_user UR ON W.UR_Code = UR.UserCode
			 LEFT OUTER JOIN sys_object_group GR ON W.GR_Code = GR.GroupCode
			 LEFT OUTER JOIN sys_object_user_basegroup BG ON UR.UserCode = BG.UserCode AND BG.JobType = 'Origin'
			) TB
		WHERE MemberType = 'R' AND GroupPath like '%'||#{grcode}||';%' AND 
			  YearMonth <![CDATA[ >= ]]> #{startDate} AND YearMonth <![CDATA[ <= ]]> #{endDate}
		GROUP BY JobID
		ORDER BY MonthHour DESC
 	</select>
 	
 	<select id="selectManageProject" parameterType="cmap" resultType="cmap">
 	    SELECT JobID AS "JobID"
 	    	, JobName AS "JobName"
 	    	, StartDate AS "StartDate"
 	    	, EndDate AS "EndDate" 
 	    FROM WORKREPORT_JOB 
 	    WHERE (ManagerCode = #{userCode} OR #{isManager} = 'Y') AND IsUse = 'Y' 
 	    AND JobDivision IN 
 	       <foreach collection="divs" item="item" open="(" close=")" separator=",">
 	           #{item}
 	       </foreach>
 	    ORDER BY JobName ASC
 	</select>
 	
 	<select id="selectProjectCost" parameterType="cmap" resultType="cmap">
 	    SELECT YearMonth AS "YearMonth"
 	    	, UR_Code AS "UR_Code"
 	    	, UR_Name AS "UR_Name"
 	    	, GradeKind AS "GradeKind"
 	    	, MonthPrice AS "MonthPrice"
 	    	, MemberType AS "MemberType"
 	    	, JobID AS "JobID"
 	    	, SUM(StandardHour) AS "SumStandardHour"
 	    	, WorkDay AS "WorkDay"
 	    	, CASE WHEN SUM(StandardHour) / ( 8 * WorkDay ) = 1 THEN 1 ELSE SUM(StandardHour) / ( 8 * WorkDay ) END AS "ManMonth"
 	    	, MonthPrice * (CASE WHEN SUM(StandardHour) / ( 8 * WorkDay ) > 1 THEN 1 ELSE SUM(StandardHour) / ( 8 * WorkDay ) END) AS "ManPrice"
 	    	, SUM(OverTime) AS "OverTime"
 	    	, SUM(OverTime) / ( 8 * WorkDay ) AS OverTimeManMonth, SUM(OverTime) / 8 AS "OverTimeManHour"
 	    	, MonthPrice * (SUM(OverTime) / ( 8 * WorkDay )) * 1.5 AS "OverTimeManPrice"
 	    	, SUM(CASE WHEN DAY = 1 THEN OverTime ELSE 0 END) AS "1",
	  		 SUM(CASE WHEN DAY = 2 THEN OverTime ELSE 0 END) AS "2",
	  		 SUM(CASE WHEN DAY = 3 THEN OverTime ELSE 0 END) AS "3",
	  		 SUM(CASE WHEN DAY = 4 THEN OverTime ELSE 0 END) AS "4",
	  		 SUM(CASE WHEN DAY = 5 THEN OverTime ELSE 0 END) AS "5",
	  		 SUM(CASE WHEN DAY = 6 THEN OverTime ELSE 0 END) AS "6",
	  		 SUM(CASE WHEN DAY = 7 THEN OverTime ELSE 0 END) AS "7",
	  		 SUM(CASE WHEN DAY = 8 THEN OverTime ELSE 0 END) AS "8",
	  		 SUM(CASE WHEN DAY = 9 THEN OverTime ELSE 0 END) AS "9",
	  		 SUM(CASE WHEN DAY = 10 THEN OverTime ELSE 0 END) AS "10",
	  		 SUM(CASE WHEN DAY = 11 THEN OverTime ELSE 0 END) AS "11",
	  		 SUM(CASE WHEN DAY = 12 THEN OverTime ELSE 0 END) AS "12",
	  		 SUM(CASE WHEN DAY = 13 THEN OverTime ELSE 0 END) AS "13",
	  		 SUM(CASE WHEN DAY = 14 THEN OverTime ELSE 0 END) AS "14",
	  		 SUM(CASE WHEN DAY = 15 THEN OverTime ELSE 0 END) AS "15",
	  		 SUM(CASE WHEN DAY = 16 THEN OverTime ELSE 0 END) AS "16",
	  		 SUM(CASE WHEN DAY = 17 THEN OverTime ELSE 0 END) AS "17",
	  		 SUM(CASE WHEN DAY = 18 THEN OverTime ELSE 0 END) AS "18",
	  		 SUM(CASE WHEN DAY = 19 THEN OverTime ELSE 0 END) AS "19",
	  		 SUM(CASE WHEN DAY = 20 THEN OverTime ELSE 0 END) AS "20",
	  		 SUM(CASE WHEN DAY = 21 THEN OverTime ELSE 0 END) AS "21",
	  		 SUM(CASE WHEN DAY = 22 THEN OverTime ELSE 0 END) AS "22",
	  		 SUM(CASE WHEN DAY = 23 THEN OverTime ELSE 0 END) AS "23",
	  		 SUM(CASE WHEN DAY = 24 THEN OverTime ELSE 0 END) AS "24",
	  		 SUM(CASE WHEN DAY = 25 THEN OverTime ELSE 0 END) AS "25",
	  		 SUM(CASE WHEN DAY = 26 THEN OverTime ELSE 0 END) AS "26",
	  		 SUM(CASE WHEN DAY = 27 THEN OverTime ELSE 0 END) AS "27",
	  		 SUM(CASE WHEN DAY = 28 THEN OverTime ELSE 0 END) AS "28",
	  		 SUM(CASE WHEN DAY = 29 THEN OverTime ELSE 0 END) AS "29",
	  		 SUM(CASE WHEN DAY = 30 THEN OverTime ELSE 0 END) AS "30",
	  		 SUM(CASE WHEN DAY = 31 THEN OverTime ELSE 0 END) AS "31"
		  FROM (
		SELECT WT.Year || LPAD(WT.Month, 2, 0) AS YearMonth
      , WR.UR_Code, UR.DisplayName AS UR_Name, WR.GradeKind, NVL(MonthPrice, 0) AS MonthPrice, WR.MemberType, WT.*,
				 CASE WHEN WT.TypeCode = 'P' THEN (CASE WHEN WT.Hour > 8 THEN 8 ELSE WT.Hour END) ELSE  WT.Hour END AS StandardHour
         , NVL(WD.WorkDay, 20) AS WorkDay,
				 CASE WHEN WT.TypeCode = 'P' THEN (CASE WHEN WT.Hour > 8 THEN WT.Hour - 8 ELSE 0 END) ELSE 0 END AS OverTime, GD.GradeSeq
		  FROM (SELECT * FROM WORKREPORT WHERE State = 'A') WR
		 INNER JOIN WORKREPORT_TIMECARD WT ON WR.WorkReportID = WT.WorkReportID
		 LEFT OUTER JOIN sys_object_user UR ON WR.UR_Code = UR.UserCode
		 LEFT OUTER JOIN WORKREPORT_GRADE GD ON WT.Year = GD.ApplyYear AND WR.MemberType = GD.MemberType AND WR.GradeKind = GD.GradeKind
		 LEFT OUTER JOIN WORKREPORT_WORKDAY WD ON WT.Year = WD.Year AND TO_NUMBER(WT.Month) = TO_NUMBER(WD.Month)
		) TB
		WHERE MemberType = 'R' AND JobID = #{jobId} AND YearMonth <![CDATA[ >= ]]> #{startDate} AND YearMonth <![CDATA[ <= ]]> #{endDate}
		GROUP BY UR_Code, GradeKind, YearMonth
		ORDER BY YearMonth ASC, GradeSeq ASC, UR_Name ASC
 	</select>
 	
 	
 	<select id="selectProjectCostOS" parameterType="cmap" resultType="cmap">
		SELECT YearMonth AS "YearMonth" 
			, UR_Code AS "UR_Code"
			, Name AS "Name"
			, GradeKind AS "GradeKind"
			, MonthPrice AS "MonthPrice"
			, MemberType AS "MemberType"
			, JobID AS "JobID"
			, SUM(StandardHour) AS SumStandardHour, WorkDay, IF((SUM(StandardHour) / ( 8 * WorkDay )) > 1, 1, (SUM(StandardHour) / ( 8 * WorkDay ))) AS "ManMonth"
			, MonthPrice * IF((SUM(StandardHour) / ( 8 * WorkDay )) > 1, 1, (SUM(StandardHour) / ( 8 * WorkDay ))) AS "ManPrice"
		  FROM (
		SELECT CONCAT(WT.Year, LPAD(WT.Month, 2, 0)) AS YearMonth, WR.UR_Code, OS.Name, WR.GradeKind, 
			    CASE WHEN OS.ExProjectYN = 'Y' THEN NVL(MonthPriceEx, 0) ELSE NVL(MonthPrice, 0) END AS MonthPrice, WR.MemberType, WT.*,
				 IF(WT.Hour > 8, 8, WT.Hour) AS StandardHour, NVL(WD.WorkDay, 20) AS WorkDay, GD.GradeSeq
		  FROM WORKREPORT WR
		 INNER JOIN WORKREPORT_TIMECARD WT ON WR.WorkReportID = WT.WorkReportID
		 LEFT OUTER JOIN WORKREPORT_OUTSOURCING OS ON WR.UR_Code = OS.OUR_Code
		 LEFT OUTER JOIN WORKREPORT_GRADE GD ON WT.Year = GD.ApplyYear AND WR.MemberType = GD.MemberType AND WR.GradeKind = GD.GradeKind
		 LEFT OUTER JOIN WORKREPORT_WORKDAY WD ON WT.Year = WD.Year AND TO_NUMBER(WT.Month) = TO_NUMBER(WD.Month)
		) TB
		WHERE MemberType = 'O' AND JobID = #{jobId} AND YearMonth <![CDATA[ >= ]]> #{startDate} AND YearMonth <![CDATA[ <= ]]> #{endDate}
		GROUP BY UR_Code, GradeKind, YearMonth
		ORDER BY TB.YearMonth ASC, TB.GradeSeq ASC, TB.Name ASC
 	</select>
 	
 	<!-- TODO: 작업 중단 지점 우선순위 후위 항목으로 변경 -->
 	<select id="selectTeamManager" parameterType="cmap" resultType="cmap">
 	    SELECT GROUP_CONCAT(UserCode SEPARATOR ';') AS ManagerCode 
 	    FROM sys_object_user_basegroup
 	    WHERE DeptCode = #{deptCode}
 	    AND JobType = 'Origin'
		AND JobTitleCode IN 
		<foreach  collection="jobTitleCodes" item="item" separator="," open="(" close=")">
 	        #{item}
		</foreach>
 	</select>
 	
 	<select id="selectTeamManagerByUser" parameterType="cmap" resultType="cmap">
 		SELECT GROUP_CONCAT(UserCode SEPARATOR ';') AS ManagerCode 
		FROM sys_object_user_basegroup
		WHERE DeptCode = (SELECT DeptCode FROM sys_object_user_basegroup WHERE UserCode = #{userCode} AND JobType = 'Origin')
		AND JobType = 'Origin'
 		AND JobTitleCode IN 
 		<foreach  collection="jobTitleCodes" item="item" separator="," open="(" close=")">
 	       #{item}
		</foreach>
 	</select>
 	
 	<select id="selectTeamManagerByWrids" parameterType="cmap" resultType="cmap">
		 SELECT GROUP_CONCAT(UserCode SEPARATOR ';') AS ManagerCode 
		  FROM sys_object_user_basegroup
		  WHERE DeptCode IN (
					SELECT DeptCode FROM sys_object_user_basegroup WHERE JobType = 'Origin' AND UserCode IN (
					SELECT UR_Code FROM WORKREPORT WHERE WorkReportID IN 
					<foreach  collection="workReportIds" item="item" separator="," open="(" close=")">
			 	        #{item}
					</foreach>
			  ))
		 AND JobType = 'Origin'
		 AND JobTitleCode IN 
		 <foreach  collection="jobTitleCodes" item="item" separator="," open="(" close=")">
 	        #{item}
		</foreach>
 	</select>
 	
 	<select id="selectApprovalUsers" parameterType="cmap" resultType="cmap">
 	    SELECT GROUP_CONCAT(UR_Code SEPARATOR ';') AS userCodes FROM (SELECT UR_Code FROM WORKREPORT WHERE WorkReportID IN 
 	    <foreach  collection="workReportIds" item="item" separator="," open="(" close=")">
 	        #{item}
		</foreach>
 	    GROUP BY UR_Code) AS A
 	</select>
 	 	
	<select id="selectLastWeekPlan" parameterType="cmap" resultType="cmap">
 	    SELECT NVL(B.NextWeekPlan, '') AS LastWeekPlan, NVL(MigWorkreportID, 0) AS MigWorkreportID, 
 	    	   COUNT(*) AS CNT 
 	      FROM (
			SELECT * FROM WORKREPORT_CALENDAR 
				WHERE StartDate = (
				SELECT DATE_ADD(STR_TO_DATE(StartDate, 'YYYY-MM-DD'), INTERVAL -7 DAY) FROM WORKREPORT_CALENDAR WHERE CalID = #{calID}
			)
		) AS A
		INNER JOIN WORKREPORT AS B
		ON A.CalID = B.CalID
		WHERE UR_Code = #{userCode}
 	</select>
 	
	<select id="selectOSCalendarInfo" parameterType="cmap" resultType="cmap">
	    SELECT C.*, W.WorkReportID, W.UR_Code FROM WORKREPORT AS W
		 INNER JOIN WORKREPORT_CALENDAR AS C ON W.CalID = C.CalID
		 WHERE MemberType = 'O' AND UR_Code = #{our_code}
		 ORDER BY C.StartDate DESC
	</select>
	
	<select id="cntApproverSetting" parameterType="cmap" resultType="cmap">
	    SELECT COUNT(*) AS CNT FROM WORKREPORT_APPROVER WHERE approverUserCode = #{urCode} AND approverDeptCode = #{grCode}
	</select>
	
	<insert id="insertApproverSetting" parameterType="cmap">
	    INSERT INTO WORKREPORT_APPROVER (approverUserCode, approverDeptCode) VALUES (#{urCode}, #{grCode})
	</insert>
	
	<select id="selectGroupPath" parameterType="cmap" resultType="cmap">
	    SELECT groupPath FROM sys_object_group WHERE GROUPTYPE = 'DEPT' AND GroupCode = #{grCode}
	</select>
	
	<select id="selectApproverList" parameterType="cmap" resultType="cmap">
		<include refid="oracle.include.pagingHeader"/> 
	    SELECT A.ApproverNo, U.UserCode AS UR_Code, G.GroupCode AS GR_Code, U.DisplayName AS urName, G.DisplayName AS grName
		FROM WORKREPORT_APPROVER A
		INNER JOIN sys_object_user U ON A.approverUserCode = U.UserCode
		INNER JOIN sys_object_group G ON A.approverDeptCode = G.GroupCode
		<where>
		     <if test="groupPath != null">
			     G.GroupCode IN 
			     <foreach collection="groupPath" item="item" open="(" close=")" separator=",">
			         #{item}
			     </foreach>
		     </if>
		 </where>
		 ORDER BY G.SortKey
		<include refid="oracle.include.pagingFooter"/>
	</select>
	
	<select id="selectApproverCnt" parameterType="cmap" resultType="java.lang.Long">
	    SELECT COUNT(*)
		  FROM WORKREPORT_APPROVER A
		 INNER JOIN sys_object_user U ON A.approverUserCode = U.UserCode
		 INNER JOIN sys_object_group G ON A.approverDeptCode = G.GroupCode
		 <where>
		     <if test="groupPath != null">
			     G.GroupCode IN 
			     <foreach collection="groupPath" item="item" open="(" close=")" separator=",">
			         #{item}
			     </foreach>
		     </if>
		 </where>
		 ORDER BY G.SortKey
	</select>
	
	<delete id="deleteApproverSetting" parameterType="cmap">
	    DELETE FROM WORKREPORT_APPROVER
	     WHERE approverNo IN 
	     <foreach collection="deleteList" item="item" open="(" close=")" separator=",">
	         #{item}
	     </foreach>
	</delete>
	
	<select id="selectWorkReportGroupPath" parameterType="cmap" resultType="cmap">
	    SELECT GroupPath AS "GroupPath"
	    	, A.UR_Code AS "UR_Code"
	    FROM (
	    	SELECT * FROM WORKREPORT 
	    	WHERE WorkReportID = #{workReportID}
	    ) A
		INNER JOIN sys_object_group G ON A.GR_Code = G.GroupCode
	</select>
	
	<select id="selectApproverListByDept" parameterType="cmap" resultType="cmap">
		SELECT LISTAGG(U.UserCode, ';') WITHIN GROUP( ORDER BY U.UserCode) AS "ManagerCode"
			, G.GroupCode AS "GR_Code"
		FROM WORKREPORT_APPROVER A
		INNER JOIN sys_object_user U ON A.approverUserCode = U.UserCode
		INNER JOIN sys_object_group G ON A.approverDeptCode = G.GroupCode
		<where>
			<if test="groupPath != null">
				G.GroupCode IN 
				<foreach collection="groupPath" item="item" open="(" close=")" separator=",">
					#{item}
			    </foreach>
		     </if>
		 </where>
	 	 GROUP BY G.GroupCode
		 ORDER BY G.SortKey DESC
	</select>
	
	<select id="selectDeptInfoByWrids" parameterType="cmap" resultType="java.lang.String">
	    SELECT GROUP_CONCAT(GR_Code SEPARATOR ';') AS GRList FROM (
			SELECT GR_Code FROM WORKREPORT WHERE WorkReportID IN 
			<foreach collection="workReportIds" item="item" open="(" close=")" separator=",">
		         #{item}
	     	</foreach>
			GROUP BY GR_Code ) A
	</select>
	
	<select id="selectManagersByDeptList" parameterType="cmap" resultType="java.lang.String">
		SELECT GROUP_CONCAT(approverUserCode SEPARATOR ';') AS ManagerCodes 
		FROM (
			SELECT approverUserCode 
			FROM WORKREPORT_APPROVER A
			INNER JOIN (
				SELECT GroupPath 
				FROM sys_object_group 
				WHERE GroupCode IN 
				<foreach collection="deptList" item="item" open="(" close=")" separator=",">
	    		    #{item}
			    </foreach>
			) AS GP ON INSTR(GP.GroupPath, A.ApproverDeptCode) > 0
		GROUP BY approverUserCode) TB
	</select>
	
	<select id="selectGroupPathInfo" parameterType="cmap" resultType="cmap">
	    SELECT GROUPPATH FROM sys_object_group WHERE 
		GroupCode IN (SELECT approverDeptCode FROM WORKREPORT_APPROVER WHERE ApproverUserCode = #{userCode})
	</select>
	
	<select id="selectParentApprovor" parameterType="cmap" resultType="java.lang.Long">
	    SELECT COUNT(*) FROM WORKREPORT_APPROVER WHERE ApproverDeptCode IN 
	    <foreach collection="parentGroupCode" item="item" open="(" separator="," close=")">
	        #{item}
	    </foreach>
	</select>

	<select id="selectChildGroupInfo" parameterType="cmap" resultType="cmap">
		/* groupware.workreport.selectChildGroupInfo */
	    SELECT G.GroupCode AS "GR_Code"
	    	, G.GroupPath AS "GroupPath"
	    	, NVL(A.ApproverUserCode, '') AS "ApproverUserCode"
	    FROM sys_object_group G 
		LEFT OUTER JOIN WORKREPORT_APPROVER A ON G.GroupCode = A.ApproverDeptCode
	    WHERE GroupPath like #{groupPath}||'%'
	    AND IsUse = 'Y' 
	    AND GroupPath != #{groupPath} 
	    AND GroupType = 'Dept' 
	    Order By SortPath
	</select>
	
	<select id="selectApprovalTargetList" parameterType="cmap" resultType="cmap">
		SELECT A.JobPositionName
			, A.UserCode AS "UR_Code"
			, A.DisplayName AS "UR_Name"
			, NVL(C.NotReportCnt, 0) AS "NotReportCnt"
			, NVL(C.NotApprovalCnt, 0) AS "NotApprovalCnt"
 	    	, E.Year AS "RecentYear"
 	    	, E.Month AS "RecentMonth"
 	    	, E.Day AS "RecentDay"
 	    	, E.WeekOfMonth AS "RecentWeekOfMonth"
 	    	, E.State AS "RecentState"
		  FROM (
				SELECT UR.UserCode, UR.DisplayName, UR.IsUse, UR.IsDisplay, UR.EnterDate, BG.JobPositionSortKey, BG.JobTitleSortKey, BG.JobPositionName 
				FROM sys_object_user UR
				INNER JOIN sys_object_user_basegroup BG ON UR.UserCode = BG.UserCode AND BG.JobType = 'Origin'
				INNER JOIN sys_object_group GR ON BG.DeptCode = GR.GroupCode
				WHERE 
				 	<if test="UserList != null or DeptList != null">
				 	(
				 	</if>
				 	<if test="UserList != null">
				 	 UR.UserCode IN 
				 		<foreach collection="UserList" item="item" open="(" separator="," close=")">
				 		    #{item}
				 		</foreach>
				    OR
				    </if>
				    <if test="DeptList != null"> 
				    GroupCode IN 
				    	<foreach collection="DeptList" item="item" open="(" separator="," close=")">
				 		    #{item}
				 		</foreach>
				 	</if>
				   <if test="UserList != null or DeptList != null">
				 	) AND
				 	</if>
				   <if test="AttachDeptList != null">
		  		   <choose>
		  		       <when test='flagMine == "Y"'>
		  		           (
			  		           	UR.UserCode NOT IN (
				  		   		SELECT ApproverUserCode FROM WORKREPORT_APPROVER WHERE approverDeptCode IN 
								<foreach collection="AttachDeptList" item="item" open="(" separator="," close=")">
						 		    #{item}
						 		</foreach>
								) OR  UR.UserCode = #{userCode}
		  		           )
		  		       </when>
		  		       <otherwise>
		  		            UR.UserCode NOT IN (
			  		   		SELECT ApproverUserCode FROM WORKREPORT_APPROVER WHERE approverDeptCode IN 
							<foreach collection="AttachDeptList" item="item" open="(" separator="," close=")">
					 		    #{item}
					 		</foreach>
							)
		  		       </otherwise>
		  		   </choose>
		  		  </if>
				GROUP BY UserCode
			 ) A
		 LEFT OUTER JOIN (
			SELECT UR_Code
				, COUNT(CASE WHEN State = 'W' OR State = 'R' THEN state ELSE NULL END) AS NotReportCnt
				, COUNT(DECODE(State, 'I', state, NULL)) AS NotApprovalCnt FROM 
			(
				SELECT A.UserCode AS UR_Code, B.*, NVL(C.State, 'W') State FROM (
					SELECT UR.* FROM sys_object_user UR
					 INNER JOIN sys_object_user_basegroup BG ON UR.UserCode = BG.UserCode AND BG.JobType = 'Origin'
					 INNER JOIN sys_object_group GR ON BG.DeptCode = GR.GroupCode
					 WHERE 
					 	<if test="UserList != null or DeptList != null">
					 	(
					 	</if>
					 	<if test="UserList != null">
					 	 UR.UserCode IN 
					 		<foreach collection="UserList" item="item" open="(" separator="," close=")">
					 		    #{item}
					 		</foreach>
					    OR
					    </if>
					    <if test="DeptList != null"> 
					    GroupCode IN 
					    	<foreach collection="DeptList" item="item" open="(" separator="," close=")">
					 		    #{item}
					 		</foreach>
					 	</if>
					   <if test="UserList != null or DeptList != null">
					 	) AND
					 	</if>
					   <if test="AttachDeptList != null">
			  		   <choose>
			  		       <when test='flagMine == "Y"'>
			  		           (
				  		           	UR.UserCode NOT IN (
					  		   		SELECT ApproverUserCode 
					  		   		FROM WORKREPORT_APPROVER 
					  		   		WHERE approverDeptCode IN 
									<foreach collection="AttachDeptList" item="item" open="(" separator="," close=")">
							 		    #{item}
							 		</foreach>
									) OR  UR.UserCode = #{userCode}
			  		           )
			  		       </when>
			  		       <otherwise>
			  		          	UR.UserCode NOT IN (
				  		   		SELECT ApproverUserCode 
				  		   		FROM WORKREPORT_APPROVER 
				  		   		WHERE approverDeptCode IN 
								<foreach collection="AttachDeptList" item="item" open="(" separator="," close=")">
						 		    #{item}
						 		</foreach>
								)
			  		       </otherwise>
			  		   </choose>
			  		  </if>
					GROUP BY UserCode
					) A
				RIGHT OUTER JOIN WORKREPORT_CALENDAR B ON B.EndDate	 <![CDATA[ >= ]]>  NVL(A.EnterDate, '1970-01-01') 
				LEFT OUTER JOIN WORKREPORT C ON A.UserCode = C.UR_Code AND B.CalID = C.CalID
			) TB
			GROUP BY UR_Code) C
		 ON A.UserCode = C.UR_Code
		 LEFT OUTER JOIN (
		 	SELECT A.UserCode AS UR_Code, B.*, NVL(C.State, 'W') AS State FROM (
					SELECT UR.* FROM sys_object_user UR
					 INNER JOIN sys_object_user_basegroup BG ON UR.UserCode = BG.UserCode AND BG.JobType = 'Origin'
					 INNER JOIN sys_object_group GR ON BG.DeptCode = GR.GroupCode
					 WHERE 
					 	<if test="UserList != null or DeptList != null">
					 	(
					 	</if>
					 	<if test="UserList != null">
					 	UR.UserCode IN 
					 		<foreach collection="UserList" item="item" open="(" separator="," close=")">
					 		    #{item}
					 		</foreach>
					    OR
					    </if>
					    <if test="DeptList != null"> 
					    GroupCode IN 
					    	<foreach collection="DeptList" item="item" open="(" separator="," close=")">
					 		    #{item}
					 		</foreach>
					 	</if>
					   <if test="UserList != null or DeptList != null">
					 	) AND
					 	</if>
					   <if test="AttachDeptList != null">
			  		   <choose>
			  		       <when test='flagMine == "Y"'>
			  		           (
				  		           	UR.UserCode NOT IN (
					  		   		SELECT ApproverUserCode FROM WORKREPORT_APPROVER WHERE approverDeptCode IN 
									<foreach collection="AttachDeptList" item="item" open="(" separator="," close=")">
							 		    #{item}
							 		</foreach>
									) OR UR.UserCode = #{userCode}
			  		           )
			  		       </when>
			  		       <otherwise>
			  		           UR.UserCode NOT IN (
				  		   		SELECT ApproverUserCode FROM WORKREPORT_APPROVER WHERE approverDeptCode IN 
								<foreach collection="AttachDeptList" item="item" open="(" separator="," close=")">
						 		    #{item}
						 		</foreach>
								)
			  		       </otherwise>
			  		   </choose>
			  		  </if>
					GROUP BY UserCode
					) A
				RIGHT OUTER JOIN WORKREPORT_CALENDAR B ON B.StartDate <![CDATA[ <= ]]> TO_CHAR(SYSDATE, 'YYYY-MM-DD') AND B.EndDate <![CDATA[ >= ]]> TO_CHAR(SYSDATE, 'YYYY-MM-DD')
				LEFT OUTER JOIN WORKREPORT C ON A.UserCode = C.UR_Code AND B.CalID = C.CalID 
		 ) E
		 ON A.UserCode = E.UR_Code
		 WHERE A.IsUse = 'Y' AND A.IsDisplay = 'Y'
		 ORDER BY A.JobTitleSortKey, A.JobPositionSortKey, A.EnterDate, A.DisplayName
	</select>
	
	
	<select id="selectProjectTime" parameterType="cmap" resultType="cmap">
 	    SELECT YearMonth, UR_Code, UR_Name, GradeKind, MonthPrice, MemberType, JobID, 
			   SUM(WorkHour) AS WorkTime, 
			   SUM(DECODE(DAY, 1, WorkHour, 0)) AS '1',
	  		   SUM(DECODE(DAY, 2, WorkHour, 0)) AS '2',
	  		   SUM(DECODE(DAY, 3, WorkHour, 0)) AS '3',
	  		   SUM(DECODE(DAY, 4, WorkHour, 0)) AS '4',
	  		   SUM(DECODE(DAY, 5, WorkHour, 0)) AS '5',
	  		   SUM(DECODE(DAY, 6, WorkHour, 0)) AS '6',
	  		   SUM(DECODE(DAY, 7, WorkHour, 0)) AS '7',
	  		   SUM(DECODE(DAY, 8, WorkHour, 0)) AS '8',
	  		   SUM(DECODE(DAY, 9, WorkHour, 0)) AS '9',
	  		   SUM(DECODE(DAY, 10, WorkHour, 0)) AS '10',
	  		   SUM(DECODE(DAY, 11, WorkHour, 0)) AS '11',
	  		   SUM(DECODE(DAY, 12, WorkHour, 0)) AS '12',
	  		   SUM(DECODE(DAY, 13, WorkHour, 0)) AS '13',
	  		   SUM(DECODE(DAY, 14, WorkHour, 0)) AS '14',
	  		   SUM(DECODE(DAY, 15, WorkHour, 0)) AS '15',
	  		   SUM(DECODE(DAY, 16, WorkHour, 0)) AS '16',
	  		   SUM(DECODE(DAY, 17, WorkHour, 0)) AS '17',
	  		   SUM(DECODE(DAY, 18, WorkHour, 0)) AS '18',
	  		   SUM(DECODE(DAY, 19, WorkHour, 0)) AS '19',
	  		   SUM(DECODE(DAY, 20, WorkHour, 0)) AS '20',
	  		   SUM(DECODE(DAY, 21, WorkHour, 0)) AS '21',
	  		   SUM(DECODE(DAY, 22, WorkHour, 0)) AS '22',
	  		   SUM(DECODE(DAY, 23, WorkHour, 0)) AS '23',
	  		   SUM(DECODE(DAY, 24, WorkHour, 0)) AS '24',
	  		   SUM(DECODE(DAY, 25, WorkHour, 0)) AS '25',
	  		   SUM(DECODE(DAY, 26, WorkHour, 0)) AS '26',
	  		   SUM(DECODE(DAY, 27, WorkHour, 0)) AS '27',
	  		   SUM(DECODE(DAY, 28, WorkHour, 0)) AS '28',
	  		   SUM(DECODE(DAY, 29, WorkHour, 0)) AS '29',
	  		   SUM(DECODE(DAY, 30, WorkHour, 0)) AS '30',
	  		   SUM(DECODE(DAY, 31, WorkHour, 0)) AS '31'
		FROM (
			SELECT WT.Year || LPAD(WT.Month, 2, 0) AS YearMonth, WR.UR_Code, UR.DisplayName AS UR_Name, WR.GradeKind
				, NVL(MonthPrice, 0) AS MonthPrice
				, WR.MemberType, WT.*,
				 WT.Hour AS WorkHour, GD.GradeSeq
			FROM (SELECT * FROM WORKREPORT WHERE State = 'A') WR
			INNER JOIN WORKREPORT_TIMECARD WT ON WR.WorkReportID = WT.WorkReportID
			LEFT OUTER JOIN sys_object_user UR ON WR.UR_Code = UR.UserCode
			LEFT OUTER JOIN WORKREPORT_GRADE GD ON WT.Year = GD.ApplyYear AND WR.MemberType = GD.MemberType AND WR.GradeKind = GD.GradeKind
			LEFT OUTER JOIN WORKREPORT_WORKDAY WD ON WT.Year = WD.Year AND WT.Month = WD.Month
		) TB
		WHERE MemberType = 'R' AND JobID = #{jobId} AND YearMonth <![CDATA[ >= ]]> #{startDate} AND YearMonth <![CDATA[ <= ]]> #{endDate}
		GROUP BY UR_Code, GradeKind, YearMonth
		ORDER BY YearMonth ASC, GradeSeq ASC, UR_Name ASC
 	</select>
</mapper>
