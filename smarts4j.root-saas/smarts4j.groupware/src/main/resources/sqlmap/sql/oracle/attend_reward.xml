<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="attend.reward">

	<select id="getRewardListCnt" parameterType="cmap" resultType= "java.lang.Long">
		SELECT
			COUNT(USERCODE)
		FROM (
			SELECT
				USERCODE, URName
			FROM
			(
				SELECT
					CM.USERCODE
					, BG.DEPTNAME
					, TARGETDATE
					, TRUNC((TARGETDATE - TO_DATE((#{RewardMonth}||#{RewardStandardDay}),'YYYYMMDD')) / 7, 0) AS WEEKDAY
					, NVL(SUM(ATTAC), 0) AS ATTAC
					, NVL(SUM(EXTENAC), 0) AS EXTENAC
					, NVL(SUM(HOLIAC), 0) AS HOLIAC
					, Fn_BaseGetDictionary_S(#{lang}, ou.MultiDisplayName) URName
				FROM ATTEND_COMMUTING_MST CM
					JOIN SYS_OBJECT_USER_BASEGROUP BG ON CM.USERCODE = BG.USERCODE  AND BG.JOBTYPE = 'Origin'
					JOIN sys_object_user ou ON ou.USERCODE = CM.USERCODE
					JOIN SYS_OBJECT_GROUP OG ON BG.COMPANYCODE = OG.COMPANYCODE AND OG.GROUPTYPE='Dept' AND BG.DEPTCODE = OG.GROUPCODE AND MEMBEROF != 'NOUSE'
				WHERE TARGETDATE BETWEEN TO_DATE(#{RewardMonth}||#{RewardStandardDay},'YYYYMMDD') AND ((TO_DATE(#{RewardMonth}||#{RewardStandardDay},'YYYYMMDD') + INTERVAL '1' MONTH) - INTERVAL '1' DAY)
					AND OG.GROUPPATH LIKE #{DeptCode}||'%'
				GROUP BY CM.USERCODE, BG.DEPTNAME, TARGETDATE, TRUNC((TARGETDATE - TO_DATE((#{RewardMonth}||#{RewardStandardDay}),'YYYYMMDD')) / 7, 0), ou.MultiDisplayName
			) A
			<if test="searchText != null and searchText != ''">
				WHERE URName LIKE '%'||#{searchText}||'%'
			</if>
			GROUP BY USERCODE, URName
			<choose>
				<when test ="RewardPeriod =='1week' ">
				, TRUNC(WEEKDAY / 1,0)
				</when>
				<when test ="RewardPeriod =='2week' ">
				, TRUNC(WEEKDAY / 2,0)
				</when>
				<when test ="RewardPeriod =='3week' ">
				, TRUNC(WEEKDAY / 3,0)
				</when>
				<otherwise>
				</otherwise>
			</choose>
			<![CDATA[ HAVING NVL(SUM(EXTENAC), 0) + NVL(SUM(HOLIAC), 0) > 0 ]]>
		)
	</select>
	
	<select id="getRewardList"  parameterType="cmap" resultType="cmap" >
		<include refid="oracle.include.pagingHeader" />
		SELECT
			RH.USERCODE AS "UserCode"
			, RH.REWARDMONTH AS "RewardMonth"
			, TO_CHAR(STARTDATE,'YYYY-MM-DD') AS "StartDate"
			, CASE
				WHEN ((TO_DATE(#{RewardMonth}||#{RewardStandardDay}, 'YYYYMMDD') + INTERVAL '1' MONTH) - INTERVAL '1' DAY) <![CDATA[<]]> ENDDATE
					THEN TO_CHAR(((TO_DATE(#{RewardMonth}||#{RewardStandardDay}, 'YYYYMMDD') + INTERVAL '1' MONTH) - INTERVAL '1' DAY),'YYYY-MM-DD')
				ELSE TO_CHAR(ENDDATE,'YYYY-MM-DD')
				END  AS "EndDate"
			, ATTAC AS "AttAc"
			, EXTENAC AS "ExtenAc"
			, HOLIAC AS "HoliAc"
			, EXTENDAC AS "ExtenDAc"
			, EXTENNAC AS "ExtenNAc"
			, HOLIDAC AS "HoliDAc"
			, HOLINAC AS "HoliNAc"
			, OFFDAC AS "OffDAc"
			, OFFNAC AS "OffNAc"
			, URName AS "URName"
			, TRUNC((REWARDTIME + NVL(CARRYTIME, 0))/60/8, 0) AS "RewardDay"
			, REWARDTIME AS "RewardTime"
			, NVL(CARRYTIME, 0) AS "CarryTime"
			, (REWARDTIME + NVL(CARRYTIME, 0)) - TRUNC((REWARDTIME + NVL(CARRYTIME, 0))/60/8, 0)*60*8 AS "RemainTime"
			, VH.REWARDVACDAY AS "RewardVacDay"
			, VH.STATUS AS "Status"
			, Fn_GetBaseCodeName(#{domainID}, 'AttendState', VH.Status) AS "StatusName"
			, VH."Comment" AS "Comment"
			, DEPTNAME AS "DeptName"
		FROM
		(
			SELECT
				USERCODE
				, DEPTNAME
				, WEEKDAY
				, (SELECT FN_BASEGETDICTIONARY_S(#{lang}, MULTIDISPLAYNAME) FROM SYS_OBJECT_USER WHERE USERCODE = A.USERCODE) AS URName
				, NVL(SUM(ATTAC), 0) AS ATTAC
				, NVL(SUM(EXTENAC), 0) AS EXTENAC
				, NVL(SUM(HOLIAC), 0) AS HOLIAC
				, NVL(SUM(EXTENDAC), 0) AS EXTENDAC
				, NVL(SUM(EXTENNAC), 0) AS EXTENNAC
				, NVL(SUM(HOLIDAC), 0) AS HOLIDAC
				, NVL(SUM(HOLINAC), 0) AS HOLINAC
				, NVL(SUM(OFFDAC), 0) AS OFFDAC
				, NVL(SUM(OFFNAC), 0) AS OFFNAC
				, NVL(FN_ATTEND_GETATTDAYREWARDTIME(NVL(SUM(ATTAC), 0), NVL(SUM(EXTENDAC), 0), NVL(SUM(EXTENNAC), 0), NVL(SUM(HOLIDAC), 0), NVL(SUM(HOLINAC), 0), NVL(SUM(OFFDAC), 0), NVL(SUM(OFFNAC), 0), MAX(DomainID)),0) AS REWARDTIME
				, SUBSTR(#{RewardMonth}, 1, 4) AS REWARDYEAR
				, #{RewardMonth} AS REWARDMONTH
				, (SELECT REMAINTIME FROM VM_VACATIONPLAN_HISTORY VHR WHERE VHR.UR_CODE = A.USERCODE AND VHR.REWARDMONTH = TO_CHAR(ADD_MONTHS(TO_DATE(#{RewardMonth}||'01', 'YYYYMMDD'), -1), 'YYYYMM') AND ROWNUM <![CDATA[ <= ]]> 1) AS CARRYTIME
				, (TO_DATE(#{RewardMonth}||#{RewardStandardDay}, 'YYYYMMDD') + ((WEEKDAY)*7)) AS STARTDATE
				<choose>
					<when test ="RewardPeriod =='1week'">
						, (TO_DATE(#{RewardMonth}||#{RewardStandardDay}, 'YYYYMMDD') + ((WEEKDAY+1)*7-1)) AS ENDDATE
					</when>
					<when test ="RewardPeriod =='2week'">
						, (TO_DATE(#{RewardMonth}||#{RewardStandardDay}, 'YYYYMMDD') + ((WEEKDAY+2)*7-1)) AS ENDDATE
					</when>
					<when test ="RewardPeriod =='3week'">
						, (TO_DATE(#{RewardMonth}||#{RewardStandardDay}, 'YYYYMMDD') + ((WEEKDAY+3)*7-1)) AS ENDDATE
					</when>
					<otherwise>
						, ((TO_DATE(#{RewardMonth}||#{RewardStandardDay}, 'YYYYMMDD') + INTERVAL '1' MONTH) - INTERVAL '1' DAY) AS ENDDATE
					</otherwise>
				</choose>
			FROM
			(
				SELECT
					CM.USERCODE
					, BG.DEPTNAME
					, do.DomainID
					, TARGETDATE
					, TRUNC((TARGETDATE - TO_DATE(#{RewardMonth}||#{RewardStandardDay}, 'YYYYMMDD')) / 7, 0) AS WEEKDAY
					, NVL(SUM(ATTAC), 0) AS ATTAC
					, NVL(SUM(EXTENAC), 0) AS EXTENAC
					, NVL(SUM(HOLIAC), 0) AS HOLIAC
					, NVL(SUM(CASE WHEN AME.JOBSTSNAME = 'O' AND (CM.AttEndTime is not null and CM.AttEndTime  <![CDATA[>=]]>  CM.ExtenEnd) THEN FN_ATTEND_GETNIGHTDAYTIMEV2(TO_DATE(AME.STARTTIME,'YYYY-MM-DD HH24:MI:SS'), TO_DATE(AME.ENDTIME,'YYYY-MM-DD HH24:MI:SS'), #{NightStartTime}, #{NightEndTime}, TO_NUMBER(AME.IDLETIME), 'D') ELSE 0 END), 0) AS EXTENDAC
					, NVL(SUM(CASE WHEN AME.JOBSTSNAME = 'O' AND (CM.AttEndTime is not null and CM.AttEndTime  <![CDATA[>=]]>  CM.ExtenEnd) THEN FN_ATTEND_GETNIGHTDAYTIMEV2(TO_DATE(AME.STARTTIME,'YYYY-MM-DD HH24:MI:SS'), TO_DATE(AME.ENDTIME,'YYYY-MM-DD HH24:MI:SS'), #{NightStartTime}, #{NightEndTime}, TO_NUMBER(AME.IDLETIME), 'N') ELSE 0 END), 0) AS EXTENNAC
					, NVL(SUM(CASE WHEN AME.JOBSTSNAME = 'H' AND NVL(AME.HOLIDAYFLAG, '0')='0' AND ahs.HolidayName is NULL AND (CM.AttStartTime is not null and CM.AttStartTime <![CDATA[<=]]> CM.HoliStart AND CM.AttEndTime is not null and CM.AttEndTime  <![CDATA[>=]]>  CM.HoliEnd) THEN FN_ATTEND_GETNIGHTDAYTIMEV2(TO_DATE(AME.STARTTIME,'YYYY-MM-DD HH24:MI:SS'), TO_DATE(AME.ENDTIME,'YYYY-MM-DD HH24:MI:SS'), #{HoliNightStartTime}, #{HoliNightEndTime}, TO_NUMBER(AME.IDLETIME), 'D') ELSE 0 END), 0) AS HOLIDAC
					, NVL(SUM(CASE WHEN AME.JOBSTSNAME = 'H' AND NVL(AME.HOLIDAYFLAG, '0')='0' AND ahs.HolidayName is NULL AND (CM.AttStartTime is not null and CM.AttStartTime <![CDATA[<=]]> CM.HoliStart AND CM.AttEndTime is not null and CM.AttEndTime  <![CDATA[>=]]>  CM.HoliEnd) THEN FN_ATTEND_GETNIGHTDAYTIMEV2(TO_DATE(AME.STARTTIME,'YYYY-MM-DD HH24:MI:SS'), TO_DATE(AME.ENDTIME,'YYYY-MM-DD HH24:MI:SS'), #{HoliNightStartTime}, #{HoliNightEndTime}, TO_NUMBER(AME.IDLETIME), 'N') ELSE 0 END), 0) AS HOLINAC
					, NVL(SUM(CASE WHEN AME.JOBSTSNAME = 'H' AND (NVL(AME.HOLIDAYFLAG, '0')='2' OR (NVL(ame.HolidayFlag,'0')='0' AND ahs.HolidayName is not NULL) ) AND (CM.AttStartTime is not null and CM.AttStartTime <![CDATA[<=]]> CM.HoliStart AND CM.AttEndTime is not null and CM.AttEndTime  >=  CM.HoliEnd) THEN FN_ATTEND_GETNIGHTDAYTIMEV2(TO_DATE(AME.STARTTIME,'YYYY-MM-DD HH24:MI:SS'), TO_DATE(AME.ENDTIME,'YYYY-MM-DD HH24:MI:SS'), #{HoliNightStartTime}, #{HoliNightEndTime}, TO_NUMBER(AME.IDLETIME), 'D') ELSE 0 END), 0) AS OFFDAC
					, NVL(SUM(CASE WHEN AME.JOBSTSNAME = 'H' AND (NVL(AME.HOLIDAYFLAG, '0')='2' OR (NVL(ame.HolidayFlag,'0')='0' AND ahs.HolidayName is not NULL) ) AND (CM.AttStartTime is not null and CM.AttStartTime <![CDATA[<=]]> CM.HoliStart AND CM.AttEndTime is not null and CM.AttEndTime  >=  CM.HoliEnd) THEN FN_ATTEND_GETNIGHTDAYTIMEV2(TO_DATE(AME.STARTTIME,'YYYY-MM-DD HH24:MI:SS'), TO_DATE(AME.ENDTIME,'YYYY-MM-DD HH24:MI:SS'), #{HoliNightStartTime}, #{HoliNightEndTime}, TO_NUMBER(AME.IDLETIME), 'N') ELSE 0 END), 0) AS OFFNAC

				FROM ATTEND_COMMUTING_MST CM
					JOIN SYS_OBJECT_USER_BASEGROUP BG ON CM.USERCODE = BG.USERCODE  AND BG.JOBTYPE = 'Origin'
					JOIN SYS_OBJECT_GROUP OG ON BG.COMPANYCODE = OG.COMPANYCODE AND OG.GROUPTYPE='Dept' AND BG.DEPTCODE = OG.GROUPCODE AND MEMBEROF != 'NOUSE'
					LEFT JOIN ATTEND_EXTENSIONHOLIDAY AME ON CM.USERCODE = AME.USERCODE AND CM.TARGETDATE = AME.JOBDATE AND AME.APPROVALSTS = 'Y'
					LEFT JOIN sys_object_domain do ON cm.CompanyCode = do.DomainCode
					LEFT JOIN attend_holiday_schedule ahs ON ahs.CompanyCode = cm.CompanyCode AND targetDate between ahs.HolidayStart AND ahs.HolidayEnd
				WHERE TARGETDATE BETWEEN TO_DATE(#{RewardMonth}||#{RewardStandardDay},'YYYYMMDD') AND ((TO_DATE(#{RewardMonth}||#{RewardStandardDay},'YYYYMMDD') + INTERVAL '1' MONTH) - INTERVAL '1' DAY)
					AND OG.GROUPPATH LIKE #{DeptCode}||'%'
				GROUP BY CM.USERCODE, BG.DEPTNAME, TARGETDATE,do.DomainID,CM.AttStartTime,CM.AttEndTime,CM.ExtenEnd,  CM.HoliStart,CM.HoliEnd, TRUNC((TARGETDATE - TO_DATE(#{RewardMonth}||#{RewardStandardDay}, 'YYYYMMDD')) / 7, 0)
				) A
			GROUP BY USERCODE, DEPTNAME, WEEKDAY
			<choose>
				<when test ="RewardPeriod =='1week'">
					, TRUNC(WEEKDAY/1,0)
				</when>
				<when test ="RewardPeriod =='2week'">
					, TRUNC(WEEKDAY/2,0)
				</when>
				<when test ="RewardPeriod =='3week'">
					, TRUNC(WEEKDAY/3,0)
				</when>
				<otherwise>
				</otherwise>
			</choose>
		) RH
			LEFT JOIN VM_VACATIONPLAN_HISTORY VH ON RH.REWARDYEAR = VH.YEAR AND RH.USERCODE = VH.UR_CODE AND RH.REWARDMONTH= VH.REWARDMONTH AND RH.STARTDATE = VH.REWARDSTARTDATE
		<![CDATA[ WHERE EXTENAC + HOLIAC + NVL(CARRYTIME, 0) > 0 ]]>
		<if test="searchText != null and searchText != ''">
			AND URName LIKE '%'||#{searchText}||'%'
		</if>
		ORDER BY USERCODE, STARTDATE
		<include refid="oracle.include.pagingFooter" />
	</select>
	
	<insert id="insertAttendRewardHistory" parameterType="cmap">
		INSERT INTO VM_VACATIONPLAN_HISTORY (
			YEAR
			, UR_CODE
			, REWARDMONTH
			, REWARDSTARTDATE
			, REWARDENDDATE
			, DAYEXTENTIME
			, HOLIDAYEXTENTIME
			, REWARDVACDAY
			, REMAINTIME
			, STATUS
			, "Comment"
			, REGISTERCODE
			, REGISTDATE
			, MODIFYERCODE
			, MODIFYDATE
		) VALUES (
			#{Year}
			, #{UserCode}
			, #{RewardMonth}
			, #{StartDate}
			, #{EndDate}
			, #{ExtenAc}
			, #{HoliAc}
			, #{RewardDay}
			, #{RemainTime}
			, #{ApprovalStatus}
			, #{ApprovalComment}
			, #{ApprovalCode}
			, SYSDATE
			, #{ApprovalCode}
			, SYSDATE
		)
	</insert>  
	
	<insert id="insertAttendReward" parameterType="cmap">
		MERGE INTO VM_VACATIONPLAN
		USING DUAL
			ON (UR_CODE = #{UserCode} AND VacKind = #{VacKind} AND UseStartDate = CONCAT(#{Year},'0101') AND UseEndDate = CONCAT(#{Year},'1231') )
		WHEN MATCHED THEN
			UPDATE SET
				VacDay = NVL(VacDay, 0) + #{RewardDay}
				, VmComment = NVL(VmComment,'')||'|'||#{ApprovalComment}
		WHEN NOT MATCHED THEN
			INSERT (
				UR_CODE
				, YEAR
				, VacKind
				, UseStartDate
				, UseEndDate
				, VacDay
				, DeptCode, DeptName, VmComment, RegistDate
			) VALUES (
				#{UserCode}
				, #{Year}
				, #{VacKind}
				, CONCAT(#{Year},'0101')
				, CONCAT(#{Year},'1231')
				, #{RewardDay}
				, #{DeptCode}, #{DeptName}, #{ApprovalComment}, SYSDATE
			)
	</insert>


	<insert id="insertAttendRewardV2" parameterType="cmap">
		MERGE INTO VM_VACATIONPLAN
		USING DUAL
			ON (UR_CODE = #{UserCode} AND VacKind = #{VacKind}
			AND UseStartDate = CONCAT(#{Year},(select TO_CHAR(TO_DATE(REPLACE(EnterDate,'-',''),'YYYYMMDD'),'MMDD') from sys_object_user where UserCode = #{UserCode}))
			AND UseEndDate = CONCAT(#{Year},(select TO_CHAR(ADD_MONTHS(TO_DATE(REPLACE(EnterDate,'-',''),'YYYYMMDD'), 12)-1,'MMDD') from sys_object_user where UserCode = #{UserCode}))
		WHEN MATCHED THEN
		UPDATE SET
			VacDay = NVL(VacDay, 0) + #{RewardDay}
			, VmComment = NVL(VmComment,'')||'|'||#{ApprovalComment}
		WHEN NOT MATCHED THEN
		INSERT (
			UR_CODE
			, YEAR
			, VacKind
			, UseStartDate
			, UseEndDate
			, VacDay
			, DeptCode, DeptName, VmComment, RegistDate
		) VALUES (
			#{UserCode}
			, #{Year}
			, #{VacKind}
			, CONCAT(#{Year},(select TO_CHAR(TO_DATE(REPLACE(EnterDate,'-',''),'YYYYMMDD'),'MMDD') from sys_object_user where UserCode = #{UserCode}))
			, CONCAT(#{Year},(select TO_CHAR(ADD_MONTHS(TO_DATE(REPLACE(EnterDate,'-',''),'YYYYMMDD'), 12)-1,'MMDD') from sys_object_user where UserCode = #{UserCode}))
			, #{RewardDay}
			, #{DeptCode}, #{DeptName}, #{ApprovalComment}, SYSDATE
		)
	</insert>
	
	<select id="getRewardDetailListCnt"  parameterType="cmap" resultType= "java.lang.Long">
		SELECT
			COUNT(EXHOSEQ)
		FROM ATTEND_COMMUTING_MST CM
			JOIN ATTEND_EXTENSIONHOLIDAY AME ON CM.USERCODE = AME.USERCODE AND CM.TARGETDATE = AME.JOBDATE AND AME.APPROVALSTS = 'Y'
		WHERE TARGETDATE BETWEEN TO_DATE(#{StartDate}, 'YYYYMMDD') AND TO_DATE(#{EndDate}, 'YYYYMMDD')
			AND CM.USERCODE = #{UserCode}
	</select>

	<select id="getRewardDetailList"  parameterType="cmap" resultType= "cmap">
		<include refid="oracle.include.pagingHeader" />
		SELECT
			UserCode AS "UserCode"
			, TargetDate AS "TargetDate"
			, AttDayStartTime||' ~ '||AttDayEndTime AS "AttDayTime"
			, StartTime||' ~ '||EndTime AS "AttExtDayTime"
			, AttDayStartTime AS "AttDayStartTime"
			, AttDayEndTime AS "AttDayEndTime"
			, StartTime AS "StartTime"
			, EndTime AS "EndTime"
			, WorkTime AS "WorkTime"
			, JobStsName AS "JobStsName"
			, HolidayFlag AS "HolidayFlag"
			, CASE WHEN JobStsName = 'O' THEN
					ExtenAc
				ELSE
					HoliAc
				END AS "ExtenAc"
			, CASE WHEN JobStsName = 'O' THEN
					ExtenDAc
				ELSE
					CASE WHEN HolidayFlag = '2' THEN
						OffDAc
					ELSE
						HoliDAc
					END
				END AS "ExtenDAc"
			, CASE WHEN JobStsName = 'O' THEN
					ExtenNAc
				ELSE
					CASE WHEN HolidayFlag = '2' THEN
						OffNAc
					ELSE
						HoliNAc
					END
				END AS "ExtenNAc"
			, CASE WHEN AssYn = 'Y' THEN
					AttDayAc + 0
				ELSE
					AttReal + VacTime
				END AS "AttAc"
		FROM (
			SELECT
				CM.USERCODE AS UserCode
				, TO_CHAR(TARGETDATE, 'YYYY-MM-DD') AS TargetDate
				, ATTAC AS AttAc
				, EXTENAC AS ExtenAc
				, HOLIAC AS HoliAc
				, TO_CHAR(CM.ATTDAYSTARTTIME, 'YYYY-MM-DD HH24:MI') AS AttDayStartTime
				, TO_CHAR(CM.ATTDAYENDTIME, 'YYYY-MM-DD HH24:MI') AS AttDayEndTime
				, TO_CHAR(TO_DATE(AME.STARTTIME, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI') AS StartTime
				, TO_CHAR(TO_DATE(AME.ENDTIME, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI') AS EndTime
				, AME.WORKTIME AS WorkTime
				, AME.JOBSTSNAME AS JobStsName
				, AME.HOLIDAYFLAG AS HolidayFlag
				, NVL(CASE WHEN AME.JOBSTSNAME = 'O' THEN FN_ATTEND_GETNIGHTDAYTIMEV2(TO_DATE(AME.STARTTIME, 'YYYY-MM-DD HH24:MI:SS'), TO_DATE(AME.ENDTIME, 'YYYY-MM-DD HH24:MI:SS'), #{NightStartTime}, #{NightEndTime}, AME.IdleTime, 'D') ELSE 0 END, 0) AS ExtenDAc
				, NVL(CASE WHEN AME.JOBSTSNAME = 'O' THEN FN_ATTEND_GETNIGHTDAYTIMEV2(TO_DATE(AME.STARTTIME, 'YYYY-MM-DD HH24:MI:SS'), TO_DATE(AME.ENDTIME, 'YYYY-MM-DD HH24:MI:SS'), #{NightStartTime}, #{NightEndTime}, AME.IdleTime, 'N') ELSE 0 END, 0) AS ExtenNAc
				, NVL(CASE WHEN AME.JOBSTSNAME = 'H' AND NVL(AME.HOLIDAYFLAG, '0') = '0' THEN FN_ATTEND_GETNIGHTDAYTIMEV2(TO_DATE(AME.STARTTIME, 'YYYY-MM-DD HH24:MI:SS'), TO_DATE(AME.ENDTIME, 'YYYY-MM-DD HH24:MI:SS'), #{HoliNightStartTime}, #{HoliNightEndTime}, AME.IdleTime, 'D') ELSE 0 END, 0) AS HoliDAc
				, NVL(CASE WHEN AME.JOBSTSNAME = 'H' AND NVL(AME.HOLIDAYFLAG, '0') = '0' THEN FN_ATTEND_GETNIGHTDAYTIMEV2(TO_DATE(AME.STARTTIME, 'YYYY-MM-DD HH24:MI:SS'), TO_DATE(AME.ENDTIME, 'YYYY-MM-DD HH24:MI:SS'), #{HoliNightStartTime}, #{HoliNightEndTime}, AME.IdleTime, 'N') ELSE 0 END, 0) AS HoliNAc
				, NVL(CASE WHEN AME.JOBSTSNAME = 'H' AND NVL(AME.HOLIDAYFLAG, '0') = '2' THEN FN_ATTEND_GETNIGHTDAYTIMEV2(TO_DATE(AME.STARTTIME, 'YYYY-MM-DD HH24:MI:SS'), TO_DATE(AME.ENDTIME, 'YYYY-MM-DD HH24:MI:SS'), #{HoliNightStartTime}, #{HoliNightEndTime}, AME.IdleTime, 'D') ELSE 0 END, 0) AS OffDAc
				, NVL(CASE WHEN AME.JOBSTSNAME = 'H' AND NVL(AME.HOLIDAYFLAG, '0') = '2' THEN FN_ATTEND_GETNIGHTDAYTIMEV2(TO_DATE(AME.STARTTIME, 'YYYY-MM-DD HH24:MI:SS'), TO_DATE(AME.ENDTIME, 'YYYY-MM-DD HH24:MI:SS'), #{HoliNightStartTime}, #{HoliNightEndTime}, AME.IdleTime, 'N') ELSE 0 END, 0) AS OffNAc
				, case when  TO_DATE(#{UR_TimeZone},'YYYY-MM-DD HH24:MI:SS') <![CDATA[<]]> j.JobDate THEN 0 else j.AttDayAc end AttDayAc
				, NVL(j.AssYn,'N') AssYn
				, case when CAST(ame.HolidayFlag AS INTEGER) >= 1 then 0 else NVL(cm.AttReal,0) end AttReal
				, case when NVL(CAST(ame.HolidayFlag AS INTEGER),0) >= 1 then
						NVL(j.AttDayAC,0)
					else
						case when NVL(CAST(ame.HolidayFlag AS INTEGER),0) > 0 then
								NVL(j.AttDayAC,0)*NVL(CAST(ame.HolidayFlag AS INTEGER),0)
							else case when j.WorkSts = 'HOL' AND j.AttDayAC>0 then
								j.AttDayAC
						else 0  END end  end VacTime
			FROM ATTEND_COMMUTING_MST CM
			LEFT JOIN ATTEND_JOB j ON CM.UserCode = j.UserCode AND CM.targetdate = j.JobDate
			JOIN ATTEND_EXTENSIONHOLIDAY AME ON CM.USERCODE = AME.USERCODE AND CM.TARGETDATE = AME.JOBDATE AND AME.APPROVALSTS = 'Y'
			WHERE TARGETDATE BETWEEN TO_DATE(#{StartDate}, 'YYYYMMDD') AND TO_DATE(#{EndDate}, 'YYYYMMDD')
			AND CM.USERCODE = #{UserCode}
		) TBL
		<include refid="oracle.include.pagingFooter" />
	</select>
</mapper>

