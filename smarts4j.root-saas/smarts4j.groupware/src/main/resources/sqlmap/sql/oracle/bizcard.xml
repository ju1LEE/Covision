<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="groupware.bizcard">
    
<!--  연락처 정리(중복/유사) =============================================== -->

	<!-- 선택된 '전화번호' 삽입  -->
    <insert id="insertOrganizationBizCardPhone" parameterType="cmap" >
	    INSERT INTO BIZCARD_PHONEINFO (BizCardID, TypeCode, PhoneType, PhoneNumber)
           VALUES
			<foreach collection="PhoneChkY" item="item" separator=",">
			 	(#{BizCardY}, 'P', 'C', #{item})
			 </foreach>
 	</insert>
 	
    <!-- 선택된 '이메일' 삽입  -->
    <insert id="insertOrganizationBizCardEmail" parameterType="cmap" >
          INSERT INTO BIZCARD_EMAILINFO(BizCardID, TypeCode, Email)
          VALUES
			<foreach collection="EmailChkY" item="item" separator=",">
			 	(#{BizCardY}, 'P', #{item})
			 </foreach>
 	</insert>
	
   <!-- 유사 목록 가져오기(개수)  -->
   <select id="selectBizCardSimilarListCnt" parameterType="cmap" resultType="java.lang.Long">
		SELECT COUNT(*)
		FROM
		(
			SELECT DISTINCT PER.BizCardID
			, PER.Name
			, PER.CompanyID
			, PER.JobTitle
			, PER.ShareType
			, PER.RegisterID
			, PER.RegDeptCode
			, PER.RegComCode
			, PER.CompanyName AS ComName
			, (SELECT LISTAGG(PhoneNumber,'|') WITHIN GROUP(ORDER BY PhoneNumber) FROM  BIZCARD_PHONEINFO WHERE BizCardID = PER.BizCardID) AS PhoneNum
   			, (SELECT LISTAGG(EMAIL,'|') WITHIN GROUP(ORDER BY EMAIL) FROM  BIZCARD_EMAILINFO WHERE BizCardID = PER.BizCardID) AS EMAIL
	  		, (SELECT LISTAGG(DUP.Target,'|') WITHIN GROUP(ORDER BY DUP.Target)||'|' FROM dual) AS Target
			, PER.ImagePath
			FROM
			(
			    <choose>
						 <when test="Type == null or Type=='Name'.toString()">
								SELECT DISTINCT P1.BizCardID, DUP.Name AS Target
								FROM BIZCARD_PERSON P1
								INNER JOIN(
									SELECT Name, COUNT(BizCardID) AS CNT
									FROM BIZCARD_PERSON
									WHERE (ShareType = 'P' AND RegisterID = #{UR_Code})
										OR
										(ShareType = 'D' AND RegDeptCode = #{GR_Code})
										OR
										(ShareType = 'U' AND RegComCode = #{DN_Code})
										GROUP BY Name
										HAVING COUNT(BizCardID) <![CDATA[ > ]]> 1
								) DUP
								ON P1.Name = DUP.Name
								WHERE (P1.ShareType = 'P' AND P1.RegisterID = #{UR_Code})
									OR
									(P1.ShareType = 'D' AND P1.RegDeptCode = #{GR_Code})
									OR
									(P1.ShareType = 'U' AND P1.RegComCode = #{DN_Code})
							<!-- 	GROUP BY P1.BizCardID -->
						 </when>
						 <when test="Type =='Phone'.toString()">	
								SELECT DISTINCT PH.BizCardID, LISTAGG(DUP.PhoneNumber,'|') WITHIN GROUP(ORDER BY DUP.PhoneNumber) AS Target
								FROM BIZCARD_PHONEINFO PH
								INNER JOIN(
									SELECT PI.PhoneNumber, COUNT(PI.BizCardID) AS CNT
									FROM BIZCARD_PHONEINFO PI
									INNER JOIN BIZCARD_PERSON PER 
									ON PI.BizCardID = PER.BizCardID
									WHERE (TypeCode = 'P' AND RegisterID = #{UR_Code})
										OR
										(ShareType = 'D' AND RegDeptCode = #{GR_Code})
										OR
										(ShareType = 'U' AND RegComCode = #{DN_Code})
									GROUP BY PI.PhoneNumber
									HAVING COUNT(PI.BizCardID) <![CDATA[ > ]]> 1
								) DUP
								ON PH.PhoneNumber = DUP.PhoneNumber
								LEFT JOIN BIZCARD_PERSON PER
								ON PH.BizCardID = PER.BizCardID
								WHERE (TypeCode = 'P' AND RegisterID = #{UR_Code})
									OR
									(ShareType = 'D' AND RegDeptCode = #{GR_Code})
									OR
									(ShareType = 'U' AND RegComCode = #{DN_Code})
								GROUP BY PH.BizCardID
						 </when>	
						 <when test="Type =='Email'.toString()">			
								SELECT DISTINCT EM.BizCardID, LISTAGG(DUP.Email,'|') WITHIN GROUP(ORDER BY DUP.Email) AS Target
									FROM BIZCARD_EMAILINFO EM
									INNER JOIN(
										SELECT EI.Email, COUNT(EI.BizCardID) AS CNT
										FROM BIZCARD_EMAILINFO EI
										INNER JOIN BIZCARD_PERSON PER 
										ON EI.BizCardID = PER.BizCardID
										WHERE (TypeCode = 'P' AND RegisterID = #{UR_Code})
											OR
											(ShareType = 'D' AND RegDeptCode = #{GR_Code})
											OR
											(ShareType = 'U' AND RegComCode = #{DN_Code})
										GROUP BY EI.Email
										HAVING COUNT(EI.BizCardID) <![CDATA[ > ]]> 1
									) DUP
									ON EM.Email = DUP.Email
									LEFT JOIN BIZCARD_PERSON PER
									ON EM.BizCardID = PER.BizCardID
									WHERE (TypeCode = 'P' AND RegisterID = #{UR_Code})
										OR
										(ShareType = 'D' AND RegDeptCode = #{GR_Code})
										OR
										(ShareType = 'U' AND RegComCode = #{DN_Code})
									GROUP BY EM.BizCardID
						 </when>		
					 </choose>			
			) DUP 
			LEFT OUTER JOIN BIZCARD_PERSON PER ON DUP.BizCardID = PER.BizCardID
			<!-- GROUP BY DUP.BizCardID -->
		) TB
		ORDER BY TB.Target ASC
	</select>
	
   <!-- 유사 목록 가져오기(리스트)  -->
   <select id="selectBizCardSimilarList" parameterType="cmap" resultType="cmap">
 		SELECT TB.BizCardID AS "BizCardID"
 		     , TB.Name AS "Name"
 		     , TB.CompanyID AS "CompanyID"
 		     , TB.JobTitle AS "JobTitle"
 		     , TB.ShareType AS "ShareType"
 		     , TB.RegisterID AS "RegisterID"
 		     , TB.RegDeptCode AS "RegDeptCode"
 		     , TB.RegComCode AS "RegComCode"
 		     , TB.ComName AS "ComName"
 		     , TB.PhoneNum AS "PhoneNum"
 		     , TB.EMAIL AS "EMAIL"
 		     , TB.Target AS "Target"
 		     , TB.ImagePath AS "ImagePath"
			FROM
		(
			 SELECT DISTINCT PER.BizCardID 
		   		,   PER.Name
				,   PER.CompanyID
				,   PER.JobTitle
				,   PER.ShareType
				,   PER.RegisterID
				,   PER.RegDeptCode
				,   PER.RegComCode
				,   PER.CompanyName AS ComName
				,	(SELECT  LISTAGG(PhoneNumber,'|') WITHIN GROUP (ORDER BY PhoneNumber) FROM  BIZCARD_PHONEINFO WHERE BizCardID = PER.BizCardID) AS PhoneNum
   				,   (SELECT  LISTAGG(EMAIL,'|') WITHIN GROUP (ORDER BY EMAIL) FROM  BIZCARD_EMAILINFO WHERE BizCardID = PER.BizCardID) AS EMAIL
	  			,	(SELECT  LISTAGG(DUP.Target,'|') WITHIN GROUP (ORDER BY DUP.Target)||'|' FROM dual) AS Target
   				,   PER.ImagePath
			FROM
			(
			    <choose>
						 <when test="Type == null or Type=='Name'.toString()">
								SELECT DISTINCT P1.BizCardID, DUP.Name AS Target
								FROM BIZCARD_PERSON P1
								INNER JOIN(
									SELECT Name, COUNT(BizCardID) AS CNT
									FROM BIZCARD_PERSON
								WHERE (ShareType = 'P' AND RegisterID = #{UR_Code})
									OR
									(ShareType = 'D' AND RegDeptCode = #{GR_Code})
									OR
									(ShareType = 'U' AND RegComCode = #{DN_Code})
									GROUP BY Name
									HAVING COUNT(BizCardID) <![CDATA[ > ]]> 1
								) DUP
								ON P1.Name = DUP.Name
								WHERE (P1.ShareType = 'P' AND P1.RegisterID = #{UR_Code})
									OR
									(P1.ShareType = 'D' AND P1.RegDeptCode = #{GR_Code})
									OR
									(P1.ShareType = 'U' AND P1.RegComCode = #{DN_Code})
							<!-- 	GROUP BY P1.BizCardID -->
						 </when>
						 <when test="Type =='Phone'.toString()">	
								SELECT DISTINCT PH.BizCardID, LISTAGG(DUP.PhoneNumber,'|') WITHIN GROUP(ORDER BY DUP.PhoneNumber) AS Target
								FROM BIZCARD_PHONEINFO PH
								INNER JOIN(
									SELECT PI.PhoneNumber, COUNT(PI.BizCardID) AS CNT
									FROM BIZCARD_PHONEINFO PI
									INNER JOIN BIZCARD_PERSON PER 
									ON PI.BizCardID = PER.BizCardID
									WHERE (TypeCode = 'P' AND RegisterID = #{UR_Code})
										OR
										(ShareType = 'D' AND RegDeptCode = #{GR_Code})
										OR
										(ShareType = 'U' AND RegComCode = #{DN_Code})
									GROUP BY PI.PhoneNumber
									HAVING COUNT(PI.BizCardID) <![CDATA[ > ]]> 1
								) DUP
								ON PH.PhoneNumber = DUP.PhoneNumber
								LEFT JOIN BIZCARD_PERSON PER
								ON PH.BizCardID = PER.BizCardID
								WHERE (TypeCode = 'P' AND RegisterID = #{UR_Code})
									OR
									(ShareType = 'D' AND RegDeptCode = #{GR_Code})
									OR
									(ShareType = 'U' AND RegComCode = #{DN_Code})
								GROUP BY PH.BizCardID
						 </when>	
						 <when test="Type =='Email'.toString()">			
								SELECT DISTINCT EM.BizCardID, LISTAGG(DUP.Email,'|') WITHIN GROUP(ORDER BY DUP.Email) AS Target
								FROM BIZCARD_EMAILINFO EM
								INNER JOIN(
									SELECT EI.Email, COUNT(EI.BizCardID) AS CNT
										FROM BIZCARD_EMAILINFO EI
										INNER JOIN BIZCARD_PERSON PER 
									ON EI.BizCardID = PER.BizCardID
									WHERE (TypeCode = 'P' AND RegisterID = #{UR_Code})
										OR
										(ShareType = 'D' AND RegDeptCode = #{GR_Code})
										OR
										(ShareType = 'U' AND RegComCode = #{DN_Code})
									GROUP BY EI.Email
									HAVING COUNT(EI.BizCardID) <![CDATA[ > ]]> 1
									) DUP
								ON EM.Email = DUP.Email
								LEFT JOIN BIZCARD_PERSON PER
								ON EM.BizCardID = PER.BizCardID
								WHERE (TypeCode = 'P' AND RegisterID = #{UR_Code})
									OR
									(ShareType = 'D' AND RegDeptCode = #{GR_Code})
									OR
									(ShareType = 'U' AND RegComCode = #{DN_Code})
								GROUP BY EM.BizCardID
						 </when>		
					 </choose>			
			) DUP 
			LEFT OUTER JOIN BIZCARD_PERSON PER ON DUP.BizCardID = PER.BizCardID
			<!-- GROUP BY DUP.BizCardID -->
		) TB
		ORDER BY TB.Target ASC
	</select>						    						    
					
   	    	
<!-- 목록 =============================================== -->
	
	<!-- 즐겨찾기 목록 가져오기(개수)  -->
    <select id="selectBizCardFavoriteListCnt" parameterType="cmap" resultType="java.lang.Long">
    	/* queryID : groupware.bizcard.selectBizCardFavoriteListCnt */
		SELECT COUNT(*) 
		  FROM (
			SELECT DISTINCT
						A.BizCardID
						, A.Name
						, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'C' AND ROWNUM = 1 ), '') AS PhoneNum
						, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'H' AND ROWNUM = 1 ), '') AS HomePhoneNum
						, NVL((SELECT EMAIL FROM BIZCARD_EMAILINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND ROWNUM = 1 ), '') AS EMAIL
						, NVL(A.CompanyName, '') AS ComName						
						, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'T' AND ROWNUM = 1), '') AS ComPhoneNum
						, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'F' AND ROWNUM = 1), '') AS FaxNum
						, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'E' AND ROWNUM = 1), '') AS EtcNum
						, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'D' AND ROWNUM = 1), '') AS DirectNum
						, NVL((SELECT PhoneName FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'D' AND ROWNUM = 1), '') AS PhoneName
						, A.JobTitle
						, ShareType
						, 'Y' AS IsFavorite
						, NVL(A.ModifyDate, A.RegistDate) AS ModifyDate
						, A.ImagePath
				FROM BIZCARD_PERSON A
						INNER JOIN BIZCARD_FAVORITEINFO B ON A.BizCardID=B.BizCardID AND B.UR_Code = #{UR_Code} 
				<trim prefix="WHERE" prefixOverrides="AND |OR ">
				    	<if test="UR_Code != null and GR_Code !=null and DN_Code !=null">
							(
								(A.RegisterID = #{UR_Code} AND A.ShareType = 'P')  
	 	             			OR
	 	             			(A.RegDeptCode = #{GR_Code} AND A.ShareType = 'D') 
	 	             			OR
	 	             			(A.RegComCode = #{DN_Code} AND A.ShareType = 'U') 
		             		)
						</if>
						<if test="startDate != null and startDate != ''">
			 	            AND NVL(A.ModifyDate, A.RegistDate) <![CDATA[ >= ]]> TO_DATE(#{startDate}, 'YYYY-MM-DD HH24:MI:SS')
			 	        </if>
			 	        <if test="endDate != null and endDate != ''">
			 	            AND NVL(A.ModifyDate, A.RegistDate) <![CDATA[ <= ]]> TO_DATE(#{endDate}, 'YYYY-MM-DD HH24:MI:SS')
			 	        </if>
						<if test="searchWord != null and searchWord != '' and searchType != null and searchType != ''" >
						    <choose>
								 <when test="searchType == 'Name'.toString()">
									 AND A.Name  like '%'||#{searchWord}||'%'
								 </when>
								 <when test="searchType == 'EMAIL'.toString()">
								     AND (SELECT EMAIL FROM BIZCARD_EMAILINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND EMAIL like '%'||#{searchWord}||'%' AND ROWNUM = 1) IS NOT NULL
								 </when>
								 <!-- 21.08.12 전화번호 검색 오류 수정, 시작. 검색결과가 다중일 때 오류.
								 <when test="searchType == 'PhoneNumber'.toString()">
								     AND (SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'C' AND PhoneNumber like '%'||#{searchWord}||'%' AND ROWNUM = 1) IS NOT NULL
								 </when>
								 21.08.12 전화번호 검색 오류 수정, 끝 -->
								 <when test="searchType == 'Multi'.toString()">
								     AND  (
								     	(A.Name  like '%'||#{searchWord}||'%')
								     	OR
								     	((SELECT EMAIL FROM BIZCARD_EMAILINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND EMAIL like '%'||#{searchWord}||'%' AND ROWNUM = 1) IS NOT NULL)
								     	OR
								     	((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'C' AND PhoneNumber like '%'||#{searchWord}||'%' AND ROWNUM = 1 ) IS NOT NULL)
								     )
								 </when>
							 </choose>
					 	</if>
				 	    <choose>
							 <when test="tabFilter == 'ENG'.toString()">
								 AND SUBSTR(A.Name,1,1) BETWEEN 'A' AND 'z'
							 </when>
							 <when test="tabFilter == 'NUM'.toString()">
								 AND A.Name BETWEEN '0' AND '9'
							 </when>
							 <when test="tabFilter == 'ㄱ'.toString()">
								 AND (REGEXP_LIKE (A.Name,'^(ㄱ|ㄲ)') OR ( A.Name <![CDATA[ >= ]]>  '가' AND A.Name <![CDATA[ < ]]>  '나' ))
							 </when>
							 <when test="tabFilter == 'ㄴ'.toString()">
								 AND (REGEXP_LIKE (A.Name,'^ㄴ') OR ( A.Name <![CDATA[ >= ]]> '나' AND A.Name <![CDATA[ < ]]> '다' ))
							 </when>
							 <when test="tabFilter == 'ㄷ'.toString()">
								 AND (REGEXP_LIKE (A.Name ,'^(ㄷ|ㄸ)') OR ( A.Name <![CDATA[ >= ]]> '다' AND A.Name <![CDATA[ < ]]> '라' ))
							 </when>
							 <when test="tabFilter == 'ㄹ'.toString()">
								 AND (REGEXP_LIKE (A.Name, '^ㄹ') OR ( A.Name <![CDATA[ >= ]]> '라' AND A.Name <![CDATA[ < ]]> '마' ))
							 </when>
							 <when test="tabFilter == 'ㅁ'.toString()">
								 AND (REGEXP_LIKE (A.Name,'^ㅁ') OR ( A.Name <![CDATA[ >= ]]> '마' AND A.Name <![CDATA[ < ]]> '바' ))
							 </when>
							 <when test="tabFilter == 'ㅂ'.toString()">
								 AND (REGEXP_LIKE (A.Name,'^ㅂ') OR ( A.Name <![CDATA[ >= ]]> '바' AND A.Name <![CDATA[ < ]]> '사' ))
							 </when>
							 <when test="tabFilter == 'ㅅ'.toString()">
								 AND (REGEXP_LIKE (A.Name,'^(ㅅ|ㅆ)') OR ( A.Name <![CDATA[ >= ]]> '사' AND A.Name <![CDATA[ < ]]> '아' ))
							 </when>
							 <when test="tabFilter == 'ㅇ'.toString()">
								 AND (REGEXP_LIKE (A.Name,'^ㅇ') OR ( A.Name <![CDATA[ >= ]]> '아' AND A.Name <![CDATA[ < ]]> '자' ))
							 </when>
							 <when test="tabFilter == 'ㅈ'.toString()">
								 AND (REGEXP_LIKE (A.Name ,'^(ㅈ|ㅉ)') OR ( A.Name <![CDATA[ >= ]]> '자' AND A.Name <![CDATA[ < ]]> '차' ))
							 </when>
							 <when test="tabFilter == 'ㅊ'.toString()">
								 AND (REGEXP_LIKE (A.Name,'^ㅊ') OR ( A.Name <![CDATA[ >= ]]> '차' AND A.Name <![CDATA[ < ]]> '카' ))
							 </when>
							 <when test="tabFilter == 'ㅋ'.toString()">
								 AND (REGEXP_LIKE (A.Name,'^ㅋ') OR ( A.Name <![CDATA[ >= ]]> '카' AND A.Name <![CDATA[ < ]]> '타' ))
							 </when>
							 <when test="tabFilter == 'ㅌ'.toString()">
								 AND (REGEXP_LIKE (A.Name,'^ㅌ') OR ( A.Name <![CDATA[ >= ]]> '타' AND A.Name <![CDATA[ < ]]> '파' ))
							 </when>
							 <when test="tabFilter == 'ㅍ'.toString()">
								 AND (REGEXP_LIKE (A.Name,'^ㅍ') OR ( A.Name <![CDATA[ >= ]]> '파' AND A.Name <![CDATA[ < ]]> '하' ))
							 </when>
							 <when test="tabFilter == 'ㅎ'.toString()">
								 AND (REGEXP_LIKE (A.Name, '^ㅎ') OR ( A.Name <![CDATA[ >= ]]> '하'))
							 </when>
							 <when test="tabFilter == 'ETC'.toString()">
								 AND <![CDATA[ NOT REGEXP_LIKE (A.Name, '^[0-9a-zA-Z가-힣]')  ]]>
							 </when>
						 </choose>
			 	     </trim>
		 ) TB
		 <!-- 21.08.12 전화번호 검색 오류 수정, 시작. 검색결과가 다중일 때 오류 수정. -->
		 <trim prefix="WHERE" prefixOverrides="AND |OR ">
		 	<if test="searchWord != null and searchType != null" >
		 		<choose>
		 			<when test="searchType == 'PhoneNumber'.toString()">
		 				AND TB.PhoneNum like '%'||#{searchWord}||'%'
		 			</when>
		 		</choose>
		 	</if>
		 </trim>
		 <!-- 21.08.12 전화번호 검색 오류 수정, 끝 -->
 	</select>
 	
    <!-- 즐겨찾기 목록 가져오기(리스트)  -->
 	<select id="selectBizCardFavoriteList" parameterType="cmap" resultType="cmap">
 		/* queryID : groupware.bizcard.selectBizCardFavoriteList */
 	    <include refid="oracle.include.pagingHeader"/>
 	    SELECT DISTINCT
 	    	'BizCard' AS "BizCardType"
		  , TB.BizCardID AS "BizCardID"
 	      , TB.Name AS "Name"
 	      , TB.PhoneNum AS "PhoneNum"
 	      , TB.HomePhoneNum AS "HomePhoneNum"
 	      , TB.EMAIL AS "EMAIL"
 	      , TB.ComName AS "ComName"
 	      , TB.ComPhoneNum AS "ComPhoneNum"
		  , TB.FaxNum AS "FaxNum"
		  , TB.EtcNum AS "EtcNum"
		  , TB.DirectNum AS "DirectNum"	 
		  , TB.PhoneName AS "PhoneName"
 	      , TB.JobTitle AS "JobTitle"
 	      , TB.ShareType AS "ShareType"
 	      , TB.IsFavorite AS "IsFavorite"
 	      , TB.ModifyDate AS "Date" 
 	      , TB.ImagePath  AS "ImagePath"
 	      , TB.DeptName AS "DeptName"
		  FROM (
			SELECT  A.BizCardID
						, A.Name
						, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'C' AND ROWNUM = 1 ), '') AS PhoneNum
						, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'H' AND ROWNUM = 1), '') AS HomePhoneNum
						, NVL((SELECT EMAIL FROM BIZCARD_EMAILINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND ROWNUM = 1 ), '') AS EMAIL
						, NVL(A.CompanyName, '') AS ComName
						, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'T' AND ROWNUM = 1), '') AS ComPhoneNum
						, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'F' AND ROWNUM = 1), '') AS FaxNum
						, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'E' AND ROWNUM = 1), '') AS EtcNum
						, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'D' AND ROWNUM = 1), '') AS DirectNum
						, NVL((SELECT PhoneName FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'D' AND ROWNUM = 1), '') AS PhoneName
						, A.JobTitle
						, ShareType
						, 'Y' AS IsFavorite
						, NVL(A.ModifyDate, A.RegistDate) AS ModifyDate
						, A.ImagePath
						, A.DeptName
				FROM BIZCARD_PERSON A
						INNER JOIN BIZCARD_FAVORITEINFO B ON A.BizCardID=B.BizCardID AND B.UR_Code = #{UR_Code} 
				<trim prefix="WHERE" prefixOverrides="AND |OR ">
				       <if test="UR_Code != null and GR_Code !=null and DN_Code !=null">
							(
					           (A.RegisterID = #{UR_Code} AND A.ShareType = 'P') 
	 	             			OR
	 	             			(A.RegDeptCode = #{GR_Code} AND A.ShareType = 'D') 
	 	             			OR
	 	             			(A.RegComCode = #{DN_Code} AND A.ShareType = 'U') 
 	             			)
						</if>
						<if test="startDate != null and startDate != ''">
						 	AND NVL(A.ModifyDate, A.RegistDate) <![CDATA[ >= ]]> TO_DATE(#{startDate}, 'YYYY-MM-DD HH24:MI:SS')
			 	        </if>
			 	        <if test="endDate != null and endDate != ''">
			 	            AND NVL(A.ModifyDate, A.RegistDate) <![CDATA[ <= ]]> TO_DATE(#{endDate}, 'YYYY-MM-DD HH24:MI:SS')
			 	        </if>
						<if test="searchWord != null and searchWord != '' and searchType != null and searchType != ''" >
						    <choose>
								 <when test="searchType == 'Name'.toString()">
									 AND A.Name  like '%'||#{searchWord}||'%'
								 </when>
								 <when test="searchType == 'EMAIL'.toString()">
								     AND (SELECT EMAIL FROM BIZCARD_EMAILINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND EMAIL like '%'||#{searchWord}||'%' AND ROWNUM = 1) IS NOT NULL
								 </when>
								 <!-- 21.08.12 전화번호 검색 오류 수정, 시작. 검색결과가 다중일 때 오류.
								 <when test="searchType == 'PhoneNumber'.toString()">
								     AND (SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'C' AND PhoneNumber like '%'||#{searchWord}||'%' AND ROWNUM = 1) IS NOT NULL
								 </when>
								 21.08.12 전화번호 검색 오류 수정, 끝 -->
								 <when test="searchType == 'Multi'.toString()">
								     AND (
								     	(A.Name  like '%'||#{searchWord}||'%')
								     	OR
								     	((SELECT EMAIL FROM BIZCARD_EMAILINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND EMAIL like '%'||#{searchWord}||'%' AND ROWNUM = 1) IS NOT NULL)
								     	OR
								     	(SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'C' AND PhoneNumber like '%'||#{searchWord}||'%' AND ROWNUM = 1) IS NOT NULL
								     	)
								 </when>
							 </choose>
					 	</if>
				 	    <choose>
							 <when test="tabFilter == 'ENG'.toString()">
								 AND SUBSTR(A.Name,1,1) BETWEEN 'A' AND 'z'
							 </when>
							 <when test="tabFilter == 'NUM'.toString()">
								 AND A.Name BETWEEN '0' AND '9'
							 </when>
							 <when test="tabFilter == 'ㄱ'.toString()">
								 AND (REGEXP_LIKE (A.Name,'^(ㄱ|ㄲ)') OR ( A.Name <![CDATA[ >= ]]>  '가' AND A.Name <![CDATA[ < ]]>  '나' ))
							 </when>
							 <when test="tabFilter == 'ㄴ'.toString()">
								 AND (REGEXP_LIKE (A.Name,'^ㄴ') OR ( A.Name <![CDATA[ >= ]]> '나' AND A.Name <![CDATA[ < ]]> '다' ))
							 </when>
							 <when test="tabFilter == 'ㄷ'.toString()">
								 AND (REGEXP_LIKE (A.Name ,'^(ㄷ|ㄸ)') OR ( A.Name <![CDATA[ >= ]]> '다' AND A.Name <![CDATA[ < ]]> '라' ))
							 </when>
							 <when test="tabFilter == 'ㄹ'.toString()">
								 AND (REGEXP_LIKE (A.Name, '^ㄹ') OR ( A.Name <![CDATA[ >= ]]> '라' AND A.Name <![CDATA[ < ]]> '마' ))
							 </when>
							 <when test="tabFilter == 'ㅁ'.toString()">
								 AND (REGEXP_LIKE (A.Name,'^ㅁ') OR ( A.Name <![CDATA[ >= ]]> '마' AND A.Name <![CDATA[ < ]]> '바' ))
							 </when>
							 <when test="tabFilter == 'ㅂ'.toString()">
								 AND (REGEXP_LIKE (A.Name,'^ㅂ') OR ( A.Name <![CDATA[ >= ]]> '바' AND A.Name <![CDATA[ < ]]> '사' ))
							 </when>
							 <when test="tabFilter == 'ㅅ'.toString()">
								 AND (REGEXP_LIKE (A.Name,'^(ㅅ|ㅆ)') OR ( A.Name <![CDATA[ >= ]]> '사' AND A.Name <![CDATA[ < ]]> '아' ))
							 </when>
							 <when test="tabFilter == 'ㅇ'.toString()">
								 AND (REGEXP_LIKE (A.Name,'^ㅇ') OR ( A.Name <![CDATA[ >= ]]> '아' AND A.Name <![CDATA[ < ]]> '자' ))
							 </when>
							 <when test="tabFilter == 'ㅈ'.toString()">
								 AND (REGEXP_LIKE (A.Name ,'^(ㅈ|ㅉ)') OR ( A.Name <![CDATA[ >= ]]> '자' AND A.Name <![CDATA[ < ]]> '차' ))
							 </when>
							 <when test="tabFilter == 'ㅊ'.toString()">
								 AND (REGEXP_LIKE (A.Name,'^ㅊ') OR ( A.Name <![CDATA[ >= ]]> '차' AND A.Name <![CDATA[ < ]]> '카' ))
							 </when>
							 <when test="tabFilter == 'ㅋ'.toString()">
								 AND (REGEXP_LIKE (A.Name,'^ㅋ') OR ( A.Name <![CDATA[ >= ]]> '카' AND A.Name <![CDATA[ < ]]> '타' ))
							 </when>
							 <when test="tabFilter == 'ㅌ'.toString()">
								 AND (REGEXP_LIKE (A.Name,'^ㅌ') OR ( A.Name <![CDATA[ >= ]]> '타' AND A.Name <![CDATA[ < ]]> '파' ))
							 </when>
							 <when test="tabFilter == 'ㅍ'.toString()">
								 AND (REGEXP_LIKE (A.Name,'^ㅍ') OR ( A.Name <![CDATA[ >= ]]> '파' AND A.Name <![CDATA[ < ]]> '하' ))
							 </when>
							 <when test="tabFilter == 'ㅎ'.toString()">
								 AND (REGEXP_LIKE (A.Name, '^ㅎ') OR ( A.Name <![CDATA[ >= ]]> '하'))
							 </when>
							 <when test="tabFilter == 'ETC'.toString()">
								 AND <![CDATA[ NOT REGEXP_LIKE (A.Name, '^[0-9a-zA-Z가-힣]')  ]]>
							 </when>
						 </choose>
			 	     </trim>
		 ) TB
		<!-- 21.08.12 전화번호 검색 오류 수정, 시작. 검색결과가 다중일 때 오류 발생. -->
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="searchWord != null and searchType != null" >
				<if test="searchType == 'PhoneNumber'.toString()">
					AND (TB.PhoneNum like '%'||#{searchWord}||'%')
				</if>
			</if>
		</trim>
		<!-- 21.08.12 전화번호 검색 오류 수정, 끝 -->
			 <trim prefix="ORDER BY">
				<if test="sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
					TB.Name ASC <include refid="oracle.include.listOrderBy"/>
			    </if> 
				<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection != ''">
					<choose>
						<when test='sortColumn.equalsIgnoreCase("PhoneNum")'>PhoneNum</when>
						<when test='sortColumn.equalsIgnoreCase("EMAIL")'>EMAIL</when>
						<when test='sortColumn.equalsIgnoreCase("ComName")'>ComName</when>
						<when test='sortColumn.equalsIgnoreCase("ComPhoneNum")'>ComPhoneNum</when>
						<when test='sortColumn.equalsIgnoreCase("JobTitle")'>JobTitle</when>
						<when test='sortColumn.equalsIgnoreCase("ShareType")'>ShareType</when>
						<otherwise>Name</otherwise>
					</choose>
					<choose>
						<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
						<otherwise> DESC</otherwise>
					</choose>
				</if>
			</trim>
			<include refid="oracle.include.pagingFooter"/>
 	</select>
 	<!-- 전체/개인/부서/회사 목록 가져오기(개수)  -->
    <select id="selectBizCardPersonListCnt" parameterType="cmap" resultType="java.lang.Long">
    	/* queryID : groupware.bizcard.selectBizCardPersonListCnt */
		SELECT COUNT(*) 
		FROM (
			SELECT A.BizCardID
					, A.Name
					, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'C' AND ROWNUM = 1), '') AS PhoneNum
					, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'H' AND ROWNUM = 1), '') AS HomePhoneNum
					, NVL((SELECT EMAIL FROM BIZCARD_EMAILINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND ROWNUM = 1 ), '') AS EMAIL
					, NVL(A.CompanyName, '') AS ComName
					, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'T' AND ROWNUM = 1), '') AS ComPhoneNum
					, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'F' AND ROWNUM = 1), '') AS FaxNum
					, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'E' AND ROWNUM = 1), '') AS EtcNum
					, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'D' AND ROWNUM = 1), '') AS DirectNum
					, NVL((SELECT PhoneName FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'D' AND ROWNUM = 1), '') AS PhoneName
					, A.JobTitle
					, COALESCE(IsFavorite, 'N') AS IsFavorite
					, NVL(A.ModifyDate, A.RegistDate) AS ModifyDate
					, A.ShareType
					, A.ImagePath
			FROM BIZCARD_PERSON A
				LEFT OUTER JOIN (SELECT DISTINCT BizCardID, 'Y' AS IsFavorite FROM BIZCARD_FAVORITEINFO WHERE UR_CODE=#{UR_Code}) B ON B.BizCardID=A.BizCardID
				<if test="searchWord != null and searchWord != '' and searchType != null and searchType != ''" >
				    <choose>
						 <when test="searchType == 'PhoneNumber'.toString()">
						     LEFT OUTER JOIN BIZCARD_PHONEINFO P ON P.BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'C'
						 </when>
						 <when test="searchType == 'EMAIL'.toString()">
						     LEFT OUTER JOIN BIZCARD_EMAILINFO E ON E.BizCardID=A.BizCardID AND E.TypeCode='P'
						 </when>
						 <when test="searchType == 'Multi'.toString()">
						     LEFT OUTER JOIN BIZCARD_PHONEINFO P ON P.BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'C'
						     LEFT OUTER JOIN BIZCARD_EMAILINFO E ON E.BizCardID=A.BizCardID AND E.TypeCode='P'
						 </when>
					 </choose>
				</if>
				<trim prefix="WHERE" prefixOverrides="AND |OR ">
					<if test="searchWord != null and searchWord != '' and searchType != null and searchType != ''" >
					    <choose>
							 <when test="searchType == 'Name'.toString()">
								 AND A.Name like '%'||#{searchWord}||'%'
							 </when>
							 <when test="searchType == 'EMAIL'.toString()">
							     AND (SELECT EMAIL FROM BIZCARD_EMAILINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND EMAIL like '%'||#{searchWord}||'%' AND ROWNUM = 1) IS NOT NULL
							 </when>
							 <when test="searchType == 'PhoneNumber'.toString()">
							     AND (SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'C' AND PhoneNumber like '%'||#{searchWord}||'%' AND ROWNUM = 1) IS NOT NULL
							 </when>
							 <when test="searchType == 'Multi'.toString()">
							     AND (
							     	(A.Name  like '%'||#{searchWord}||'%')
							     	OR
							     	((SELECT EMAIL FROM BIZCARD_EMAILINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND EMAIL like '%'||#{searchWord}||'%' AND ROWNUM = 1) IS NOT NULL)
							     	OR
							     	((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'C' AND PhoneNumber like '%'||#{searchWord}||'%' AND ROWNUM = 1) IS NOT NULL)	
							     )
							 </when>
						 </choose>
				 	</if>
				 	<choose>
				 	    <when test="shareType == 'P'.toString()">
					        AND A.RegisterID = #{UR_Code}
				 	    </when>
				 	    <when test="shareType == 'D'.toString()">
				 	        AND A.RegDeptCode = #{GR_Code}
				 	    </when>
				 	    <when test="shareType == 'U'.toString()">
				 	        AND A.RegComCode = #{DN_Code}
				 	    </when>
				 	    <otherwise>
				 	        AND (
						       		(A.RegisterID = #{UR_Code} AND A.ShareType = 'P') 
									OR (A.RegDeptCode = #{GR_Code} AND A.ShareType = 'D') 
				 	             	OR (A.RegComCode = #{DN_Code} AND A.ShareType = 'U') 
			 	             	)
				 	    </otherwise>
				 	</choose>
					<if test="startDate != null and startDate != ''">
		 	            AND NVL(A.ModifyDate, A.RegistDate) <![CDATA[ >= ]]> TO_DATE(#{startDate}, 'YYYY-MM-DD HH24:MI:SS')
		 	        </if>
		 	        <if test="endDate != null and endDate != ''">
		 	            AND NVL(A.ModifyDate, A.RegistDate) <![CDATA[ <= ]]> TO_DATE(#{endDate}, 'YYYY-MM-DD HH24:MI:SS')
		 	        </if>
					<if test="searchWord != null and searchWord != '' and searchType != null and searchType != ''" >
					    <choose>
							 <when test="searchType == 'Name'.toString()">
								 AND A.Name  like '%'||#{searchWord}||'%'
							 </when>
							 <when test="searchType == 'EMAIL'.toString()">
							     AND (E.EMAIL like '%'||#{searchWord}||'%')
							 </when>
							 <when test="searchType == 'PhoneNumber'.toString()">
							     AND (P.PhoneNumber like '%'||#{searchWord}||'%') 
							 </when>
							 <when test="searchType == 'Multi'.toString()">
							     AND  (
							     	(A.Name  like '%'||#{searchWord}||'%')
							     	OR (E.EMAIL like '%'||#{searchWord}||'%')
							     	OR (P.PhoneNumber like '%'||#{searchWord}||'%')	
							     )
							 </when>
						 </choose>
				 	</if>
			 	    <choose>
						<when test="tabFilter == 'ENG'.toString()">
							AND SUBSTR(A.Name,1,1) BETWEEN 'A' AND 'z'
						</when>
						<when test="tabFilter == 'NUM'.toString()">
							AND A.Name BETWEEN '0' AND '9'
						</when>
						<when test="tabFilter == 'ㄱ'.toString()">
							AND (REGEXP_LIKE (A.Name,'^(ㄱ|ㄲ)') OR ( A.Name <![CDATA[ >= ]]>  '가' AND A.Name <![CDATA[ < ]]>  '나' ))
						</when>
						<when test="tabFilter == 'ㄴ'.toString()">
							AND (REGEXP_LIKE (A.Name,'^ㄴ') OR ( A.Name <![CDATA[ >= ]]> '나' AND A.Name <![CDATA[ < ]]> '다' ))
						</when>
						<when test="tabFilter == 'ㄷ'.toString()">
							AND (REGEXP_LIKE(A.Name,'^(ㄷ|ㄸ)') OR ( A.Name <![CDATA[ >= ]]> '다' AND A.Name <![CDATA[ < ]]> '라' ))
						</when>
						<when test="tabFilter == 'ㄹ'.toString()">
							AND (REGEXP_LIKE (A.Name,'^ㄹ') OR ( A.Name <![CDATA[ >= ]]> '라' AND A.Name <![CDATA[ < ]]> '마' ))
						</when>
						<when test="tabFilter == 'ㅁ'.toString()">
							AND (REGEXP_LIKE (A.Name, '^ㅁ') OR ( A.Name <![CDATA[ >= ]]> '마' AND A.Name <![CDATA[ < ]]> '바' ))
						</when>
						<when test="tabFilter == 'ㅂ'.toString()">
							AND (REGEXP_LIKE (A.Name,'^ㅂ') OR ( A.Name <![CDATA[ >= ]]> '바' AND A.Name <![CDATA[ < ]]> '사' ))
						</when>
						<when test="tabFilter == 'ㅅ'.toString()">
							AND (REGEXP_LIKE (A.Name, '^(ㅅ|ㅆ)') OR ( A.Name <![CDATA[ >= ]]> '사' AND A.Name <![CDATA[ < ]]> '아' ))
						</when>
						<when test="tabFilter == 'ㅇ'.toString()">
							AND (REGEXP_LIKE (A.Name, '^ㅇ') OR ( A.Name <![CDATA[ >= ]]> '아' AND A.Name <![CDATA[ < ]]> '자' ))
						</when>
						<when test="tabFilter == 'ㅈ'.toString()">
							AND (REGEXP_LIKE (A.Name, '^(ㅈ|ㅉ)') OR ( A.Name <![CDATA[ >= ]]> '자' AND A.Name <![CDATA[ < ]]> '차' ))
						</when>
						<when test="tabFilter == 'ㅊ'.toString()">
							AND (REGEXP_LIKE (A.Name,  '^ㅊ') OR ( A.Name <![CDATA[ >= ]]> '차' AND A.Name <![CDATA[ < ]]> '카' ))
						</when>
						<when test="tabFilter == 'ㅋ'.toString()">
							AND (REGEXP_LIKE (A.Name,  '^ㅋ') OR ( A.Name <![CDATA[ >= ]]> '카' AND A.Name <![CDATA[ < ]]> '타' ))
						</when>
						<when test="tabFilter == 'ㅌ'.toString()">
							AND (REGEXP_LIKE (A.Name,'^ㅌ') OR ( A.Name <![CDATA[ >= ]]> '타' AND A.Name <![CDATA[ < ]]> '파' ))
						</when>
						<when test="tabFilter == 'ㅍ'.toString()">
							AND (REGEXP_LIKE (A.Name,'^ㅍ') OR ( A.Name <![CDATA[ >= ]]> '파' AND A.Name <![CDATA[ < ]]> '하' ))
						</when>
						<when test="tabFilter == 'ㅎ'.toString()">
							AND (REGEXP_LIKE (A.Name,'^ㅎ') OR ( A.Name <![CDATA[ >= ]]> '하'))
						</when>
						<when test="tabFilter == 'ETC'.toString()">
							AND <![CDATA[ NOT REGEXP_LIKE (A.Name, '^[0-9a-zA-Z가-힣]')  ]]>
						</when>
					 </choose>
					 <if test="groupID != null and groupID != ''">
			    			AND A.GroupID IN
							<foreach collection="groupID" item="item"  separator="," open="(" close=")">
							    #{item}
							</foreach>
					 </if>
		 	     </trim>
		 ) TB
 	</select>
 	
    <!-- 전체/개인/부서/회사 목록 가져오기(리스트)  -->
 	<select id="selectBizCardPersonList" parameterType="cmap" resultType="cmap">
 		/* queryID : groupware.bizcard.selectBizCardPersonList */
 	    <include refid="oracle.include.pagingHeader"/>
 	    SELECT TB.BizCardID AS "BizCardID"
 	         , TB.Name AS "Name"
 	         , TB.PhoneNum AS "PhoneNum"
 	         , TB.HomePhoneNum AS "HomePhoneNum"
 	         , TB.EMAIL AS "EMAIL"
 	         , TB.ComName AS "ComName"
 	         , TB.ComPhoneNum AS "ComPhoneNum"
			 , TB.FaxNum AS "FaxNum"
			 , TB.EtcNum AS "EtcNum"
			 , TB.DirectNum AS "DirectNum"	 
			 , TB.PhoneName AS "PhoneName"	 
 	         , TB.JobTitle AS "JobTitle"
 	         , TB.IsFavorite AS "IsFavorite"
 	         , TB.ModifyDate AS "Date"
 	         , TB.ShareType AS "ShareType" 
 	         , TB.ImagePath  AS "ImagePath"  
 	         , TB.DeptName AS "DeptName"
		  FROM (
			SELECT A.BizCardID
					, A.Name
					, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'C' AND ROWNUM = 1), '') AS PhoneNum
					, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'H' AND ROWNUM = 1), '') AS HomePhoneNum
					, NVL((SELECT EMAIL FROM BIZCARD_EMAILINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND ROWNUM = 1 ), '') AS EMAIL
					, NVL(A.CompanyName, '') AS ComName
					, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'T' AND ROWNUM = 1), '') AS ComPhoneNum
					, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'F' AND ROWNUM = 1), '') AS FaxNum
					, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'E' AND ROWNUM = 1), '') AS EtcNum
					, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'D' AND ROWNUM = 1), '') AS DirectNum
					, NVL((SELECT PhoneName FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'D' AND ROWNUM = 1), '') AS PhoneName
					, A.JobTitle
					, COALESCE(IsFavorite, 'N') AS IsFavorite
					, NVL(A.ModifyDate, A.RegistDate) AS ModifyDate
					, A.ShareType
					, A.ImagePath
					, A.DeptName
			FROM BIZCARD_PERSON A
					LEFT OUTER JOIN 
					(SELECT DISTINCT BizCardID, 'Y' AS IsFavorite FROM BIZCARD_FAVORITEINFO WHERE UR_CODE=#{UR_Code}) B ON B.BizCardID=A.BizCardID
				<trim prefix="WHERE" prefixOverrides="AND |OR ">
						<if test="shareType != null and shareType != '' and shareType != 'A'.toString()">
							A.ShareType = #{shareType}
						</if>
				 	    <choose>
				 	         <when test="shareType == 'P'.toString()">
				 	             AND A.RegisterID = #{UR_Code}
				 	         </when>
				 	         <when test="shareType == 'D'.toString()">
				 	             AND A.RegDeptCode = #{GR_Code}
				 	         </when>
				 	         <when test="shareType == 'U'.toString()">
				 	             AND A.RegComCode = #{DN_Code}
				 	         </when>
				 	         <otherwise>
				 	             AND (
				 	             			(A.RegisterID = #{UR_Code} AND A.ShareType = 'P') 
				 	             			OR
				 	             			(A.RegDeptCode = #{GR_Code} AND A.ShareType = 'D') 
				 	             			OR
				 	             			(A.RegComCode = #{DN_Code} AND A.ShareType = 'U') 
			 	             			)
				 	         </otherwise>
				 	     </choose>
						<if test="startDate != null and startDate != ''">
			 	            AND NVL(A.ModifyDate, A.RegistDate) <![CDATA[ >= ]]> TO_DATE(#{startDate}, 'YYYY-MM-DD HH24:MI:SS')
			 	        </if>
			 	        <if test="endDate != null and endDate != ''">
			 	            AND NVL(A.ModifyDate, A.RegistDate) <![CDATA[ <= ]]> TO_DATE(#{endDate}, 'YYYY-MM-DD HH24:MI:SS')
			 	        </if>
						<if test="searchWord != null and searchWord != '' and searchType != null and searchType != ''" >
						    <choose>
								 <when test="searchType == 'Name'.toString()">
									 AND A.Name  like '%'||#{searchWord}||'%'
								 </when>
								 <when test="searchType == 'EMAIL'.toString()">
								     AND (SELECT EMAIL FROM BIZCARD_EMAILINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND EMAIL like '%'||#{searchWord}||'%' AND ROWNUM = 1) IS NOT NULL
								 </when>
								 <when test="searchType == 'PhoneNumber'.toString()">
								     AND  (SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'C' AND PhoneNumber like '%'||#{searchWord}||'%' AND ROWNUM = 1 ) IS NOT NULL
								 </when>
								 <when test="searchType == 'Multi'.toString()">
								     AND  (
								     	(A.Name  like '%'||#{searchWord}||'%')
								     	OR
								     	((SELECT EMAIL FROM BIZCARD_EMAILINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND EMAIL like '%'||#{searchWord}||'%' AND ROWNUM = 1) IS NOT NULL)
								     	OR
								     	((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'C' AND PhoneNumber like '%'||#{searchWord}||'%' AND ROWNUM = 1) IS NOT NULL)
								     )
								 </when>
							 </choose>
					 	</if>
				 	    <choose>
							 <when test="tabFilter == 'ENG'.toString()">
								 AND SUBSTR(A.Name,1,1) BETWEEN 'A' AND 'z'
							 </when>
							 <when test="tabFilter == 'NUM'.toString()">
								 AND A.Name BETWEEN '0' AND '9'
							 </when>
							 <when test="tabFilter == 'ㄱ'.toString()">
								 AND (REGEXP_LIKE (A.Name,'^(ㄱ|ㄲ)') OR ( A.Name <![CDATA[ >= ]]>  '가' AND A.Name <![CDATA[ < ]]>  '나' ))
							 </when>
							 <when test="tabFilter == 'ㄴ'.toString()">
								 AND (REGEXP_LIKE (A.Name,'^ㄴ') OR ( A.Name <![CDATA[ >= ]]> '나' AND A.Name <![CDATA[ < ]]> '다' ))
							 </when>
							 <when test="tabFilter == 'ㄷ'.toString()">
								 AND (REGEXP_LIKE(A.Name,'^(ㄷ|ㄸ)') OR ( A.Name <![CDATA[ >= ]]> '다' AND A.Name <![CDATA[ < ]]> '라' ))
							 </when>
							 <when test="tabFilter == 'ㄹ'.toString()">
								 AND (REGEXP_LIKE (A.Name,'^ㄹ') OR ( A.Name <![CDATA[ >= ]]> '라' AND A.Name <![CDATA[ < ]]> '마' ))
							 </when>
							 <when test="tabFilter == 'ㅁ'.toString()">
								 AND (REGEXP_LIKE (A.Name, '^ㅁ') OR ( A.Name <![CDATA[ >= ]]> '마' AND A.Name <![CDATA[ < ]]> '바' ))
							 </when>
							 <when test="tabFilter == 'ㅂ'.toString()">
								 AND (REGEXP_LIKE (A.Name,'^ㅂ') OR ( A.Name <![CDATA[ >= ]]> '바' AND A.Name <![CDATA[ < ]]> '사' ))
							 </when>
							 <when test="tabFilter == 'ㅅ'.toString()">
								 AND (REGEXP_LIKE (A.Name, '^(ㅅ|ㅆ)') OR ( A.Name <![CDATA[ >= ]]> '사' AND A.Name <![CDATA[ < ]]> '아' ))
							 </when>
							 <when test="tabFilter == 'ㅇ'.toString()">
								 AND (REGEXP_LIKE (A.Name, '^ㅇ') OR ( A.Name <![CDATA[ >= ]]> '아' AND A.Name <![CDATA[ < ]]> '자' ))
							 </when>
							 <when test="tabFilter == 'ㅈ'.toString()">
								 AND (REGEXP_LIKE (A.Name, '^(ㅈ|ㅉ)') OR ( A.Name <![CDATA[ >= ]]> '자' AND A.Name <![CDATA[ < ]]> '차' ))
							 </when>
							 <when test="tabFilter == 'ㅊ'.toString()">
								 AND (REGEXP_LIKE (A.Name,  '^ㅊ') OR ( A.Name <![CDATA[ >= ]]> '차' AND A.Name <![CDATA[ < ]]> '카' ))
							 </when>
							 <when test="tabFilter == 'ㅋ'.toString()">
								 AND (REGEXP_LIKE (A.Name,  '^ㅋ') OR ( A.Name <![CDATA[ >= ]]> '카' AND A.Name <![CDATA[ < ]]> '타' ))
							 </when>
							 <when test="tabFilter == 'ㅌ'.toString()">
								 AND (REGEXP_LIKE (A.Name,'^ㅌ') OR ( A.Name <![CDATA[ >= ]]> '타' AND A.Name <![CDATA[ < ]]> '파' ))
							 </when>
							 <when test="tabFilter == 'ㅍ'.toString()">
								 AND (REGEXP_LIKE (A.Name,'^ㅍ') OR ( A.Name <![CDATA[ >= ]]> '파' AND A.Name <![CDATA[ < ]]> '하' ))
							 </when>
							 <when test="tabFilter == 'ㅎ'.toString()">
								 AND (REGEXP_LIKE (A.Name,'^ㅎ') OR ( A.Name <![CDATA[ >= ]]> '하'))
							 </when>
							 <when test="tabFilter == 'ETC'.toString()">
								 AND <![CDATA[ NOT REGEXP_LIKE (A.Name, '^[0-9a-zA-Z가-힣]')  ]]>
							 </when>
						 </choose>
						 <if test="groupID != null and groupID != ''">
				    			AND A.GroupID IN
								<foreach collection="groupID" item="item"  separator="," open="(" close=")">
								    #{item}
								</foreach>
						 </if>
			 	     </trim>
		 ) TB WHERE 1=1 
			 <trim prefix="ORDER BY">
				<if test="sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
					TB.Name ASC <include refid="oracle.include.listOrderBy"/>
			    </if>
				<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection != ''">
					<choose>
						<when test='sortColumn.equalsIgnoreCase("PhoneNum")'>PhoneNum</when>
						<when test='sortColumn.equalsIgnoreCase("EMAIL")'>EMAIL</when>
						<when test='sortColumn.equalsIgnoreCase("ComName")'>ComName</when>
						<when test='sortColumn.equalsIgnoreCase("ComPhoneNum")'>ComPhoneNum</when>
						<when test='sortColumn.equalsIgnoreCase("JobTitle")'>JobTitle</when>
						<when test='sortColumn.equalsIgnoreCase("ShareType")'>ShareType</when>
						<otherwise>Name</otherwise>
					</choose>
					<choose>
						<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
						<otherwise> DESC</otherwise>
					</choose>
					<include refid="oracle.include.listOrderBy"/>
				</if>
			</trim>
			<include refid="oracle.include.pagingFooter"/>
 	</select>
 	
 	<!-- 그룹 목록 가져오기(개수)  -->
    <select id="selectBizCardGroupListCnt" parameterType="cmap" resultType="java.lang.Long">
    	/* queryID : groupware.bizcard.selectBizCardGroupListCnt */
		SELECT COUNT(*) 
		FROM ( 	    
			SELECT GR.GroupID, GR.Groupname, GR.OrderNo, COALESCE(CNT, 0) AS MemberCnt, NVL(GR.ModifyDate, GR.RegistDate) AS ModifyDate
			FROM BIZCARD_GROUP GR
			LEFT OUTER JOIN 
			(
				SELECT GroupID, COUNT(1) AS CNT 
				FROM 
				<if test="shareType != null and shareType != ''">
					<choose>
						<when test="shareType == 'C'.toString()">
							BIZCARD_COMPANY
						</when>
						<otherwise>
							BIZCARD_PERSON
						</otherwise>
					</choose>
				</if> 
				GROUP BY GroupID
			) UR
			ON GR.GroupID = UR.GroupID
			<trim prefix="WHERE" prefixOverrides="AND |OR ">
			    <if test="shareType != null and shareType != '' and shareType != 'A'.toString()">
					GR.ShareType = #{shareType}
				</if>
		 	    <choose>
		 	         <when test="shareType == 'P'.toString()">
		 	             AND GR.RegisterID = #{UR_Code}
		 	         </when>
		 	         <when test="shareType == 'D'.toString()">
		 	             AND GR.RegDeptCode = #{GR_Code}
		 	         </when>
		 	         <when test="shareType == 'U'.toString()">
		 	             AND GR.RegComCode = #{DN_Code}
		 	         </when>
		 	         <when test="shareType == 'A'.toString()">
		 	             AND (
		 	             			(GR.RegisterID = #{UR_Code} AND GR.ShareType = 'P') 
		 	             			OR
		 	             			(GR.RegDeptCode = #{GR_Code} AND GR.ShareType = 'D') 
		 	             			OR
		 	             			(GR.RegComCode = #{DN_Code} AND GR.ShareType = 'U') 
	 	             			)
		 	         </when>
		 	    </choose>
				<if test="searchWord != null and searchType != null" >
				    <choose>
						 <when test="searchType == 'Name'.toString()">
							 AND GR.Groupname  like '%'||#{searchWord}||'%' 
						 </when>
					</choose>
				</if>
			</trim>
			ORDER BY OrderNo ASC, RegistDate ASC
		) TB
	</select>

    <!-- 그룹 목록 가져오기(리스트)  -->
	<select id="selectBizCardGroupList" parameterType="cmap" resultType="cmap">
		/* queryID : groupware.bizcard.selectBizCardGroupList */
	    <include refid="oracle.include.pagingHeader"/>
		SELECT TB.ShareType AS "ShareType"
		     , TB.GroupID AS "GroupID"
		     , TB.Groupname AS "Groupname"
		     , TB.OrderNo AS "OrderNo"
		     , TB.MemberCnt AS "MemberCnt"
		     , TB.ModifyDate  AS "Date"
		FROM ( 	    
			SELECT GR.ShareType, GR.GroupID, GR.Groupname, GR.OrderNo, COALESCE(CNT, 0) AS MemberCnt, NVL(GR.ModifyDate, GR.RegistDate) AS ModifyDate
			FROM BIZCARD_GROUP GR
			LEFT OUTER JOIN 
			(
				SELECT GroupID , SUM(CNT) AS CNT FROM 
				(	
					SELECT GroupID, COUNT(1) AS CNT FROM BIZCARD_GROUPPERSON GROUP BY GroupID
					UNION ALL
					SELECT GroupID, COUNT(1) AS CNT 
					FROM 
					<if test="shareType != null and shareType != ''">
						<choose>
							<when test="shareType == 'C'.toString()">
							BIZCARD_COMPANY
							</when>
							<otherwise>
							BIZCARD_PERSON
							</otherwise>
						</choose>
					</if> 
					GROUP BY GroupID
				) A GROUP BY A.GroupID
			) UR
			ON GR.GroupID = UR.GroupID
			<trim prefix="WHERE" prefixOverrides="AND |OR ">
				<if test="shareType != null and shareType != '' and shareType != 'A'.toString()">
					GR.ShareType = #{shareType}
				</if>
				<choose>
					<when test="shareType == 'P'.toString()">
						AND GR.RegisterID = #{UR_Code}
					</when>
					<when test="shareType == 'D'.toString()">
						AND GR.RegDeptCode = #{GR_Code}
					</when>
					<when test="shareType == 'U'.toString()">
						AND GR.RegComCode = #{DN_Code}
					</when>
					<when test="shareType == 'A'.toString()">
						AND (
								(GR.RegisterID = #{UR_Code} AND GR.ShareType = 'P') 
		 	             		OR
		 	             		(GR.RegDeptCode = #{GR_Code} AND GR.ShareType = 'D') 
		 	             		OR
		 	             		(GR.RegComCode = #{DN_Code} AND GR.ShareType = 'U') 
	 	             		)
					</when>
				</choose>		 	     
				<if test="searchWord != null and searchType != null" >
				    <choose>
						 <when test="searchType == 'Name'.toString()">
							 AND GR.Groupname  like '%'||#{searchWord}||'%' 
						 </when>
					</choose>
				</if>
			</trim>
		 ) TB
			 <trim prefix="ORDER BY">
				<if test="sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
					TB.Groupname ASC <include refid="oracle.include.listOrderBy"/>
			    </if>  
				<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection != ''">
					<choose>
						<when test='sortColumn.equalsIgnoreCase("MemberCnt")'>MemberCnt</when>
						<otherwise>Groupname</otherwise>
					</choose>
					<choose>
						<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
						<otherwise> DESC</otherwise>
					</choose>
					<include refid="oracle.include.listOrderBy"/>
				</if>
			</trim>
   		<include refid="oracle.include.pagingFooter"/>
	</select>
	
    <!-- 그룹 목록 가져오기(개수)  -->
    <select id="selectBizCardGroupListALLCnt" parameterType="cmap" resultType="java.lang.Long">
		SELECT COUNT(*) 
		  FROM ( 	    
			SELECT GR.GroupID AS "GroupID", GR.GroupName AS "GroupName", GR.OrderNo AS "OrderNo", NVL(CNT, 0) AS "MemberCnt", NVL(GR.ModifyDate, GR.RegistDate) AS "Date"
			FROM BIZCARD_GROUP GR
				 LEFT OUTER JOIN 
				 (
					SELECT GroupID, COUNT(1) AS CNT 
					FROM 
					<if test="shareType != null">
						<choose>
							<when test="shareType == 'C'.toString()">
								BIZCARD_COMPANY
							</when>
							<otherwise>
								BIZCARD_PERSON
							</otherwise>
						</choose>
					</if> 
					GROUP BY GroupID
				 ) UR
				ON GR.GroupID = UR.GroupID
			<trim prefix="WHERE" prefixOverrides="AND |OR ">
			    <if test="shareType != null and shareType != 'A'.toString()">
					GR.ShareType = #{shareType}
				</if>
		 	    <choose>
		 	         <when test="shareType == 'P'.toString()">
		 	             AND GR.RegisterID = #{UR_Code}
		 	         </when>
		 	         <when test="shareType == 'D'.toString()">
		 	             AND GR.RegDeptCode = #{GR_Code}
		 	         </when>
		 	         <when test="shareType == 'U'.toString()">
		 	             AND GR.RegComCode = #{DN_Code}
		 	         </when>
		 	         <when test="shareType == 'A'.toString()">
		 	             AND (
		 	             			(GR.RegisterID = #{UR_Code} AND GR.ShareType = 'P') 
		 	             			OR
		 	             			(GR.RegDeptCode = #{GR_Code} AND GR.ShareType = 'D') 
		 	             			OR
		 	             			(GR.RegComCode = #{DN_Code} AND GR.ShareType = 'U') 
	 	             			)
		 	         </when>
		 	     </choose>
		 	     <if test="searchWord != null and searchType != null" >
					<choose>
						 <when test="searchType == 'Name'.toString() or searchType == 'Multi'.toString()">
							 AND GR.Groupname LIKE '%'||#{searchWord}||'%'
						 </when>
					</choose>
				</if>
				<choose>
					 <when test="tabFilter == 'ENG'.toString()">
						 AND SUBSTR(GR.Groupname,1,1) BETWEEN 'A' AND 'z'
					 </when>
					 <when test="tabFilter == 'NUM'.toString()">
						 AND GR.Groupname BETWEEN '0' AND '9'
					 </when>
					 <when test="tabFilter == 'ㄱ'.toString()">
						 AND (REGEXP_LIKE(GR.Groupname, '^(ㄱ|ㄲ)') OR ( GR.Groupname <![CDATA[ >= ]]>  '가' AND GR.Groupname <![CDATA[ < ]]>  '나' ))
					 </when>
					 <when test="tabFilter == 'ㄴ'.toString()">
						 AND (REGEXP_LIKE(GR.Groupname, '^ㄴ') OR ( GR.Groupname <![CDATA[ >= ]]> '나' AND GR.Groupname <![CDATA[ < ]]> '다' ))
					 </when>
					 <when test="tabFilter == 'ㄷ'.toString()">
						 AND (REGEXP_LIKE(GR.Groupname, '^(ㄷ|ㄸ)') OR ( GR.Groupname <![CDATA[ >= ]]> '다' AND GR.Groupname <![CDATA[ < ]]> '라' ))
					 </when>
					 <when test="tabFilter == 'ㄹ'.toString()">
						 AND (REGEXP_LIKE(GR.Groupname, '^ㄹ') OR ( GR.Groupname <![CDATA[ >= ]]> '라' AND GR.Groupname <![CDATA[ < ]]> '마' ))
					 </when>
					 <when test="tabFilter == 'ㅁ'.toString()">
						 AND (REGEXP_LIKE(GR.Groupname, '^ㅁ') OR ( GR.Groupname <![CDATA[ >= ]]> '마' AND GR.Groupname <![CDATA[ < ]]> '바' ))
					 </when>
					 <when test="tabFilter == 'ㅂ'.toString()">
						 AND (REGEXP_LIKE(GR.Groupname, '^ㅂ') OR ( GR.Groupname <![CDATA[ >= ]]> '바' AND GR.Groupname <![CDATA[ < ]]> '사' ))
					 </when>
					 <when test="tabFilter == 'ㅅ'.toString()">
						 AND (REGEXP_LIKE(GR.Groupname, '^(ㅅ|ㅆ)') OR ( GR.Groupname <![CDATA[ >= ]]> '사' AND GR.Groupname <![CDATA[ < ]]> '아' ))
					 </when>
					 <when test="tabFilter == 'ㅇ'.toString()">
						 AND (REGEXP_LIKE(GR.Groupname, '^ㅇ') OR ( GR.Groupname <![CDATA[ >= ]]> '아' AND GR.Groupname <![CDATA[ < ]]> '자' ))
					 </when>
					 <when test="tabFilter == 'ㅈ'.toString()">
						 AND (REGEXP_LIKE(GR.Groupname, '^(ㅈ|ㅉ)') OR ( GR.Groupname <![CDATA[ >= ]]> '자' AND GR.Groupname <![CDATA[ < ]]> '차' ))
					 </when>
					 <when test="tabFilter == 'ㅊ'.toString()">
						 AND (REGEXP_LIKE(GR.Groupname, '^ㅊ') OR ( GR.Groupname <![CDATA[ >= ]]> '차' AND GR.Groupname <![CDATA[ < ]]> '카' ))
					 </when>
					 <when test="tabFilter == 'ㅋ'.toString()">
						 AND (REGEXP_LIKE(GR.Groupname, '^ㅋ') OR ( GR.Groupname <![CDATA[ >= ]]> '카' AND GR.Groupname <![CDATA[ < ]]> '타' ))
					 </when>
					 <when test="tabFilter == 'ㅌ'.toString()">
						 AND (REGEXP_LIKE(GR.Groupname, '^ㅌ') OR ( GR.Groupname <![CDATA[ >= ]]> '타' AND GR.Groupname <![CDATA[ < ]]> '파' ))
					 </when>
					 <when test="tabFilter == 'ㅍ'.toString()">
						 AND (REGEXP_LIKE(GR.Groupname, '^ㅍ') OR ( GR.Groupname <![CDATA[ >= ]]> '파' AND GR.Groupname <![CDATA[ < ]]> '하' ))
					 </when>
					 <when test="tabFilter == 'ㅎ'.toString()">
						 AND (REGEXP_LIKE(GR.Groupname, '^ㅎ') OR ( GR.Groupname <![CDATA[ >= ]]> '하'))
					 </when>
					 <when test="tabFilter == 'ETC'.toString()">
						 AND <![CDATA[  (NOT REGEXP_LIKE(GR.Groupname, '^[0-9a-zA-Z가-힣]')) ]]>
					 </when>
				 </choose>
			</trim>
			ORDER BY OrderNo ASC, RegistDate ASC
		 ) TB
	</select>

    <!-- 연락처 + 연락처 그룹 목록 가져오기(개수)  -->
	<select id="selectBizCardAllListCnt" parameterType="cmap" resultType="java.lang.Long">
		/* queryID : groupware.bizcard.selectBizCardAllListCnt */
		SELECT COUNT(*) FROM (  
			SELECT 
				'Group' AS BizCardType
				,GR.GroupID AS BizCardID
				, GR.Groupname AS Name
				, GR.OrderNo
				, '' AS PhoneNum
				, '' AS HomePhoneNum
				, '' AS EMAIL
				, '' AS ComName
				, '' AS ComPhoneNum				
				, '' AS FaxNum
				, '' AS EtcNum
				, '' AS DirectNum
				, '' AS PhoneName
				, '' AS JobTitle
				, '' AS IsFavorite
				, COALESCE(CNT, 0) as MemberCnt
				, NVL(GR.ModifyDate, GR.RegistDate) AS ModifyDate
				, GR.ShareType AS ShareType
				, '' AS ImagePath
				, '' AS DeptName 
			FROM BIZCARD_GROUP GR
			 LEFT OUTER JOIN 
			 (
				SELECT BP.GroupID, COUNT(1) AS CNT 
				FROM 
				<if test="shareType != null and shareType != ''">
					<choose>
						<when test="shareType == 'C'.toString()">
							BIZCARD_COMPANY BP
						</when>
						<otherwise>
							BIZCARD_PERSON BP
						</otherwise>
					</choose>
				</if> 
				LEFT OUTER JOIN bizcard_groupperson GP 
				ON BP.GroupID = GP.GroupID
				GROUP BY BP.GroupID
			 ) UR
			ON GR.GroupID = UR.GroupID
			<trim prefix="WHERE" prefixOverrides="AND |OR ">
				<if test="shareType != null and shareType != '' and shareType != 'A'.toString()">
					GR.ShareType = #{shareType}
				</if>
				<choose>
					<when test="shareType == 'P'.toString()">
						 AND GR.RegisterID = #{UR_Code}
					</when>
					<when test="shareType == 'D'.toString()">
						 AND GR.RegDeptCode = #{GR_Code}
					</when>
					<when test="shareType == 'U'.toString()">
						 AND GR.RegComCode = #{DN_Code}
					</when>
					<when test="shareType == 'A'.toString()">
						 AND (
									(GR.RegisterID = #{UR_Code} AND GR.ShareType = 'P') 
									OR
									(GR.RegDeptCode = #{GR_Code} AND GR.ShareType = 'D') 
									OR
									(GR.RegComCode = #{DN_Code} AND GR.ShareType = 'U') 
								)
					</when>
				</choose>
				<choose>
					 <when test="tabFilter == 'ENG'.toString()">
						 AND SUBSTR(GR.Groupname,1,1) BETWEEN 'A' AND 'z'
					 </when>
					 <when test="tabFilter == 'NUM'.toString()">
						 AND GR.Groupname BETWEEN '0' AND '9'
					 </when>
					 
					 <when test="tabFilter == 'ㄱ'.toString()">
						 AND (REGEXP_LIKE (GR.Groupname,'^(ㄱ|ㄲ)') OR ( GR.Groupname <![CDATA[ >= ]]>  '가' AND GR.Groupname <![CDATA[ < ]]>  '나' ))
					 </when>
					 <when test="tabFilter == 'ㄴ'.toString()">
						 AND (REGEXP_LIKE (GR.Groupname,'^ㄴ') OR ( GR.Groupname <![CDATA[ >= ]]> '나' AND GR.Groupname <![CDATA[ < ]]> '다' ))
					 </when>
					 <when test="tabFilter == 'ㄷ'.toString()">
						 AND (REGEXP_LIKE(GR.Groupname,'^(ㄷ|ㄸ)') OR ( GR.Groupname <![CDATA[ >= ]]> '다' AND GR.Groupname <![CDATA[ < ]]> '라' ))
					 </when>
					 <when test="tabFilter == 'ㄹ'.toString()">
						 AND (REGEXP_LIKE (GR.Groupname,'^ㄹ') OR ( GR.Groupname <![CDATA[ >= ]]> '라' AND GR.Groupname <![CDATA[ < ]]> '마' ))
					 </when>
					 <when test="tabFilter == 'ㅁ'.toString()">
						 AND (REGEXP_LIKE (GR.Groupname, '^ㅁ') OR ( GR.Groupname <![CDATA[ >= ]]> '마' AND GR.Groupname <![CDATA[ < ]]> '바' ))
					 </when>
					 <when test="tabFilter == 'ㅂ'.toString()">
						 AND (REGEXP_LIKE (GR.Groupname,'^ㅂ') OR ( GR.Groupname <![CDATA[ >= ]]> '바' AND GR.Groupname <![CDATA[ < ]]> '사' ))
					 </when>
					 <when test="tabFilter == 'ㅅ'.toString()">
						 AND (REGEXP_LIKE (GR.Groupname, '^(ㅅ|ㅆ)') OR ( GR.Groupname <![CDATA[ >= ]]> '사' AND GR.Groupname <![CDATA[ < ]]> '아' ))
					 </when>
					 <when test="tabFilter == 'ㅇ'.toString()">
						 AND (REGEXP_LIKE (GR.Groupname, '^ㅇ') OR ( GR.Groupname <![CDATA[ >= ]]> '아' AND GR.Groupname <![CDATA[ < ]]> '자' ))
					 </when>
					 <when test="tabFilter == 'ㅈ'.toString()">
						 AND (REGEXP_LIKE (GR.Groupname, '^(ㅈ|ㅉ)') OR ( GR.Groupname <![CDATA[ >= ]]> '자' AND GR.Groupname <![CDATA[ < ]]> '차' ))
					 </when>
					 <when test="tabFilter == 'ㅊ'.toString()">
						 AND (REGEXP_LIKE (GR.Groupname,  '^ㅊ') OR ( GR.Groupname <![CDATA[ >= ]]> '차' AND GR.Groupname <![CDATA[ < ]]> '카' ))
					 </when>
					 <when test="tabFilter == 'ㅋ'.toString()">
						 AND (REGEXP_LIKE (GR.Groupname,  '^ㅋ') OR ( GR.Groupname <![CDATA[ >= ]]> '카' AND GR.Groupname <![CDATA[ < ]]> '타' ))
					 </when>
					 <when test="tabFilter == 'ㅌ'.toString()">
						 AND (REGEXP_LIKE (GR.Groupname,'^ㅌ') OR ( GR.Groupname <![CDATA[ >= ]]> '타' AND GR.Groupname <![CDATA[ < ]]> '파' ))
					 </when>
					 <when test="tabFilter == 'ㅍ'.toString()">
						 AND (REGEXP_LIKE (GR.Groupname,'^ㅍ') OR ( GR.Groupname <![CDATA[ >= ]]> '파' AND GR.Groupname <![CDATA[ < ]]> '하' ))
					 </when>
					 <when test="tabFilter == 'ㅎ'.toString()">
						 AND (REGEXP_LIKE (GR.Groupname,'^ㅎ') OR ( GR.Groupname <![CDATA[ >= ]]> '하'))
					 </when>
					 <when test="tabFilter == 'ETC'.toString()">
						 AND <![CDATA[ NOT REGEXP_LIKE (GR.Groupname, '^[0-9a-zA-Z가-힣]')  ]]>
					 </when>
				 </choose>
			</trim>
			UNION 
			SELECT 
				'BizCard' AS BizCardType
				, A.BizCardID
				, A.Name
				, 0 AS OrderNo				
				, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'C' AND ROWNUM = 1), '') AS PhoneNum
				, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'H' AND ROWNUM = 1), '') AS HomePhoneNum
				, NVL((SELECT EMAIL FROM BIZCARD_EMAILINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND ROWNUM = 1 ), '') AS EMAIL
				, NVL(A.CompanyName, '') AS ComName
				, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'T' AND ROWNUM = 1), '') AS ComPhoneNum
				, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'F' AND ROWNUM = 1), '') AS FaxNum
				, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'E' AND ROWNUM = 1), '') AS EtcNum
				, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'D' AND ROWNUM = 1), '') AS DirectNum
				, NVL((SELECT PhoneName FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'D' AND ROWNUM = 1), '') AS PhoneName	
				, A.JobTitle
				, COALESCE(IsFavorite, 'N') AS IsFavorite
				, 0 AS MemberCnt
				, NVL(A.ModifyDate, A.RegistDate) AS ModifyDate
				, A.ShareType
				, A.ImagePath
				, A.DeptName
			FROM BIZCARD_PERSON A 
			LEFT OUTER JOIN (SELECT BizCardID, 'Y' AS IsFavorite FROM BIZCARD_FAVORITEINFO WHERE UR_CODE=#{UR_Code}) B ON B.BizCardID=A.BizCardID
		 	
			<trim prefix="WHERE" prefixOverrides="AND |OR ">
				<if test="shareType != null and shareType != '' and shareType != 'A'.toString()">
					A.ShareType = #{shareType}
				</if>
				<if test="searchWord != null and searchWord != '' and searchType != null and searchType != ''" >
				    <choose>
						 <when test="searchType == 'Name'.toString()">
							 AND A.Name like '%'||#{searchWord}||'%'
						 </when>
						 <when test="searchType == 'EMAIL'.toString()">
						     AND (SELECT EMAIL FROM BIZCARD_EMAILINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND EMAIL like '%'||#{searchWord}||'%' AND ROWNUM = 1) IS NOT NULL
						 </when>
						 <when test="searchType == 'PhoneNumber'.toString()">
						     AND (SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'C' AND PhoneNumber like '%'||#{searchWord}||'%' AND ROWNUM = 1) IS NOT NULL
						 </when>
						 <when test="searchType == 'Multi'.toString()">
						     AND (
						     	(A.Name  like '%'||#{searchWord}||'%')
						     	OR
						     	((SELECT EMAIL FROM BIZCARD_EMAILINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND EMAIL like '%'||#{searchWord}||'%' AND ROWNUM = 1) IS NOT NULL)
						     	OR
						     	((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'C' AND PhoneNumber like '%'||#{searchWord}||'%' AND ROWNUM = 1) IS NOT NULL)	
						     )
						 </when>
					 </choose>
			 	</if>
				<choose>
					 <when test="shareType == 'P'.toString()">
						 AND A.RegisterID = #{UR_Code}
					 </when>
					 <when test="shareType == 'D'.toString()">
						 AND A.RegDeptCode = #{GR_Code}
					 </when>
					 <when test="shareType == 'U'.toString()">
						 AND A.RegComCode = #{DN_Code}
					 </when>
					 <otherwise>
						 AND (
								(A.RegisterID = #{UR_Code} AND A.ShareType = 'P') 
								OR
								(A.RegDeptCode = #{GR_Code} AND A.ShareType = 'D') 
								OR
								(A.RegComCode = #{DN_Code} AND A.ShareType = 'U') 
								)
					 </otherwise>
				 </choose>
				<if test="startDate != null and startDate != ''">
					AND NVL(A.ModifyDate, A.RegistDate) <![CDATA[ >= ]]> TO_DATE(#{startDate}, 'YYYY-MM-DD HH24:MI:SS')
				</if>
				<if test="endDate != null and endDate != ''">
					AND NVL(A.ModifyDate, A.RegistDate) <![CDATA[ <= ]]> TO_DATE(#{endDate}, 'YYYY-MM-DD HH24:MI:SS')
				</if>
				<choose>
					 <when test="tabFilter == 'ENG'.toString()">
						 AND SUBSTR(A.Name,1,1) BETWEEN 'A' AND 'z'
					 </when>
					 <when test="tabFilter == 'NUM'.toString()">
						 AND A.Name BETWEEN '0' AND '9'
					 </when>
					 <when test="tabFilter == 'ㄱ'.toString()">
						 AND (REGEXP_LIKE (A.Name,'^(ㄱ|ㄲ)') OR ( A.Name <![CDATA[ >= ]]>  '가' AND A.Name <![CDATA[ < ]]>  '나' ))
					 </when>
					 <when test="tabFilter == 'ㄴ'.toString()">
						 AND (REGEXP_LIKE (A.Name,'^ㄴ') OR ( A.Name <![CDATA[ >= ]]> '나' AND A.Name <![CDATA[ < ]]> '다' ))
					 </when>
					 <when test="tabFilter == 'ㄷ'.toString()">
						 AND (REGEXP_LIKE (A.Name ,'^(ㄷ|ㄸ)') OR ( A.Name <![CDATA[ >= ]]> '다' AND A.Name <![CDATA[ < ]]> '라' ))
					 </when>
					 <when test="tabFilter == 'ㄹ'.toString()">
						 AND (REGEXP_LIKE (A.Name, '^ㄹ') OR ( A.Name <![CDATA[ >= ]]> '라' AND A.Name <![CDATA[ < ]]> '마' ))
					 </when>
					 <when test="tabFilter == 'ㅁ'.toString()">
						 AND (REGEXP_LIKE (A.Name,'^ㅁ') OR ( A.Name <![CDATA[ >= ]]> '마' AND A.Name <![CDATA[ < ]]> '바' ))
					 </when>
					 <when test="tabFilter == 'ㅂ'.toString()">
						 AND (REGEXP_LIKE (A.Name,'^ㅂ') OR ( A.Name <![CDATA[ >= ]]> '바' AND A.Name <![CDATA[ < ]]> '사' ))
					 </when>
					 <when test="tabFilter == 'ㅅ'.toString()">
						 AND (REGEXP_LIKE (A.Name,'^(ㅅ|ㅆ)') OR ( A.Name <![CDATA[ >= ]]> '사' AND A.Name <![CDATA[ < ]]> '아' ))
					 </when>
					 <when test="tabFilter == 'ㅇ'.toString()">
						 AND (REGEXP_LIKE (A.Name,'^ㅇ') OR ( A.Name <![CDATA[ >= ]]> '아' AND A.Name <![CDATA[ < ]]> '자' ))
					 </when>
					 <when test="tabFilter == 'ㅈ'.toString()">
						 AND (REGEXP_LIKE (A.Name ,'^(ㅈ|ㅉ)') OR ( A.Name <![CDATA[ >= ]]> '자' AND A.Name <![CDATA[ < ]]> '차' ))
					 </when>
					 <when test="tabFilter == 'ㅊ'.toString()">
						 AND (REGEXP_LIKE (A.Name,'^ㅊ') OR ( A.Name <![CDATA[ >= ]]> '차' AND A.Name <![CDATA[ < ]]> '카' ))
					 </when>
					 <when test="tabFilter == 'ㅋ'.toString()">
						 AND (REGEXP_LIKE (A.Name,'^ㅋ') OR ( A.Name <![CDATA[ >= ]]> '카' AND A.Name <![CDATA[ < ]]> '타' ))
					 </when>
					 <when test="tabFilter == 'ㅌ'.toString()">
						 AND (REGEXP_LIKE (A.Name,'^ㅌ') OR ( A.Name <![CDATA[ >= ]]> '타' AND A.Name <![CDATA[ < ]]> '파' ))
					 </when>
					 <when test="tabFilter == 'ㅍ'.toString()">
						 AND (REGEXP_LIKE (A.Name,'^ㅍ') OR ( A.Name <![CDATA[ >= ]]> '파' AND A.Name <![CDATA[ < ]]> '하' ))
					 </when>
					 <when test="tabFilter == 'ㅎ'.toString()">
						 AND (REGEXP_LIKE (A.Name, '^ㅎ') OR ( A.Name <![CDATA[ >= ]]> '하'))
					 </when>
					 <when test="tabFilter == 'ETC'.toString()">
						 AND <![CDATA[ NOT REGEXP_LIKE (A.Name, '^[0-9a-zA-Z가-힣]')  ]]>
					 </when>
				 </choose>
				 <if test="groupID != null and groupID != ''">
						AND A.GroupID IN
						<foreach collection="groupID" item="item"  separator="," open="(" close=")">
							#{item}
						</foreach>
				 </if>
			 </trim>
		) TB 
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="searchWord != null and searchWord != '' and searchType != null and searchType != ''" >
				<choose>
					<when test="searchType == 'Name'.toString()">
					    AND Name  like '%'||#{searchWord}||'%'
					</when>
					<when test="searchType == 'EMAIL'.toString()">
						AND  (EMAIL like '%'||#{searchWord}||'%')  
					</when>
					<when test="searchType == 'PhoneNumber'.toString()">
						AND  (PhoneNum like '%'||#{searchWord}||'%')
					</when>
					<when test="searchType == 'Multi'.toString()">
						AND (
							(Name  like '%'||#{searchWord}||'%')
							OR
							(EMAIL like '%'||#{searchWord}||'%')  
							OR
							(PhoneNum like '%'||#{searchWord}||'%')	
						)
					</when>
				 </choose>
			</if>
		</trim>
	</select>
    
	<!-- 연락처 + 연락처 그룹 목록 가져오기(리스트)  -->
	<select id="selectBizCardAllList" parameterType="cmap" resultType="cmap">
		/* queryID : groupware.bizcard.selectBizCardAllList */
 	    <include refid="oracle.include.pagingHeader"/>	
		SELECT 
			TB.BizCardType AS "BizCardType"
		     , TB.BizCardID AS "BizCardID"
		     , TB.Name AS "Name"
		     , TB.OrderNo AS "OrderNo"
			 , TB.PhoneNum AS "PhoneNum"
			 , TB.HomePhoneNum AS "HomePhoneNum"
			 , TB.EMAIL AS "EMAIL"
			 , TB.ComName AS "ComName"
			 , TB.ComPhoneNum AS "ComPhoneNum"
			 , TB.FaxNum AS "FaxNum"
			 , TB.EtcNum AS "EtcNum"
			 , TB.DirectNum AS "DirectNum"	 
			 , TB.PhoneName AS "PhoneName"	 
			 , TB.JobTitle AS "JobTitle"
			 , TB.IsFavorite AS "IsFavorite"
		     , TB.MemberCnt AS "MemberCnt"
		     , TB.ModifyDate  AS "Date"
			 , TB.ShareType AS "ShareType"
			 , TB.ImagePath AS "ImagePath"
			 , TB.DeptName AS "DeptName"
		  FROM ( 	    
			SELECT 
				'Group' AS BizCardType
				,GR.GroupID AS BizCardID
				, GR.Groupname AS Name
				, GR.OrderNo
				, '' AS PhoneNum
				, '' AS HomePhoneNum
				, '' AS EMAIL
				, '' AS ComName
				, '' AS ComPhoneNum				
				, '' AS FaxNum
				, '' AS EtcNum
				, '' AS DirectNum
				, '' AS PhoneName	
				, '' AS JobTitle
				, '' AS IsFavorite
				, COALESCE(CNT, 0) as MemberCnt
				, NVL(GR.ModifyDate, GR.RegistDate) AS ModifyDate
				, GR.ShareType AS ShareType
				, '' AS ImagePath
				, '' AS DeptName 
			FROM BIZCARD_GROUP GR
			 LEFT OUTER JOIN 
			 (
				SELECT BP.GroupID, COUNT(1) AS CNT 
				FROM 
				<if test="shareType != null and shareType != ''">
					<choose>
						<when test="shareType == 'C'.toString()">
							BIZCARD_COMPANY BP
						</when>
						<otherwise>
							BIZCARD_PERSON BP
						</otherwise>
					</choose>
				</if> 
				LEFT OUTER JOIN bizcard_groupperson GP 
				ON BP.GroupID = GP.GroupID
				GROUP BY BP.GroupID
			 ) UR
			ON GR.GroupID = UR.GroupID
			<trim prefix="WHERE" prefixOverrides="AND |OR ">
				<if test="shareType != null and shareType != '' and shareType != 'A'.toString()">
					GR.ShareType = #{shareType}
				</if>
				<choose>
					<when test="shareType == 'P'.toString()">
						 AND GR.RegisterID = #{UR_Code}
					</when>
					<when test="shareType == 'D'.toString()">
						 AND GR.RegDeptCode = #{GR_Code}
					</when>
					<when test="shareType == 'U'.toString()">
						 AND GR.RegComCode = #{DN_Code}
					</when>
					<when test="shareType == 'A'.toString()">
						 AND (
									(GR.RegisterID = #{UR_Code} AND GR.ShareType = 'P') 
									OR
									(GR.RegDeptCode = #{GR_Code} AND GR.ShareType = 'D') 
									OR
									(GR.RegComCode = #{DN_Code} AND GR.ShareType = 'U') 
								)
					</when>
				</choose>
				<choose>
					 <when test="tabFilter == 'ENG'.toString()">
						 AND SUBSTR(GR.Groupname,1,1) BETWEEN 'A' AND 'z'
					 </when>
					 <when test="tabFilter == 'NUM'.toString()">
						 AND GR.Groupname BETWEEN '0' AND '9'
					 </when>
					 
					 <when test="tabFilter == 'ㄱ'.toString()">
						 AND (REGEXP_LIKE (GR.Groupname,'^(ㄱ|ㄲ)') OR ( GR.Groupname <![CDATA[ >= ]]>  '가' AND GR.Groupname <![CDATA[ < ]]>  '나' ))
					 </when>
					 <when test="tabFilter == 'ㄴ'.toString()">
						 AND (REGEXP_LIKE (GR.Groupname,'^ㄴ') OR ( GR.Groupname <![CDATA[ >= ]]> '나' AND GR.Groupname <![CDATA[ < ]]> '다' ))
					 </when>
					 <when test="tabFilter == 'ㄷ'.toString()">
						 AND (REGEXP_LIKE(GR.Groupname,'^(ㄷ|ㄸ)') OR ( GR.Groupname <![CDATA[ >= ]]> '다' AND GR.Groupname <![CDATA[ < ]]> '라' ))
					 </when>
					 <when test="tabFilter == 'ㄹ'.toString()">
						 AND (REGEXP_LIKE (GR.Groupname,'^ㄹ') OR ( GR.Groupname <![CDATA[ >= ]]> '라' AND GR.Groupname <![CDATA[ < ]]> '마' ))
					 </when>
					 <when test="tabFilter == 'ㅁ'.toString()">
						 AND (REGEXP_LIKE (GR.Groupname, '^ㅁ') OR ( GR.Groupname <![CDATA[ >= ]]> '마' AND GR.Groupname <![CDATA[ < ]]> '바' ))
					 </when>
					 <when test="tabFilter == 'ㅂ'.toString()">
						 AND (REGEXP_LIKE (GR.Groupname,'^ㅂ') OR ( GR.Groupname <![CDATA[ >= ]]> '바' AND GR.Groupname <![CDATA[ < ]]> '사' ))
					 </when>
					 <when test="tabFilter == 'ㅅ'.toString()">
						 AND (REGEXP_LIKE (GR.Groupname, '^(ㅅ|ㅆ)') OR ( GR.Groupname <![CDATA[ >= ]]> '사' AND GR.Groupname <![CDATA[ < ]]> '아' ))
					 </when>
					 <when test="tabFilter == 'ㅇ'.toString()">
						 AND (REGEXP_LIKE (GR.Groupname, '^ㅇ') OR ( GR.Groupname <![CDATA[ >= ]]> '아' AND GR.Groupname <![CDATA[ < ]]> '자' ))
					 </when>
					 <when test="tabFilter == 'ㅈ'.toString()">
						 AND (REGEXP_LIKE (GR.Groupname, '^(ㅈ|ㅉ)') OR ( GR.Groupname <![CDATA[ >= ]]> '자' AND GR.Groupname <![CDATA[ < ]]> '차' ))
					 </when>
					 <when test="tabFilter == 'ㅊ'.toString()">
						 AND (REGEXP_LIKE (GR.Groupname,  '^ㅊ') OR ( GR.Groupname <![CDATA[ >= ]]> '차' AND GR.Groupname <![CDATA[ < ]]> '카' ))
					 </when>
					 <when test="tabFilter == 'ㅋ'.toString()">
						 AND (REGEXP_LIKE (GR.Groupname,  '^ㅋ') OR ( GR.Groupname <![CDATA[ >= ]]> '카' AND GR.Groupname <![CDATA[ < ]]> '타' ))
					 </when>
					 <when test="tabFilter == 'ㅌ'.toString()">
						 AND (REGEXP_LIKE (GR.Groupname,'^ㅌ') OR ( GR.Groupname <![CDATA[ >= ]]> '타' AND GR.Groupname <![CDATA[ < ]]> '파' ))
					 </when>
					 <when test="tabFilter == 'ㅍ'.toString()">
						 AND (REGEXP_LIKE (GR.Groupname,'^ㅍ') OR ( GR.Groupname <![CDATA[ >= ]]> '파' AND GR.Groupname <![CDATA[ < ]]> '하' ))
					 </when>
					 <when test="tabFilter == 'ㅎ'.toString()">
						 AND (REGEXP_LIKE (GR.Groupname,'^ㅎ') OR ( GR.Groupname <![CDATA[ >= ]]> '하'))
					 </when>
					 <when test="tabFilter == 'ETC'.toString()">
						 AND <![CDATA[ NOT REGEXP_LIKE (GR.Groupname, '^[0-9a-zA-Z가-힣]')  ]]>
					 </when>
				 </choose>
			</trim>
			UNION 
			SELECT 
				'BizCard' AS BizCardType
				, A.BizCardID
				, A.Name
				, 0 AS OrderNo				
				, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'C' AND ROWNUM = 1), '') AS PhoneNum
				, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'H' AND ROWNUM = 1), '') AS HomePhoneNum
				, NVL((SELECT EMAIL FROM BIZCARD_EMAILINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND ROWNUM = 1 ), '') AS EMAIL
				, NVL(A.CompanyName, '') AS ComName
				, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'T' AND ROWNUM = 1), '') AS ComPhoneNum
				, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'F' AND ROWNUM = 1), '') AS FaxNum
				, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'E' AND ROWNUM = 1), '') AS EtcNum
				, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'D' AND ROWNUM = 1), '') AS DirectNum
				, NVL((SELECT PhoneName FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'D' AND ROWNUM = 1), '') AS PhoneName
				, A.JobTitle
				, COALESCE(IsFavorite, 'N') AS IsFavorite
				, 0 AS MemberCnt
				, NVL(A.ModifyDate, A.RegistDate) AS ModifyDate
				, A.ShareType
				, A.ImagePath
				, A.DeptName
			FROM BIZCARD_PERSON A 
			LEFT OUTER JOIN (SELECT BizCardID, 'Y' AS IsFavorite FROM BIZCARD_FAVORITEINFO WHERE UR_CODE=#{UR_Code}) B ON B.BizCardID=A.BizCardID
		 	
			<trim prefix="WHERE" prefixOverrides="AND |OR ">
				<if test="shareType != null and shareType != '' and shareType != 'A'.toString()">
					A.ShareType = #{shareType}
				</if>
				<if test="searchWord != null and searchWord != '' and searchType != null and searchType != ''" >
				    <choose>
						 <when test="searchType == 'Name'.toString()">
							 AND A.Name like '%'||#{searchWord}||'%'
						 </when>
						 <when test="searchType == 'EMAIL'.toString()">
						     AND (SELECT EMAIL FROM BIZCARD_EMAILINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND EMAIL like '%'||#{searchWord}||'%' AND ROWNUM = 1) IS NOT NULL
						 </when>
						 <when test="searchType == 'PhoneNumber'.toString()">
						     AND (SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'C' AND PhoneNumber like '%'||#{searchWord}||'%' AND ROWNUM = 1) IS NOT NULL
						 </when>
						 <when test="searchType == 'Multi'.toString()">
						     AND (
						     	(A.Name  like '%'||#{searchWord}||'%')
						     	OR
						     	((SELECT EMAIL FROM BIZCARD_EMAILINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND EMAIL like '%'||#{searchWord}||'%' AND ROWNUM = 1) IS NOT NULL)
						     	OR
						     	((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='P' AND PhoneType = 'C' AND PhoneNumber like '%'||#{searchWord}||'%' AND ROWNUM = 1) IS NOT NULL)	
						     )
						 </when>
					 </choose>
			 	</if>
				<choose>
					 <when test="shareType == 'P'.toString()">
						 AND A.RegisterID = #{UR_Code}
					 </when>
					 <when test="shareType == 'D'.toString()">
						 AND A.RegDeptCode = #{GR_Code}
					 </when>
					 <when test="shareType == 'U'.toString()">
						 AND A.RegComCode = #{DN_Code}
					 </when>
					 <otherwise>
						 AND (
								(A.RegisterID = #{UR_Code} AND A.ShareType = 'P') 
								OR
								(A.RegDeptCode = #{GR_Code} AND A.ShareType = 'D') 
								OR
								(A.RegComCode = #{DN_Code} AND A.ShareType = 'U') 
								)
					 </otherwise>
				 </choose>
				<if test="startDate != null and startDate != ''">
					AND NVL(A.ModifyDate, A.RegistDate) <![CDATA[ >= ]]> TO_DATE(#{startDate}, 'YYYY-MM-DD HH24:MI:SS')
				</if>
				<if test="endDate != null and endDate != ''">
					AND NVL(A.ModifyDate, A.RegistDate) <![CDATA[ <= ]]> TO_DATE(#{endDate}, 'YYYY-MM-DD HH24:MI:SS')
				</if>
				<choose>
					 <when test="tabFilter == 'ENG'.toString()">
						 AND SUBSTR(A.Name,1,1) BETWEEN 'A' AND 'z'
					 </when>
					 <when test="tabFilter == 'NUM'.toString()">
						 AND A.Name BETWEEN '0' AND '9'
					 </when>
					 <when test="tabFilter == 'ㄱ'.toString()">
						 AND (REGEXP_LIKE (A.Name,'^(ㄱ|ㄲ)') OR ( A.Name <![CDATA[ >= ]]>  '가' AND A.Name <![CDATA[ < ]]>  '나' ))
					 </when>
					 <when test="tabFilter == 'ㄴ'.toString()">
						 AND (REGEXP_LIKE (A.Name,'^ㄴ') OR ( A.Name <![CDATA[ >= ]]> '나' AND A.Name <![CDATA[ < ]]> '다' ))
					 </when>
					 <when test="tabFilter == 'ㄷ'.toString()">
						 AND (REGEXP_LIKE (A.Name ,'^(ㄷ|ㄸ)') OR ( A.Name <![CDATA[ >= ]]> '다' AND A.Name <![CDATA[ < ]]> '라' ))
					 </when>
					 <when test="tabFilter == 'ㄹ'.toString()">
						 AND (REGEXP_LIKE (A.Name, '^ㄹ') OR ( A.Name <![CDATA[ >= ]]> '라' AND A.Name <![CDATA[ < ]]> '마' ))
					 </when>
					 <when test="tabFilter == 'ㅁ'.toString()">
						 AND (REGEXP_LIKE (A.Name,'^ㅁ') OR ( A.Name <![CDATA[ >= ]]> '마' AND A.Name <![CDATA[ < ]]> '바' ))
					 </when>
					 <when test="tabFilter == 'ㅂ'.toString()">
						 AND (REGEXP_LIKE (A.Name,'^ㅂ') OR ( A.Name <![CDATA[ >= ]]> '바' AND A.Name <![CDATA[ < ]]> '사' ))
					 </when>
					 <when test="tabFilter == 'ㅅ'.toString()">
						 AND (REGEXP_LIKE (A.Name,'^(ㅅ|ㅆ)') OR ( A.Name <![CDATA[ >= ]]> '사' AND A.Name <![CDATA[ < ]]> '아' ))
					 </when>
					 <when test="tabFilter == 'ㅇ'.toString()">
						 AND (REGEXP_LIKE (A.Name,'^ㅇ') OR ( A.Name <![CDATA[ >= ]]> '아' AND A.Name <![CDATA[ < ]]> '자' ))
					 </when>
					 <when test="tabFilter == 'ㅈ'.toString()">
						 AND (REGEXP_LIKE (A.Name ,'^(ㅈ|ㅉ)') OR ( A.Name <![CDATA[ >= ]]> '자' AND A.Name <![CDATA[ < ]]> '차' ))
					 </when>
					 <when test="tabFilter == 'ㅊ'.toString()">
						 AND (REGEXP_LIKE (A.Name,'^ㅊ') OR ( A.Name <![CDATA[ >= ]]> '차' AND A.Name <![CDATA[ < ]]> '카' ))
					 </when>
					 <when test="tabFilter == 'ㅋ'.toString()">
						 AND (REGEXP_LIKE (A.Name,'^ㅋ') OR ( A.Name <![CDATA[ >= ]]> '카' AND A.Name <![CDATA[ < ]]> '타' ))
					 </when>
					 <when test="tabFilter == 'ㅌ'.toString()">
						 AND (REGEXP_LIKE (A.Name,'^ㅌ') OR ( A.Name <![CDATA[ >= ]]> '타' AND A.Name <![CDATA[ < ]]> '파' ))
					 </when>
					 <when test="tabFilter == 'ㅍ'.toString()">
						 AND (REGEXP_LIKE (A.Name,'^ㅍ') OR ( A.Name <![CDATA[ >= ]]> '파' AND A.Name <![CDATA[ < ]]> '하' ))
					 </when>
					 <when test="tabFilter == 'ㅎ'.toString()">
						 AND (REGEXP_LIKE (A.Name, '^ㅎ') OR ( A.Name <![CDATA[ >= ]]> '하'))
					 </when>
					 <when test="tabFilter == 'ETC'.toString()">
						 AND <![CDATA[ NOT REGEXP_LIKE (A.Name, '^[0-9a-zA-Z가-힣]')  ]]>
					 </when>
				 </choose>
				 <if test="groupID != null and groupID != ''">
						AND A.GroupID IN
						<foreach collection="groupID" item="item"  separator="," open="(" close=")">
							#{item}
						</foreach>
				 </if>
			 </trim>
		) TB 
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="searchWord != null and searchWord != '' and searchType != null and searchType != ''" >
				<choose>
					<when test="searchType == 'Name'.toString()">
					    AND Name  like '%'||#{searchWord}||'%'
					</when>
					<when test="searchType == 'EMAIL'.toString()">
						AND  (EMAIL like '%'||#{searchWord}||'%')  
					</when>
					<when test="searchType == 'PhoneNumber'.toString()">
						AND  (PhoneNum like '%'||#{searchWord}||'%')
					</when>
					<when test="searchType == 'Multi'.toString()">
						AND (
							(Name  like '%'||#{searchWord}||'%')
							OR
							(EMAIL like '%'||#{searchWord}||'%')  
							OR
							(PhoneNum like '%'||#{searchWord}||'%')	
						)
					</when>
				 </choose>
			</if>
		</trim>
		<trim prefix="ORDER BY">
			<if test="sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
				TB.Name ASC <include refid="oracle.include.listOrderBy"/>
		    </if>  
			<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection != ''">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("PhoneNum")'>PhoneNum</when>
					<when test='sortColumn.equalsIgnoreCase("EMAIL")'>EMAIL</when>
					<when test='sortColumn.equalsIgnoreCase("ComName")'>ComName</when>
					<when test='sortColumn.equalsIgnoreCase("ComPhoneNum")'>ComPhoneNum</when>
					<when test='sortColumn.equalsIgnoreCase("JobTitle")'>JobTitle</when>
					<when test='sortColumn.equalsIgnoreCase("ShareType")'>ShareType</when>
					<otherwise>Name</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
				<include refid="oracle.include.listOrderBy"/>
			</if>
		</trim>
		<include refid="oracle.include.pagingFooter"/>
	</select>
	<!-- 업체 목록 가져오기(개수)  -->
	<select id="selectBizCardCompanyListCnt" parameterType="cmap" resultType="java.lang.Long">
		/* queryID :groupware.bizcard.selectBizCardCompanyListCnt */
		SELECT COUNT(*) 
		  FROM (
			SELECT BizCardID
						, GroupID
						, ComName
						, ComRepName
						, NVL((SELECT EMAIL FROM BIZCARD_EMAILINFO WHERE BizCardID=A.BizCardID AND TypeCode='C' AND ROWNUM =1 ), '') AS EMAIL
						, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='C' AND PhoneType = 'T' AND ROWNUM =1 ), '') AS PhoneNum
						, NVL(ComAddress, '') AS ComAddress
						, NVL(A.ModifyDate, A.RegistDate) AS ModifyDate
						, ImagePath
						FROM BIZCARD_COMPANY A
				<trim prefix="WHERE" prefixOverrides="AND |OR ">
						<if test="startDate != null and startDate != ''">
			 	            NVL(A.ModifyDate, A.RegistDate) <![CDATA[ >= ]]> TO_DATE(#{startDate}, 'YYYY-MM-DD HH24:MI:SS')
			 	        </if>
			 	        <if test="endDate != null and endDate != ''">
			 	            NVL(A.ModifyDate, A.RegistDate) <![CDATA[ <= ]]> TO_DATE(#{endDate}, 'YYYY-MM-DD HH24:MI:SS')
			 	        </if>
						<if test="searchWord != null and searchWord != '' and searchType != null and searchType != ''" >
						    <choose>
								 <when test="searchType == 'ComName'.toString()">
									 AND A.ComName  like '%'||#{searchWord}||'%'
								 </when>
								 <when test="searchType == 'EMAIL'.toString()">
								     AND NVL((SELECT EMAIL FROM BIZCARD_EMAILINFO WHERE BizCardID=A.BizCardID AND TypeCode='C' AND EMAIL like '%'||#{searchWord}||'%' AND ROWNUM = 1), '') <![CDATA[ != ]]> ''
								 </when>
								 <when test="searchType == 'PhoneNum'.toString()">
								     AND (SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='C' AND PhoneType = 'T' AND PhoneNumber like '%'||#{searchWord}||'%' AND ROWNUM = 1)
								 </when>
								 <when test="searchType == 'Multi'.toString()">
								     AND  (
								     	(A.ComName  like '%'||#{searchWord}||'%')
								     	OR
								     	(NVL((SELECT EMAIL FROM BIZCARD_EMAILINFO WHERE BizCardID=A.BizCardID AND TypeCode='C' AND EMAIL like '%'||#{searchWord}||'%' AND ROWNUM = 1), '') <![CDATA[ != ]]> '')
								     	OR
								     	(NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='C' AND PhoneType = 'T' AND PhoneNumber like '%'||#{searchWord}||'%' AND ROWNUM = 1), '') <![CDATA[ != ]]> '')
								     )
								 </when>
							 </choose>
					 	</if>
				 	    <choose>
							 <when test="tabFilter == 'ENG'.toString()">
								 AND SUBSTR(A.ComName,1,1) BETWEEN 'A' AND 'z'
							 </when>
							 <when test="tabFilter == 'NUM'.toString()">
								 AND A.ComName BETWEEN '0' AND '9'
							 </when>
							 <when test="tabFilter == 'ㄱ'.toString()">
								 AND (REGEXP_LIKE (A.ComName ,'^(ㄱ|ㄲ)') OR ( A.ComName <![CDATA[ >= ]]>  '가' AND A.ComName <![CDATA[ < ]]>  '나' ))
							 </when>
							 <when test="tabFilter == 'ㄴ'.toString()">
								 AND (REGEXP_LIKE (A.ComName , '^ㄴ') OR ( A.ComName <![CDATA[ >= ]]> '나' AND A.ComName <![CDATA[ < ]]> '다' ))
							 </when>
							 <when test="tabFilter == 'ㄷ'.toString()">
								 AND (REGEXP_LIKE (A.ComName ,'^(ㄷ|ㄸ)') OR ( A.ComName <![CDATA[ >= ]]> '다' AND A.ComName <![CDATA[ < ]]> '라' ))
							 </when>
							 <when test="tabFilter == 'ㄹ'.toString()">
								 AND (REGEXP_LIKE (A.ComName ,'^ㄹ') OR ( A.ComName <![CDATA[ >= ]]> '라' AND A.ComName <![CDATA[ < ]]> '마' ))
							 </when>
							 <when test="tabFilter == 'ㅁ'.toString()">
								 AND (REGEXP_LIKE (A.ComName , '^ㅁ') OR ( A.ComName <![CDATA[ >= ]]> '마' AND A.ComName <![CDATA[ < ]]> '바' ))
							 </when>
							 <when test="tabFilter == 'ㅂ'.toString()">
								 AND (REGEXP_LIKE (A.ComName , '^ㅂ') OR ( A.ComName <![CDATA[ >= ]]> '바' AND A.ComName <![CDATA[ < ]]> '사' ))
							 </when>
							 <when test="tabFilter == 'ㅅ'.toString()">
								 AND (REGEXP_LIKE (A.ComName ,  '^(ㅅ|ㅆ)') OR ( A.ComName <![CDATA[ >= ]]> '사' AND A.ComName <![CDATA[ < ]]> '아' ))
							 </when>
							 <when test="tabFilter == 'ㅇ'.toString()">
								 AND (REGEXP_LIKE (A.ComName , '^ㅇ') OR ( A.ComName <![CDATA[ >= ]]> '아' AND A.ComName <![CDATA[ < ]]> '자' ))
							 </when>
							 <when test="tabFilter == 'ㅈ'.toString()">
								 AND (REGEXP_LIKE (A.ComName ,'^(ㅈ|ㅉ)') OR ( A.ComName <![CDATA[ >= ]]> '자' AND A.ComName <![CDATA[ < ]]> '차' ))
							 </when>
							 <when test="tabFilter == 'ㅊ'.toString()">
								 AND (REGEXP_LIKE (A.ComName ,'^ㅊ') OR ( A.ComName <![CDATA[ >= ]]> '차' AND A.ComName <![CDATA[ < ]]> '카' ))
							 </when>
							 <when test="tabFilter == 'ㅋ'.toString()">
								 AND (REGEXP_LIKE (A.ComName , '^ㅋ') OR ( A.ComName <![CDATA[ >= ]]> '카' AND A.ComName <![CDATA[ < ]]> '타' ))
							 </when>
							 <when test="tabFilter == 'ㅌ'.toString()">
								 AND (REGEXP_LIKE (A.ComName ,'^ㅌ') OR ( A.ComName <![CDATA[ >= ]]> '타' AND A.ComName <![CDATA[ < ]]> '파' ))
							 </when>
							 <when test="tabFilter == 'ㅍ'.toString()">
								 AND (REGEXP_LIKE (A.ComName ,'^ㅍ') OR ( A.ComName <![CDATA[ >= ]]> '파' AND A.ComName <![CDATA[ < ]]> '하' ))
							 </when>
							 <when test="tabFilter == 'ㅎ'.toString()">
								 AND (REGEXP_LIKE (A.ComName , '^ㅎ') OR ( A.ComName <![CDATA[ >= ]]> '하'))
							 </when>
							 <when test="tabFilter == 'ETC'.toString()">
							     AND <![CDATA[ NOT REGEXP_LIKE (A.ComName, '^[0-9a-zA-Z가-힣]')  ]]>
							 </when>
						 </choose>
						 <if test="groupID != null">
				    			AND GroupID IN
								<foreach collection="groupID" item="item"  separator="," open="(" close=")">
								    #{item}
								</foreach>
						 </if>
			 	     </trim>
			 )TB
 	</select>
 	
	<!-- 업체 목록 가져오기(리스트)  -->
 	<select id="selectBizCardCompanyList" parameterType="cmap" resultType="cmap">
 		/* queryID : groupware.bizcard.selectBizCardCompanyList */
 	    <include refid="oracle.include.pagingHeader"/>
 	    SELECT TB.BizCardID AS "BizCardID"
 	         , TB.GroupID AS "GroupID"
 	         , TB.ComName AS "ComName"
 	         , TB.ComRepName AS "ComRepName"
 	         , TB.EMAIL AS "EMAIL"
 	         , TB.PhoneNum AS "PhoneNum"
 	         , TB.ComAddress AS "ComAddress"
 	         , TB.ModifyDate AS "Date"
 	         , TB.ImagePath  AS "ImagePath"  
		  FROM (
			SELECT BizCardID
						, GroupID
						, ComName
						, ComRepName
						, NVL((SELECT EMAIL FROM BIZCARD_EMAILINFO WHERE BizCardID=A.BizCardID AND TypeCode='C' AND ROWNUM =1 ), '') AS EMAIL
						, NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='C' AND PhoneType = 'T' AND ROWNUM =1 ), '') AS PhoneNum
						, NVL(ComAddress, '') AS ComAddress
						, NVL(A.ModifyDate, A.RegistDate) AS ModifyDate
						, ImagePath
						FROM BIZCARD_COMPANY A
				<trim prefix="WHERE" prefixOverrides="AND |OR ">
						<if test="startDate != null and startDate != ''">
			 	            NVL(A.ModifyDate, A.RegistDate) <![CDATA[ >= ]]> TO_DATE(#{startDate}, 'YYYY-MM-DD HH24:MI:SS')
			 	        </if>
			 	        <if test="endDate != null and endDate != ''">
			 	            NVL(A.ModifyDate, A.RegistDate) <![CDATA[ <= ]]> TO_DATE(#{endDate}, 'YYYY-MM-DD HH24:MI:SS')
			 	        </if>
						<if test="searchWord != null and searchWord != '' and searchType != null amd searchType != ''" >
						    <choose>
								 <when test="searchType == 'ComName'.toString()">
									 AND A.ComName  like '%'||#{searchWord}||'%'
								 </when>
								 <when test="searchType == 'EMAIL'.toString()">
								     AND NVL((SELECT EMAIL FROM BIZCARD_EMAILINFO WHERE BizCardID=A.BizCardID AND TypeCode='C' AND EMAIL like '%'||#{searchWord}||'%' AND ROWNUM = 1), '') <![CDATA[ != ]]> ''
								 </when>
								 <when test="searchType == 'PhoneNum'.toString()">
								     AND (SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='C' AND PhoneType = 'T' AND PhoneNumber like '%'||#{searchWord}||'%' AND ROWNUM = 1) 
								 </when>
								 <when test="searchType == 'Multi'.toString()">
								     AND  (
								     	(A.ComName  like '%'||#{searchWord}||'%')
								     	OR
								     	(NVL((SELECT EMAIL FROM BIZCARD_EMAILINFO WHERE BizCardID=A.BizCardID AND TypeCode='C' AND EMAIL like '%'||#{searchWord}||'%' AND ROWNUM = 1), '') <![CDATA[ != ]]> '')
								     	OR
								     	(NVL((SELECT PhoneNumber FROM BIZCARD_PHONEINFO WHERE BizCardID=A.BizCardID AND TypeCode='C' AND PhoneType = 'T' AND PhoneNumber like '%'||#{searchWord}||'%' AND ROWNUM = 1), '') <![CDATA[ != ]]> '')	
								     )
								 </when>
							 </choose>
					 	</if>
				 	    <choose>
							 <when test="tabFilter == 'ENG'.toString()">
								 AND SUBSTR(A.ComName,1,1) BETWEEN 'A' AND 'z'
							 </when>
							 <when test="tabFilter == 'NUM'.toString()">
								 AND A.ComName BETWEEN '0' AND '9'
							 </when>
							 <when test="tabFilter == 'ㄱ'.toString()">
								 AND (REGEXP_LIKE (A.ComName,'^(ㄱ|ㄲ)') OR ( A.ComName <![CDATA[ >= ]]>  '가' AND A.ComName <![CDATA[ < ]]>  '나' ))
							 </when>
							 <when test="tabFilter == 'ㄴ'.toString()">
								 AND (REGEXP_LIKE (A.ComName ,'^ㄴ') OR ( A.ComName <![CDATA[ >= ]]> '나' AND A.ComName <![CDATA[ < ]]> '다' ))
							 </when>
							 <when test="tabFilter == 'ㄷ'.toString()">
								 AND (REGEXP_LIKE (A.ComName , '^(ㄷ|ㄸ)') OR ( A.ComName <![CDATA[ >= ]]> '다' AND A.ComName <![CDATA[ < ]]> '라' ))
							 </when>
							 <when test="tabFilter == 'ㄹ'.toString()">
								 AND (REGEXP_LIKE (A.ComName , '^ㄹ') OR ( A.ComName <![CDATA[ >= ]]> '라' AND A.ComName <![CDATA[ < ]]> '마' ))
							 </when>
							 <when test="tabFilter == 'ㅁ'.toString()">
								 AND (REGEXP_LIKE (A.ComName , '^ㅁ') OR ( A.ComName <![CDATA[ >= ]]> '마' AND A.ComName <![CDATA[ < ]]> '바' ))
							 </when>
							 <when test="tabFilter == 'ㅂ'.toString()">
								 AND (REGEXP_LIKE (A.ComName , '^ㅂ') OR ( A.ComName <![CDATA[ >= ]]> '바' AND A.ComName <![CDATA[ < ]]> '사' ))
							 </when>
							 <when test="tabFilter == 'ㅅ'.toString()">
								 AND (REGEXP_LIKE (A.ComName ,'^(ㅅ|ㅆ)') OR ( A.ComName <![CDATA[ >= ]]> '사' AND A.ComName <![CDATA[ < ]]> '아' ))
							 </when>
							 <when test="tabFilter == 'ㅇ'.toString()">
								 AND (REGEXP_LIKE (A.ComName , '^ㅇ') OR ( A.ComName <![CDATA[ >= ]]> '아' AND A.ComName <![CDATA[ < ]]> '자' ))
							 </when>
							 <when test="tabFilter == 'ㅈ'.toString()">
								 AND (REGEXP_LIKE (A.ComName ,'^(ㅈ|ㅉ)') OR ( A.ComName <![CDATA[ >= ]]> '자' AND A.ComName <![CDATA[ < ]]> '차' ))
							 </when>
							 <when test="tabFilter == 'ㅊ'.toString()">
								 AND (REGEXP_LIKE (A.ComName ,'^ㅊ') OR ( A.ComName <![CDATA[ >= ]]> '차' AND A.ComName <![CDATA[ < ]]> '카' ))
							 </when>
							 <when test="tabFilter == 'ㅋ'.toString()">
								 AND (REGEXP_LIKE (A.ComName ,'^ㅋ') OR ( A.ComName <![CDATA[ >= ]]> '카' AND A.ComName <![CDATA[ < ]]> '타' ))
							 </when>
							 <when test="tabFilter == 'ㅌ'.toString()">
								 AND (REGEXP_LIKE (A.ComName , '^ㅌ') OR ( A.ComName <![CDATA[ >= ]]> '타' AND A.ComName <![CDATA[ < ]]> '파' ))
							 </when>
							 <when test="tabFilter == 'ㅍ'.toString()">
								 AND (REGEXP_LIKE (A.ComName ,'^ㅍ') OR ( A.ComName <![CDATA[ >= ]]> '파' AND A.ComName <![CDATA[ < ]]> '하' ))
							 </when>
							 <when test="tabFilter == 'ㅎ'.toString()">
								 AND (REGEXP_LIKE (A.ComName ,'^ㅎ') OR ( A.ComName <![CDATA[ >= ]]> '하'))
							 </when>
							 <when test="tabFilter == 'ETC'.toString()">
								 AND <![CDATA[ NOT REGEXP_LIKE (A.ComName, '^[0-9a-zA-Z가-힣]')  ]]>
							 </when>
						 </choose>
						 <if test="groupID != null">
				    			AND GroupID IN
								<foreach collection="groupID" item="item"  separator="," open="(" close=")">
								    #{item}
								</foreach>
						 </if>
			 	     </trim>
			 ) TB
 			 <trim prefix="ORDER BY">
				<if test="sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
					TB.ComName ASC <include refid="oracle.include.listOrderBy"/>
			    </if>  
				<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection != ''">
					<choose>
						<when test='sortColumn.equalsIgnoreCase("ComRepName")'>ComRepName</when>
						<when test='sortColumn.equalsIgnoreCase("EMAIL")'>EMAIL</when>
						<when test='sortColumn.equalsIgnoreCase("PhoneNum")'>PhoneNum</when>
						<when test='sortColumn.equalsIgnoreCase("ComAddress")'>ComAddress</when>
						<otherwise>ComName</otherwise>
					</choose>
					<choose>
						<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
						<otherwise> DESC</otherwise>
					</choose>
					<include refid="oracle.include.listOrderBy"/>
				</if>
			</trim>
			<include refid="oracle.include.pagingFooter"/>
 	</select>
        
    <!-- 즐겨찾기 목록에 삽입  -->
 	<insert id="insertIntoFavoriteList" parameterType="cmap" >
          INSERT INTO BIZCARD_FAVORITEINFO (BizCardID, UR_Code)
 		  VALUES (#{BizCardID}, #{UR_Code})
 	</insert>
 	
 	<!-- 즐겨찾기 목록에서 제거(1개)  -->
 	<delete id="deleteFromFavoriteList" parameterType="cmap" >
          DELETE FROM BIZCARD_FAVORITEINFO
          WHERE BizCardID = #{BizCardID}  AND UR_Code = #{UR_Code}
 	</delete>
 	
 	<!-- 즐겨찾기 목록에서 제거(n개)  -->
	<delete id="deleteBizCardFav" parameterType="cmap">
		DELETE FROM  BIZCARD_FAVORITEINFO
		WHERE	BizCardID IN
			<foreach collection="BizCardID" item="item"  separator="," open="(" close=")">
			    #{item}
			</foreach>
	</delete>
	
	<!-- 연락처(전화) 목록 개수  -->
	<select id="selectBizCardPhoneCnt" parameterType="cmap" resultType="java.lang.Long">
 	    SELECT COUNT(SeqID) AS Count 
 	      FROM BIZCARD_PHONEINFO
 	     WHERE	BizCardID = #{BizCardID}
 	</select>
 	
	<!-- 연락처(전화) 목록에 삽입  -->
 	<insert id="insertBizCardPhoneList" parameterType="cmap" useGeneratedKeys="true">
 	    INSERT INTO BIZCARD_PHONEINFO (
 	    	BizCardID,
			TypeCode,
			PhoneType,
			PhoneNumber
		)
		SELECT 
			#{LastBizCardID},
			TypeCode,
			PhoneType,
			PhoneNumber
		FROM BIZCARD_PHONEINFO
		WHERE	BizCardID = #{BizCardID}
		<selectKey keyProperty="TBizCardID" resultType="long" order="AFTER">
			SELECT BizCardID FROM BIZCARD_PHONEINFO WHERE BizCardID = #{LastBizCardID} AND ROWNUM = 1 
        </selectKey>		
 	</insert>
  	
	<!-- 연락처(이메일) 목록 개수  -->
	<select id="selectBizCardEmailCnt" parameterType="cmap" resultType="java.lang.Long">
 	    SELECT COUNT(SeqID) AS Count 
 	      FROM BIZCARD_EMAILINFO
 	     WHERE	BizCardID = #{BizCardID}	
 	</select>
 		
 	<!-- 연락처(이메일) 목록에 삽입  -->
 	<insert id="insertBizCardEmailList" parameterType="cmap" useGeneratedKeys="true">
 	    INSERT INTO BIZCARD_EMAILINFO (
 	    	BizCardID,
			TypeCode,
			Email
		)
		SELECT 
			#{LastBizCardID},
			TypeCode,
			Email
		FROM BIZCARD_EMAILINFO
		WHERE	BizCardID = #{BizCardID}
		<selectKey keyProperty="TBizCardID" resultType="long" order="AFTER">
			SELECT BizCardID FROM BIZCARD_EMAILINFO WHERE BizCardID = #{LastBizCardID} AND ROWNUM = 1
        </selectKey>	
 	</insert>
 	
 	<!-- 연락처(기념일) 목록 개수  -->
	<select id="selectBizCardAnniverCnt" parameterType="cmap" resultType="java.lang.Long">
 	    SELECT COUNT(SeqID) AS Count 
 	      FROM BIZCARD_ANNIVERSARYINFO
 	     WHERE	BizCardID = #{BizCardID}
 	</select>
 	
 	<!-- 연락처(기념일) 목록에 삽입  -->
 	<insert id="insertBizCardAnniverList" parameterType="cmap" useGeneratedKeys="true">
 	    INSERT INTO BIZCARD_ANNIVERSARYINFO (
 	    	BizCardID,
			TypeCode,
			AnniversaryID,
			AnniversaryText
		)
		SELECT 
			#{LastBizCardID},
			TypeCode,
			AnniversaryID,
			AnniversaryText
		FROM BIZCARD_ANNIVERSARYINFO
		WHERE	BizCardID = #{BizCardID}
		<selectKey keyProperty="TBizCardID" resultType="long" order="AFTER">
			SELECT BizCardID FROM BIZCARD_ANNIVERSARYINFO WHERE BizCardID = #{LastBizCardID} AND ROWNUM = 1
        </selectKey>	
 	</insert>
 	
 	<!-- 연락처(즐겨찾기) 목록 개수  -->
	<select id="selectBizCardFavoriteCnt" parameterType="cmap" resultType="java.lang.Long">
 	    SELECT COUNT(SeqID) AS Count 
 	      FROM BIZCARD_FAVORITEINFO
 	     WHERE	BizCardID = #{BizCardID}		
 	</select>
 	
 	<!-- 연락처(즐겨찾기) 목록에 삽입  -->
 	<insert id="insertBizCardFavoriteList" parameterType="cmap" useGeneratedKeys="true">
 	    INSERT INTO BIZCARD_FAVORITEINFO (
 	    	BizCardID,
			UR_Code
		)
		SELECT 
			#{LastBizCardID},
			UR_Code
		FROM BIZCARD_FAVORITEINFO
		WHERE	BizCardID = #{BizCardID}	
		<selectKey keyProperty="TBizCardID" resultType="long" order="AFTER">
			SELECT BizCardID FROM BIZCARD_FAVORITEINFO WHERE BizCardID = #{LastBizCardID} AND ROWNUM = 1
        </selectKey>	
 	</insert>
	
 	<!-- 연락처(개인/부서/회사) 목록에 삽입  -->
 	<insert id="insertBizCardList" parameterType="cmap" useGeneratedKeys="true">
 	    INSERT INTO BIZCARD_PERSON (
			ShareType,
			GroupID,
			Name,
			MessengerID,
			CompanyID,
			CompanyName,
			JobTitle,
			DeptName,
			Memo,
			ImagePath,
			RegComCode,
			RegDeptCode,
			RegisterID,
			RegisterName,
			RegistDate
		)
		SELECT #{TypeCode} AS ShareType,
			DECODE(#{GroupID}, 'none', null, #{GroupID}) AS GroupID,
			Name,
			MessengerID,
			CompanyID,
			CompanyName,
			JobTitle,
			DeptName,
			Memo,
			ImagePath,
			#{DN_Code},
			#{GR_Code},
			#{UR_Code},
			#{UR_Name},
			SYSDATE
		FROM BIZCARD_PERSON
		WHERE	BizCardID = #{BizCardID}
		<selectKey keyProperty="LastBizCardID" resultType="int" order="AFTER">
        	SELECT BIZCARD_PERSON_SEQ.CURRVAL FROM dual
       </selectKey>
 	</insert>
 	
 	<!-- 연락처(개인/부서/회사) 목록에서 제거  -->
	<delete id="deleteBizCardList" parameterType="cmap">
		DELETE FROM
		<if test="TypeCode == 'P'.toString() or TypeCode == 'D'.toString() or TypeCode == 'U'.toString() or TypeCode == 'A'.toString()">
 	          BIZCARD_PERSON
 	    </if>
 	    <if test="TypeCode == 'C'.toString()">
 	          BIZCARD_COMPANY
 	    </if>
 	    <if test="TypeCode == null">
 	          BIZCARD_PERSON
 	    </if>
		WHERE	BizCardID IN
			<foreach collection="BizCardID" item="item"  separator="," open="(" close=")">
			    #{item}
			</foreach>
	</delete>
	
	<!-- 전화번호 목록에서 제거  -->
	<delete id="deleteBizCardPhoneList" parameterType="cmap">
		DELETE FROM BIZCARD_PHONEINFO
		WHERE	
		<if test="TypeCode == 'P'.toString() or TypeCode == 'D'.toString() or TypeCode == 'U'.toString() or TypeCode == 'A'.toString() or TypeCode == null">
 	          TypeCode  <![CDATA[ <> ]]> 'C'
 	    </if>
 	    <if test="TypeCode == 'C'.toString()">
 	          TypeCode  = 'C'
 	    </if>
   	    AND (
   	    	BizCardID IN
			<foreach collection="BizCardID" item="item"  separator="," open="(" close=")">
			    #{item}
			</foreach>
			<if test="BizCardY != null">
				OR
				BizCardID = #{BizCardY}
			</if>
		)
	</delete>
	
	<!-- 이메일 목록에서 제거  -->
	<delete id="deleteBizCardEmailList" parameterType="cmap">
		DELETE FROM  BIZCARD_EMAILINFO
		WHERE	
		<if test="TypeCode == 'P'.toString() or TypeCode == 'D'.toString() or TypeCode == 'U'.toString() or TypeCode == 'A'.toString() or TypeCode == null">
 	          TypeCode  <![CDATA[ <> ]]> 'C'
 	    </if>
 	    <if test="TypeCode == 'C'.toString()">
 	          TypeCode  = 'C'
 	    </if>
 	    AND (
 	     	BizCardID IN
			<foreach collection="BizCardID" item="item"  separator="," open="(" close=")">
			    #{item}
			</foreach>
			<if test="BizCardY != null">
				OR
				BizCardID = #{BizCardY}
			</if>
		)
	</delete>
	
	<!-- 기념일 목록에서 제거(n개)  -->
	<delete id="deleteBizCardAnniversaryList" parameterType="cmap">
		DELETE FROM  BIZCARD_ANNIVERSARYINFO
		WHERE	
		<if test="TypeCode == 'P'.toString() or TypeCode == 'D'.toString() or TypeCode == 'U'.toString() or TypeCode == 'A'.toString() or TypeCode == null">
 	          TypeCode  <![CDATA[ <> ]]> 'C'
 	    </if>
 	    <if test="TypeCode == 'C'.toString()">
 	          TypeCode  = 'C'
 	    </if>
 	    AND (
 	     	BizCardID IN
			<foreach collection="BizCardID" item="item"  separator="," open="(" close=")">
			    #{item}
			</foreach>
			<if test="BizCardY != null">
				OR
				BizCardID = #{BizCardY}
			</if>
		)
	</delete>
	
	<!-- 그룹 목록에서 제거(1개)  -->
	<delete id="deleteBizCardGroupOne" parameterType="cmap">
		DELETE FROM BIZCARD_GROUP
		WHERE GroupID = #{GroupID}
	</delete>
	
	<!-- 그룹 목록에서 제거(n개)  -->
	<delete id="deleteBizCardGroup" parameterType="cmap">
		DELETE FROM BIZCARD_GROUP
		WHERE	ShareType = #{TypeCode} AND GroupID IN
			<foreach collection="GroupID" item="item"  separator="," open="(" close=")">
			    #{item}
			</foreach>
	</delete>
	
	<select id="selectCallFuncDivList" parameterType="cmap" resultType="cmap">
 	   <include refid="oracle.include.pagingHeader"/>
	    SELECT DivisionCode AS "code"
 	        , displayName AS "name"
 	        , 0 AS "refcnt"
 	    FROM WORKREPORT_JOB_CATE_DIVISION
 	    ORDER BY displayName ASC
 	    <include refid="oracle.include.pagingFooter"/>
 	</select>
 	
 	<select id="selectCallFuncDivCnt" parameterType="cmap" resultType="java.lang.Long">
 	   SELECT COUNT(*)
 	      FROM WORKREPORT_JOB_CATE_DIVISION
 	</select>
	
 	<!-- 연락처 내보내기 -->
 	<select id="selectBizCardExportListCnt" parameterType="cmap" resultType="java.lang.Long">
		SELECT COUNT(*) 
		  FROM (
			SELECT DISTINCT A.BizCardID
					, A.GroupID
					, A.Name
					, NVL(AVS.AnniversaryText, '') 	AS AnniversaryText
					, NVL(E.EMAIL, '') 				AS EMAIL
					, NVL(A.MessengerID, '') 		AS MessengerID					
					, NVL(CELL.PhoneNumber, '') 	AS CellPhone
					, NVL(HOME.PhoneNumber, '') 	AS HomePhone					
					, NVL(A.CompanyName, '') 		AS ComName					
					, NVL(TEL.PhoneNumber, '') 		AS ComPhone
					, NVL(FAX.PhoneNumber, '') 		AS FAX
					, NVL(ETC.PhoneNumber, '') 		AS EtcPhone
					, NVL(DIRECT.PhoneNumber, '') 	AS DirectPhone
					, NVL(A.DeptName, '') 			AS DeptName
					, NVL(A.JobTitle, '') 			AS JobTitle					
					, NVL(A.Memo, '') 				AS Memo
					, '' AS ComZipcode
					, '' AS ComAddress
					, '' AS ComWebSite
					, A.RegistDate
					, A.RegisterID
					, A.RegDeptCode
					, A.RegComCode
					, A.ShareType
					FROM BIZCARD_PERSON A
					LEFT OUTER JOIN 
					(SELECT BizCardID, LISTAGG(PhoneNumber,':') WITHIN GROUP(ORDER BY PhoneNumber) AS PhoneNumber FROM BIZCARD_PHONEINFO WHERE PhoneType = 'C' GROUP BY (BizCardID,PhoneNumber) ) CELL
					ON A.BizCardID=CELL.BizCardID
					LEFT OUTER JOIN 
					(SELECT BizCardID, LISTAGG(PhoneNumber,':') WITHIN GROUP(ORDER BY PhoneNumber) AS PhoneNumber FROM BIZCARD_PHONEINFO WHERE PhoneType = 'H' GROUP BY (BizCardID,PhoneNumber) ) HOME
					ON A.BizCardID=HOME.BizCardID
					LEFT OUTER JOIN 
					(SELECT BizCardID, LISTAGG(PhoneNumber,':') WITHIN GROUP(ORDER BY PhoneNumber) AS PhoneNumber FROM BIZCARD_PHONEINFO WHERE PhoneType = 'T' GROUP BY (BizCardID,PhoneNumber) ) TEL
					ON A.BizCardID=TEL.BizCardID
					LEFT OUTER JOIN 
					(SELECT BizCardID, LISTAGG(PhoneNumber,':') WITHIN GROUP(ORDER BY PhoneNumber) AS PhoneNumber FROM BIZCARD_PHONEINFO WHERE PhoneType = 'F' GROUP BY (BizCardID,PhoneNumber) ) FAX
					ON A.BizCardID=FAX.BizCardID
					LEFT OUTER JOIN
					(SELECT BizCardID, LISTAGG(PhoneNumber,':') WITHIN GROUP(ORDER BY PhoneNumber) AS PhoneNumber FROM BIZCARD_PHONEINFO WHERE PhoneType = 'E' GROUP BY (BizCardID,PhoneNumber) ) ETC
					ON A.BizCardID=ETC.BizCardID
					LEFT OUTER JOIN
					(SELECT BizCardID, LISTAGG('(' || PhoneName || ') ' || PhoneNumber, ':') WITHIN GROUP(ORDER BY PhoneNumber) AS PhoneNumber FROM BIZCARD_PHONEINFO WHERE PhoneType = 'D' GROUP BY (BizCardID,PhoneNumber) ) DIRECT
					ON A.BizCardID=DIRECT.BizCardID
					LEFT OUTER JOIN 
					(SELECT BizCardID, LISTAGG(Email,':') WITHIN GROUP(ORDER BY Email) AS Email FROM BIZCARD_EMAILINFO WHERE TypeCode = 'P' GROUP BY(BizCardID,Email )) E ON A.BizCardID=E.BizCardID
					LEFT OUTER JOIN BIZCARD_ANNIVERSARYINFO AVS ON A.CompanyID=AVS.BizCardID AND AVS.TypeCode = 'P'
			<trim prefix="WHERE" prefixOverrides="AND |OR ">
		    	<!-- 분류 -->
		    	<if test="targetType == 'ShareType'.toString()">
					<if test='ShareTypeArr != null and ShareTypeArr.length != 0'>
						AND A.ShareType IN
						<foreach collection="ShareTypeArr" item="item" open="(" close=")" separator=",">
							#{item}
						</foreach>
					</if>
					<if test='GroupIDArr != null and GroupIDArr.length != 0'>
						AND (CASE WHEN A.ShareType = 'P' then NVL(A.GroupID, 'P_noGroup')
					       		  WHEN A.ShareType = 'D' then NVL(A.GroupID, 'D_noGroup')
					       		  WHEN A.ShareType = 'U' then NVL(A.GroupID, 'U_noGroup') 
					       		  ELSE A.GroupID END) IN
						<foreach collection="GroupIDArr" item="item" open="(" close=")" separator=",">
							#{item}
						</foreach>
					</if>
		    	</if>
		    	
		    	<!-- 분류 -->
		    	<if test="targetType == 'ShareType'.toString()">
		    		AND (
	             			(A.RegisterID = #{UR_Code} AND A.ShareType = 'P') 
	             			OR
	             			(A.RegDeptCode = #{GR_Code} AND A.ShareType = 'D') 
	             			OR
	             			(A.RegComCode = #{DN_Code} AND A.ShareType = 'U') 
             			)
		    	</if>
		    	 
				<!-- 개별 -->
				<if test="targetType == 'Each'.toString()">
					<if test='BizCardIDArr != null and BizCardIDArr.length != 0 and (BizGroupIDArr == null or BizGroupIDArr.length == 0)'>
						AND A.BizCardID IN
						<foreach collection="BizCardIDArr" item="item" open="(" close=")" separator=",">
							#{item}
						</foreach>
					</if>
					
					<if test='(BizCardIDArr == null or BizCardIDArr.length == 0) and BizGroupIDArr != null and BizGroupIDArr.length != 0'>
						AND A.GroupID IN
						<foreach collection="BizGroupIDArr" item="item" open="(" close=")" separator=",">
							#{item}
						</foreach>
					</if>
					
					<if test='BizCardIDArr != null and BizCardIDArr.length != 0 and BizGroupIDArr != null and BizGroupIDArr.length != 0'>
						AND (A.BizCardID IN
						<foreach collection="BizCardIDArr" item="item" open="(" close=")" separator=",">
							#{item}
						</foreach>
						
						OR A.GroupID IN
						<foreach collection="BizGroupIDArr" item="item" open="(" close=")" separator=",">
							#{item}
						</foreach>
						)
					</if>
		    	</if>
		    	
		    	<!-- 전체 -->
		    	<if test="targetType == 'ALL'.toString()">
 	             	AND (
	             			(A.RegisterID = #{UR_Code} AND A.ShareType = 'P') 
	             			OR
	             			(A.RegDeptCode = #{GR_Code} AND A.ShareType = 'D') 
	             			OR
	             			(A.RegComCode = #{DN_Code} AND A.ShareType = 'U') 
             			)
	 	        </if>
 	     	</trim>
 	     	
 	     	<!-- 분류 -->
			<if test="targetType == 'ShareType'.toString()">
				UNION
				
				SELECT	  0 AS BizCardID
						, A.GroupID
						, A.Name
						, '' AS AnniversaryText
						, NVL(A.EMAIL, '') AS EMAIL
						, '' AS MessengerID
						, '' AS CellPhone
						, '' AS HomePhone
						, '' AS ComName
						, '' AS ComPhone
						, '' AS FAX
						, '' AS EtcPhone
						, '' AS DirectPhone
						, '' AS DeptName
						, '' AS JobTitle
						, '' AS Memo
						, '' AS ComZipcode
						, '' AS ComAddress
						, '' AS ComWebSite
						, A.RegistDate
						, '' AS RegisterID
						, '' AS RegDeptCode
						, '' AS RegComCode
						, '' AS ShareType
				FROM (
					SELECT	BGP.GroupID
							, Fn_BaseGetDictionary_S(#{lang}, SOU.MultiDisplayName) AS Name
							, NVL(SOU.MailAddress, '') AS EMAIL
							, BGP.RegistDate
					FROM SYS_OBJECT_USER SOU
					INNER JOIN BIZCARD_GROUPPERSON BGP ON SOU.UserCode = BGP.Code AND BGP.ItemType = 'user'
					INNER JOIN BIZCARD_GROUP AS GR ON GR.GroupID = BGP.GroupID
					WHERE 1=1
					<if test='GroupIDArr != null and GroupIDArr.length != 0'>
						AND NVL(BGP.GroupID, '') IN
						<foreach collection="GroupIDArr" item="item" open="(" close=")" separator=",">
							#{item}
						</foreach>
					</if>
					AND (
	             			(GR.RegisterID = #{UR_Code} AND GR.ShareType = 'P') 
	             			OR
	             			(GR.RegDeptCode = #{GR_Code} AND GR.ShareType = 'D') 
	             			OR
	             			(GR.RegComCode = #{DN_Code} AND GR.ShareType = 'U') 
             			)
					UNION
					SELECT	BGP.GroupID
							, Fn_BaseGetDictionary_S(#{lang}, SOU.MultiDisplayName) AS Name
							, NVL(SOU.PrimaryMail, '') AS EMAIL
							, BGP.RegistDate
					FROM SYS_OBJECT_GROUP SOU
					INNER JOIN BIZCARD_GROUPPERSON BGP ON SOU.GroupCode = BGP.Code AND BGP.ItemType = 'group'
					INNER JOIN BIZCARD_GROUP AS GR ON GR.GroupID = BGP.GroupID
					WHERE 1=1
					<if test='GroupIDArr != null and GroupIDArr.length != 0'>
						AND NVL(BGP.GroupID, '') IN
						<foreach collection="GroupIDArr" item="item" open="(" close=")" separator=",">
							#{item}
						</foreach>
					</if>
					AND (
	             			(GR.RegisterID = #{UR_Code} AND GR.ShareType = 'P') 
	             			OR
	             			(GR.RegDeptCode = #{GR_Code} AND GR.ShareType = 'D') 
	             			OR
	             			(GR.RegComCode = #{DN_Code} AND GR.ShareType = 'U') 
             			)
					UNION
					SELECT	BGP.GroupID
							, BP.Name
							, NVL((SELECT Email FROM BIZCARD_EMAILINFO WHERE SeqID IN (SELECT MIN(SeqID) FROM BIZCARD_EMAILINFO WHERE BizCardID = BP.BizCardID AND TypeCode='P')), '') AS EMAIL
							, BGP.RegistDate
					FROM BIZCARD_PERSON BP
					INNER JOIN BIZCARD_GROUPPERSON BGP ON BP.BizCardID = BGP.Code AND BGP.ItemType = 'bizcard'
					INNER JOIN BIZCARD_GROUP AS GR ON GR.GroupID = BGP.GroupID
					WHERE 1=1
					<if test='GroupIDArr != null and GroupIDArr.length != 0'>
						AND NVL(BGP.GroupID, '') IN
						<foreach collection="GroupIDArr" item="item" open="(" close=")" separator=",">
							#{item}
						</foreach>
					</if>
					AND (
	             			(GR.RegisterID = #{UR_Code} AND GR.ShareType = 'P') 
	             			OR
	             			(GR.RegDeptCode = #{GR_Code} AND GR.ShareType = 'D') 
	             			OR
	             			(GR.RegComCode = #{DN_Code} AND GR.ShareType = 'U') 
             			)
				) A
			</if>
			
			<!-- 개별연락처 내보내기에서 그룹 선택 시 -->
			<if test="targetType == 'Each'.toString() and BizGroupIDArr != null and BizGroupIDArr.length != 0">
				UNION
				
				SELECT	  0 AS BizCardID
						, A.GroupID
						, A.Name
						, '' AS AnniversaryText
						, NVL(A.EMAIL, '') AS EMAIL
						, '' AS MessengerID
						, '' AS CellPhone
						, '' AS HomePhone
						, '' AS ComName
						, '' AS ComPhone
						, '' AS FAX
						, '' AS EtcPhone
						, '' AS DeptName
						, '' AS JobTitle
						, '' AS Memo
						, '' AS ComZipcode
						, '' AS ComAddress
						, '' AS ComWebSite
						, A.RegistDate
						, '' AS RegisterID
						, '' AS RegDeptCode
						, '' AS RegComCode
						, '' AS ShareType
				FROM (
					SELECT	BGP.GroupID
							, Fn_BaseGetDictionary_S(#{lang}, SOU.MultiDisplayName) AS Name
							, NVL(SOU.MailAddress, '') AS EMAIL
							, BGP.RegistDate
					FROM SYS_OBJECT_USER SOU
					INNER JOIN BIZCARD_GROUPPERSON BGP ON SOU.UserCode = BGP.Code AND BGP.ItemType = 'user'
					INNER JOIN BIZCARD_GROUP AS GR ON GR.GroupID = BGP.GroupID
					WHERE 1=1
					<if test='BizGroupIDArr != null and BizGroupIDArr.length != 0'>
						AND NVL(BGP.GroupID, '') IN
						<foreach collection="BizGroupIDArr" item="item" open="(" close=")" separator=",">
							#{item}
						</foreach>
					</if>
					AND (
	             			(GR.RegisterID = #{UR_Code} AND GR.ShareType = 'P') 
	             			OR
	             			(GR.RegDeptCode = #{GR_Code} AND GR.ShareType = 'D') 
	             			OR
	             			(GR.RegComCode = #{DN_Code} AND GR.ShareType = 'U') 
             			)
					UNION
					SELECT	BGP.GroupID
							, Fn_BaseGetDictionary_S(#{lang}, SOU.MultiDisplayName) AS Name
							, NVL(SOU.PrimaryMail, '') AS EMAIL
							, BGP.RegistDate
					FROM SYS_OBJECT_GROUP SOU
					INNER JOIN BIZCARD_GROUPPERSON BGP ON SOU.GroupCode = BGP.Code AND BGP.ItemType = 'group'
					INNER JOIN BIZCARD_GROUP AS GR ON GR.GroupID = BGP.GroupID
					WHERE 1=1
					<if test='BizGroupIDArr != null and BizGroupIDArr.length != 0'>
						AND NVL(BGP.GroupID, '') IN
						<foreach collection="BizGroupIDArr" item="item" open="(" close=")" separator=",">
							#{item}
						</foreach>
					</if>
					AND (
	             			(GR.RegisterID = #{UR_Code} AND GR.ShareType = 'P') 
	             			OR
	             			(GR.RegDeptCode = #{GR_Code} AND GR.ShareType = 'D') 
	             			OR
	             			(GR.RegComCode = #{DN_Code} AND GR.ShareType = 'U') 
             			)
					UNION
					SELECT	BGP.GroupID
							, BP.Name
							, NVL((SELECT Email FROM BIZCARD_EMAILINFO WHERE SeqID IN (SELECT MIN(SeqID) FROM BIZCARD_EMAILINFO WHERE BizCardID = BP.BizCardID AND TypeCode='P')), '') AS EMAIL
							, BGP.RegistDate
					FROM BIZCARD_PERSON BP
					INNER JOIN BIZCARD_GROUPPERSON BGP ON BP.BizCardID = BGP.Code AND BGP.ItemType = 'bizcard'
					INNER JOIN BIZCARD_GROUP AS GR ON GR.GroupID = BGP.GroupID
					WHERE 1=1
					<if test='BizGroupIDArr != null and BizGroupIDArr.length != 0'>
						AND NVL(BGP.GroupID, '') IN
						<foreach collection="BizGroupIDArr" item="item" open="(" close=")" separator=",">
							#{item}
						</foreach>
					</if>
					AND (
	             			(GR.RegisterID = #{UR_Code} AND GR.ShareType = 'P') 
	             			OR
	             			(GR.RegDeptCode = #{GR_Code} AND GR.ShareType = 'D') 
	             			OR
	             			(GR.RegComCode = #{DN_Code} AND GR.ShareType = 'U') 
             			)
				) A
			</if>
		 ) TB
 	</select>
 	
 	<select id="selectBizCardExportList" parameterType="cmap" resultType="cmap">
 	    SELECT TB.BizCardID AS "BizCardID"
         	 , TB.GroupID AS "GroupID"
 	         , TB.Name AS "Name"
			 , TB.AnniversaryText AS "AnniversaryText"
			 , TB.EMAIL AS "EMAIL"
			 , TB.MessengerID AS "MessengerID"					
			 , TB.CellPhone AS "CellPhone"
			 , TB.HomePhone AS "HomePhone"					
			 , TB.ComName AS "ComName"				
			 , TB.ComPhone AS "ComPhone"
			 , TB.FAX AS "FAX"
			 , TB.EtcPhone AS "EtcPhone"
			 , TB.DirectPhone AS "DirectPhone"
			 , TB.DeptName AS "DeptName"
			 , TB.JobTitle AS "JobTitle"					
			 , TB.Memo AS "Memo"
			 , TB.ComZipcode AS "ComZipcode"
 	         , TB.ComAddress AS "ComAddress"
			 , TB.ComWebSite AS "ComWebSite"
			 , TB.RegistDate AS "RegistDate"
 	         , TB.RegisterID AS "RegisterID"
 	         , TB.RegDeptCode AS "RegDeptCode"
 	         , TB.RegComCode AS "RegComCode"
 	         , TB.ShareType AS "ShareType"
		   FROM (
			SELECT DISTINCT A.BizCardID
					, A.GroupID
					, A.Name
					, NVL(AVS.AnniversaryText, '') 	AS AnniversaryText
					, NVL(E.EMAIL, '') 				AS EMAIL
					, NVL(A.MessengerID, '') 		AS MessengerID					
					, NVL(CELL.PhoneNumber, '') 	AS CellPhone
					, NVL(HOME.PhoneNumber, '') 	AS HomePhone					
					, NVL(A.CompanyName, '') 		AS ComName					
					, NVL(TEL.PhoneNumber, '') 		AS ComPhone
					, NVL(FAX.PhoneNumber, '') 		AS FAX
					, NVL(ETC.PhoneNumber, '') 		AS EtcPhone
					, NVL(DIRECT.PhoneNumber, '') 	AS DirectPhone
					, NVL(A.DeptName, '') 			AS DeptName
					, NVL(A.JobTitle, '') 			AS JobTitle					
					, NVL(A.Memo, '') 				AS Memo
					, '' AS ComZipcode
					, '' AS ComAddress
					, '' AS ComWebSite
					, A.RegistDate
					, A.RegisterID
					, A.RegDeptCode
					, A.RegComCode
					, A.ShareType
					FROM BIZCARD_PERSON A
					LEFT OUTER JOIN 
					(SELECT BizCardID, LISTAGG(PhoneNumber,':') WITHIN GROUP(ORDER BY PhoneNumber) AS PhoneNumber FROM BIZCARD_PHONEINFO WHERE PhoneType = 'C' GROUP BY (BizCardID,PhoneNumber) ) CELL
					ON A.BizCardID=CELL.BizCardID
					LEFT OUTER JOIN 
					(SELECT BizCardID, LISTAGG(PhoneNumber,':') WITHIN GROUP(ORDER BY PhoneNumber) AS PhoneNumber FROM BIZCARD_PHONEINFO WHERE PhoneType = 'H' GROUP BY (BizCardID,PhoneNumber) ) HOME
					ON A.BizCardID=HOME.BizCardID
					LEFT OUTER JOIN 
					(SELECT BizCardID, LISTAGG(PhoneNumber,':') WITHIN GROUP(ORDER BY PhoneNumber) AS PhoneNumber FROM BIZCARD_PHONEINFO WHERE PhoneType = 'T' GROUP BY (BizCardID,PhoneNumber) ) TEL
					ON A.BizCardID=TEL.BizCardID
					LEFT OUTER JOIN 
					(SELECT BizCardID, LISTAGG(PhoneNumber,':') WITHIN GROUP(ORDER BY PhoneNumber) AS PhoneNumber FROM BIZCARD_PHONEINFO WHERE PhoneType = 'F' GROUP BY (BizCardID,PhoneNumber) ) FAX
					ON A.BizCardID=FAX.BizCardID
					LEFT OUTER JOIN
					(SELECT BizCardID, LISTAGG(PhoneNumber,':') WITHIN GROUP(ORDER BY PhoneNumber) AS PhoneNumber FROM BIZCARD_PHONEINFO WHERE PhoneType = 'E' GROUP BY (BizCardID,PhoneNumber) ) ETC
					ON A.BizCardID=ETC.BizCardID
					LEFT OUTER JOIN
					(SELECT BizCardID, LISTAGG('(' || PhoneName || ') ' || PhoneNumber, ':') WITHIN GROUP(ORDER BY PhoneNumber) AS PhoneNumber FROM BIZCARD_PHONEINFO WHERE PhoneType = 'D' GROUP BY (BizCardID,PhoneNumber) ) DIRECT
					ON A.BizCardID=DIRECT.BizCardID
					LEFT OUTER JOIN 
					(SELECT BizCardID, LISTAGG(Email,':') WITHIN GROUP(ORDER BY Email) AS Email FROM BIZCARD_EMAILINFO WHERE TypeCode = 'P' GROUP BY(BizCardID,Email )) E ON A.BizCardID=E.BizCardID
					LEFT OUTER JOIN BIZCARD_ANNIVERSARYINFO AVS ON A.CompanyID=AVS.BizCardID AND AVS.TypeCode = 'P'
			<trim prefix="WHERE" prefixOverrides="AND |OR ">
		    	<!-- 분류 -->
		    	<if test="targetType == 'ShareType'.toString()">
					<if test='ShareTypeArr != null and ShareTypeArr.length != 0'>
						AND A.ShareType IN
						<foreach collection="ShareTypeArr" item="item" open="(" close=")" separator=",">
							#{item}
						</foreach>
					</if>
					<if test='GroupIDArr != null and GroupIDArr.length != 0'>
						AND (CASE WHEN A.ShareType = 'P' then NVL(A.GroupID, 'P_noGroup')
					       		  WHEN A.ShareType = 'D' then NVL(A.GroupID, 'D_noGroup')
					       		  WHEN A.ShareType = 'U' then NVL(A.GroupID, 'U_noGroup') 
					       		  ELSE A.GroupID END) IN
						<foreach collection="GroupIDArr" item="item" open="(" close=")" separator=",">
							#{item}
						</foreach>
					</if>
		    	</if>
		    	
		    	<!-- 분류 -->
		    	<if test="targetType == 'ShareType'.toString()">
		    		AND (
	             			(A.RegisterID = #{UR_Code} AND A.ShareType = 'P') 
	             			OR
	             			(A.RegDeptCode = #{GR_Code} AND A.ShareType = 'D') 
	             			OR
	             			(A.RegComCode = #{DN_Code} AND A.ShareType = 'U') 
             			)
		    	</if>
		    	 
				<!-- 개별 -->
				<if test="targetType == 'Each'.toString()">
					<if test='BizCardIDArr != null and BizCardIDArr.length != 0 and (BizGroupIDArr == null or BizGroupIDArr.length == 0)'>
						AND A.BizCardID IN
						<foreach collection="BizCardIDArr" item="item" open="(" close=")" separator=",">
							#{item}
						</foreach>
					</if>
					
					<if test='(BizCardIDArr == null or BizCardIDArr.length == 0) and BizGroupIDArr != null and BizGroupIDArr.length != 0'>
						AND A.GroupID IN
						<foreach collection="BizGroupIDArr" item="item" open="(" close=")" separator=",">
							#{item}
						</foreach>
					</if>
					
					<if test='BizCardIDArr != null and BizCardIDArr.length != 0 and BizGroupIDArr != null and BizGroupIDArr.length != 0'>
						AND (A.BizCardID IN
						<foreach collection="BizCardIDArr" item="item" open="(" close=")" separator=",">
							#{item}
						</foreach>
						
						OR A.GroupID IN
						<foreach collection="BizGroupIDArr" item="item" open="(" close=")" separator=",">
							#{item}
						</foreach>
						)
					</if>
		    	</if>
		    	
		    	<!-- 전체 -->
		    	<if test="targetType == 'ALL'.toString()">
 	             	AND (
	             			(A.RegisterID = #{UR_Code} AND A.ShareType = 'P') 
	             			OR
	             			(A.RegDeptCode = #{GR_Code} AND A.ShareType = 'D') 
	             			OR
	             			(A.RegComCode = #{DN_Code} AND A.ShareType = 'U') 
             			)
	 	        </if>
 	     	</trim>
 	     	
 	     	<!-- 분류 -->
			<if test="targetType == 'ShareType'.toString()">
				UNION
				
				SELECT	  0 AS BizCardID
						, A.GroupID
						, A.Name
						, '' AS AnniversaryText
						, NVL(A.EMAIL, '') AS EMAIL
						, '' AS MessengerID
						, '' AS CellPhone
						, '' AS HomePhone
						, '' AS ComName
						, '' AS ComPhone
						, '' AS FAX
						, '' AS EtcPhone
						, '' AS DirectPhone
						, '' AS DeptName
						, '' AS JobTitle
						, '' AS Memo
						, '' AS ComZipcode
						, '' AS ComAddress
						, '' AS ComWebSite
						, A.RegistDate
						, '' AS RegisterID
						, '' AS RegDeptCode
						, '' AS RegComCode
						, '' AS ShareType
				FROM (
					SELECT	BGP.GroupID
							, Fn_BaseGetDictionary_S(#{lang}, SOU.MultiDisplayName) AS Name
							, NVL(SOU.MailAddress, '') AS EMAIL
							, BGP.RegistDate
					FROM SYS_OBJECT_USER SOU
					INNER JOIN BIZCARD_GROUPPERSON BGP ON SOU.UserCode = BGP.Code AND BGP.ItemType = 'user'
					INNER JOIN BIZCARD_GROUP AS GR ON GR.GroupID = BGP.GroupID
					WHERE 1=1
					<if test='GroupIDArr != null and GroupIDArr.length != 0'>
						AND NVL(BGP.GroupID, '') IN
						<foreach collection="GroupIDArr" item="item" open="(" close=")" separator=",">
							#{item}
						</foreach>
					</if>
					AND (
	             			(GR.RegisterID = #{UR_Code} AND GR.ShareType = 'P') 
	             			OR
	             			(GR.RegDeptCode = #{GR_Code} AND GR.ShareType = 'D') 
	             			OR
	             			(GR.RegComCode = #{DN_Code} AND GR.ShareType = 'U') 
             			)
					UNION
					SELECT	BGP.GroupID
							, Fn_BaseGetDictionary_S(#{lang}, SOU.MultiDisplayName) AS Name
							, NVL(SOU.PrimaryMail, '') AS EMAIL
							, BGP.RegistDate
					FROM SYS_OBJECT_GROUP SOU
					INNER JOIN BIZCARD_GROUPPERSON BGP ON SOU.GroupCode = BGP.Code AND BGP.ItemType = 'group'
					INNER JOIN BIZCARD_GROUP AS GR ON GR.GroupID = BGP.GroupID
					WHERE 1=1
					<if test='GroupIDArr != null and GroupIDArr.length != 0'>
						AND NVL(BGP.GroupID, '') IN
						<foreach collection="GroupIDArr" item="item" open="(" close=")" separator=",">
							#{item}
						</foreach>
					</if>
					AND (
	             			(GR.RegisterID = #{UR_Code} AND GR.ShareType = 'P') 
	             			OR
	             			(GR.RegDeptCode = #{GR_Code} AND GR.ShareType = 'D') 
	             			OR
	             			(GR.RegComCode = #{DN_Code} AND GR.ShareType = 'U') 
             			)
					UNION
					SELECT	BGP.GroupID
							, BP.Name
							, NVL((SELECT Email FROM BIZCARD_EMAILINFO WHERE SeqID IN (SELECT MIN(SeqID) FROM BIZCARD_EMAILINFO WHERE BizCardID = BP.BizCardID AND TypeCode='P')), '') AS EMAIL
							, BGP.RegistDate
					FROM BIZCARD_PERSON BP
					INNER JOIN BIZCARD_GROUPPERSON BGP ON BP.BizCardID = BGP.Code AND BGP.ItemType = 'bizcard'
					INNER JOIN BIZCARD_GROUP AS GR ON GR.GroupID = BGP.GroupID
					WHERE 1=1
					<if test='GroupIDArr != null and GroupIDArr.length != 0'>
						AND NVL(BGP.GroupID, '') IN
						<foreach collection="GroupIDArr" item="item" open="(" close=")" separator=",">
							#{item}
						</foreach>
					</if>
					AND (
	             			(GR.RegisterID = #{UR_Code} AND GR.ShareType = 'P') 
	             			OR
	             			(GR.RegDeptCode = #{GR_Code} AND GR.ShareType = 'D') 
	             			OR
	             			(GR.RegComCode = #{DN_Code} AND GR.ShareType = 'U') 
             			)
				) A
			</if>
			
			<!-- 개별연락처 내보내기에서 그룹 선택 시 -->
			<if test="targetType == 'Each'.toString() and BizGroupIDArr != null and BizGroupIDArr.length != 0">
				UNION
				
				SELECT	  0 AS BizCardID
						, A.GroupID
						, A.Name
						, '' AS AnniversaryText
						, NVL(A.EMAIL, '') AS EMAIL
						, '' AS MessengerID
						, '' AS CellPhone
						, '' AS HomePhone
						, '' AS ComName
						, '' AS ComPhone
						, '' AS FAX
						, '' AS EtcPhone
						, '' AS DeptName
						, '' AS JobTitle
						, '' AS Memo
						, '' AS ComZipcode
						, '' AS ComAddress
						, '' AS ComWebSite
						, A.RegistDate
						, '' AS RegisterID
						, '' AS RegDeptCode
						, '' AS RegComCode
						, '' AS ShareType
				FROM (
					SELECT	BGP.GroupID
							, Fn_BaseGetDictionary_S(#{lang}, SOU.MultiDisplayName) AS Name
							, NVL(SOU.MailAddress, '') AS EMAIL
							, BGP.RegistDate
					FROM SYS_OBJECT_USER SOU
					INNER JOIN BIZCARD_GROUPPERSON BGP ON SOU.UserCode = BGP.Code AND BGP.ItemType = 'user'
					INNER JOIN BIZCARD_GROUP AS GR ON GR.GroupID = BGP.GroupID
					WHERE 1=1
					<if test='BizGroupIDArr != null and BizGroupIDArr.length != 0'>
						AND NVL(BGP.GroupID, '') IN
						<foreach collection="BizGroupIDArr" item="item" open="(" close=")" separator=",">
							#{item}
						</foreach>
					</if>
					AND (
	             			(GR.RegisterID = #{UR_Code} AND GR.ShareType = 'P') 
	             			OR
	             			(GR.RegDeptCode = #{GR_Code} AND GR.ShareType = 'D') 
	             			OR
	             			(GR.RegComCode = #{DN_Code} AND GR.ShareType = 'U') 
             			)
					UNION
					SELECT	BGP.GroupID
							, Fn_BaseGetDictionary_S(#{lang}, SOU.MultiDisplayName) AS Name
							, NVL(SOU.PrimaryMail, '') AS EMAIL
							, BGP.RegistDate
					FROM SYS_OBJECT_GROUP SOU
					INNER JOIN BIZCARD_GROUPPERSON BGP ON SOU.GroupCode = BGP.Code AND BGP.ItemType = 'group'
					INNER JOIN BIZCARD_GROUP AS GR ON GR.GroupID = BGP.GroupID
					WHERE 1=1
					<if test='BizGroupIDArr != null and BizGroupIDArr.length != 0'>
						AND NVL(BGP.GroupID, '') IN
						<foreach collection="BizGroupIDArr" item="item" open="(" close=")" separator=",">
							#{item}
						</foreach>
					</if>
					AND (
	             			(GR.RegisterID = #{UR_Code} AND GR.ShareType = 'P') 
	             			OR
	             			(GR.RegDeptCode = #{GR_Code} AND GR.ShareType = 'D') 
	             			OR
	             			(GR.RegComCode = #{DN_Code} AND GR.ShareType = 'U') 
             			)
					UNION
					SELECT	BGP.GroupID
							, BP.Name
							, NVL((SELECT Email FROM BIZCARD_EMAILINFO WHERE SeqID IN (SELECT MIN(SeqID) FROM BIZCARD_EMAILINFO WHERE BizCardID = BP.BizCardID AND TypeCode='P')), '') AS EMAIL
							, BGP.RegistDate
					FROM BIZCARD_PERSON BP
					INNER JOIN BIZCARD_GROUPPERSON BGP ON BP.BizCardID = BGP.Code AND BGP.ItemType = 'bizcard'
					INNER JOIN BIZCARD_GROUP AS GR ON GR.GroupID = BGP.GroupID
					WHERE 1=1
					<if test='BizGroupIDArr != null and BizGroupIDArr.length != 0'>
						AND NVL(BGP.GroupID, '') IN
						<foreach collection="BizGroupIDArr" item="item" open="(" close=")" separator=",">
							#{item}
						</foreach>
					</if>
					AND (
	             			(GR.RegisterID = #{UR_Code} AND GR.ShareType = 'P') 
	             			OR
	             			(GR.RegDeptCode = #{GR_Code} AND GR.ShareType = 'D') 
	             			OR
	             			(GR.RegComCode = #{DN_Code} AND GR.ShareType = 'U') 
             			)
				) A
			</if>
		 ) TB
		 <trim prefix="ORDER BY">
			<if test="sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
				TB.Name ASC <include refid="oracle.include.listOrderBy"/>
		    </if>  
			<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection != ''">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("PhoneNum")'>PhoneNum</when>
					<when test='sortColumn.equalsIgnoreCase("EMAIL")'>EMAIL</when>
					<when test='sortColumn.equalsIgnoreCase("ComName")'>ComName</when>
					<when test='sortColumn.equalsIgnoreCase("ComPhoneNum")'>ComPhoneNum</when>
					<when test='sortColumn.equalsIgnoreCase("JobTitle")'>JobTitle</when>
					<when test='sortColumn.equalsIgnoreCase("ShareType")'>ShareType</when>
					<when test='sortColumn.equalsIgnoreCase("RegistDate")'>RegistDate</when>
					<otherwise>Name</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
				<include refid="oracle.include.listOrderBy"/>
			</if>
		</trim>
 	</select>
 	
	<!-- 그룹 =============================================== -->
 	<select id="cntBizCardGroup" parameterType="cmap" resultType="cmap">
 	    SELECT COUNT(GroupID) AS "Count" 
 	      FROM BIZCARD_GROUP
 	     WHERE GroupName = #{GroupName} AND ShareType = #{ShareType}
 	</select>
 	
 	<select id="selectBizCardGroup" parameterType="cmap" resultType="cmap">
 	    SELECT GroupID AS "GroupID"
 	         , GroupName AS "GroupName"
 	         , OrderNO AS "OrderNO"
 	         , ShareType AS "ShareType"
 	      FROM BIZCARD_GROUP
 	     WHERE GroupID = #{GroupID}
 	</select>
 	
 	<select id="selectBizCardGroupPerson" parameterType="cmap" resultType="cmap">
 	    SELECT B.DisplayName AS "Name", '' AS "BizCardID", NVL(B.MailAddress, '') AS "Email", A.Code AS "Code", A.ItemType AS "ItemType" 
		from bizcard_groupperson A LEFT OUTER JOIN SYS_OBJECT_USER B ON A.Code = B.UserCode 
		WHERE A.GroupID = #{GroupID} AND A.ItemType = 'user'
		UNION
		SELECT B.DisplayName AS "Name", '' AS "BizCardID", NVL(B.PrimaryMail, '') AS "Email", A.Code AS "Code", A.ItemType AS "ItemType" 
		from bizcard_groupperson A LEFT OUTER JOIN SYS_OBJECT_GROUP B ON A.Code = B.GroupCode 
		WHERE A.GroupID = #{GroupID} AND A.ItemType = 'group' AND B.GroupType = 'Dept'
		UNION
		SELECT A.Name AS "Name"
		, B.Code AS "BizCardID"
		, NVL((SELECT Email FROM BIZCARD_EMAILINFO WHERE SeqID IN (SELECT MIN(SeqID) FROM BIZCARD_EMAILINFO WHERE BizCardID = A.BizCardID AND TypeCode='P')), '') AS "Email"
		, '' AS "Code"
		, B.ItemType AS "ItemType"
		FROM BIZCARD_PERSON A 
		LEFT OUTER JOIN BIZCARD_GROUPPERSON B ON A.BizCardID = B.Code
		WHERE B.GroupID = #{GroupID} AND B.ItemType = 'bizcard'
		UNION
		SELECT A.NAME AS "Name"
		, TO_CHAR(A.BizCardID) AS "BizCardID"
		, NVL((SELECT EMAIL FROM BIZCARD_EMAILINFO WHERE BizCardID = A.BizCardID AND TypeCode='P' AND ROWNUM <![CDATA[ <= ]]> 1), '') AS "Email"
		, '' AS "Code", 'bizcard' AS "ItemType" 
		from bizcard_person A
		WHERE A.GroupID = #{GroupID}
 	</select>
 	 	
 	<select id="selectBizCardGroupMember" parameterType="cmap" resultType="cmap">
 	    SELECT B.GroupID AS "GroupID", B.BizCardID AS "BizCardID", B.Name AS "Name"
 	           , NVL((SELECT PhoneNumber FROM (SELECT PhoneNumber FROM BIZCARD_PHONEINFO P WHERE P.BizCardID=BizCardID AND TypeCode='P' AND PhoneType = 'C' ORDER BY SeqID) WHERE ROWNUM <![CDATA[ < ]]>= 1), '') AS "PhoneNum" 
			   , NVL((SELECT EMAIL FROM (SELECT EMAIL FROM BIZCARD_EMAILINFO E WHERE E.BizCardID=BizCardID AND TypeCode='P' ORDER BY SeqID) WHERE ROWNUM <![CDATA[ < ]]>= 1), '') AS "EMAIL"
 		FROM BIZCARD_GROUP A INNER JOIN BIZCARD_PERSON B ON A.GROUPID = B.GROUPID
		WHERE A.GROUPID = #{GroupID}
 	</select>
	<insert id="insertBizCardGroupId" parameterType="cmap" useGeneratedKeys="true">
 	    INSERT INTO BIZCARD_GROUP (
			ShareType,
			GroupName,
			OrderNO,
			RegComCode,				
			RegDeptCode,
			RegisterID,
			RegistDate
		)
 		VALUES (
 			#{ShareType},
			#{GroupName},
			#{GroupPriorityOrder},
			#{DN_Code},
			#{GR_Code}, 
			#{UR_Code}, 
			SYSDATE
 		)
 		<selectKey keyProperty="GroupID" resultType="long" order="AFTER">
			SELECT BIZCARD_GROUP_SEQ.CURRVAL FROM dual
		</selectKey>
 	</insert>

 	<delete id="deleteBizCardGroupId" parameterType="cmap" >
          DELETE FROM BIZCARD_GROUP
          WHERE GroupID = #{GroupID}
 	</delete>
 	
	<update id="updateBizCardGroupId" parameterType="cmap" >
 		UPDATE BIZCARD_GROUP
 		SET GroupName = #{GroupName}
 			, OrderNO = #{GroupPriorityOrder}
 			, ShareType = #{ShareType}
 		WHERE GroupID = #{GroupID}
 	</update>
 	
 	<insert id="insertBizCardGroup" parameterType="cmap" useGeneratedKeys="true">
 		INSERT INTO BIZCARD_GROUP (ShareType, GroupName, OrderNO, RegComCode, RegDeptCode, RegisterID, RegistDate)
 		VALUES (#{ShareType}, #{GroupName}, #{GroupPriorityOrder}, #{DN_Code}, #{GR_Code}, #{UR_Code}, SYSDATE)
 		<selectKey keyProperty="GroupID" resultType="long" order="AFTER">
 		    SELECT BIZCARD_GROUP_SEQ.CURRVAL FROM dual
 		</selectKey>
 	</insert>
 	
 	<update id="updateBizCardGroup" parameterType="cmap" >
 		UPDATE BIZCARD_GROUP
 		SET GroupName = #{GroupName}
 			, OrderNO = #{GroupPriorityOrder}
 		WHERE GroupID = #{GroupID}
 	</update>
 	
 	<delete id="deleteBizCard_GroupPerson" parameterType="cmap">
	    DELETE FROM BIZCARD_GROUPPERSON
	    WHERE GroupID = #{GroupID}
 	</delete>
 	
 	<select id="selectGroupList" parameterType="cmap" resultType="cmap">
 	    SELECT GroupID AS "GroupID"
 	         , GroupName AS "GroupName"
 	    FROM BIZCARD_GROUP
 	    WHERE ShareType = #{ShareType} 
 	    <choose>
 	         <when test="ShareType == 'P'.toString()">
 	             AND RegisterID = #{UR_Code}
 	         </when>
 	         <when test="ShareType == 'D'.toString()">
 	             AND RegDeptCode = #{GR_Code}
 	         </when>
 	         <when test="ShareType == 'U'.toString()">
 	             AND RegComCode = #{DN_Code}
 	         </when>
 	     </choose>
 	     ORDER BY OrderNo ASC, RegistDate ASC
    </select>
    
	<!-- 명함 =============================================== -->

 	<select id="selectBizCardPersonView" parameterType="cmap" resultType="cmap">
 	    SELECT 
	 	      A.ImagePath AS "ImagePath"
	 	    , A.Name AS "Name"
	 	    , A.DeptName AS "DeptName"
	 	    , A.JobTitle AS "JobTitle"
	 	    , A.Memo AS "Memo"
	 	    , A.MessengerID  AS "MessengerID"
	 	    , NVL(A.CompanyName, '') AS "CompanyName"
	 	    , NVL(C.AnniversaryText, '') AS "AnniversaryText"
	 	    , NVL(DC.PhoneNumber, '') AS "CellPhone"
	 	    , NVL(DT.PhoneNumber, '') AS "TelPhone"
	 	    , NVL(E.Email, '') AS "Email"
	 	FROM BIZCARD_PERSON A
	 	LEFT JOIN BIZCARD_ANNIVERSARYINFO C ON A.BizCardID = C.BizCardID
	 	LEFT JOIN (SELECT BizCardID, LISTAGG(PhoneNumber,';') WITHIN GROUP(ORDER BY PhoneNumber) AS PhoneNumber FROM BIZCARD_PHONEINFO WHERE PhoneType = 'C' AND TypeCode = 'P' GROUP BY BizCardID ) DC ON A.BizCardID = DC.BizCardID
	 	LEFT JOIN (SELECT BizCardID, LISTAGG(PhoneNumber,';') WITHIN GROUP(ORDER BY PhoneNumber) AS PhoneNumber FROM BIZCARD_PHONEINFO WHERE PhoneType = 'T' AND TypeCode = 'C' GROUP BY BizCardID ) DT ON A.CompanyID = DT.BizCardID
	 	LEFT JOIN (SELECT BizCardID, LISTAGG(Email,';') WITHIN GROUP(ORDER BY Email) AS Email FROM BIZCARD_EMAILINFO WHERE TypeCode = 'P' GROUP BY BizCardID ) E ON A.BizCardID = E.BizCardID
		WHERE   
	 		A.BizCardID = #{BizCardID}
	 		<choose>
 	         <when test="ShareType == 'P'.toString()">
 	             AND A.RegisterID = #{UR_Code}
 	         </when>
 	         <when test="ShareType == 'D'.toString()">
 	             AND A.RegDeptCode = #{GR_Code}
 	         </when>
 	         <when test="ShareType == 'U'.toString()">
 	             AND A.RegComCode = #{DN_Code}
 	         </when>
 	         <otherwise>
 	             AND (
            			(A.RegisterID = #{UR_Code} AND A.ShareType = 'P') 
            			OR
            			(A.RegDeptCode = #{GR_Code} AND A.ShareType = 'D') 
            			OR
            			(A.RegComCode = #{DN_Code} AND A.ShareType = 'U') 
           			 )
 	         </otherwise>
 	    	</choose>
 	</select>
 	
 	<select id="selectBizCardPerson" parameterType="cmap" resultType="cmap">
 	    SELECT 
	 	      A.ImagePath AS "ImagePath"
	 	    , A.Name AS "Name"
	 	    , A.ShareType AS "ShareType"
	 	    , A.GroupID AS "GroupID"
	 	    , A.MessengerID AS "MessengerID"
	 	    , A.CompanyId AS "CompanyId"
	 	    , A.DeptName AS "DeptName"
	 	    , A.JobTitle AS "JobTitle"
	 	    , A.Memo AS "Memo"
	 	    , NVL(A.CompanyName, '') AS "CompanyName"
	 	    , NVL(C.AnniversaryText, '') AS "AnniversaryText"
	 	FROM BIZCARD_PERSON A
	 	LEFT JOIN BIZCARD_ANNIVERSARYINFO C ON A.BizCardID = C.BizCardID
	 	WHERE A.BizCardID = #{BizCardID}
 	</select>
 	<insert id="insertBizCard_GroupPerson" parameterType="cmap" useGeneratedKeys="true">
	  INSERT INTO BIZCARD_GROUPPERSON (
			GroupID,
			ItemType,
			Code,
			RegistDate
		)
 		VALUES (
 			#{GroupID},
 			#{ItemType},
 			#{Code},
 			SYSDATE
 		)
 		<selectKey keyProperty="BizCardID" resultType="long" order="AFTER">
			SELECT BIZCARD_GROUPPERSON_SEQ.CURRVAL FROM dual
		</selectKey>
 	</insert>
 	
 	<update id="updateBizCard_Person" parameterType="cmap">
	    UPDATE BIZCARD_PERSON 
	    SET ShareType = #{ShareType}, GroupID = #{GroupID}
 		WHERE BizCardID = #{BizCardID}
 	</update>	
 	
 	<insert id="insertBizCard_Person" parameterType="cmap" useGeneratedKeys="true">
	    INSERT INTO BIZCARD_PERSON (
			ShareType,
			GroupID,
			Name,
			RegComCode,				
			RegDeptCode,
			RegisterID,
			RegisterName,
			RegistDate
		)
 		VALUES (
 			#{ShareType},
			#{GroupID},
			#{Name},
			#{DN_Code},
			#{GR_Code}, 
			#{UR_Code}, 
			#{UR_Name}, 
 			SYSDATE
 		)
 		<selectKey keyProperty="BizCardID" resultType="long" order="AFTER">
			SELECT BIZCARD_PERSON_SEQ.CURRVAL FROM dual
		</selectKey>
 	</insert>		
 	<update id="deleteBizCard_Person" parameterType="cmap">
	    UPDATE BIZCARD_PERSON SET GroupID = null WHERE GroupID = #{GroupID}
 	</update>	
 	<delete id="deleteBizCardGroupMail" parameterType="cmap">
	    DELETE BIZCARD_EMAILINFO WHERE GroupID = #{GroupID}
 	</delete>
 	<insert id="insertBizCardGroupMail" parameterType="cmap" useGeneratedKeys="true"> 	
		INSERT INTO BIZCARD_EMAILINFO (
			BizCardID,
			TypeCode,
			Email
		)
 		VALUES (
 			#{BizCardID},
			'P',
			#{Email}
 		)
 		<selectKey keyProperty="BizCardID" resultType="long" order="AFTER">
			SELECT BIZCARD_EMAILINFO_SEQ.CURRVAL FROM dual
		</selectKey>
 	</insert>
 	<insert id="insertBizCardPerson" parameterType="cmap" useGeneratedKeys="true">
 		/* queryID = groupware.bizcard.insertBizCardPerson */
 		INSERT INTO BIZCARD_PERSON (
			ShareType,
			GroupID,
			Name,
			MessengerID,
			CompanyID,
			JobTitle,
			DeptName,
			Memo,
			ImagePath,
			RegComCode,
			RegDeptCode,
			RegisterID,
			RegisterName,
			RegistDate,
			CompanyName
		)
 		VALUES (
 			#{ShareType},
 			#{GroupID},
 			<choose>
 				<when test='Name != null and !Name.equals("")'>
 			#{Name},	
 				</when>
 				<otherwise>
 			' ',
 				</otherwise>
 			</choose>
 			#{MessengerID},
 			#{CompanyID},
 			#{JobTitle},
 			#{DeptName},
 			#{Memo},
 			#{ImagePath}, 
 			#{DN_Code},
 			#{GR_Code}, 
 			#{UR_Code}, 
 			#{UR_Name}, 
 			SYSDATE,
 			#{CompanyName}
 		)
 		<selectKey keyProperty="BizCardID" resultType="long" order="AFTER">
 		    SELECT BIZCARD_PERSON_SEQ.CURRVAL FROM dual
 		</selectKey>
 	</insert>
 	
 	<update id="updateBizCardPerson" parameterType="cmap">
 		UPDATE BIZCARD_PERSON 
 		SET
			ShareType = #{ShareType},
			GroupID = #{GroupID},
			Name = #{Name},
			MessengerID = #{MessengerID},
			CompanyID = #{CompanyID},
			JobTitle = #{JobTitle},
			DeptName = #{DeptName},
			Memo = #{Memo},
			ModifierID = #{UR_Code},
			ModifyDate = SYSDATE,
 			CompanyName = #{CompanyName}
		WHERE
			BizCardID = #{BizCardID}
 	</update>

 		
	<!-- 업체 =============================================== -->
 	
 	<select id="selectBizCardCompanyView" parameterType="cmap" resultType="cmap">
 	    SELECT 
	 	    A.ImagePath AS "ImagePath"
	 	  , A.ComName AS "ComName"
	 	  , A.ComZipCode AS "ComZipCode"
	 	  , A.ComAddress AS "ComAddress"
	 	  , A.Memo AS "Memo"
	 	  , A.ComWebSite AS "ComWebSite"
	 	  , NVL(C.AnniversaryText, '') AS "AnniversaryText"
	 	  , NVL(DT.PhoneNumber, '') AS "TelPhone"
	 	  , NVL(DF.PhoneNumber, '') AS "FAX"
	 	  , NVL(E.Email, '') AS "Email"
	 	FROM BIZCARD_COMPANY A
	 	LEFT JOIN BIZCARD_ANNIVERSARYINFO C ON A.BizCardID = C.BizCardID
	 	LEFT JOIN (SELECT BizCardID, LISTAGG(PhoneNumber,';') AS PhoneNumber FROM BIZCARD_PHONEINFO WHERE PhoneType = 'T' AND TypeCode = 'C' GROUP BY BizCardID ) DT ON A.BizCardID = DT.BizCardID
	 	LEFT JOIN (SELECT BizCardID, LISTAGG(PhoneNumber,';') AS PhoneNumber FROM BIZCARD_PHONEINFO WHERE PhoneType = 'F' AND TypeCode = 'C' GROUP BY BizCardID ) DF ON A.BizCardID = DF.BizCardID
	 	LEFT JOIN (SELECT BizCardID, LISTAGG(Email,';') AS Email FROM BIZCARD_EMAILINFO WHERE TypeCode = 'C' GROUP BY BizCardID ) E ON A.BizCardID = E.BizCardID
		WHERE
	 		A.BizCardID = #{BizCardID} 
 	</select>
 	
 	<select id="selectBizCardCompany" parameterType="cmap" resultType="cmap">
 	    SELECT 
	 	      A.ImagePath AS "ImagePath"
	 	    , A.GroupID AS "GroupID"
	 	    , A.ComName AS "ComName"
	 	    , A.ComRepName AS "ComRepName"
	 	    , A.ComZipCode AS "ComZipCode"
	 	    , A.ComAddress AS "ComAddress"
	 	    , A.ComWebSite AS "ComWebSite"
	 	    , A.Memo AS "Memo"
	 	    , C.AnniversaryText AS "AnniversaryText"
	 	FROM BIZCARD_COMPANY A
	 	LEFT JOIN BIZCARD_ANNIVERSARYINFO C ON A.BizCardID = C.BizCardID
	 	WHERE A.BizCardID = #{BizCardID}
 	</select>

     <select id="selectBizCardCompanyCnt" parameterType="cmap" resultType='cmap'>
	 	 SELECT  TB.Cnt AS "Cnt"
	 	       ,(SELECT NVL(BizCardID, '')  FROM  BIZCARD_COMPANY WHERE ComName = #{ComName} AND ROWNUM = 1) AS "BizCardID"
		    FROM (
		    SELECT COUNT(BizCardID) AS Cnt
			 	FROM BIZCARD_COMPANY
			    WHERE ComName = #{ComName}
		  ) TB
 	</select>
 	
 	<insert id="insertBizCardCompany" parameterType="cmap" useGeneratedKeys="true">
 		INSERT INTO BIZCARD_COMPANY (
			<if test="GroupID != null">
	          GroupID,
 	    	</if>
			ComName,
			ComRepName,
			ComWebsite,
			ComZipcode,
			ComAddress,
			Memo,
			ImagePath,
			RegComCode,
			RegDeptCode,
			RegisterID,
			RegisterName,
			RegistDate
		)
 		VALUES (
 			<if test="GroupID != null">
	          #{GroupID},
 	    	</if>
 			#{ComName},
 			#{ComRepName},
 			#{ComWebsite},
 			#{ComZipcode},
 			#{ComAddress},
 			#{Memo},
 			#{ImagePath}, 
 			#{DN_Code},
 			#{GR_Code}, 
 			#{UR_Code}, 
 			#{UR_Name}, 
 			SYSDATE
 		)
 		<selectKey keyProperty="BizCardID" resultType="long" order="AFTER">
 		    SELECT BIZCARD_COMPANY_SEQ.CURRVAL FROM dual
 		</selectKey>
 	</insert>

 	<update id="updateBizCardCompany" parameterType="cmap">
 		UPDATE BIZCARD_COMPANY 
 		SET
			GroupID = #{GroupID},
			ComName = #{ComName},
			ComRepName = #{ComRepName},
			ComWebsite = #{ComWebsite},
			ComZipcode = #{ComZipcode},
			ComAddress = #{ComAddress},
			Memo = #{Memo},
			ModifierID = #{UR_Code},
			ModifyDate = SYSDATE
		WHERE
			BizCardID = #{BizCardID}
 	</update>
 	
	<!-- 공통(명함, 업체) =============================================== -->
 	<update id="updateBizCardImagePath" parameterType="cmap" >
 	    <if test="TypeCode == 'P'.toString()">
	          UPDATE BIZCARD_PERSON
	          SET ImagePath = #{ImagePath}
	          WHERE BizCardID = #{BizCardID}  
 	    </if>
 	    <if test="TypeCode == 'C'.toString()">
 	          UPDATE BIZCARD_COMPANY 
 	          SET ImagePath = #{ImagePath}
 	          WHERE BizCardID = #{BizCardID}
 	    </if>
 	</update>
 	
 	<delete id="deleteBizCard" parameterType="cmap">
 	    <if test="TypeCode == 'P'.toString()">
	          DELETE FROM BIZCARD_PERSON
	          WHERE BizCardID = #{BizCardID}  
 	    </if>
 	    <if test="TypeCode == 'C'.toString()">
 	          DELETE FROM BIZCARD_COMPANY 
 	          WHERE BizCardID = #{BizCardID}
 	    </if>
 	</delete>
 	
	<!-- 전화, 이메일, 기념일 =============================================== -->
 	<select id="selectBizCardPhone" parameterType="cmap" resultType="cmap">
 	    SELECT SeqID AS "SeqID"
 	         , PhoneType AS "PhoneType"
 	         , CASE WHEN PhoneType = 'D' AND NVL(PhoneName, '') != '' THEN  '(' || PhoneName || ') ' || PhoneNumber ELSE PhoneNumber END AS "PhoneNumber"
 	         , PhoneName AS "PhoneName" 
	 	FROM BIZCARD_PHONEINFO
	 	WHERE BizCardID = #{BizCardID}
	 		AND TypeCode = #{TypeCode}
	 		<if test="TypeCode == 'P'.toString()">
	          AND (PhoneType = 'C' OR PhoneType = 'H' OR PhoneType = 'T' OR PhoneType = 'F' OR PhoneType = 'E' OR PhoneType = 'D')
	 	    </if>
	 	    <if test="TypeCode == 'C'.toString()">
	 	      AND (PhoneType = 'T' OR PhoneType = 'F')
	 	    </if>	 		
 	</select>
 	
 	<select id="selectBizCardEmail" parameterType="cmap" resultType="cmap">
 	    SELECT SeqID AS "SeqID"
 	         , Email AS "Email"
	 	FROM BIZCARD_EMAILINFO
	 	WHERE BizCardID = #{BizCardID} AND TypeCode = #{TypeCode}
 	</select>
 	
 	<insert id="insertBizCardPhone" parameterType="java.util.ArrayList" >
		<foreach collection="list" item="phone" open="INSERT ALL " separator=" " close="SELECT * FROM DUAL">
		    INTO BIZCARD_PHONEINFO (
				BizCardID, 
				TypeCode,
				PhoneType,
				PhoneNumber,
				PhoneName
			)
	 		VALUES 
            (
            	#{phone.BizCardID}, 
            	#{phone.TypeCode}, 
            	#{phone.PhoneType}, 
            	#{phone.PhoneNumber},
            	#{phone.PhoneName}
            )
        </foreach>
 	</insert>
 	
 	<insert id="insertBizCardEmail" parameterType="java.util.ArrayList" >
		<foreach collection="list" item="email" open="INSERT ALL " separator=" " close="SELECT * FROM DUAL">
		    INTO BIZCARD_EMAILINFO (
				BizCardID, 
				TypeCode,
				Email
			)
	 		VALUES 
            (
            	#{email.BizCardID}, 
            	#{email.TypeCode}, 
            	#{email.Email}
            )
        </foreach>
 	</insert>
 	
 	<insert id="insertBizCardAnniversary" parameterType="cmap" >
 		INSERT INTO BIZCARD_ANNIVERSARYINFO (
			BizCardID, 
			TypeCode,
			AnniversaryID,
			AnniversaryText
		)
 		VALUES (
 			#{BizCardID}, 
 			#{TypeCode}, 
 			0,
 			#{AnniversaryText}
 		)
 	</insert>
 	
 	<delete id="deleteBizCardPhone" parameterType="cmap">
	    DELETE FROM BIZCARD_PHONEINFO
		WHERE BizCardID = #{BizCardID} AND TypeCode = #{TypeCode}
 	</delete>
 	
 	<delete id="deleteBizCardEmail" parameterType="cmap">
	    DELETE FROM BIZCARD_EMAILINFO
	 	WHERE BizCardID = #{BizCardID} AND TypeCode = #{TypeCode} 
 	</delete>
 	
 	<delete id="deleteBizCardAnniversary" parameterType="cmap">
	    DELETE FROM BIZCARD_ANNIVERSARYINFO
	 	WHERE BizCardID = #{BizCardID} AND TypeCode = #{TypeCode}
</delete>
 	
 	
 	<delete id="deleteBizCardOne" parameterType="cmap">
 	    <if test="TypeCode == 'P'.toString() or TypeCode == 'D'.toString() or TypeCode == 'U'.toString() or TypeCode == 'A'.toString() or TypeCode == null">
	          DELETE FROM BIZCARD_PERSON
	          WHERE BizCardID = #{BizCardID}  
 	    </if>
 	    <if test="TypeCode == 'C'.toString()">
 	          DELETE FROM BIZCARD_COMPANY 
 	          WHERE BizCardID = #{BizCardID}
 	    </if>
 	</delete> 	
 	
 	 	<!-- 즐겨찾기 목록에서 제거(n개)  -->
	<delete id="deleteBizCardFavOne" parameterType="cmap">
		DELETE FROM  BIZCARD_FAVORITEINFO
		WHERE	BizCardID = #{BizCardID} 
	</delete>
<!-- 전화번호 목록에서 제거  -->
	<delete id="deleteBizCardPhoneOne" parameterType="cmap">
		DELETE FROM  BIZCARD_PHONEINFO
		WHERE	
		<if test="TypeCode == 'P'.toString() or TypeCode == 'D'.toString() or TypeCode == 'U'.toString() or TypeCode == 'A'.toString() or TypeCode == null">
 	          TypeCode  <![CDATA[ <> ]]> 'C'
 	    </if>
 	    <if test="TypeCode == 'C'.toString()">
 	          TypeCode  = 'C'
 	    </if>
   	    AND (
   	    	BizCardID = #{BizCardID} 
		)
	</delete>
	
	<!-- 이메일 목록에서 제거  -->
	<delete id="deleteBizCardEmailOne" parameterType="cmap">
		DELETE FROM  BIZCARD_EMAILINFO
		WHERE	
		<if test="TypeCode == 'P'.toString() or TypeCode == 'D'.toString() or TypeCode == 'U'.toString() or TypeCode == 'A'.toString() or TypeCode == null">
 	          TypeCode  <![CDATA[ <> ]]> 'C'
 	    </if>
 	    <if test="TypeCode == 'C'.toString()">
 	          TypeCode  = 'C'
 	    </if>
 	    AND (
 	     	BizCardID = #{BizCardID} 
		)
	</delete>
	
	<!-- 기념일 목록에서 제거(n개)  -->
	<delete id="deleteBizCardAnniversaryOne" parameterType="cmap">
		DELETE FROM  BIZCARD_ANNIVERSARYINFO
		WHERE	
		<if test="TypeCode == 'P'.toString() or TypeCode == 'D'.toString() or TypeCode == 'U'.toString() or TypeCode == 'A'.toString() or TypeCode == null">
 	          TypeCode  <![CDATA[ <> ]]> 'C'
 	    </if>
 	    <if test="TypeCode == 'C'.toString()">
 	          TypeCode  = 'C'
 	    </if>
 	    AND (
 	     	BizCardID = #{BizCardID} 
		)
	</delete>


 	<!-- 조직도용 인명관리 목록 가져오기(개수)  -->
    <select id="selectBizCardOrgMapListCnt" parameterType="cmap" resultType="java.lang.Long">
    	/* queryID : groupware.bizcard.selectBizCardOrgMapListCnt */
        <choose>
			<when test="itemType != null and itemType == 'GR'.toString() and hasEmail == 'Y'.toString()">
			    SELECT		COUNT(*)
				FROM (
					SELECT		GroupID
					FROM		BIZCARD_GROUP
					WHERE		ShareType = #{shareType}
				    <choose>
						<when test="shareType != null and shareType != '' and shareType == 'U'.toString()">
						    AND RegComCode = #{DN_Code}	
						</when>
						<when test="shareType != null and shareType != '' and shareType == 'D'.toString()">
						    AND RegDeptCode = #{GR_Code}
						</when>	
						<when test="shareType != null and shareType != '' and shareType == 'P'.toString()">
						    AND RegisterID = #{UR_Code}
						</when>					
						<otherwise>
							AND RegisterID IS NULL
						</otherwise>
					</choose>	
					<if test="searchText != null and searchText != ''.toString()">
		 				AND GroupName LIKE '%'||#{searchText}||'%'
		   			</if>
		   			AND (
		   				GroupID IN (
				   			SELECT TT1.GroupID
					   		FROM BIZCARD_PERSON TT1
					   		INNER JOIN BIZCARD_EMAILINFO TT2 ON TT1.BizCardID = TT2.BizCardID
					   		WHERE TT2.Email IS NOT NULL)
			   			OR (
				   			GroupID IN (SELECT TT1.GroupID FROM BIZCARD_GROUPPERSON TT1)
			   			)
			   		)
		   		) T1
			</when>	
			<when test="itemType != null and itemType == 'GR'.toString()">
				SELECT		COUNT(*)
				FROM		BIZCARD_GROUP
				WHERE		ShareType = #{shareType}
			    <choose>
					<when test="shareType != null and shareType != '' and shareType == 'U'.toString()">
					    AND RegComCode = #{DN_Code}	
					</when>
					<when test="shareType != null and shareType != '' and shareType == 'D'.toString()">
					    AND RegDeptCode = #{GR_Code}
					</when>	
					<when test="shareType != null and shareType != '' and shareType == 'P'.toString()">
					    AND RegisterID = #{UR_Code}
					</when>					
					<otherwise>
						AND RegisterID IS NULL
					</otherwise>
				</choose>	
				<if test="searchText != null and searchText != ''.toString()">
		 			AND GroupName LIKE '%'||#{searchText}||'%'
	   			</if>	
			</when>		
			<otherwise>
			    SELECT	COUNT(*)
			    FROM (
					SELECT		NVL((SELECT T2.Email FROM BIZCARD_EMAILINFO T2 WHERE T2.BizCardID = T1.BizCardID AND ROWNUM = 1), '') AS Email
					FROM		BIZCARD_PERSON T1
					WHERE		T1.ShareType = #{shareType}
				    <choose>
						<when test="shareType != null and shareType != '' and shareType == 'U'.toString()">
						    AND T1.RegComCode = #{DN_Code}	
						</when>
						<when test="shareType != null and shareType != '' and shareType == 'D'.toString()">
						    AND T1.RegDeptCode = #{GR_Code}
						</when>	
						<when test="shareType != null and shareType != '' and shareType == 'P'.toString()">
						    AND T1.RegisterID = #{UR_Code}
						</when>			
						<otherwise>
							AND T1.RegisterID IS NULL
						</otherwise>
					</choose>
					<if test="searchText != null and searchText != ''.toString()">
			 			AND T1.Name LIKE '%'||#{searchText}||'%'
		   			</if>
	   			) TT
				<if test="hasEmail != null and hasEmail != '' and hasEmail == 'Y'.toString()">
			 	WHERE TT.Email IS NOT NULL
	   			</if>
			</otherwise>
		</choose>
 	</select>
 	
    <!-- 조직도용 인명관리 목록 가져오기(리스트)  -->
 	<select id="selectBizCardOrgMapList" parameterType="cmap" resultType="cmap">
 		/* queryID : groupware.bizcard.selectBizCardOrgMapList */
        <choose>
			<when test="itemType != null and itemType == 'GR'.toString() and hasEmail == 'Y'.toString()">
	    	    SELECT		'GR' AS "BizCardType"
							,T1.ShareType AS "ShareType"
							,T1.GroupID AS "ID"
							,T1.GroupName AS "Name"
							,'' AS "JobTitle"
							,'' AS "DeptName"
							,'' AS "Email"
				FROM (
					SELECT		ShareType
								,GroupID
								,GroupName
					FROM		BIZCARD_GROUP
					WHERE		ShareType = #{shareType}
				    <choose>
						<when test="shareType != null and shareType != '' and shareType == 'U'.toString()">
						    AND RegComCode = #{DN_Code}	
						</when>
						<when test="shareType != null and shareType != '' and shareType == 'D'.toString()">
						    AND RegDeptCode = #{GR_Code}
						</when>	
						<when test="shareType != null and shareType != '' and shareType == 'P'.toString()">
						    AND RegisterID = #{UR_Code}
						</when>			
						<otherwise>
							AND RegisterID IS NULL
						</otherwise>
					</choose>	
					
					<if test="searchText != null and searchText != ''.toString()">
		 				AND GroupName LIKE '%'||#{searchText}||'%'
		   			</if>
		   			AND (
		   				GroupID IN (
				   			SELECT TT1.GroupID
					   		FROM BIZCARD_PERSON TT1
					   		INNER JOIN BIZCARD_EMAILINFO TT2 ON TT1.BizCardID = TT2.BizCardID
					   		WHERE TT2.Email IS NOT NULL)
			   			OR (
				   			GroupID IN (SELECT TT1.GroupID FROM BIZCARD_GROUPPERSON TT1)
			   			)
			   		)
		   		) T1
				<if test="pageSize != null and pageOffset != null">
	   				WHERE ROWNUM BETWEEN #{pageOffset}+1 AND (#{pageOffset}+#{pageSize})
	   			</if>
				ORDER BY T1.GroupName
			</when>	
			<when test="itemType != null and itemType == 'GR'.toString()">
				SELECT		'GR' AS "BizCardType"
							,ShareType AS "ShareType"
							,GroupID AS "ID"
							,GroupName AS "Name"
							,'' AS "JobTitle"
							,'' AS "DeptName"
							,'' AS "Email"
				FROM BIZCARD_GROUP
				WHERE ShareType = #{shareType}
			    <choose>
					<when test="shareType != null and shareType != '' and shareType == 'U'.toString()">
					    AND RegComCode = #{DN_Code}	
					</when>
					<when test="shareType != null and shareType != '' and shareType == 'D'.toString()">
					    AND RegDeptCode = #{GR_Code}
					</when>	
					<when test="shareType != null and shareType != '' and shareType == 'P'.toString()">
					    AND RegisterID = #{UR_Code}
					</when>			
					<otherwise>
						AND RegisterID IS NULL
					</otherwise>
				</choose>	
				
				<if test="searchText != null and searchText != ''.toString()">
	 				AND GroupName LIKE '%'||#{searchText}||'%'
	   			</if>
				<if test="pageSize != null and pageOffset != null">
	   				AND ROWNUM BETWEEN #{pageOffset}+1 AND (#{pageOffset}+#{pageSize})
	   			</if>
				ORDER BY GroupName
			</when>		
			<otherwise>
	    		SELECT	BizCardType AS "BizCardType"
						,ShareType AS "ShareType"
						,ID AS "ID"
						,Name AS "Name"
						,JobTitle AS "JobTitle"
						,DeptName AS "DeptName"
						,Email AS "Email"
			    FROM (
					SELECT		'UR' AS BizCardType
								,T1.ShareType AS ShareType
								,T1.BizCardID AS ID
								,T1.Name
								,T1.JobTitle
								,T1.DeptName
								,NVL((SELECT T2.Email FROM BIZCARD_EMAILINFO T2 WHERE T2.BizCardID = T1.BizCardID AND ROWNUM = 1), '') AS Email
					FROM		BIZCARD_PERSON T1
					WHERE		T1.ShareType = #{shareType}
				    <choose>
						<when test="shareType != null and shareType != '' and shareType == 'U'.toString()">
						    AND T1.RegComCode = #{DN_Code}	
						</when>
						<when test="shareType != null and shareType != '' and shareType == 'D'.toString()">
						    AND T1.RegDeptCode = #{GR_Code}
						</when>	
						<when test="shareType != null and shareType != '' and shareType == 'P'.toString()">
						    AND T1.RegisterID = #{UR_Code}
						</when>			
						<otherwise>
							AND T1.RegisterID IS NULL
						</otherwise>
					</choose>
					<if test="searchText != null and searchText != ''.toString()">
			 			AND T1.Name LIKE '%'||#{searchText}||'%'
		   			</if>
	   			) TT
	   			WHERE 1=1
				<if test="hasEmail != null and hasEmail != '' and hasEmail == 'Y'.toString()">
			 		AND TT.Email IS NOT NULL
	   			</if>
				<if test="pageSize != null and pageOffset != null">
	   				AND ROWNUM BETWEEN #{pageOffset}+1 AND (#{pageOffset}+#{pageSize})
	   			</if>
				ORDER BY TT.Name
			</otherwise>
		</choose>
 	</select>
 	
 	<!-- 메일작성용 인명관리의 그룹 멤버 가져오기  -->
 	<select id="selectBizCardGroupMemberListCnt" parameterType="cmap" resultType="java.lang.Long">
 	    SELECT COUNT(*) FROM (
	 	    SELECT	T1.Name AS "Name"
					,NVL(T2.Email, '') AS "EMAIL"
					,'BizCard' AS "BizCardType"
			FROM		BIZCARD_PERSON T1
			<choose>
				<when test='hasEmail == "F"'>
					LEFT JOIN	BIZCARD_EMAILINFO T2 ON T1.BizCardID = T2.BizCardID
				</when>
				<otherwise>
					JOIN	BIZCARD_EMAILINFO T2 ON T1.BizCardID = T2.BizCardID
				</otherwise>
			</choose>
			WHERE	T1.GroupID IN 
			<foreach collection="groupIDs" item="item" index="index" separator="," open="(" close=")">
			    #{item}
			</foreach>		
			UNION 		
			SELECT	FN_BASEGETDICTIONARY_S(#{lang}, T1.MultiDisplayName) AS "Name"
					,NVL(T1.MailAddress, '') AS "EMAIL"
					,'BizCard' AS "BizCardType"
			FROM		SYS_OBJECT_USER T1
			INNER JOIN	BIZCARD_GROUPPERSON T2 ON T1.UserCode = T2.Code AND T2.ItemType = 'user'
			WHERE	T2.GroupID IN 
			<foreach collection="groupIDs" item="item" index="index" separator="," open="(" close=")">
			    #{item}
			</foreach>		
			UNION 		
			SELECT	FN_BASEGETDICTIONARY_S(#{lang}, T1.MultiDisplayName) AS "Name"
					,NVL(T1.PrimaryMail, '') AS "EMAIL"
					,'BizCard' AS "BizCardType"
			FROM		SYS_OBJECT_GROUP T1
			INNER JOIN	BIZCARD_GROUPPERSON T2 ON T1.GroupCode = T2.Code AND T2.ItemType = 'group'
			WHERE	T2.GroupID IN 
				<foreach collection="groupIDs" item="item" index="index" separator="," open="(" close=")">
				    #{item}
				</foreach>
			UNION
			SELECT	T1.Name AS "Name"
					, NVL((SELECT Email FROM BIZCARD_EMAILINFO WHERE SeqID IN (SELECT MIN(SeqID) FROM BIZCARD_EMAILINFO WHERE BizCardID = T1.BizCardID AND TypeCode='P')), '') AS "EMAIL"
					,'BizCard' AS "BizCardType"
			FROM		BIZCARD_PERSON T1
			INNER JOIN	BIZCARD_GROUPPERSON T2 ON T1.BizCardID = T2.Code AND T2.ItemType = 'bizcard'
			WHERE	T2.GroupID IN 
			<foreach collection="groupIDs" item="item" index="index" separator="," open="(" close=")">
			    #{item}
			</foreach>
		) AA
 	</select>
 	
 	<select id="selectBizCardGroupMemberList" parameterType="cmap" resultType="cmap">
 	    <include refid="oracle.include.pagingHeader"/>
	 	SELECT	 Name AS "Name"
			 	,EMAIL AS "EMAIL"
			 	,BizCardType AS "BizCardType"
	 	FROM (
	 	    SELECT	T1.Name AS Name
					,NVL(T2.Email, '') AS EMAIL
					,'BizCard' AS BizCardType
			FROM		BIZCARD_PERSON T1
			<choose>
				<when test='hasEmail == "F"'>
					LEFT JOIN	BIZCARD_EMAILINFO T2 ON T1.BizCardID = T2.BizCardID
				</when>
				<otherwise>
					JOIN	BIZCARD_EMAILINFO T2 ON T1.BizCardID = T2.BizCardID
				</otherwise>
			</choose>
			WHERE	T1.GroupID IN 
			<foreach collection="groupIDs" item="item" index="index" separator="," open="(" close=")">
			    #{item}
			</foreach>		
			UNION 		
			SELECT	FN_BASEGETDICTIONARY_S(#{lang}, T1.MultiDisplayName) AS Name
					,NVL(T1.MailAddress, '') AS EMAIL
					,'BizCard' AS BizCardType
			FROM		SYS_OBJECT_USER T1
			INNER JOIN	BIZCARD_GROUPPERSON T2 ON T1.UserCode = T2.Code AND T2.ItemType = 'user'
			WHERE	T2.GroupID IN 
			<foreach collection="groupIDs" item="item" index="index" separator="," open="(" close=")">
			    #{item}
			</foreach>		
			UNION 		
			SELECT	FN_BASEGETDICTIONARY_S(#{lang}, T1.MultiDisplayName) AS Name
					,NVL(T1.PrimaryMail, '') AS EMAIL
					,'BizCard' AS BizCardType
			FROM		SYS_OBJECT_GROUP T1
			INNER JOIN	BIZCARD_GROUPPERSON T2 ON T1.GroupCode = T2.Code AND T2.ItemType = 'group'
			WHERE	T2.GroupID IN 
			<foreach collection="groupIDs" item="item" index="index" separator="," open="(" close=")">
			    #{item}
			</foreach>
			UNION
			SELECT	T1.Name AS Name
					, NVL((SELECT Email FROM BIZCARD_EMAILINFO WHERE SeqID IN (SELECT MIN(SeqID) FROM BIZCARD_EMAILINFO WHERE BizCardID = T1.BizCardID AND TypeCode='P')), '') AS EMAIL
					,'BizCard' AS BizCardType
			FROM		BIZCARD_PERSON T1
			INNER JOIN	BIZCARD_GROUPPERSON T2 ON T1.BizCardID = T2.Code AND T2.ItemType = 'bizcard'
			WHERE	T2.GroupID IN 
			<foreach collection="groupIDs" item="item" index="index" separator="," open="(" close=")">
			    #{item}
			</foreach>
		) AA
		WHERE 1=1
		<trim prefix="ORDER BY">
			<if test="sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
				AA.Name ASC <include refid="oracle.include.listOrderBy"/>
		    </if> 
			<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection != ''">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("BizCardType")'>BizCardType</when>
					<when test='sortColumn.equalsIgnoreCase("EMAIL")'>EMAIL</when>
					<otherwise>Name</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
				<include refid="oracle.include.listOrderBy"/>
			</if>
		</trim>
		<include refid="oracle.include.pagingFooter"/>
 	</select>
 	
    <!-- 조직도용 인명관리의 그룹 멤버 가져오기  -->
 	<select id="selectBizCardOrgMapListGroupMember" parameterType="cmap" resultType="cmap">
 		/* queryID : groupware.bizcard.selectBizCardOrgMapListGroupMember */
		SELECT	T1.GroupID AS "GroupID"
					,T1.Name AS "Name"
					,NVL(T2.Email, '') AS "Email"
					,'bizcard' AS "Type"
					,TO_CHAR(T1.BizCardID) AS "UserID"
		FROM		BIZCARD_PERSON T1
		INNER JOIN	BIZCARD_EMAILINFO T2 ON T1.BizCardID = T2.BizCardID
		WHERE	T1.GroupID IN 
			<foreach collection="groupIDs" item="item" index="index" separator="," open="(" close=")">
			    #{item}
			</foreach>
		<if test="hasEmail == 'Y'.toString()">
		    AND	T2.Email IS NOT NULL
		</if>
		
		UNION ALL
		
		SELECT	T2.GroupID AS "GroupID"
				,Fn_BaseGetDictionary_S(#{lang}, T1.MultiDisplayName) AS "Name"
				,NVL(T1.MailAddress, '') AS "Email"
				,'user' AS "Type"
				,'' AS "UserID"
		FROM		SYS_OBJECT_USER T1
		INNER JOIN	BIZCARD_GROUPPERSON T2 ON T1.UserCode = T2.Code AND T2.ItemType = 'user'
		WHERE	T2.GroupID IN 
			<foreach collection="groupIDs" item="item" index="index" separator="," open="(" close=")">
			    #{item}
			</foreach>
		<if test="hasEmail == 'Y'.toString()">
		    AND T1.MailAddress IS NOT NULL
		</if>
		
		UNION ALL
		
		SELECT	T2.GroupID AS "GroupID"
				,Fn_BaseGetDictionary_S(#{lang}, T1.MultiDisplayName) AS "Name"
				,NVL(T1.PrimaryMail, '') AS "Email"
				,'group' AS "Type"
				,'' AS "UserID"
		FROM		SYS_OBJECT_GROUP T1
		INNER JOIN	BIZCARD_GROUPPERSON T2 ON T1.GroupCode = T2.Code AND T2.ItemType = 'group'
		WHERE	T2.GroupID IN 
			<foreach collection="groupIDs" item="item" index="index" separator="," open="(" close=")">
			    #{item}
			</foreach>
		<if test="hasEmail == 'Y'.toString()">
		    AND T1.PrimaryMail IS NOT NULL
		</if>
 	</select>
 	
 	<!-- 그룹 내 연락처 조회 카운트 -->
 	<select id="selectBizCardGroupPersonListCnt" parameterType="cmap" resultType="java.lang.Long">
 		SELECT COUNT(*)
 		FROM (
	 	    SELECT B.DisplayName AS "Name", '' AS BizCardID, NVL(B.MailAddress, '') AS "Email", A.Code AS "Code", A.ItemType AS "ItemType"
			from bizcard_groupperson A LEFT OUTER JOIN SYS_OBJECT_USER B ON A.Code = B.UserCode 
			WHERE A.GroupID = #{GroupID} AND A.ItemType = 'user'
			UNION
			SELECT B.DisplayName AS "Name", '' AS "BizCardID", NVL(B.PrimaryMail, '') AS "Email", A.Code AS "Code", A.ItemType AS "ItemType" 
			from bizcard_groupperson A LEFT OUTER JOIN SYS_OBJECT_GROUP B ON A.Code = B.GroupCode 
			WHERE A.GroupID = #{GroupID} AND A.ItemType = 'group' AND B.GroupType = 'Dept'
			UNION 
			SELECT A.NAME AS "Name"
			, A.BizCardID AS "BizCardID"
			, NVL((SELECT Email FROM BIZCARD_EMAILINFO WHERE SeqID IN (SELECT MIN(SeqID) FROM BIZCARD_EMAILINFO WHERE BizCardID = A.BizCardID AND TypeCode='P')), '') AS "Email"
			, '' AS "Code", 'bizcard' AS "ItemType"
			from bizcard_person A
			WHERE A.GroupID = #{GroupID}
		) AS RESULT
		WHERE 1=1
 	</select>
 	
 	<!-- 그룹 내 연락처 조회 리스트(페이징) -->
 	<select id="selectBizCardGroupPersonList" parameterType="cmap" resultType="cmap">
 		<include refid="oracle.include.pagingHeader"/>
 		SELECT	 Name AS "Name"
 				,BizCardID AS "BizCardID"
 				,Email AS "Email"
 				,Code AS "Code"
 				,ItemType AS "ItemType"
 		FROM (
	 	    SELECT B.DisplayName AS Name, '' AS BizCardID, NVL(B.MailAddress, '') AS Email, A.Code AS Code, A.ItemType AS ItemType
			from bizcard_groupperson A LEFT OUTER JOIN SYS_OBJECT_USER B ON A.Code = B.UserCode 
			WHERE A.GroupID = #{GroupID} AND A.ItemType = 'user'
			UNION
			SELECT B.DisplayName AS Name, '' AS BizCardID, NVL(B.PrimaryMail, '') AS Email, A.Code AS Code, A.ItemType AS ItemType
			from bizcard_groupperson A LEFT OUTER JOIN SYS_OBJECT_GROUP B ON A.Code = B.GroupCode 
			WHERE A.GroupID = #{GroupID} AND A.ItemType = 'group' AND B.GroupType = 'Dept'
			UNION 
			SELECT A.NAME AS Name
			, A.BizCardID AS BizCardID
			, NVL((SELECT Email FROM BIZCARD_EMAILINFO WHERE SeqID IN (SELECT MIN(SeqID) FROM BIZCARD_EMAILINFO WHERE BizCardID = A.BizCardID AND TypeCode='P')), '') AS Email
			, '' AS Code, 'bizcard' AS ItemType
			from bizcard_person A
			WHERE A.GroupID = #{GroupID}
		) AS RESULT
		WHERE 1=1
		<trim prefix="ORDER BY">
			<if test="sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
				RESULT.Name ASC <include refid="oracle.include.listOrderBy"/>
			</if> 
			<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection != ''">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("BizCardID")'>BizCardID</when>
					<when test='sortColumn.equalsIgnoreCase("Email")'>Email</when>
					<when test='sortColumn.equalsIgnoreCase("Code")'>Code</when>
					<when test='sortColumn.equalsIgnoreCase("ItemType")'>ItemType</when>
					<otherwise>Name</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
				<include refid="oracle.include.listOrderBy"/>
			</if>
		</trim>
		<include refid="oracle.include.pagingFooter"/>
 	</select>
</mapper>
