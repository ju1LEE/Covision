<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="groupware.admin.workreport">
	
 	<select id="listWorkDivision"  parameterType="cmap" resultType="cmap">
		SELECT divisionCode AS "divisionCode"
		     , displayName AS "displayName"
		  FROM WORKREPORT_JOB_CATE_DIVISION
	</select>
	
    <select id="countWorkDivision" parameterType="cmap" resultType="java.lang.Long">
 	    SELECT COUNT(*) AS CNT 
 	      FROM WORKREPORT_JOB_CATE_DIVISION
 	</select>
 	
 	<select id="listWorkJob"  parameterType="cmap" resultType="cmap">
		SELECT  A.JobID AS "JobID"
		      , A.JobName AS "JobName"
		      , A.JobDivision AS "JobDivision"
		  FROM WORKREPORT_JOB A
		 INNER JOIN WORKREPORT_JOB_CATE_DIVISION B ON A.JobDivision = B.divisionCode	   
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
 			A.IsUse = 'Y'
 			<if test="code != 'All'">
		    	AND JobDivision = #{code}
		    </if>
		    <if test="searchText != null">
	 	    	AND A.JobName like '%'||#{searchText}||'%'
	 	    </if>
 	    </trim>
 	    ORDER BY A.JobName ASC 
	</select>
 	
 	<select id="listWorkJobCategory"  parameterType="cmap" resultType="cmap">
		SELECT  A.typeCode AS "typeCode"
		      , A.displayName AS "displayName"
		      , B.DivisionCode  AS "DivisionCode"
		  FROM WORKREPORT_JOB_CATE_TYPE A
		 INNER JOIN WORKREPORT_JOB_CATE B ON A.TypeCode = B.TypeCode
		 INNER JOIN WORKREPORT_JOB_CATE_DIVISION C ON B.DivisionCode = C.DivisionCode
		 WHERE B.DivisionCode = #{code}
	</select>
 	
 	<select id="countWorkJob"  parameterType="cmap" resultType="java.lang.Long">
		SELECT COUNT(*) AS CNT 
		  FROM WORKREPORT_JOB
	</select>
 	
 	<select id="listWorkMyJob"  parameterType="cmap" resultType="cmap">
		SELECT A.UR_Code AS "UR_Code"
		     , A.JobID AS "JobID"
		     , B.JobName AS "JobName"
		     , B.JobDivision AS "JobDivision" 
		     , C.TypeCode AS "TypeCode" 
		     , C.DisplayName AS "DisplayName" 
		  FROM WORKREPORT_MYJOB A
		 INNER JOIN WORKREPORT_JOB B ON A.JobID = B.JobID
		 INNER JOIN WORKREPORT_JOB_CATE_TYPE C ON A.TypeCode = C.TypeCode
		 <where>
		     B.IsUse = 'Y'
		    <if test="ur_code != null">
		       AND A.UR_Code = #{ur_code}
		    </if>
		</where>
		ORDER BY B.JobName ASC	   
	</select>
 	
	<insert id="insertMyJob" parameterType="cmap">
	    <if test="newcode != null">
	 	    INSERT INTO WORKREPORT_MYJOB(UR_Code, JobID , TypeCode)
	 	    VALUES 
	 	    <foreach collection="newcode" item="item" separator=",">
	 	        (#{ur_code},SUBSTR(#{item},1, INSTR(#{item},'-') -1) , SUBSTR(#{item},3, LENGTH(#{item})) )
	 	    </foreach>
 	    </if>
 	</insert>
 	
 	<delete id="deleteMyJob" parameterType="cmap">
 	    <if test="delcode != null">
	 	    DELETE FROM WORKREPORT_MYJOB 
	 	     WHERE UR_Code = #{ur_code} AND CONCAT(CONCAT(JobID,'-'),TypeCode) IN 
	 	     <foreach collection="delcode" item="item" separator="," open="(" close=")">
	 	         #{item}
	 	     </foreach>
 	     </if>
 	</delete>
 	
 	<select id="countRegGrade" parameterType="cmap" resultType="java.lang.Long">
 	    SELECT COUNT(*)
 	      FROM WORKREPORT_GRADE
 	     WHERE ApplyYear = #{year} AND MemberType = 'R'
	</select>
 	
 	<select id="listRegGrade" parameterType="cmap" resultType="cmap">
 	    SELECT GradeID AS "GradeID"
 	         , ApplyYear AS "ApplyYear"
 	         , MemberType AS "MemberType"
 	         , GradeKind  AS "GradeKind"
 	         , MonthPrice AS "MonthPrice" 
 	         , DayPrice AS "DayPrice"
 	         , MonthPriceEx AS "MonthPriceEx"
 	         , GradeSeq AS "GradeSeq"
 	      FROM WORKREPORT_GRADE
 	     WHERE ApplyYear = #{year} AND MemberType = 'R'
 	     ORDER BY GradeSeq ASC
 	</select>
 	
 	<insert id="reuseRegGrade" parameterType="cmap">
 	  MERGE INTO WORKREPORT_GRADE G 
	  USING (
	 	    SELECT GRADEID, #{ApplyYear} AS ApplyYear, G.MemberType, G.GradeKind, G.MonthPrice, G.DayPrice, G.MonthPriceEx, G.GradeSeq
	 	      FROM WORKREPORT_GRADE G
	 	     WHERE ApplyYear = (#{ApplyYear} - 1) AND MemberType = 'R'
	  )E ON (G.GRADEID = E.GRADEID)
	  WHEN MATCHED THEN 
	  UPDATE SET G.MonthPrice = E.MonthPrice, G.DayPrice = E.DayPrice
	  WHEN NOT MATCHED THEN 
	  INSERT (G.ApplyYear, G.MemberType, G.GradeKind, G.MonthPrice, G.DayPrice, G.MonthPriceEx, G.GradeSeq)
	  VALUES (E.ApplyYear, E.MemberType, E.GradeKind, E.MonthPrice, E.DayPrice, E.MonthPriceEx, E.GradeSeq )
 	</insert>

 	<delete id="deleteRegGrade" parameterType="cmap">
 	    DELETE FROM WORKREPORT_GRADE
 	     WHERE ApplyYear = #{year} AND MemberType = 'R'
 	</delete>
 	
 	<update id="updateRegGrade" parameterType="cmap">
 	    UPDATE WORKREPORT_GRADE
 	       SET MonthPrice = #{MonthPrice}, 
 	           DayPrice = #{DayPrice}
 	     WHERE ApplyYear = #{ApplyYear} AND MemberType = 'R' AND GradeKind = #{GradeKind}
 	</update>
 	
 	<select id="duplicateRegGrade" parameterType="cmap" resultType="java.lang.Long">
 	    SELECT COUNT(*) 
 	      FROM WORKREPORT_GRADE 
 	     WHERE ApplyYear = #{year} AND GradeKind = #{grade} AND MemberType = 'R'
 	</select>
 	
 	<insert id="insertRegGrade" parameterType="cmap">
 	    INSERT INTO WORKREPORT_GRADE (ApplyYear, MemberType, GradeKind, MonthPrice, DayPrice, MonthPriceEx, GradeSeq)
 	    VALUES (#{year}, 'R', #{grade}, #{mmAmount}, #(mdAmount), 0, #{seq})
 	</insert>
 	
 	<update id="insertOutSourcing" parameterType="cmap">
 	    INSERT INTO WORKREPORT_OUTSOURCING (OUR_Code,Name,Age,GradeKind,RegistCode,
 	    			WorkSubject,FirstCode,FirstName,SecondCode,SecondName,
 	    			Role,ContractStartDate,ContractEndDate,ContractState,ExProjectYN)
 	    SELECT   CONCAT(
         TO_CHAR(SYSTIMESTAMP, 'YYYYMMDD'), LPAD( TO_NUMBER(SUBSTR(NVL(MAX(seq), 0) + 1 , -2 )) , 2, 0) ),
 	     #{name}, #{age}, #{grade}, #{creatorCode}, #{jobName}, #{fmCode}, #{fmName},
 	      #{smCode}, #{smName}, #{role}, #{startdate}, #{enddate}, #{status}, #{exprojectyn}
 	    FROM WORKREPORT_OUTSOURCING
 	</update>
 	
 	<update id="updateOutSourcing" parameterType="cmap">
 	    UPDATE WORKREPORT_OUTSOURCING 
 	    SET Name = #{name}, Age = #{age}, GradeKind = #{grade}, RegistCode = #{creatorCode}, 
 	    			WorkSubject = #{jobName}, FirstCode = #{fmCode}, FirstName = #{fmName}, 
 	    			SecondCode = #{smCode}, SecondName = #{smName}, Role = #{role}, ContractStartDate = #{startdate}, 
 	    			ContractEndDate = #{enddate}, ContractState = #{status}, ExProjectYN = #{exprojectyn}
		WHERE OUR_Code = #{urcode}
 	</update>
 	
 	<select id="selectOutsourcing"  parameterType="cmap" resultType="cmap">
 	/*  groupware.admin.workreport.selectOutsourcing  */
		<include refid="oracle.include.pagingHeader" />
 	    SELECT  A.OUR_Code AS "OUR_Code"
		      , A.Name AS "Name"
		      , A.GradeKind AS "GradeKind"
		      , A.FirstCode AS "FirstCode"
		      , A.FirstName AS "FirstName"
		      , A.WorkSubject AS "WorkSubject"
		FROM WORKREPORT_OUTSOURCING A
	    <trim prefix="WHERE" prefixOverrides="AND |OR ">
		  <if test="startdate != null and startdate != '' and enddate != null  and enddate != '' ">
		      <![CDATA[
		      		REPLACE(contractstartdate,'-','') >=  REPLACE(#{startdate},'-','')) AND REPLACE(contractenddate,'-','') <=  REPLACE(#{enddate},'-',''))
		  	   ]]>
		  </if>
		  <if test='isendcontract.equals("Y")'>
		      <![CDATA[
		   		   AND REPLACE(contractenddate,'-','') <  TO_CHAR(SYSTIMESTAMP, 'YYYYMMDD')
		      ]]>
		  </if>
		</trim>	
		<trim prefix="ORDER BY">
			<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection != ''">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("Name")'>"Name"</when>
					<when test='sortColumn.equalsIgnoreCase("GradeKind")'>"GradeKind"</when>
					<when test='sortColumn.equalsIgnoreCase("FirstName")'>"FirstName"</when>
					<when test='sortColumn.equalsIgnoreCase("WorkSubject")'>"WorkSubject"</when>
					<otherwise>"OUR_Code"</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
				<include refid="oracle.include.listOrderBy"/>
			</if> 
		</trim>
 	    <include refid="oracle.include.pagingFooter" />
	</select>
 	
 	<select id="countOutsourcing" parameterType="cmap" resultType="java.lang.Long">
 	    
		SELECT Count(*)
		FROM WORKREPORT_OUTSOURCING A
	    <trim prefix="WHERE" prefixOverrides="AND |OR ">
		 <if test="startdate != null and startdate != '' and enddate != null  and enddate != '' ">
		      <![CDATA[
		      		REPLACE(contractstartdate,'-','') >=  REPLACE(#{startdate},'-','')) AND REPLACE(contractenddate,'-','') <=  REPLACE(#{enddate},'-',''))
		  	   ]]>
		  </if>
		  <if test='isendcontract.equals("Y")'>
		      <![CDATA[
		   		   AND REPLACE(contractenddate,'-','') <  TO_CHAR(SYSTIMESTAMP, 'YYYYMMDD')
		      ]]>
		  </if>
		</trim>	
	</select>
	
 	<select id="selectOSGrade" parameterType="cmap" resultType="cmap">
 	    SELECT GradeID AS "GradeID"
 	         , MemberType AS "MemberType"
 	         , GradeKind AS "GradeKind" 
 	      FROM WORKREPORT_GRADE
 	     WHERE ApplyYear = TO_CHAR(SYSTIMESTAMP, 'YYYY') AND MemberType = 'O'
 	     ORDER BY GradeSeq ASC
 	</select>
 	
 	<select id="selectOurSourcingDetail" parameterType="cmap" resultType="cmap">
 	    SELECT A.OUR_Code AS "OUR_Code"
 	         , A.Name AS "Name"
 	         , A.Age AS "Age"
 	         , A.GradeKind AS "GradeKind"
 	         , A.RegistCode AS "RegistCode"
 	         , A.WorkSubject AS "WorkSubject"
 	         , A.FirstCode AS "FirstCode"
 	         , A.FirstName AS "FirstName"
 	         , A.SecondCode AS "SecondCode"
 	         , A.SecondName AS "SecondName"
 	         , A.Role AS "Role"
 	         , A.ContractStartDate AS "ContractStartDate"
 	         , A.ContractEndDate AS "ContractEndDate"
 	         , A.ContractState AS "ContractState"
 	         , A.Seq AS "Seq"
 	         , A.ExProjectYN  AS "ExProjectYN"
 	      FROM WORKREPORT_OUTSOURCING A
 	     WHERE OUR_Code = #{ur_code}
 	</select>
 	
 	<delete id="deleteOutsourcing" parameterType="cmap">
 		DELETE FROM WORKREPORT_OUTSOURCING 
 		 WHERE OUR_Code IN
 		 <foreach collection="our_code" item="item" index="index" separator="," open="(" close=")">
		    #{item}
		</foreach>    
 	</delete>
 	 	
 	<select id="selectProjectList" parameterType="cmap" resultType="cmap">
 	    SELECT JobID AS "JobID"
 	         , JobName AS "JobName"
 	         , StartDate AS "StartDate"
 	         , EndDate AS "EndDate"
 	    FROM WORKREPORT_JOB
 	    WHERE ISUSE = 'Y'
 	</select>
 	
 	<select id="selectPeroidProject" parameterType = "cmap" resultType="cmap">
 	    SELECT YEAR,MONTH 
 	         , WorkDay AS "WorkDay"
		 FROM WORKREPORT_WORKDAYWD
		 INNER JOIN WORKREPORT_JOB WJ ON WJ.JobID = #{jobID}
		 AND (CONCAT(YEAR,MONTH) BETWEEN TO_CHAR(WJ.StartDate, 'YYYYMM') AND TO_CHAR(WJ.EndDate, 'YYYYMM'))
 	</select>
 	
 	<select id="selectStatisticsProject" parameterType="cmap" resultType="cmap">
		SELECT   DISTINCT JobPositionCode AS "JobPositionCode"
         	   , ORDERNO AS AS "ORDERNO"
		       , GradeKind AS "GradeKind"
		       , GradeSeq AS "GradeSeq"
		       , UR_Code AS "UR_Code"
		       , DeptName AS "DeptName"
		       , DeptCode AS "DeptCode"
		       , MemberType AS "MemberType"
		       , UserName AS "UserName"
		       , JobPositionName AS "JobPositionName"
		       , WorkReportID AS "WorkReportID"
		       , InputDate AS "InputDate"
			   <foreach collection="months" item="item" separator=",">
		           , CASE WHEN ${item} > 1 THEN 1 ELSE ${item} END AS ${item}
		       </foreach>
		       
		       <foreach collection="months" item="item" separator="+" open="(" close=")">
		           , CASE WHEN ${item} > 1 THEN 1 ELSE ${item} END AS ${item}
		       </foreach>
		       AS "SUMMM"
		  FROM (
		  		  DISTINCT NVL(UR_Code,'Total') AS UR_Code
				, DECODE(MemberType , 'O', 0 ,1) AS ORDERNO
		        , GradeKind
		        , GradeSeq
		        , DeptName
		        , DeptCode
		        , MemberType
		        , UserName
		        , JobPositionCode
		        , JobPositionName
		        , WorkReportID
		        , (SELECT MIN(WorkDate) FROM dual) AS InputDate
				       <foreach collection="months" item="item" separator=",">
				      	  (SELECT SUM((CASE WHEN Year = SUBSTR(#{item},2,4) AND Month = SUBSTR(#{item},6,7) THEN CalHour ELSE 0 END )) FROM dual )AS '${item}'
				       </foreach>
				  FROM (
						SELECT  W.GradeKind
						      , WG.GradeSeq
						      , W.UR_Code
						      , NVL(BG.DeptName, '') AS DeptName
						      , NVL(W.GR_Code, '') AS DeptCode
						      , W.MemberType
						      , NVL(U.DisplayName, O.Name) AS UserName
						      , W.JobPositionCode
						      , BG.JobPositionName
						      , T.*
						      , DECODE(TypeCode , 'P', CASE WHEN Hour > 8 THEN 8 ELSE Hour END, Hour) / (8 * NVL(WD.WorkDay, 20)) AS CalHour
						  FROM WORKREPORT_JOB J
						 RIGHT OUTER JOIN WORKREPORT_TIMECARD T ON J.JobID = T.JobID
						 INNER JOIN (SELECT * FROM WORKREPORT WHERE (MemberType = 'R' AND State = 'A') OR MemberType = 'O') W ON T.WorkReportID = W.WorkReportID
						  LEFT OUTER JOIN WORKREPORT_GRADE WG ON T.Year = WG.ApplyYear AND WG.MemberType = W.MEmberType AND WG.GradeKind = W.GradeKind
						  LEFT OUTER JOIN SYS_OBJECT_USER U ON W.UR_Code = U.UserCode
						  LEFT OUTER JOIN SYS_OBJECT_USER_BASEGROUP BG ON U.UserCode = BG.UserCode AND BG.JobType = 'Origin'
						  LEFT OUTER JOIN WORKREPORT_OUTSOURCING O ON W.UR_Code = O.OUR_Code
						  LEFT OUTER JOIN WORKREPORT_WORKDAY WD ON T.Year = WD.Year AND T.Month = WD.Month
						 WHERE J.JobID = #{jobID} 
						 	   <if test="grcode != '' and grcode != null">
								 AND W.GR_Code = #{grcode}    
							   </if>
					 	 ) TB
			) RTB
		ORDER BY  RTB.ORDERNO DESC ,RTB.GradeSeq, RTB.UserName ASC
 	</select>
 	
 	<select id="selectTypeByTeam" parameterType="cmap" resultType="cmap">
 	 	/*  groupware.admin.workreport.selectTypeByTeam */
		SELECT DISTINCT(WCT.TypeCode) AS "TypeCode" 
		     , WCT.DisplayName AS "DisplayName"  
		FROM SYS_OBJECT_USER U
 	    INNER JOIN SYS_OBJECT_USER_BASEGROUP BG ON BG.UserCode = U.UserCode AND BG.JobType = 'Origin'
		INNER JOIN SYS_OBJECT_GROUP G ON G.GroupPath like '%'||#{gr_code}||';%' AND BG.DeptCode = G.GroupCode
		INNER JOIN (SELECT * FROM WORKREPORT WHERE State = 'A') W ON W.UR_Code = U.UserCode 
		INNER JOIN WORKREPORT_TIMECARD WC ON WC.WorkReportID = W.WorkReportID 
		AND WC.WorkDate Between  TO_DATE(CONCAT(#{startdate},'01'), 'YYYY-MM-DD') AND LAST_DAY(TO_DATE(CONCAT(#{enddate},'01'), 'YYYY-MM-DD') )
		INNER JOIN WORKREPORT_JOB_CATE_TYPE WCT ON WC.Typecode = WCT.TypeCode
		ORDER BY WCT.TypeCode ASC
	</select>
 	
 	<select id="selectHourByTeam" parameterType="cmap" resultType="cmap">
 	/*  groupware.admin.workreport.selectHourByTeam */
		 SELECT A.UR_Code AS "UR_Code"
		     ,  A.UR_Name AS "UR_Name"
		     ,  A.EnterDate AS "EnterDate"
		     ,  A.JobTitleSortKey AS "JobTitleSortKey"
		     ,  A.JobPositionSortKey AS "JobPositionSortKey"
		 	 , <foreach collection="typecodes" item="item" open="(" close=")" separator="+">
			 		${item}  
			 	</foreach>
	 		  AS "SUM"
	 		  <foreach collection="typecodes" item="item">
	 		  , ${item} 
	 		  </foreach>
		  FROM 
  			(
			    SELECT  NVL(U.UserCode,'Total') AS UR_Code
			    	<foreach collection="typecodes" item="item">
		         	  , SUM(CASE WHEN WC.TypeCode = #{item} THEN HOUR ELSE 0 END) AS ${item}  
					</foreach>
				FROM WORKREPORT_TIMECARD WT
				INNER JOIN (SELECT * FROM WORKREPORT WHERE State = 'A') W ON W.WorkReportID = WT.WorkReportID
				INNER JOIN WORKREPORT_JOB_CATE_TYPE WC ON WT.TypeCode = WC.TypeCode 
				INNER JOIN SYS_OBJECT_USER U ON U.UserCode = W.UR_Code
				INNER JOIN SYS_OBJECT_USER_BASEGROUP BG ON BG.UserCode = U.UserCode AND BG.JobType = 'Origin'
				INNER JOIN SYS_OBJECT_GROUP G ON G.GroupPath like '%'||#{gr_code}||';%' AND BG.DeptCode = G.GroupCode 
				WHERE WT.WorkDate Between TO_DATE(CONCAT(#{startdate},'01'), 'YYYY-MM-DD') AND LAST_DAY(TO_DATE(CONCAT(#{enddate},'01'), 'YYYY-MM-DD') )
	        	GROUP BY ROLLUP(U.UserCode)
      		)TB1 
    		LEFT OUTER JOIN (  SELECT     DISTINCT NVL(U.UserCode,'Total') AS UR_Code
						 	            , U.DisplayName AS UR_Name
					      		 	    , U.EnterDate
									 	, BG.JobTitleSortKey
									 	, BG.JobPositionSortKey
	          FROM WORKREPORT_TIMECARD WT
	          INNER JOIN (SELECT * FROM WORKREPORT WHERE State = 'A') W ON W.WorkReportID = WT.WorkReportID
	          INNER JOIN WORKREPORT_JOB_CATE_TYPE WC ON WT.TypeCode = WC.TypeCode 
	          INNER JOIN SYS_OBJECT_USER U ON U.UserCode = W.UR_Code
	          INNER JOIN SYS_OBJECT_USER_BASEGROUP BG ON BG.UserCode = U.UserCode AND BG.JobType = 'Origin'
	          INNER JOIN SYS_OBJECT_GROUP G ON G.GroupPath like '%'||#{gr_code}||';%' AND BG.DeptCode = G.GroupCode 
			  WHERE WT.WorkDate Between TO_DATE(CONCAT(#{startdate},'01'), 'YYYY-MM-DD') AND LAST_DAY(TO_DATE(CONCAT(#{enddate},'01'), 'YYYY-MM-DD') )
      		)A ON A.UR_Code = TB1.UR_Code  
      
      ORDER BY JobTitleSortKey, JobPositionSortKey, EnterDate, UR_Name
		
	</select>
 	
 	<select id="selectOutsourcingManage"  parameterType="cmap" resultType="cmap">
 	/*  groupware.admin.workreport.selectOutsourcingManage */
 		<include refid="oracle.include.pagingHeader"/>
		SELECT  A.OUR_Code AS "OUR_Code"
		      , A.Name AS "Name"
		      , A.Age AS "Age"
		      , A.GradeKind AS "GradeKind"
		      , A.RegistCode AS "RegistCode"
		      , A.WorkSubject AS "WorkSubject"
		      , A.FirstCode AS "FirstCode"
		      , A.FirstName AS "FirstName"
		      , A.SecondCode AS "SecondCode"
		      , A.SecondName AS "SecondName"
		      , A.Role AS "Role"
		      , A.ContractStartDate AS "ContractStartDate"
		      , A.ContractEndDate AS "ContractEndDate"
		      , A.ContractState AS "ContractState"
		      , A.Seq AS "Seq"
		      , A.ExProjectYN AS "ExProjectYN"
		FROM WORKREPORT_OUTSOURCING A
	    <trim prefix="WHERE" prefixOverrides="AND |OR ">
	      (#{isManager} = 'Y' OR (FirstCode = #{currentUser} OR SecondCode = #{currentUser}))
		  <if test="startdate != null and startdate != '' and enddate != null  and enddate != '' ">
		      AND
		      <![CDATA[
		      (replace(contractstartdate,'-','') >=  REPLACE(#{startdate},'-','')) AND (replace(contractenddate,'-','' <=  REPLACE(#{enddate},'-',''))
		  	   ]]>
		  </if>
		  <if test='isendcontract.equals("Y")'>
		      <![CDATA[
		      AND replace(contractenddate,'-','') < TO_CHAR(SYSTIMESTAMP, 'YYYYMMDD')
		      ]]>
		  </if>
		  <if test='osName != null'>
		      AND Name like '%'||#{osName}||'%'
		  </if>
		</trim>	
		<trim prefix='ORDER BY'>
			<if test='sortColumn != null and sortDirection != null'>
				<choose>
					<when test='sortColumn.equalsIgnoreCase("OUR_Code")'>"OUR_Code"</when>
					<when test='sortColumn.equalsIgnoreCase("Name")'>"Name"</when>
					<when test='sortColumn.equalsIgnoreCase("GradeKind")'>"GradeKind"</when>
					<when test='sortColumn.equalsIgnoreCase("FirstName")'>"FirstName"</when>
					<when test='sortColumn.equalsIgnoreCase("WorkSubject")'>"WorkSubject"</when>
					<when test='sortColumn.equalsIgnoreCase("ContractStartDate")'>"ContractStartDate"</when>
					<otherwise>"ContractStartDate"</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
				<include refid="oracle.include.listOrderBy"/>
			</if>
		</trim>
 	    <include refid="oracle.include.pagingFooter"/>
	</select>
 	
 	<select id="countOutsourcingManage" parameterType="cmap" resultType="java.lang.Long">
		SELECT Count(*)
		FROM WORKREPORT_OUTSOURCING A
	    <trim prefix="WHERE" prefixOverrides="AND |OR ">
	      (#{isManager} = 'Y' OR (FirstCode = #{currentUser} OR SecondCode = #{currentUser}))
		  <if test="startdate != null and startdate != '' and enddate != null  and enddate != '' ">
		      AND
		      <![CDATA[
		      (replace(contractstartdate,'-','') >=  REPLACE(#{startdate},'-','')) AND (replace(contractenddate,'-','' <=  REPLACE(#{enddate},'-',''))
		  	   ]]>
		  </if>
		  <if test='isendcontract.equals("Y")'>
		      <![CDATA[
		    	 AND replace(contractenddate,'-','') < TO_CHAR(SYSTIMESTAMP, 'YYYYMMDD')
		      ]]>
		  </if>
		</trim>	
	</select>
 	
</mapper>
