<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="attend.job">

	<update id="createScheduleJob" statementType="CALLABLE" parameterType="cmap">
	 	{CALL SP_ATTEND_CREATESCHEDULEJOB(#{SchSeq}, #{StartDate}, #{EndDate}, #{JobUserCode}, #{HolidayFlag}, #{CompanyCode}, #{USERID}, #{RetCount, mode=OUT, jdbcType=INTEGER}, #{RetValue, mode=OUT, jdbcType=VARCHAR})}
	</update>

	<update id="createScheduleJobDirect" statementType="CALLABLE" parameterType= "cmap">
		{CALL SP_ATTEND_CTSCHEDULEJOBDIR(#{SchSeq}, #{StartDate}, #{EndDate}, #{JobUserCode}, #{HolidayFlag}, #{CompanyCode}, #{USERID}, #{StartTime}, #{EndTime}, #{NextDayYn}, #{RetCount, mode=OUT, jdbcType=INTEGER}, #{RetValue, mode=OUT, jdbcType=VARCHAR})}
	</update>

	<update id="createScheduleJobDiv" statementType="CALLABLE" parameterType="cmap">
	 	{CALL SP_ATTEND_CREATESCHEDULEJOBDIV(#{SchSeq}, #{TrgDates}, #{JobUserCode}, #{HolidayFlag}, #{WeekFlag}, #{CompanyCode}, #{USERID}, #{RetCount, mode=OUT, jdbcType=INTEGER}, #{RetValue, mode=OUT, jdbcType=VARCHAR})}
	</update>

	<update id="createScheduleJobDivDirect" statementType="CALLABLE" parameterType= "cmap">
		{CALL SP_ATTEND_CTSCHEDULEJOBDIVDIR(#{SchSeq}, #{TrgDates}, #{JobUserCode}, #{HolidayFlag}, #{WeekFlag}, #{CompanyCode}, #{USERID}, #{StartTime}, #{EndTime}, #{NextDayYn}, #{RetCount, mode=OUT, jdbcType=INTEGER}, #{RetValue, mode=OUT, jdbcType=VARCHAR})}
	</update>

	<update id="createScheduleOff" statementType="CALLABLE" parameterType="cmap">
	 	{CALL SP_ATTEND_CREATESCHEDULEOFF(#{TrgDates}, #{JobUserCode}, #{WorkSts}, #{CompanyCode}, #{USERID}, #{RetCount, mode=OUT, jdbcType=INTEGER}, #{RetValue, mode=OUT, jdbcType=VARCHAR})}
	</update>

	<update id="createScheduleOffCancel" statementType="CALLABLE" parameterType="cmap">
		{CALL SP_ATTEND_CREATESCHEDULECANCEL(#{TrgDates}, #{CompanyCode}, #{RetCount, mode=OUT, jdbcType=INTEGER}, #{RetValue, mode=OUT, jdbcType=VARCHAR})}
	</update>

	<update id="copyScheduleJob" statementType="CALLABLE" parameterType="cmap"  >
	 	{CALL SP_ATTEND_COPYSCHEDULEJOB(#{orgJobDate}, #{orgUserCode}, #{TrgDates}, #{JobUserCode}, #{HolidayFlag}, #{CompanyCode}, #{USERID}, #{RetCount, mode=OUT, jdbcType=INTEGER}, #{RetValue, mode=OUT, jdbcType=VARCHAR})}
	</update>
	
	<update id="reapplyScheduleJob" statementType="CALLABLE" parameterType="cmap"  >
	 	{CALL SP_ATTEND_REAPPLYSCHEDULEJOB(#{SchSeq}, #{StartDate}, #{EndDate}, #{CompanyCode}, #{USERID}, #{RetCount, mode=OUT, jdbcType=INTEGER}, #{RetValue, mode=OUT, jdbcType=VARCHAR})}
	</update>

	<select id="getScheduleJobUser" parameterType="cmap" resultType="cmap"  >
		<![CDATA[
			SELECT
				SOU.USERCODE AS "UserCode"
				, HOLIDAYSTART AS "HolidayStart"
				, HOLIDAYEND AS "HolidayEnd"
			FROM SYS_OBJECT_USER_BASEGROUP SOUB
				JOIN SYS_OBJECT_USER SOU ON SOUB.USERCODE = SOU.USERCODE AND SOUB.JOBTYPE = 'Origin'
				JOIN ATTEND_HOLIDAY_SCHEDULE AHS ON SOUB.COMPANYCODE = AHS.COMPANYCODE AND AHS.HOLIDAYSTART = #{HolidayStart} AND AHS.HOLIDAYEND = #{HolidayEnd} AND AHS.GOOGLEYN= #{GoogleYn}
			WHERE SOUB.COMPANYCODE = #{CompanyCode}
				AND SOU.ISUSE = 'Y'
				AND SOU.ISDISPLAY = 'Y'
				AND AHS.HOLIDAYSTART >= TO_DATE(SOU.ENTERDATE,'YYYY-MM-DD') AND (RETIREDATE is null OR  AHS.HOLIDAYEND <= TO_DATE(SOU.RETIREDATE,'YYYY-MM-DD'))
		]]>
	</select>
	
	
	<select id="getJobDayCnt" parameterType="cmap" resultType="java.lang.Long" >
		SELECT
			COUNT(*)
		FROM SYS_OBJECT_USER UR
			JOIN SYS_OBJECT_USER_BASEGROUP BG ON BG.USERCODE = UR.USERCODE AND BG.COMPANYCODE = #{CompanyCode}  AND BG.JOBTYPE = 'Origin'
			JOIN SYS_OBJECT_GROUP OG ON BG.COMPANYCODE = OG.COMPANYCODE AND OG.GROUPTYPE IN ('Dept','Company') AND BG.DEPTCODE = OG.GROUPCODE AND MEMBEROF != 'NOUSE'
			LEFT JOIN ATTEND_JOB AJ ON UR.USERCODE = AJ.USERCODE AND AJ.JOBDATE = #{StartDate}
		WHERE UR.ISUSE = 'Y'
			AND UR.ISDISPLAY = 'Y'
			AND OG.GROUPPATH LIKE #{DeptCode}||'%'
			<if test='searchText != null and searchText != ""'>
				AND UR.DISPLAYNAME LIKE '%'||#{searchText}||'%'
			 </if>
			<if test='SchSeq != null and SchSeq != ""'>
				AND AJ.SCHSEQ = #{SchSeq}
			</if>
	</select>
	
	<select id="getJobDay" parameterType="cmap" resultType="cmap" >
		<include refid="oracle.include.pagingHeader" />
		SELECT
			TO_CHAR(AJ.JOBDATE, 'YYYY-MM-DD') AS "JobDate"
			, UR.USERCODE AS "UserCode"
			, FN_BASEGETDICTIONARY_S(#{lang}, UR.MultiDisplayName) AS "UserName"
			, UR.PHOTOPATH AS "PhotoPath"
			, FN_BASEGETDICTIONARY_S(#{lang}, BG.MultiDeptName) AS "DeptName"
			, FN_BASEGETDICTIONARY_S(#{lang}, BG.MultiJobPositionName) AS "JobPositionName"
			, FN_BASEGETDICTIONARY_S(#{lang}, BG.MultiJobLevelName) AS "JobLevelName"
			, FN_BASEGETDICTIONARY_S(#{lang}, BG.MultiJobTitleName) AS "JobTitleName"
			, NVL(AJ.ATTDAYAC, 0) AS "AttDayAC"
			, AJ.WORKSTS AS "WorkSts"
			, NVL(TO_CHAR(AJ.ATTDAYSTARTTIME, 'HH24MI'), '0000') AS "AttDayStartTime"
			, NVL(TO_CHAR(AJ.ATTDAYENDTIME, 'HH24MI'), '0000') AS "AttDayEndTime"
			, AJ.CONFMYN AS "ConfmYn"
			, NVL(ASH.SCHNAME, '') AS "SchName"
			, NVL(ash.WorkingSystemType,0) as "WorkingSystemType"
			, NVL(ash.BaseYn, 'N') as "BaseYn"
			, (
				SELECT REPLACE(VV.VACFLAG,' ','')||'/'||REPLACE(VV.VACOFFFLAG,' ','')||'/'||VV.VACCNT||'/'||VV.STARTTIME||'/'||VV.ENDTIME||'/'||VV.EACHVACDAY||'/'||VV.VacAmPmVacDay
				FROM (SELECT VD.VACDATE, SUM(VD.VACDAY) AS VACCNT, VD.UR_CODE
						, NVL( SUM(VD.AmVacDay),0)||'|'||NVL( SUM(VD.PmVacDay),0)  as VacAmPmVacDay
						, LISTAGG(VD.VACFLAG, '|') WITHIN GROUP(ORDER BY VD.VACOFFFLAG) AS VACFLAG
						, LISTAGG(VD.VACOFFFLAG, '|') WITHIN GROUP(ORDER BY VD.VACOFFFLAG) AS VACOFFFLAG
						, LISTAGG(NVL(VD.STARTTIME,'00:00'), '|') WITHIN GROUP(ORDER BY VD.VACOFFFLAG) AS STARTTIME
						, LISTAGG(NVL(VD.ENDTIME,'00:00'), '|') WITHIN GROUP(ORDER BY VD.VACOFFFLAG) AS ENDTIME
						, LISTAGG(VD.VACDAY, '|') WITHIN GROUP(ORDER BY VD.VACOFFFLAG) AS EACHVACDAY
						FROM  (
							select
								UR_Code, VacDate, VacOffFlag, VacFlag, VacDay, StartTime, EndTime
								,CASE WHEN VacOffFlag = 'AM' THEN
									VacDay
								END as AmVacDay
								,CASE WHEN VacOffFlag = 'PM' THEN
									VacDay
								END as PmVacDay
							FROM VM_VACATIONINFO_DAY
						) VD
						WHERE VD.VACDATE = #{StartDate}
						GROUP BY VD.VACDATE, VD.UR_CODE) VV
				WHERE VV.UR_CODE = AJ.USERCODE
				AND JOBDATE = VV.VACDATE
			) AS "VacFlag"
		FROM SYS_OBJECT_USER UR
			JOIN SYS_OBJECT_USER_BASEGROUP BG ON BG.USERCODE = UR.USERCODE AND BG.COMPANYCODE = #{CompanyCode} AND BG.JOBTYPE = 'Origin'
			JOIN SYS_OBJECT_GROUP OG ON BG.COMPANYCODE = OG.COMPANYCODE AND OG.GROUPTYPE IN ('Dept','Company') AND BG.DEPTCODE = OG.GROUPCODE AND MEMBEROF != 'NOUSE'
			LEFT JOIN ATTEND_JOB AJ ON UR.USERCODE = AJ.USERCODE AND AJ.JOBDATE = #{StartDate}
			LEFT JOIN ATTEND_SCHEDULE ASH ON AJ.SCHSEQ = ASH.SCHSEQ
		WHERE UR.ISUSE = 'Y'
			AND UR.ISDISPLAY = 'Y'
			AND OG.GROUPPATH LIKE #{DeptCode}||'%'
			<if test='searchText != null and searchText != ""'>
				AND UR.DISPLAYNAME LIKE '%'||#{searchText}||'%'
			 </if>
			<if test='SchSeq != null and SchSeq != ""'>
				AND AJ.SCHSEQ = #{SchSeq}
			</if>
		<trim prefix="ORDER BY"  prefixOverrides =",">
			<choose>
				<when test="orgOrders != null and orgOrders != '' ">
				  	<foreach collection="orgOrders" item="orgOrder" separator=",">
				  		<if test="orgOrder != null and orgOrder == 'JobTitle'">
				  			BG.JOBTITLESORTKEY ASC
				  		</if>
				  		<if test="orgOrder != null and orgOrder == 'JobLevel'">
				  			BG.JOBLEVELSORTKEY ASC
				  		</if>
				  		<if test="orgOrder != null and orgOrder == 'JobPosition'">
				  			BG.JOBPOSITIONSORTKEY ASC
				  		</if>
		  				<if test="orgOrder != null and orgOrder == 'DN'">
				  			UR.MULTIDISPLAYNAME ASC
				  		</if>
				  	</foreach>
				  	, BG.SORTKEY ASC, BG.JOBPOSITIONNAME ASC, UR.ENTERDATE ASC
			  	</when>
			</choose>
		</trim>
		<include refid="oracle.include.pagingFooter" />
	</select>
	
	<select id="getJobDayAvg" parameterType="cmap" resultType="cmap" >
		SELECT
			COUNT(AJ.JOBDATE) AS "JobCnt"
			, AVG(NVL(ATTDAYAC,0)) AS "ACAvg"
			<foreach collection="Days" item="item" index="index" separator="" open="" close="">
				, NVL(SUM(CASE WHEN '${item}' BETWEEN TO_CHAR(AJ.ATTDAYSTARTTIME,'HH24') AND TO_CHAR(AJ.ATTDAYENDTIME, 'HH24') THEN 1 END), 0) AS "Day_${item}"
			</foreach>
		FROM SYS_OBJECT_USER UR
			JOIN SYS_OBJECT_USER_BASEGROUP BG ON BG.USERCODE = UR.USERCODE AND BG.COMPANYCODE = #{CompanyCode}  AND BG.JOBTYPE = 'Origin'
			JOIN SYS_OBJECT_GROUP OG ON BG.COMPANYCODE = OG.COMPANYCODE AND OG.GROUPTYPE IN ('Dept', 'Company')AND BG.DEPTCODE = OG.GROUPCODE AND MEMBEROF != 'NOUSE'
			LEFT JOIN ATTEND_JOB AJ ON UR.USERCODE = AJ.USERCODE AND AJ.JOBDATE = #{StartDate}
		WHERE UR.ISUSE = 'Y'
			AND UR.ISDISPLAY = 'Y'
			AND OG.GROUPPATH LIKE #{DeptCode}||'%'
			<if test='searchText != null and searchText != ""'>
				AND UR.DISPLAYNAME LIKE '%'||#{searchText}||'%'
			</if>
			<if test='SchSeq != null and SchSeq != ""'>
				AND AJ.SCHSEQ = #{SchSeq}
			</if>
	</select>
	
	<select id="getJobWeekCnt" parameterType="cmap" resultType="java.lang.Long" >
		SELECT
			COUNT(UR.USERCODE)
		FROM SYS_OBJECT_USER UR
			JOIN SYS_OBJECT_USER_BASEGROUP BG ON BG.USERCODE = UR.USERCODE AND BG.COMPANYCODE = #{CompanyCode}  AND BG.JOBTYPE = 'Origin'
			JOIN SYS_OBJECT_GROUP OG ON BG.COMPANYCODE = OG.COMPANYCODE AND OG.GROUPTYPE IN ('Dept','Company') AND BG.DEPTCODE = OG.GROUPCODE AND MEMBEROF != 'NOUSE'
			LEFT JOIN ATTEND_JOB AJ ON UR.USERCODE = AJ.USERCODE AND AJ.JOBDATE = #{StartDate}
		WHERE UR.ISUSE = 'Y'
			AND UR.ISDISPLAY = 'Y'
			AND OG.GROUPPATH LIKE #{DeptCode}||'%'
			<if test='searchText != null and searchText != ""'>
				AND UR.DISPLAYNAME LIKE '%'||#{searchText}||'%'
			</if>
			<if test='SchSeq != null and SchSeq != ""'>
				AND AJ.SCHSEQ = #{SchSeq}
			</if>
	</select>
	
	<select id="getJobWeek" parameterType="cmap" resultType="cmap" >
		SELECT
			AJ.USERCODE AS "UserCode"
			, AJ.USERNAME AS "UserName"
			, AJ.PHOTOPATH AS "PhotoPath"
			, AJ.DEPTNAME AS "DeptName"
			, AJ.JOBLEVELNAME AS "JobLevelName"
			, AJ.JOBPOSITIONNAME AS "JobPositionName"
			, AJ.JOBTITLENAME AS "JobTitleName"
			, AJ.JOBPOSITIONSORTKEY AS "JobPositionSortKey"
			, AJ.ENTERDATE AS "EnterDate"
			, NVL(AJ.ATTDAYAC, 0) AS "AttDayAC"
			<foreach collection="Weeks" item="item" index="index" separator="" open="" close="">
				, SCHNAME_${item[1]} AS "SchName_${item[1]}"
				, WORKSTS_${item[1]} AS "WorkSts_${item[1]}"
				, ATTDAY_${item[1]} AS "AttDay_${item[1]}"
				, ATTDAYSTARTTIME_${item[1]} AS "AttDayStartTime_${item[1]}"
				, ATTDAYENDTIME_${item[1]} AS "AttDayEndTime_${item[1]}"
				, ATTDAYAC_${item[1]} AS "AttDayAC_${item[1]}"
				, CONFMYN_${item[1]} AS "ConfmYn_${item[1]}"
				, (
					SELECT TRIM(VV.VACFLAG)||':'||TRIM(VV.VACOFFFLAG)||':'||VV.VACCNT||':'||VV.AMPMVACDAY
					FROM (
						SELECT VD.VACDATE, VD.UR_CODE, SUM(VD.VACDAY) AS VACCNT
							, LISTAGG(VD.VACFLAG, '|') WITHIN GROUP(ORDER BY VD.VACOFFFLAG) AS VACFLAG
							, LISTAGG(VD.VACOFFFLAG, '|') WITHIN GROUP(ORDER BY VD.VACOFFFLAG) AS VACOFFFLAG
							, LISTAGG(NVL(VD.STARTTIME,'00:00'), '|') WITHIN GROUP(ORDER BY VD.VACOFFFLAG) AS STARTTIME
							, LISTAGG(NVL(VD.ENDTIME,'00:00'), '|') WITHIN GROUP(ORDER BY VD.VACOFFFLAG) AS ENDTIME
							, NVL( SUM(AMVACDAY),0)||'|'||NVL( SUM(PMVACDAY),0) AS AMPMVACDAY
						FROM (
							SELECT UR_CODE, VACDATE, VACOFFFLAG, VACFLAG, VACDAY, STARTTIME, ENDTIME
								,CASE WHEN VACOFFFLAG = 'AM' THEN
								VACDAY
								END AS AMVACDAY
								,CASE WHEN VACOFFFLAG = 'PM' THEN
								VACDAY
								END AS PMVACDAY
							FROM VM_VACATIONINFO_DAY
							<choose>
						 		<when test ="item[2] != null and item[2] != ''">
							   	WHERE VACDATE = '${item[2]}'
								</when> 
								<otherwise>
							   	WHERE VACDATE BETWEEN #{StartDate} AND #{EndDate}
								</otherwise>  
						   </choose>
							) VD
						GROUP BY VD.VACDATE, VD.UR_CODE) VV
					WHERE VV.UR_CODE = AJ.USERCODE
						AND AttDay_${item[1]} = VV.VACDATE
				) AS "VacFlag_${item[1]}"
			</foreach>
		FROM (
			<include refid="oracle.include.pagingHeader" />
			SELECT
				UR.USERCODE AS USERCODE
				, FN_BASEGETDICTIONARY_S(#{lang}, UR.MultiDisplayName) AS USERNAME
				, UR.PHOTOPATH AS PHOTOPATH
				, FN_BASEGETDICTIONARY_S(#{lang}, BG.MultiDeptName) AS DEPTNAME
				, FN_BASEGETDICTIONARY_S(#{lang}, BG.MultiJobPositionName) AS JOBPOSITIONNAME
				, FN_BASEGETDICTIONARY_S(#{lang}, BG.MultiJobLevelName) AS JOBLEVELNAME
				, FN_BASEGETDICTIONARY_S(#{lang}, BG.MultiJobTitleName) AS JOBTITLENAME
				, BG.JOBPOSITIONSORTKEY AS JOBPOSITIONSORTKEY
				, UR.ENTERDATE AS ENTERDATE
				, BG.SORTKEY
				, BG.JOBLEVELSORTKEY
				, BG.JOBTITLESORTKEY
				, BG.JOBPOSITIONCODE
				, UR.MULTIDISPLAYNAME
				, NVL(SUM(AJ.ATTDAYAC), 0) AS ATTDAYAC
				<foreach collection="Weeks" item="item" index="index" separator="" open="" close="">
					, MAX(CASE WHEN FN_ATTENDANCE_MYSQLWEEKDAY(AJ.JOBDATE) = '${item[0]}' THEN NVL(ASH.SCHNAME,'') END) AS SCHNAME_${item[1]}
					, MAX(CASE WHEN FN_ATTENDANCE_MYSQLWEEKDAY(AJ.JOBDATE) = '${item[0]}' THEN AJ.WORKSTS END) AS WORKSTS_${item[1]}
					, MAX(CASE WHEN FN_ATTENDANCE_MYSQLWEEKDAY(AJ.JOBDATE) = '${item[0]}' THEN TO_CHAR(AJ.JOBDATE, 'YYYY-MM-DD') END) AS ATTDAY_${item[1]}
					, MAX(CASE WHEN FN_ATTENDANCE_MYSQLWEEKDAY(AJ.JOBDATE) = '${item[0]}' THEN NVL(TO_CHAR(AJ.ATTDAYSTARTTIME, 'HH24MI'), '0000') END) AS ATTDAYSTARTTIME_${item[1]}
					, MAX(CASE WHEN FN_ATTENDANCE_MYSQLWEEKDAY(AJ.JOBDATE) = '${item[0]}' THEN NVL(TO_CHAR(AJ.ATTDAYENDTIME, 'HH24MI'), '0000') END) AS ATTDAYENDTIME_${item[1]}
					, MAX(CASE WHEN FN_ATTENDANCE_MYSQLWEEKDAY(AJ.JOBDATE) = '${item[0]}' THEN AJ.ATTDAYAC END) AS ATTDAYAC_${item[1]}
					, MAX(CASE WHEN FN_ATTENDANCE_MYSQLWEEKDAY(AJ.JOBDATE) = '${item[0]}' THEN AJ.CONFMYN END) AS CONFMYN_${item[1]}
				</foreach>
			FROM SYS_OBJECT_USER UR
				JOIN SYS_OBJECT_USER_BASEGROUP BG ON BG.USERCODE = UR.USERCODE AND BG.COMPANYCODE = #{CompanyCode}  AND BG.JOBTYPE = 'Origin'
				JOIN SYS_OBJECT_GROUP OG ON BG.COMPANYCODE = OG.COMPANYCODE AND OG.GROUPTYPE IN ('Dept','Company') AND BG.DEPTCODE = OG.GROUPCODE AND MEMBEROF != 'NOUSE'
				LEFT JOIN ATTEND_JOB AJ ON UR.USERCODE = AJ.USERCODE AND AJ.JOBDATE BETWEEN #{StartDate} AND #{EndDate}
				LEFT JOIN ATTEND_SCHEDULE ASH ON AJ.SCHSEQ = ASH.SCHSEQ
			WHERE UR.ISUSE = 'Y'
				AND UR.ISDISPLAY = 'Y'
				AND OG.GROUPPATH LIKE #{DeptCode}||'%'
				<if test='searchText != null and searchText != ""'>
					AND UR.DISPLAYNAME LIKE '%'||#{searchText}||'%'
				</if>
				<if test='SchSeq != null and SchSeq != ""'>
					AND AJ.SCHSEQ = #{SchSeq}
				</if>
			GROUP BY UR.USERCODE, UR.MULTIDISPLAYNAME, UR.PHOTOPATH, BG.MULTIDEPTNAME, BG.MULTIJOBLEVELNAME, BG.MULTIJOBPOSITIONNAME, BG.MULTIJOBTITLENAME, BG.JOBPOSITIONSORTKEY, BG.JOBTITLESORTKEY, UR.ENTERDATE, BG.SORTKEY, BG.JOBLEVELSORTKEY, BG.JOBPOSITIONCODE, UR.MULTIDISPLAYNAME
			<trim prefix="ORDER BY"  prefixOverrides =",">
			<choose>
				<when test="orgOrders != null and orgOrders != '' ">
				  	<foreach collection="orgOrders" item="orgOrder" separator=",">
				  		<if test="orgOrder != null and orgOrder == 'JobTitle'">
				  			BG.JOBTITLESORTKEY ASC
				  		</if>
				  		<if test="orgOrder != null and orgOrder == 'JobLevel'">
				  			BG.JOBLEVELSORTKEY ASC
				  		</if>
				  		<if test="orgOrder != null and orgOrder == 'JobPosition'">
				  			BG.JOBPOSITIONSORTKEY ASC
				  		</if>
		  				<if test="orgOrder != null and orgOrder == 'DN'">
				  			UR.MULTIDISPLAYNAME ASC
				  		</if>
				  	</foreach>
				  	, BG.SORTKEY ASC, BG.JOBPOSITIONCODE ASC, UR.ENTERDATE ASC
			  	</when>
			</choose>
		</trim>
			<include refid="oracle.include.pagingFooter" />
		) AJ
	</select>
	
	<select id="getJobWeekAvg" parameterType="cmap" resultType="cmap" >
		SELECT
			COUNT(USERCODE) AS "JobCnt"
			, AVG(ATTDAYAC) AS "ACAvg"
			<foreach collection="Weeks" item="item" index="index" separator="" open="" close="">
				, COUNT(ATTDAY_${item[1]}) AS "ACCount_${item[1]}"
				, AVG(ATTDAYAC_${item[1]}) AS "ACAvg_${item[1]}"
			</foreach>
		FROM (
			SELECT
				UR.USERCODE AS USERCODE
				, UR.DISPLAYNAME AS USERNAME
				, NVL(SUM(ATTDAYAC), 0) AS ATTDAYAC
				<foreach collection="Weeks" item="item" index="index" separator="" open="" close="">
				, MAX(CASE WHEN FN_ATTENDANCE_MYSQLWEEKDAY(AJ.JOBDATE) = '${item[0]}' THEN AJ.WORKSTS END) AS WORKSTS_${item[1]}
				, MAX(CASE WHEN FN_ATTENDANCE_MYSQLWEEKDAY(AJ.JOBDATE) = '${item[0]}' THEN AJ.JOBDATE END) AS ATTDAY_${item[1]}
				, MAX(CASE WHEN FN_ATTENDANCE_MYSQLWEEKDAY(AJ.JOBDATE) = '${item[0]}' THEN NVL(TO_CHAR(AJ.ATTDAYSTARTTIME, 'HH24MI'), '0000') END) AS ATTDAYSTARTTIME_${item[1]}
				, MAX(CASE WHEN FN_ATTENDANCE_MYSQLWEEKDAY(AJ.JOBDATE) = '${item[0]}' THEN NVL(TO_CHAR(AJ.ATTDAYENDTIME, 'HH24MI'), '0000') END) AS ATTDAYENDTIME_${item[1]}
				, MAX(CASE WHEN FN_ATTENDANCE_MYSQLWEEKDAY(AJ.JOBDATE) = '${item[0]}' THEN AJ.ATTDAYAC END) AS ATTDAYAC_${item[1]}
				</foreach>
			FROM SYS_OBJECT_USER UR
				JOIN SYS_OBJECT_USER_BASEGROUP BG ON BG.USERCODE = UR.USERCODE AND BG.COMPANYCODE = #{CompanyCode} AND BG.JOBTYPE = 'Origin'
				JOIN SYS_OBJECT_GROUP OG ON BG.COMPANYCODE = OG.COMPANYCODE AND OG.GROUPTYPE IN ('Dept','Company') AND BG.DEPTCODE = OG.GROUPCODE AND MEMBEROF != 'NOUSE'
				LEFT JOIN ATTEND_JOB AJ ON UR.USERCODE = AJ.USERCODE AND AJ.JOBDATE BETWEEN #{StartDate} AND #{EndDate}
			WHERE UR.ISUSE = 'Y'
				AND UR.ISDISPLAY = 'Y'
				AND OG.GROUPPATH LIKE #{DeptCode}||'%'
				<if test='searchText != null and searchText != ""'>
					AND UR.DISPLAYNAME LIKE '%'||#{searchText}||'%'
				</if>
				<if test='SchSeq != null and SchSeq != ""'>
					AND AJ.SCHSEQ = #{SchSeq}
				</if>
			GROUP BY UR.USERCODE, UR.DISPLAYNAME
		) A
	</select>
	
	<select id="getJobMonth"  parameterType="cmap" resultType= "cmap" >
		SELECT
			TO_CHAR(AJ.JOBDATE, 'YYYY-MM-DD') AS "JobDate"
			, UR.USERCODE AS "UserCode"
			, FN_BASEGETDICTIONARY_S(#{lang}, UR.MultiDisplayName) AS "UserName"
			, NVL(AJ.ATTDAYAC, 0) AS "AttDayAC"
			, AJ.WORKSTS AS "WorkSts"
			, NVL(TO_CHAR(AJ.ATTDAYSTARTTIME, 'HH24MI'), '0000') AS "AttDayStartTime"
			, NVL(TO_CHAR(AJ.ATTDAYENDTIME, 'HH24MI'), '0000') AS "AttDayEndTime"
			, NVL(ASH.SCHNAME,'') AS "SchName"
			, AJ.CONFMYN AS "ConfmYn"
			, VACFLAG AS "VacFlag"
		FROM SYS_OBJECT_USER UR
			JOIN SYS_OBJECT_USER_BASEGROUP BG ON BG.USERCODE = UR.USERCODE AND BG.COMPANYCODE = #{CompanyCode}  AND BG.JOBTYPE = 'Origin'
			JOIN SYS_OBJECT_GROUP OG ON BG.COMPANYCODE = OG.COMPANYCODE AND OG.GROUPTYPE IN ('Dept', 'Company') AND BG.DEPTCODE = OG.GROUPCODE AND MEMBEROF != 'NOUSE'
			JOIN ATTEND_JOB AJ ON UR.USERCODE = AJ.USERCODE AND AJ.JOBDATE BETWEEN TO_DATE(#{StartDate}||'01', 'YYYYMMDD') AND LAST_DAY(TO_DATE(#{StartDate}, 'YYYYMM'))
			LEFT JOIN ATTEND_SCHEDULE  ASH ON AJ.SCHSEQ = ASH.SCHSEQ
			LEFT JOIN (
				SELECT VV.UR_CODE, VV.VACDATE, TRIM(VV.VACFLAG) || ':' || TRIM(VV.VACOFFFLAG) as VACFLAG
				FROM VM_VACATIONINFO_DAY VV
				WHERE VV.VACDATE BETWEEN TO_CHAR(TO_DATE(#{StartDate}||'01', 'YYYYMMDD'),'YYYY-MM-DD') AND TO_CHAR(LAST_DAY(TO_DATE(#{StartDate}, 'YYYYMM')),'YYYY-MM-DD')
			) VD ON VD.UR_CODE = AJ.USERCODE AND VD.VACDATE = TO_CHAR(AJ.JOBDATE, 'YYYY-MM-DD')
		WHERE UR.ISUSE = 'Y'
			AND UR.ISDISPLAY = 'Y'
			AND OG.GROUPPATH LIKE #{DeptCode}||'%'
			<if test='searchText != null and searchText != ""'>
				AND UR.DISPLAYNAME LIKE '%'||#{searchText}||'%'
			</if>
			<if test='SchSeq != null and SchSeq != ""'>
				AND AJ.SCHSEQ = #{SchSeq}
			</if>
		<trim prefix="ORDER BY"  prefixOverrides =",">
			<choose>
				<when test="orgOrders != null and orgOrders != '' ">
				  	<foreach collection="orgOrders" item="orgOrder" separator=",">
				  		<if test="orgOrder != null and orgOrder == 'JobTitle'">
				  			BG.JOBTITLESORTKEY ASC
				  		</if>
				  		<if test="orgOrder != null and orgOrder == 'JobLevel'">
				  			BG.JOBLEVELSORTKEY ASC
				  		</if>
				  		<if test="orgOrder != null and orgOrder == 'JobPosition'">
				  			BG.JOBPOSITIONSORTKEY ASC
				  		</if>
		  				<if test="orgOrder != null and orgOrder == 'DN'">
				  			UR.MULTIDISPLAYNAME ASC
				  		</if>
				  	</foreach>
				  	, JOBDATE, BG.SORTKEY, BG.JOBPOSITIONCODE, UR.ENTERDATE
			  	</when>
			</choose>
		</trim>
	</select>
	
	<select id="getJobListCnt"  parameterType="cmap" resultType= "java.lang.Long" >
		SELECT
			COUNT(UR.USERCODE)
		FROM SYS_OBJECT_USER UR
			JOIN SYS_OBJECT_USER_BASEGROUP BG ON BG.USERCODE = UR.USERCODE AND BG.COMPANYCODE = #{CompanyCode} AND BG.JOBTYPE = 'Origin'
			JOIN SYS_OBJECT_GROUP OG ON BG.COMPANYCODE = OG.COMPANYCODE AND OG.GROUPTYPE IN ('Dept','Company') AND BG.DEPTCODE = OG.GROUPCODE AND MEMBEROF != 'NOUSE'
			LEFT JOIN ATTEND_JOB AJ ON UR.USERCODE = AJ.USERCODE AND AJ.JOBDATE BETWEEN #{StartDate} AND #{EndDate}
		WHERE UR.ISUSE = 'Y'
			AND UR.ISDISPLAY = 'Y'
			AND OG.GROUPPATH LIKE #{DeptCode}||'%'
			<if test='searchText != null and searchText != ""'>
				AND UR.DISPLAYNAME LIKE '%'||#{searchText}||'%'
			</if>
			<if test='SchSeq != null and SchSeq != ""'>
				AND AJ.SCHSEQ = #{SchSeq}
			</if>
	</select>
	
	<select id="getJobList" parameterType="cmap" resultType="cmap" >
		<include refid="oracle.include.pagingHeader" />
		SELECT
			TO_CHAR(AJ.JOBDATE, 'YYYY-MM-DD') AS "JobDate"
			, UR.USERCODE AS "UserCode"
			, FN_BASEGETDICTIONARY_S(#{lang}, UR.MultiDisplayName) AS "UserName"
			, AJ.WORKSTS AS "WorkSts"
			, NVL(TO_CHAR(AJ.ATTDAYSTARTTIME, 'HH24:MI'), '00:00') AS "AttDayStartTime"
			, NVL(TO_CHAR(AJ.ATTDAYENDTIME, 'HH24:MI'), '00:00') AS "AttDayEndTime"
		    , case when aj.WorkSts is not NULL then NVL(TO_CHAR(AJ.ATTDAYSTARTTIME, 'HH24:MI'), '00:00')|| '~' || NVL(TO_CHAR(AJ.ATTDAYENDTIME, 'HH24:MI'), '00:00') end "AttDay"
			, NVL(ATTDAYAC, 0) AS "AttDayAC"
			, FN_BASEGETDICTIONARY_S(#{lang}, BG.MultiDeptName) AS "DeptName"
			, CASE
				WHEN AJ.ATTDAYSTARTTIME IS NOT NULL THEN ((AJ.ATTDAYENDTIME - AJ.ATTDAYSTARTTIME) * (24 * 60)) - NVL(ATTDAYAC, 0)
			END AS "AttDayIdle"
			, CONFMYN AS "ConfmYn"
		FROM SYS_OBJECT_USER UR
			JOIN SYS_OBJECT_USER_BASEGROUP BG ON BG.USERCODE = UR.USERCODE AND BG.COMPANYCODE = #{CompanyCode} AND BG.JOBTYPE = 'Origin'
			JOIN SYS_OBJECT_GROUP OG ON BG.COMPANYCODE = OG.COMPANYCODE AND OG.GROUPTYPE IN ('Dept', 'Company') AND BG.DEPTCODE = OG.GROUPCODE AND MEMBEROF != 'NOUSE'
			LEFT JOIN ATTEND_JOB AJ ON UR.USERCODE = AJ.USERCODE AND AJ.JOBDATE BETWEEN TO_DATE(#{StartDate}, 'YYYY.MM.DD') AND TO_DATE(#{EndDate}, 'YYYY.MM.DD')
		WHERE UR.ISUSE = 'Y'
			AND UR.ISDISPLAY = 'Y'
			AND OG.GROUPPATH LIKE #{DeptCode}||'%'
			<if test='searchText != null and searchText != ""'>
				AND UR.DISPLAYNAME LIKE '%'||#{searchText}||'%'
			</if>
			<if test='SchSeq != null and SchSeq != ""'>
				AND AJ.SCHSEQ = #{SchSeq}
			</if>
		<trim prefix="ORDER BY"  prefixOverrides =",">
			<choose>
				<when test="orgOrders != null and orgOrders != '' ">
				  	<foreach collection="orgOrders" item="orgOrder" separator=",">
				  		<if test="orgOrder != null and orgOrder == 'JobTitle'">
				  			BG.JOBTITLESORTKEY ASC
				  		</if>
				  		<if test="orgOrder != null and orgOrder == 'JobLevel'">
				  			BG.JOBLEVELSORTKEY ASC
				  		</if>
				  		<if test="orgOrder != null and orgOrder == 'JobPosition'">
				  			BG.JOBPOSITIONSORTKEY ASC
				  		</if>
		  				<if test="orgOrder != null and orgOrder == 'DN'">
				  			UR.MULTIDISPLAYNAME ASC
				  		</if>
				  	</foreach>
				  	, AJ.JOBDATE, BG.SORTKEY ASC, BG.JOBPOSITIONCODE ASC, UR.ENTERDATE ASC
			  	</when>
			</choose>
		</trim>
		<include refid="oracle.include.pagingFooter" />
	</select>

	<select id="getJobDetail"  parameterType="cmap" resultType="cmap" >
		SELECT
			AMJ.USERCODE AS "UserCode"
			, TO_CHAR(AMJ.JOBDATE, 'YYYY-MM-DD') AS "JobDate"
			, AMJ.SCHSEQ AS "SchSeq"
			, AMS.SCHNAME AS "SchName"
			, AMJ.ATTDAYSTARTTIME AS "AttDayStartTime"
			, AMJ.ATTDAYENDTIME AS "AttDayEndTime"
			, AMJ.NEXTDAYYN AS "NextDayYn"
			, AMJ.ASSYN AS "AssYn"
			, AMJ.ASSSEQ AS "AssSeq"
			, AMJ.ETC AS "Etc"
			, AMJ.WORKZONE AS "WorkZone"
			, AMJ.ALLOWRADIUS AS "AllowRadius"
			, AMJ.STARTZONE AS "StartZone"
			, AMJ.STARTADDR AS "StartAddr"
			, AMJ.STARTPOINTX AS "StartPointX"
			, AMJ.STARTPOINTY AS "StartPointY"
			, AMJ.ENDZONE AS "EndZone"
			, AMJ.ENDADDR AS "EndAddr"
			, AMJ.ENDPOINTX AS "EndPointX"
			, AMJ.ENDPOINTY AS "EndPointY"
			, NVL(TO_CHAR(AMJ.ATTDAYSTARTTIME, 'HH24MI'), '0000') AS "StartTime"
			, NVL(TO_CHAR(AMJ.ATTDAYENDTIME, 'HH24MI'), '0000') AS "EndTime"
			, AMJ.CONFMYN AS "ConfmYn"
			, AMS.SELFCOMMYN AS "SelfCommYn"
		FROM ATTEND_JOB AMJ
			LEFT JOIN ATTEND_SCHEDULE AMS ON AMJ.SCHSEQ = AMS.SCHSEQ
		WHERE AMJ.USERCODE = #{UserCode}
			AND AMJ.JOBDATE = #{JobDate}
	</select>
	
	<update id="updateJob"  parameterType="cmap" >
		{
			CALL
				BEGIN
					UPDATE ATTEND_JOB
					SET
						ATTDAYSTARTTIME = TO_DATE(TO_CHAR(JOBDATE,'YYYYMMDD')||#{StartTime},'YYYYMMDDHH24MI')
						, ATTDAYENDTIME =
							CASE
							WHEN #{NextDayYn} = 'Y' THEN TO_DATE(TO_CHAR((JOBDATE + INTERVAL '1' DAY),'YYYYMMDD')||#{EndTime},'YYYYMMDDHH24MI')
							ELSE TO_DATE(TO_CHAR(JOBDATE,'YYYYMMDD')||#{EndTime},'YYYYMMDDHH24MI')
							END
						, NEXTDAYYN    = #{NextDayYn}
						, ASSYN        = #{AssYn}
						, ASSSEQ       = #{AssSeq}
						, ETC          = #{Etc}
						, ALLOWRADIUS  = #{AllowRadius}
						, STARTZONE    = #{StartZone}
						, STARTADDR    = #{StartAddr}
						, STARTPOINTX  = #{StartPointX}
						, STARTPOINTY  = #{StartPointY}
						, ENDZONE      = #{EndZone}
						, ENDADDR      = #{EndAddr}
						, ENDPOINTX    = #{EndPointX}
						, ENDPOINTY    = #{EndPointY}
						, MODIFYERCODE = #{URCode}
						, MODIFYDATE   = SYSDATE
					WHERE USERCODE = #{UserCode}
						AND JOBDATE = #{JobDate};

					<if test='SelfCommYn != null and SelfCommYn != "Y"'>
						UPDATE ATTEND_JOB
						SET
							ATTDAYAC = FN_ATTEND_GETJOBATTDAYACTIME(ASSYN, ASSSEQ, 'N', 0, ATTDAYSTARTTIME, ATTDAYENDTIME)
						WHERE USERCODE =  #{UserCode}
							AND JOBDATE = #{JobDate};
					</if>
				END
		}
	</update>
	
	<delete id="delJob" parameterType="cmap" >
		DELETE FROM ATTEND_JOB
		WHERE USERCODE = #{UserCode}
		<choose>
			<when test ="JobDate !=null and JobDate !='' ">
				AND JOBDATE = #{JobDate}
			</when>
			<otherwise>
				AND JOBDATE BETWEEN #{StartDate} AND #{EndDate}
			</otherwise>
		</choose>
		 <if test='schConfmYn == "Y"'>
		 	AND ConfmYn = 'N'
		 </if>
	</delete>
	
	<update id="confirmJob" parameterType="cmap" >
		UPDATE ATTEND_JOB
		SET
			CONFMYN        = #{ConfmYn}
			, MODIFYERCODE = #{USERID}
			, MODIFYDATE   = SYSDATE
		WHERE USERCODE = #{UserCode}
		<choose>
			<when test ="JobDate !=null and JobDate !='' ">
				AND JOBDATE = #{JobDate}
			</when>
			<otherwise>
				AND JOBDATE BETWEEN #{StartDate} AND #{EndDate}
			</otherwise>
		</choose>
	</update>
	
	<update id="uploadScheduleJob" statementType="CALLABLE" parameterType="cmap">
	 	{CALL SP_ATTEND_UPLOADSCHEDULEJOB(#{JobUserCode}, #{JobDate}, #{StartTime}, #{EndTime}, #{NextDayYn}, #{WorkSts}, #{CompanyCode}, #{USERID}, #{RetCount, mode=OUT, jdbcType=INTEGER}, #{RetValue, mode=OUT, jdbcType=VARCHAR})}
	</update>

	<select id="getJobWorkOnDays"  parameterType="cmap" resultType= "cmap" >
		SELECT amj.USERCODE AS "UserCode",TO_CHAR(amj.JOBDATE,'YYYY-MM-DD') AS "JobDate", amj.WORKSTS AS "WorkSts", amj.CONFMYN AS "ConfmYn"
		FROM ATTEND_JOB amj
		WHERE amj.USERCODE = #{urCode}
		<if test='domainCode != null and domainCode != ""'>
			AND amj.COMPANYCODE = #{domainCode}
		</if>
		<if test='StartDate != null and StartDate != "" and EndDate != null and EndDate != ""'>
			AND amj.JOBDATE between TO_DATE(#{StartDate},'YYYYMMDD') AND TO_DATE(#{EndDate},'YYYYMMDD')
		</if>
	</select>


	<select id="getJobViewDayCnt"  parameterType="cmap" resultType= "java.lang.Long" >
		SELECT count(*)
		FROM sys_object_user ur
		JOIN sys_object_user_basegroup bg ON bg.UserCode = ur.UserCode AND bg.CompanyCode = #{CompanyCode}  AND bg.JobType = 'Origin'
		JOIN sys_object_group og          ON bg.CompanyCode = og.CompanyCode AND og.GroupType IN ('Dept','Company')  AND bg.DeptCode = og.GroupCode AND MemberOf != 'NOUSE'
		LEFT  JOIN attend_job        aj ON ur.UserCode = aj.UserCode AND aj.JobDate = #{StartDate}
		WHERE ur.IsUse = 'Y'
		AND ur.IsDisplay = 'Y'
		AND og.GroupPath LIKE CONCAT(#{DeptCode},'%')
		<if test='searchText != null and searchText != ""'>
			AND ur.DisplayName LIKE concat('%', #{searchText} ,'%')
		</if>
		<if test='SchSeq != null and SchSeq != ""'>
			AND aj.SchSeq = #{SchSeq}
		</if>
	</select>

	<select id="getJobViewDay"  parameterType="cmap" resultType= "cmap" >
		<include refid="oracle.include.pagingHeader" />
		SELECT JobDate as "JobDate"
		,UserCode as "UserCode"
		,UserName as "UserName"
		,PhotoPath as "PhotoPath"
		,DEPTNAME as "DeptName"
		,JOBLEVELNAME as "JobLevelName"
		,JOBPOSITIONNAME as "JobPositionName"
		,JOBTITLENAME as "JobTitleName"
		,AttDayAC as "AttDayAC"
		,WorkSts as "WorkSts"
		,AttDayStartTime as "AttDayStartTime"
		,AttDayEndTime as "AttDayEndTime"
		,ConfmYn as "ConfmYn"
		,SchName as "SchName"
		,VacFlag as "VacFlag"
		,WorkingSystemType as "WorkingSystemType"
		,BaseYn as "BaseYn"
		FROM (
		SELECT TO_CHAR(aj.JobDate,'YYYY-MM-DD') as JobDate
		, ur.UserCode as UserCode
		, ur.EnterDate as EnterDate
		, bg.SortKey as SortKey
		, bg.JobPositionSortKey as JobPositionSortKey
		, bg.JobLevelSortKey as JobLevelSortKey
		, bg.JobTitleSortKey as JobTitleSortKey
		, bg.JobTitlecode as JobTitlecode
		, CASE WHEN LENGTH(Fn_BaseGetDictionary_S(#{lang},ur.MultiDisplayName))>0 THEN
			Fn_BaseGetDictionary_S(#{lang},ur.MultiDisplayName)
			ELSE ur.DisplayName END as UserName
		, ur.PhotoPath as PhotoPath
		, FN_BASEGETDICTIONARY_S(#{lang}, bg.MultiDeptName) AS DEPTNAME
		, FN_BASEGETDICTIONARY_S(#{lang}, bg.MultiJobPositionName) AS JOBPOSITIONNAME
		, FN_BASEGETDICTIONARY_S(#{lang}, bg.MultiJobLevelName) AS JOBLEVELNAME
		, FN_BASEGETDICTIONARY_S(#{lang}, bg.MultiJobTitleName) AS JOBTITLENAME
		, NVL(aj.AttDayAC,0) as AttDayAC
		, aj.WorkSts as WorkSts
		, TO_CHAR(aj.AttDayStartTime,'HH24MI') as AttDayStartTime
		, TO_CHAR(aj.AttDayEndTime,'HH24MI') as AttDayEndTime
		, aj.ConfmYn as ConfmYn
		, NVL(ash.SchName,'') as SchName
		, NVL(ash.WorkingSystemType,0) as WorkingSystemType
		, NVL(ash.BaseYn, 'N') as BaseYn
		,(
			SELECT REPLACE(VV.VACFLAG,' ','')||'/'||REPLACE(VV.VACOFFFLAG,' ','')||'/'||VV.VACCNT||'/'||VV.STARTTIME||'/'||VV.ENDTIME||'/'||VV.EACHVACDAY||'/'||VV.VacAmPmVacDay
			FROM (SELECT VD.VACDATE, SUM(VD.VACDAY) AS VACCNT, VD.UR_CODE
					, NVL( SUM(VD.AmVacDay),0)||'|'||NVL( SUM(VD.PmVacDay),0)  as VacAmPmVacDay
					, LISTAGG(VD.VACFLAG, '|') WITHIN GROUP(ORDER BY VD.VACOFFFLAG) AS VACFLAG
					, LISTAGG(VD.VACOFFFLAG, '|') WITHIN GROUP(ORDER BY VD.VACOFFFLAG) AS VACOFFFLAG
					, LISTAGG(NVL(VD.STARTTIME,'00:00'), '|') WITHIN GROUP(ORDER BY VD.VACOFFFLAG) AS STARTTIME
					, LISTAGG(NVL(VD.ENDTIME,'00:00'), '|') WITHIN GROUP(ORDER BY VD.VACOFFFLAG) AS ENDTIME
					, LISTAGG(VD.VACDAY, '|') WITHIN GROUP(ORDER BY VD.VACOFFFLAG) AS EACHVACDAY
					FROM (
						select
							UR_Code, VacDate, VacOffFlag, VacFlag, VacDay, StartTime, EndTime
							,CASE WHEN VacOffFlag = 'AM' THEN
								VacDay
							END as AmVacDay
							,CASE WHEN VacOffFlag = 'PM' THEN
								VacDay
							END as PmVacDay
						FROM VM_VACATIONINFO_DAY
					) VD
					WHERE VD.VACDATE = #{StartDate}
					GROUP BY VD.VACDATE, VD.UR_CODE) VV
			WHERE VV.UR_CODE = aj.UserCode
			AND JOBDATE = VV.VACDATE
		) as VacFlag
		FROM sys_object_user ur
		JOIN sys_object_user_basegroup bg ON bg.UserCode = ur.UserCode AND bg.CompanyCode = #{CompanyCode}  AND bg.JobType = 'Origin'
		JOIN sys_object_group og          ON bg.CompanyCode = og.CompanyCode AND og.GroupType  IN ('Dept','Company') AND bg.DeptCode = og.GroupCode AND MemberOf != 'NOUSE'
		LEFT JOIN attend_job        aj ON ur.UserCode = aj.UserCode AND aj.JobDate = TO_DATE(#{StartDate},'YYYY-MM-DD')
		LEFT JOIN attend_schedule  ash ON aj.SchSeq = ash.SchSeq
		WHERE ur.IsUse = 'Y'
		AND ur.IsDisplay = 'Y'
		AND og.GroupPath LIKE CONCAT(#{DeptCode},'%')
		<if test='searchText != null and searchText != ""'>
			AND ur.DisplayName LIKE concat('%', #{searchText} ,'%')
		</if>
		<if test='SchSeq != null and SchSeq != ""'>
			AND aj.SchSeq = #{SchSeq}
		</if>
		) tbl
		<trim prefix="ORDER BY" prefixOverrides =",">
			<choose>
				<when test="orgOrders != null and orgOrders != '' ">
				  	<foreach collection="orgOrders" item="orgOrder" separator=",">
				  		<if test="orgOrder != null and orgOrder == 'JobTitle'">
				  			JobTitleSortKey ASC
				  		</if>
				  		<if test="orgOrder != null and orgOrder == 'JobLevel'">
				  			JobLevelSortKey ASC
				  		</if>
				  		<if test="orgOrder != null and orgOrder == 'JobPosition'">
				  			JobPositionSortKey ASC
				  		</if>
		  				<if test="orgOrder != null and orgOrder == 'DN'">
				  			"UserName" ASC
				  		</if>
				  	</foreach>
				  	, SortKey, JobTitlecode, EnterDate
			  	</when>
			</choose>
		</trim>
		<include refid="oracle.include.pagingFooter" />
	</select>

	<select id="getJobViewDayAvg"  parameterType="cmap" resultType= "cmap" >
		SELECT
		JobCnt as "JobCnt",
		ACAvg as "ACAvg"

		<foreach collection="Days" item="item" index="index" separator="" open="" close="">
			,Day_${item} as "Day_${item}"
		</foreach>
		FROM (
		SELECT count(JobDate)   as  JobCnt,
		<!-- 일정 데이터 없는 경우는 평수 모수 에서 빼서 평균 뽑을때
        CASE WHEN count(JobDate) > 0 THEN
            ROUND(SUM(AttDayAC)/count(JobDate),2)
        ELSE SUM(AttDayAC) END as ACAvg-->
		<!--전체 인원수 평균-->
		AVG(AttDayAC) as ACAvg
		<foreach collection="Days" item="item" index="index" separator="" open="" close="">
			,SUM(Day_${item}) as Day_${item}
		</foreach>
		FROM (
		SELECT aj.JobDate          as JobDate
		, aj.AttDayStartTime  as AttDayStartTime
		, aj.AttDayEndTime    as AttDayEndTime
		, NVL(aj.AttDayAC, 0) as AttDayAC
		<foreach collection="Days" item="item" index="index" separator="" open="" close="">
			,case when '${item}' between TO_CHAR(aj.AttDayStartTime,'HH24') AND TO_CHAR(aj.AttDayEndTime,'HH24') then 1 else 0 end as Day_${item}
		</foreach>
		FROM (select UserCode,IsUse,IsDisplay
		from sys_object_user
		WHERE IsUse = 'Y'
		AND IsDisplay = 'Y') ur
		<if test='searchText != null and searchText != ""'>
			WHERE ur.DisplayName LIKE concat('%', #{searchText} ,'%')
		</if>
		JOIN (select UserCode, CompanyCode, JobType, DeptCode from sys_object_user_basegroup) bg
		ON bg.UserCode = ur.UserCode AND bg.CompanyCode = #{CompanyCode}  AND bg.JobType = 'Origin'
		JOIN (select CompanyCode, GroupType, GroupCode, MemberOf, GroupPath from sys_object_group) og
		ON bg.CompanyCode = og.CompanyCode AND og.GroupType IN ('Dept','Company')
		AND bg.DeptCode = og.GroupCode AND MemberOf != 'NOUSE'
		AND og.GroupPath LIKE CONCAT(#{DeptCode},'%')
		LEFT JOIN (select UserCode, JobDate, AttDayAC, AttDayStartTime, AttDayEndTime
		from attend_job) aj
		ON ur.UserCode = aj.UserCode AND aj.JobDate = TO_DATE(#{StartDate},'YYYY-MM-DD')
		<if test='SchSeq != null and SchSeq != ""'>
			AND aj.SchSeq = #{SchSeq}
		</if>

		)
		)

	</select>

	<select id="getJobViewWeekCnt"  parameterType="cmap" resultType= "java.lang.Long" >
		SELECT count(ur.UserCode)
		FROM sys_object_user ur
		JOIN sys_object_user_basegroup bg ON bg.UserCode = ur.UserCode AND bg.CompanyCode = #{CompanyCode}  AND bg.JobType = 'Origin'
		JOIN sys_object_group og          ON bg.CompanyCode = og.CompanyCode AND og.GroupType IN ('Dept','Company') AND bg.DeptCode = og.GroupCode AND MemberOf != 'NOUSE'
		LEFT JOIN attend_job        aj ON ur.UserCode = aj.UserCode AND aj.JobDate = #{StartDate}
		WHERE ur.IsUse = 'Y'
		AND ur.IsDisplay = 'Y'
		AND og.GroupPath LIKE CONCAT(#{DeptCode},'%')
		<if test='searchText != null and searchText != ""'>
			AND ur.DisplayName LIKE concat('%', #{searchText} ,'%')
		</if>
		<if test='SchSeq != null and SchSeq != ""'>
			AND aj.SchSeq = #{SchSeq}
		</if>
	</select>

	<select id="getJobViewWeek"  parameterType="cmap" resultType= "cmap" >
		<include refid="oracle.include.pagingHeader" />
		SELECT aj.UserCode as "UserCode"
		, aj.UserName as "UserName"
		, aj.PhotoPath as "PhotoPath"
		, aj.DEPTNAME as "DeptName"
		, aj.JOBLEVELNAME as "JobLevelName"
		, aj.JOBPOSITIONNAME as "JobPositionName"
		, aj.JOBTITLENAME as "JobTitleName"
		, aj.JobPositionSortKey as "JobPositionSortKey"
		, aj.JobLevelSortKey as "JobLevelSortKey"
		, aj.JobTitleSortKey as "JobTitleSortKey"
		, aj.EnterDate as "EnterDate"
		,NVL(aj.AttDayAC,0) as "AttDayAC"
		<foreach collection="Weeks" item="item" index="index" separator="" open="" close="">
			, SchName_${item[1]} as "SchName_${item[1]}"
			, WorkSts_${item[1]} as "WorkSts_${item[1]}"
			, AttDay_${item[1]} as "AttDay_${item[1]}"
			, AttDayStartTime_${item[1]} as "AttDayStartTime_${item[1]}"
			, AttDayEndTime_${item[1]} as "AttDayEndTime_${item[1]}"
			, AttDayAC_${item[1]} as "AttDayAC_${item[1]}"
			, ConfmYn_${item[1]} as "ConfmYn_${item[1]}"
			, (
				SELECT TRIM(VV.VACFLAG)||':'||TRIM(VV.VACOFFFLAG)||':'||VV.VACCNT||':'||VV.AMPMVACDAY
				FROM (
					SELECT VD.VACDATE, VD.UR_CODE, SUM(VD.VACDAY) AS VACCNT
						, LISTAGG(VD.VACFLAG, '|') WITHIN GROUP(ORDER BY VD.VACOFFFLAG) AS VACFLAG
						, LISTAGG(VD.VACOFFFLAG, '|') WITHIN GROUP(ORDER BY VD.VACOFFFLAG) AS VACOFFFLAG
						, LISTAGG(NVL(VD.STARTTIME,'00:00'), '|') WITHIN GROUP(ORDER BY VD.VACOFFFLAG) AS STARTTIME
						, LISTAGG(NVL(VD.ENDTIME,'00:00'), '|') WITHIN GROUP(ORDER BY VD.VACOFFFLAG) AS ENDTIME
						, NVL( SUM(AMVACDAY),0)||'|'||NVL( SUM(PMVACDAY),0) AS AMPMVACDAY
					FROM (
						SELECT UR_CODE, VACDATE, VACOFFFLAG, VACFLAG, VACDAY, STARTTIME, ENDTIME
							,CASE WHEN VACOFFFLAG = 'AM' THEN
							VACDAY
							END AS AMVACDAY
							,CASE WHEN VACOFFFLAG = 'PM' THEN
							VACDAY
							END AS PMVACDAY
						FROM VM_VACATIONINFO_DAY) VD
					GROUP BY VD.VACDATE, VD.UR_CODE) VV
				WHERE VV.UR_CODE = aj.UserCode
					AND AttDay_${item[1]} = VV.VACDATE
			) AS "VacFlag_${item[1]}"
		</foreach>
		FROM (
		select UserCode,
		SortKey,
		JobLevelSortKey,
		JobTitlecode,
		UserName,
		PhotoPath,
		DEPTNAME,
		JOBPOSITIONNAME,
		JOBLEVELNAME,
		JOBTITLENAME,
		JobPositionSortKey,
		JobTitleSortKey,
		EnterDate,
		SUM(AttDayAC) as AttDayAC
		<foreach collection="Weeks" item="item" index="index" separator="" open="" close="">
			, ListAgg(SchName_${item[1]}, ',') WITHIN GROUP(ORDER BY UserCode) as SchName_${item[1]}
			, ListAgg(WorkSts_${item[1]}, ',') WITHIN GROUP(ORDER BY UserCode) as WorkSts_${item[1]}
			, ListAgg(AttDay_${item[1]}, ',') WITHIN GROUP(ORDER BY UserCode) as AttDay_${item[1]}
			, ListAgg(AttDayStartTime_${item[1]}, ',') WITHIN GROUP(ORDER BY UserCode) as AttDayStartTime_${item[1]}
			, ListAgg(AttDayEndTime_${item[1]}, ',') WITHIN GROUP(ORDER BY UserCode) as AttDayEndTime_${item[1]}
			, ListAgg(AttDayAC_${item[1]}, ',') WITHIN GROUP(ORDER BY UserCode) as AttDayAC_${item[1]}
			, ListAgg(ConfmYn_${item[1]}, ',') WITHIN GROUP(ORDER BY UserCode) as ConfmYn_${item[1]}
		</foreach>

		from (

		SELECT ur.UserCode
		, bg.SortKey, bg.JobLevelSortKey, bg.JobTitleSortKey, bg.JobTitlecode
		, CASE WHEN LENGTH(Fn_BaseGetDictionary_S(#{lang},ur.MultiDisplayName))>0 THEN
		Fn_BaseGetDictionary_S(#{lang},ur.MultiDisplayName)
		ELSE ur.DisplayName END as UserName
		, ur.PhotoPath
		, FN_BASEGETDICTIONARY_S(#{lang}, BG.MultiDeptName) AS DEPTNAME
		, FN_BASEGETDICTIONARY_S(#{lang}, BG.MultiJobPositionName) AS JOBPOSITIONNAME
		, FN_BASEGETDICTIONARY_S(#{lang}, BG.MultiJobLevelName) AS JOBLEVELNAME
		, FN_BASEGETDICTIONARY_S(#{lang}, BG.MultiJobTitleName) AS JOBTITLENAME
		, bg.JobPositionSortKey, ur.EnterDate
		,NVL(aj.AttDayAC,0) as  AttDayAC
		<foreach collection="Weeks" item="item" index="index" separator="" open="" close="">
			, case when MOD(to_char(aj.jobDate,'D')+5,7) = '${item[0]}' then NVL(ash.SchName,'')        END as SchName_${item[1]}
			, case when MOD(to_char(aj.jobDate,'D')+5,7) = '${item[0]}' then aj.WorkSts         END as WorkSts_${item[1]}
			, case when MOD(to_char(aj.jobDate,'D')+5,7) = '${item[0]}' then aj.jobDate         END as AttDay_${item[1]}
			, case when MOD(to_char(aj.jobDate,'D')+5,7) = '${item[0]}' then TO_CHAR(aj.AttDayStartTime,'HH24MI') END as AttDayStartTime_${item[1]}
			, case when MOD(to_char(aj.jobDate,'D')+5,7) = '${item[0]}' then TO_CHAR(aj.AttDayEndTime,'HH24MI')   END as AttDayEndTime_${item[1]}
			, case when MOD(to_char(aj.jobDate,'D')+5,7) = '${item[0]}' then aj.AttDayAC        END as AttDayAC_${item[1]}
			, case when MOD(to_char(aj.jobDate,'D')+5,7) = '${item[0]}' then aj.ConfmYn        END as ConfmYn_${item[1]}
		</foreach>
		FROM sys_object_user ur
		JOIN sys_object_user_basegroup bg ON bg.UserCode = ur.UserCode AND bg.CompanyCode = #{CompanyCode}  AND bg.JobType = 'Origin'
		JOIN sys_object_group og          ON bg.CompanyCode = og.CompanyCode AND og.GroupType IN ('Dept','Company') AND bg.DeptCode = og.GroupCode AND MemberOf != 'NOUSE'
		LEFT JOIN attend_job        aj ON ur.UserCode = aj.UserCode AND aj.JobDate BETWEEN TO_DATE(#{StartDate},'YYYY-MM-DD') AND TO_DATE(#{EndDate},'YYYY-MM-DD')
		LEFT JOIN attend_schedule  ash ON aj.SchSeq = ash.SchSeq
		WHERE ur.IsUse = 'Y'
		AND ur.IsDisplay = 'Y'
		AND og.GroupPath LIKE CONCAT(#{DeptCode},'%')
		<if test='searchText != null and searchText != ""'>
			AND ur.DisplayName LIKE concat('%', #{searchText} ,'%')
		</if>
		<if test='SchSeq != null and SchSeq != ""'>
			AND aj.SchSeq = #{SchSeq}
		</if>
		)
		GROUP BY UserCode,
		SortKey,
		JobLevelSortKey,
		JobTitlecode,
		UserName,
		PhotoPath,
		DEPTNAME,
		JOBPOSITIONNAME,
		JOBLEVELNAME,
		JOBTITLENAME,
		JobPositionSortKey,
		JobTitleSortKey,
		EnterDate
		) aj
		<trim prefix="ORDER BY" prefixOverrides =",">
			<choose>
				<when test="orgOrders != null and orgOrders != '' ">
				  	<foreach collection="orgOrders" item="orgOrder" separator=",">
				  		<if test="orgOrder != null and orgOrder == 'JobTitle'">
				  			JobTitleSortKey ASC
				  		</if>
				  		<if test="orgOrder != null and orgOrder == 'JobLevel'">
				  			JobLevelSortKey ASC
				  		</if>
				  		<if test="orgOrder != null and orgOrder == 'JobPosition'">
				  			JobPositionSortKey ASC
				  		</if>
		  				<if test="orgOrder != null and orgOrder == 'DN'">
				  			UserName ASC
				  		</if>
				  	</foreach>
				  	, SortKey, JobTitlecode, EnterDate
			  	</when>
			</choose>
		</trim>
		<include refid="oracle.include.pagingFooter" />
	</select><select id="getJobViewWeekAvg"  parameterType="cmap" resultType= "cmap" >
	SELECT COUNT(UserCode) as "JobCnt"
	, AVG(AttDayAC) as "ACAvg"
	<foreach collection="Weeks" item="item" index="index" separator="" open="" close="">
		, COUNT(AttDay_${item[1]}) as "ACCount_${item[1]}"
		, Avg(AttDayAC_${item[1]}) as "ACAvg_${item[1]}"
	</foreach>
	FROM (
	SELECT
	UserCode
	,SUM(AttDayAC) as AttDayAC
	<foreach collection="Weeks" item="item" index="index" separator="" open="" close="">
		,ListAgg(AttDay_${item[1]}, '') WITHIN GROUP(ORDER BY UserCode) as AttDay_${item[1]}
		,ListAgg(AttDayAC_${item[1]}, '') WITHIN GROUP(ORDER BY UserCode) as AttDayAC_${item[1]}
	</foreach>
	FROM (
	SELECT ur.UserCode as UserCode
	, NVL(AttDayAC,0) as AttDayAC
	<foreach collection="Weeks" item="item" index="index" separator="" open="" close="">
		, case when MOD(to_char(aj.jobDate,'D')+5,7) = '${item[0]}' then aj.jobDate         END as AttDay_${item[1]}
		, case when MOD(to_char(aj.jobDate,'D')+5,7) = '${item[0]}' then NVL(aj.AttDayAC,0) END as AttDayAC_${item[1]}
	</foreach>
	FROM sys_object_user ur
	JOIN sys_object_user_basegroup bg ON bg.UserCode = ur.UserCode AND bg.CompanyCode = #{CompanyCode}  AND bg.JobType = 'Origin'
	JOIN sys_object_group og          ON bg.CompanyCode = og.CompanyCode AND og.GroupType IN ('Dept','Company') AND bg.DeptCode = og.GroupCode AND MemberOf != 'NOUSE'
	LEFT JOIN attend_job        aj ON ur.UserCode = aj.UserCode AND aj.JobDate BETWEEN TO_DATE(#{StartDate},'YYYY-MM-DD') AND TO_DATE(#{EndDate},'YYYY-MM-DD')
	WHERE ur.IsUse = 'Y'
	AND ur.IsDisplay = 'Y'
	AND og.GroupPath LIKE CONCAT(#{DeptCode},'%')
	<if test='searchText != null and searchText != ""'>
		AND ur.DisplayName LIKE concat('%', #{searchText} ,'%')
	</if>
	<if test='SchSeq != null and SchSeq != ""'>
		AND aj.SchSeq = #{SchSeq}
	</if>
	) a
	GROUP BY UserCode
	) tbl
</select>


	<select id="getJobViewMonthCnt"  parameterType="cmap" resultType= "java.lang.Long" >
		SELECT count(ur.UserCode)
		FROM sys_object_user ur
		JOIN sys_object_user_basegroup bg ON bg.UserCode = ur.UserCode AND bg.CompanyCode = #{CompanyCode}  AND bg.JobType = 'Origin'
		JOIN sys_object_group og          ON bg.CompanyCode = og.CompanyCode AND og.GroupType IN ('Dept','Company') AND bg.DeptCode = og.GroupCode AND MemberOf != 'NOUSE'
		LEFT JOIN attend_job        aj ON ur.UserCode = aj.UserCode AND aj.JobDate = #{StartDate}
		WHERE ur.IsUse = 'Y'
		AND ur.IsDisplay = 'Y'
		AND og.GroupPath LIKE CONCAT(#{DeptCode},'%')
		<if test='searchText != null and searchText != ""'>
			AND ur.DisplayName LIKE concat('%', #{searchText} ,'%')
		</if>
		<if test='SchSeq != null and SchSeq != ""'>
			AND aj.SchSeq = #{SchSeq}
		</if>
	</select>

	<select id="getJobViewMonth"  parameterType="cmap" resultType= "cmap" >
		<include refid="oracle.include.pagingHeader" />
		SELECT UserCode as "UserCode"
		,SortKey as "SortKey"
		,JobLevelSortKey as "JobLevelSortKey"
		,JobTitlecode as "JobTitlecode"
		,JobTitleName as "JobTitleName"
		,UserName as "UserName"
		,PhotoPath as "PhotoPath"
		,DeptName as "DeptName"
		,JobLevelName as "JobLevelName"
		,JobPositionName as "JobPositionName"
		,SchSeqNum as "SchSeqNum"
		,JobPositionSortKey as "JobPositionSortKey"
		,JobTitleSortKey as "JobTitleSortKey"
		,EnterDate as "EnterDate"
		<foreach collection="WeeksNum" item="item" index="index" separator="" open="" close="">
			, ${item} as "AttDayWeeksNum_${index}"
		</foreach>
		<foreach collection="WeeksNum" item="item" index="index" separator="" open="" close="">
		</foreach>
		<foreach collection="listRangeFronToDate" item="item" index="index" separator="" open="" close="">
			<foreach item="value" index="key" collection="item.entrySet()" separator="">
				, '${key}' as "AttDayStartTime_${index}"
				, '${value}' as "AttDayEndTime_${index}"
			</foreach>
		</foreach>
		<foreach collection="WeeksNum" item="item" index="index" separator="" open="" close="">
			, NVL(AttDayAC_${index},0) as "AttDayAC_${index}"
		</foreach>
		<foreach collection="WeeksNum" item="item" index="index" separator="" open="" close="">
			, NVL(AttDayEX_${index}, 0) as "AttDayEX_${index}"
		</foreach>
		<foreach collection="WeeksNum" item="item" index="index" separator="" open="" close="">
			, NVL(AttDayHO_${index}, 0) as "AttDayHO_${index}"
		</foreach>
		<foreach collection="WeeksNum" item="item" index="index" separator="" open="" close="">
			, NVL(AttDayAC_${index}, 0)+NVL(AttDayEX_${index}, 0)+NVL(AttDayHO_${index}, 0) as "AttDayTO_${index}"
		</foreach>
		FROM(
		SELECT UserCode, SortKey, JobLevelSortKey, JobTitleSortKey, JobTitlecode, JobTitleName, UserName,
		PhotoPath, DeptName, JobLevelName, JobPositionName,
		SchSeqNum, JobPositionSortKey, EnterDate
		<foreach collection="WeeksNum" item="item" index="index" separator="" open="" close="">
			, NVL(SUM(AttDayAC_${index}),0) as AttDayAC_${index}
		</foreach>
		<foreach collection="WeeksNum" item="item" index="index" separator="" open="" close="">
			, NVL(SUM(AttDayEX_${index}), 0) as AttDayEX_${index}
		</foreach>
		<foreach collection="WeeksNum" item="item" index="index" separator="" open="" close="">
			, NVL(SUM(AttDayHO_${index}), 0) as AttDayHO_${index}
		</foreach>
		FROM (
		SELECT ur.UserCode,
		bg.SortKey,
		bg.JobLevelSortKey,
		bg.JobTitlecode,
		CASE WHEN LENGTH(Fn_BaseGetDictionary_S(#{lang}, bg.MultiJobTitleName)) > 0 THEN
		Fn_BaseGetDictionary_S(#{lang}, bg.MultiJobTitleName) ELSE bg.JobTitleName END as JobTitleName,
		CASE WHEN LENGTH(Fn_BaseGetDictionary_S(#{lang}, ur.MultiDisplayName)) > 0 THEN
		Fn_BaseGetDictionary_S(#{lang}, ur.MultiDisplayName) ELSE ur.DisplayName END as UserName,
		CASE WHEN LENGTH(Fn_BaseGetDictionary_S(#{lang}, bg.MultiDeptName)) > 0 THEN
		Fn_BaseGetDictionary_S(#{lang}, bg.MultiDeptName) ELSE bg.DeptName END as DeptName,
		CASE WHEN LENGTH(Fn_BaseGetDictionary_S(#{lang}, bg.MultiJobLevelName)) > 0 THEN
		Fn_BaseGetDictionary_S(#{lang}, bg.MultiJobLevelName) ELSE  bg.JobLevelName END as JobLevelName,
		CASE WHEN LENGTH(Fn_BaseGetDictionary_S(#{lang}, bg.MultiJobPositionName)) > 0 THEN
		Fn_BaseGetDictionary_S(#{lang}, bg.MultiJobPositionName) ELSE bg.JobPositionName END as JobPositionName,
		aj.jobDate,
		aj.SchSeqNum,
		bg.JobPositionSortKey,
		bg.JobTitleSortKey,
		ur.PhotoPath,
		ur.EnterDate
		<foreach collection="listRangeFronToDate" item="item" index="index" separator="" open="" close="">
			<foreach item="value" index="key" collection="item.entrySet()" separator="">
				, case when aj.jobDate between TO_DATE('${key}','YYYYMMDD') and TO_DATE('${value}','YYYYMMDD') and (aj.WorkSts = 'ON' or aj.WorkSts = 'HOL') then aj.AttDayAC else 0 END as AttDayAC_${index}
			</foreach>
		</foreach>
		<foreach collection="listRangeFronToDate" item="item" index="index" separator="" open="" close="">
			<foreach item="value" index="key" collection="item.entrySet()" separator="">
				, case when aj.jobDate between TO_DATE('${key}','YYYYMMDD') and TO_DATE('${value}','YYYYMMDD') and aj.WorkSts = 'O' then aj.AttDayEH else 0 END as AttDayEX_${index}
			</foreach>
		</foreach>
		<foreach collection="listRangeFronToDate" item="item" index="index" separator="" open="" close="">
			<foreach item="value" index="key" collection="item.entrySet()" separator="">
				, case when aj.jobDate between TO_DATE('${key}','YYYYMMDD') and TO_DATE('${value}','YYYYMMDD') and aj.WorkSts = 'H' then aj.AttDayEH else 0 END as AttDayHO_${index}
			</foreach>
		</foreach>
		FROM sys_object_user ur
		JOIN sys_object_user_basegroup bg
		ON bg.UserCode = ur.UserCode AND bg.CompanyCode = #{CompanyCode} AND bg.JobType = 'Origin'
		JOIN sys_object_group og
		ON bg.CompanyCode = og.CompanyCode AND og.GroupType IN ('Dept', 'Company') AND
		bg.DeptCode = og.GroupCode AND MemberOf != 'NOUSE'
		LEFT JOIN ( select UserCode, jobDate, SchSeqNum, WorkSts, sum(AttDayAC) as AttDayAC,  sum(AttDayEH) as AttDayEH
		from (select UserCode,
		SchSeq as SchSeqNum,
		WorkSts,
		jobDate,
		AttDayAC,
		0 as AttDayEH
		from attend_job
		where JobDate BETWEEN TO_DATE(#{StartDate},'YYYY-MM-DD') AND TO_DATE(#{EndDate},'YYYY-MM-DD')
		UNION ALL
		select UserCode,
		ExHoSeq as SchSeq,
		JobStsName as WorkSts,
		jobDate,
		0 as AttDayAC,
		TO_NUMBER(SUBSTR(WorkTime, 1, 2)) * 60 + TO_NUMBER(SUBSTR(WorkTime, 3, 2)) as AttDayEH
		from attend_extensionholiday
		where JobDate BETWEEN TO_DATE(#{StartDate},'YYYY-MM-DD') AND TO_DATE(#{EndDate},'YYYY-MM-DD')
		and CompanyCode = #{CompanyCode}
		and JobStsName in ('H','O')
		and ApprovalSts = 'Y'
		order by UserCode, JobDate asc
		) a
		group by a.UserCode, a.JobDate, a.WorkSts, a.SchSeqNum
		) aj
		ON ur.UserCode = aj.UserCode
		WHERE ur.IsUse = 'Y'
		AND ur.IsDisplay = 'Y'
		AND og.GroupPath LIKE CONCAT(#{DeptCode}, '%')
		) tb
		GROUP BY UserCode,
		SortKey,
		JobLevelSortKey,
		JobTitlecode,
		JobTitleName,
		UserName,
		PhotoPath,
		DeptName,
		JobLevelName,
		JobPositionName,
		SchSeqNum,
		JobPositionSortKey,
		JobTitleSortKey,
		EnterDate
		) tbl
		WHERE 1=1
		<if test='searchText != null and searchText != ""'>
			AND (UserName like concat('%', #{searchText} ,'%')
			or DeptName like concat('%', #{searchText} ,'%')
			or JobPositionName like concat('%', #{searchText} ,'%'))
		</if>
		<if test='weeklyWorkValue != null and weeklyWorkValue != "" and weeklyWorkValue != "0"'>
			<if test='weeklyWorkType != null and weeklyWorkType != "" and weeklyWorkType == "over"'>
				AND (
				<foreach collection="WeeksNum" item="item" index="index" separator="or" open="" close="">
					AttDayTO_${index} <![CDATA[>]]> #{weeklyWorkValue}*60
				</foreach>
				)
			</if>
			<if test='weeklyWorkType != null and weeklyWorkType != "" and weeklyWorkType == "under"'>
				AND (
				<foreach collection="WeeksNum" item="item" index="index" separator="and" open="" close="">
					AttDayTO_${index} <![CDATA[<=]]> #{weeklyWorkValue}*60
				</foreach>
				)
			</if>
		</if>
		<if test='SchSeq != null and SchSeq != ""'>
			AND SchSeqNum = #{SchSeq}
		</if>
		<trim prefix="ORDER BY" prefixOverrides =",">
			<choose>
				<when test="orgOrders != null and orgOrders != '' ">
				  	<foreach collection="orgOrders" item="orgOrder" separator=",">
				  		<if test="orgOrder != null and orgOrder == 'JobTitle'">
				  			JobTitleSortKey ASC
				  		</if>
				  		<if test="orgOrder != null and orgOrder == 'JobLevel'">
				  			JobLevelSortKey ASC
				  		</if>
				  		<if test="orgOrder != null and orgOrder == 'JobPosition'">
				  			JobPositionSortKey ASC
				  		</if>
		  				<if test="orgOrder != null and orgOrder == 'DN'">
				  			UserName ASC
				  		</if>
				  	</foreach>
				  	, SortKey, JobTitlecode, EnterDate
			  	</when>
			</choose>
		</trim>
		<include refid="oracle.include.pagingFooter" />

	</select>

	<select id="getJobViewMonthAvg"  parameterType="cmap" resultType= "cmap" >
		SELECT COUNT(UserCode) JobCnt
		, AVG(AttDayAC) ACAvg
		<foreach collection="Weeks" item="item" index="index" separator="" open="" close="">
			, COUNT(AttDay_${item[1]}) ACCount_${item[1]}
			, Avg(AttDayAC_${item[1]}) ACAvg_${item[1]}
		</foreach>
		FROM (
		SELECT ur.UserCode
		, ur.DisplayName UserName
		, IFNULL(SUM(AttDayAC),0)  AttDayAC
		<foreach collection="Weeks" item="item" index="index" separator="" open="" close="">
			, MAX(case when WEEKDAY(aj.jobDate) = '${item[0]}' then aj.WorkSts         END) WorkSts_${item[1]}
			, MAX(case when WEEKDAY(aj.jobDate) = '${item[0]}' then aj.jobDate         END) AttDay_${item[1]}
			, MAX(case when WEEKDAY(aj.jobDate) = '${item[0]}' then date_format(aj.AttDayStartTime,'%H%i') END) AttDayStartTime_${item[1]}
			, MAX(case when WEEKDAY(aj.jobDate) = '${item[0]}' then date_format(aj.AttDayEndTime,'%H%i')   END) AttDayEndTime_${item[1]}
			, MAX(case when WEEKDAY(aj.jobDate) = '${item[0]}' then aj.AttDayAC   END) AttDayAC_${item[1]}
		</foreach>
		FROM sys_object_user ur
		JOIN sys_object_user_basegroup bg ON bg.UserCode = ur.UserCode AND bg.CompanyCode = #{CompanyCode}  AND bg.JobType = 'Origin'
		JOIN sys_object_group og          ON bg.CompanyCode = og.CompanyCode AND og.GroupType IN ('Dept','Company') AND bg.DeptCode = og.GroupCode AND MemberOf != 'NOUSE'
		LEFT JOIN attend_job        aj ON ur.UserCode = aj.UserCode AND aj.JobDate BETWEEN #{StartDate} AND #{EndDate}
		WHERE ur.IsUse = 'Y'
		AND ur.IsDisplay = 'Y'
		AND og.GroupPath LIKE CONCAT(#{DeptCode},'%')
		<if test='searchText != null and searchText != ""'>
			AND ur.DisplayName LIKE concat('%', #{searchText} ,'%')
		</if>
		<if test='SchSeq != null and SchSeq != ""'>
			AND aj.SchSeq = #{SchSeq}
		</if>
		GROUP BY ur.UserCode     ) a
	</select>


	<select id="getJobViewMonthlyInfo"  parameterType="cmap" resultType= "cmap" >
		SELECT
		TO_CHAR(StartDate,'YYYY-MM-DD') as "StartDate"
		,StartWeekNum as "StartWeekNum"
		,TO_CHAR(EndDate,'YYYY-MM-DD') as "EndDate"
		,EndWeekNum as "EndWeekNum"
		,to_number(to_char(to_date(CONCAT(#{ThisYear},'1231'),'YYYYMMDD'),'WW')-1) as "ThisYearWeeksNum"
		,to_number(to_char(to_date(CONCAT(#{LastYear},'1231'),'YYYYMMDD'),'WW')-1) as "LastYearWeeksNum"
		FROM (
		select  fn_attend_monthlyweekdate('S', #{StartDate}, #{DomainCode}) as StartDate,
		fn_attend_monthlyweeknum('S', #{StartDate}, #{DomainCode}) as StartWeekNum,
		fn_attend_monthlyweekdate('E', #{EndDate}, #{DomainCode}) as EndDate,
		fn_attend_monthlyweeknum('E', #{EndDate}, #{DomainCode}) as EndWeekNum
		from dual
		) a
	</select>

</mapper>

