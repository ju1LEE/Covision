<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="collab.task">

	<update id="saveProjectWorkLoad" parameterType="cmap">
	/* collab.task.saveProjectWorkLoad */
	 	{CALL sp_collab_saveWorkLoad(#{CompanyCode}, #{taskSeq}, #{saturDay}, #{sunDay}, #{holiDay}, #{USERID})}
	</update>
	
	<insert id="addTask"   parameterType="cmap" useGeneratedKeys="true">
	/* collab.task.addTask */
		INSERT INTO collab_task
					( TaskSeq, taskName , Label, ImpLevel, ParentKey, TopParentKey, Workorder, StartDate,EndDate, CloseDate, TaskStatus, ProgRate, Remark, ObjectType, ObjectID, IsMile, RegisterCode, RegisteDate, ModifierCode, ModifyDate)
		VALUES		( COLLAB_TASK_SEQ.NEXTVAL, #{taskName}, #{label}, #{impLevel}, #{parentKey}, #{topParentKey}, #{workOrder}, #{startDate}, #{endDate}, case when  #{taskStatus} = 'C' then TO_CHAR(SYSDATE,'YYYYMMDD') else TO_CHAR(TO_DATE(#{endDate}),'YYYYMMDD') end, #{taskStatus}, #{progRate}, #{remark}, #{objectType}, #{objectID}, #{isMile}, #{USERID}, SYSDATE, #{USERID}, SYSDATE)
	   <selectKey keyProperty="TaskSeq" resultType="Integer" order="AFTER">
		    SELECT COLLAB_TASK_SEQ.CURRVAL FROM DUAL
		</selectKey>
	</insert>
	
	<insert id="addTaskBySchedule"   parameterType="cmap" useGeneratedKeys="true">
	/* collab.task.addTaskBySchedule */
		INSERT INTO collab_task
					( TaskSeq, taskName , Label, ParentKey, TopParentKey, Workorder, StartDate,EndDate, CloseDate, TaskStatus, ProgRate, Remark, ObjectType, ObjectID, RegisterCode, RegisteDate, ModifierCode, ModifyDate)
			( SELECT  COLLAB_TASK_SEQ.NEXTVAL TaskSeq, #{taskName}, #{label}, #{parentKey}, #{topParentKey}, #{workOrder}, replace(StartDate,'-',''), replace(EndDate,'-',''), replace(EndDate,'-',''), #{taskStatus}, #{progRate}, #{remark}, #{objectType}, #{objectID},#{USERID}, SYSDATE, #{USERID}, SYSDATE
			   FROM event_date
			  WHERE eventid= #{objectID}
			   )
	   <selectKey keyProperty="TaskSeq" resultType="Integer" order="AFTER">
		    SELECT COLLAB_TASK_SEQ.CURRVAL FROM DUAL
		</selectKey>
	</insert>
	
	<insert id="addTaskBySurvey"   parameterType="cmap" useGeneratedKeys="true">
	/* collab.task.addTaskBySurvey */
		INSERT INTO collab_task (TaskSeq, taskName, Label, ParentKey, TopParentKey, Workorder, StartDate, EndDate, CloseDate, TaskStatus, ProgRate, Remark, ObjectType, ObjectID, RegisterCode, RegisteDate, ModifierCode, ModifyDate)
		(
			SELECT  COLLAB_TASK_SEQ.NEXTVAL TaskSeq, #{taskName}, #{label}, #{parentKey}, #{topParentKey}, #{workOrder}, #{startDate}, #{endDate}, #{endDate}, #{taskStatus}, #{progRate}, #{remark}, #{objectType}, #{objectID}, #{USERID}, SYSDATE, #{USERID}, SYSDATE
			FROM survey
			WHERE SurveyID = #{objectID}
		)
		<selectKey keyProperty="TaskSeq" resultType="Integer" order="AFTER">
			SELECT COLLAB_TASK_SEQ.CURRVAL FROM DUAL
		</selectKey>
	</insert>
	
	<insert id="addTaskMap"   parameterType="cmap">
	/* collab.task.addTaskMap */
		MERGE INTO COLLAB_TASK_MAP
		USING DUAL
			ON (PRJSEQ = #{prjSeq} AND PRJTYPE = #{prjType} AND TASKSEQ = #{taskSeq})
		WHEN MATCHED THEN
		UPDATE SET
			RegisterCode = #{USERID}
			, RegisteDate = SYSDATE
		WHEN NOT MATCHED THEN
			INSERT (prjSeq, prjType, taskSeq, sectionSeq, RegisterCode, RegisteDate)
			VALUES (#{prjSeq}, #{prjType}, #{taskSeq}, #{sectionSeq}, #{USERID}, SYSDATE) 
	</insert>

	<insert id="addTaskMapBySchedule"   parameterType="cmap">
	/* collab.task.addTaskMapBySchedule */
		MERGE INTO COLLAB_TASK_MAP M
		USING (SELECT taskSeq FROM COLLAB_TASK WHERE ObjectType = #{objectType} AND ObjectID = #{objectID}) b
			ON (M.TASKSEQ = #{taskSeq} AND M.PRJTYPE = #{prjType} AND M.TASKSEQ = b.taskSeq )
		WHEN MATCHED THEN
		UPDATE SET
			M.RegisterCode= #{USERID}
			, M.RegisteDate= SYSDATE
		WHEN NOT MATCHED THEN
			INSERT (M.prjSeq, M.prjType, M.taskSeq, M.sectionSeq, M.RegisterCode, M.RegisteDate)
			VALUES (#{prjSeq}, #{prjType}, b.taskSeq, #{sectionSeq}, #{USERID}, SYSDATE) 
	</insert>

	<insert id="addTaskMapBySurvey"   parameterType="cmap">
	/* collab.task.addTaskMapBySurvey */
		MERGE INTO COLLAB_TASK_MAP M
		USING (SELECT taskSeq FROM COLLAB_TASK 
		--INNER JOIN COLLAB_PROJECT 
		WHERE ObjectType = #{objectType} AND ObjectID = #{objectID}) b
			ON (M.TASKSEQ = #{taskSeq} AND M.PRJTYPE = #{prjType} AND M.TASKSEQ = b.taskSeq )
		WHEN MATCHED THEN
		UPDATE SET
			M.RegisterCode= #{USERID}
			, M.RegisteDate= SYSDATE
		WHEN NOT MATCHED THEN
			INSERT (M.prjSeq, M.prjType, M.taskSeq	,M.sectionSeq	,M.RegisterCode,M.RegisteDate)
			VALUES (#{prjSeq}, #{prjType}, b.taskSeq, #{sectionSeq}, #{USERID}, SYSDATE)
	</insert>
	
	<delete id="deleteTaskMap"   parameterType="cmap">
	/* collab.task.deleteTaskMap */
		DELETE FROM collab_task_map
		WHERE taskSeq = #{taskSeq}
		 <if test='prjSeq != null and prjSeq !=""'>
		 	AND prjSeq = #{prjSeq}
		 	AND prjType = #{prjType}
		 </if>
	</delete>
	
	<update id="changeProjectTaskSection"   parameterType="cmap"  >
	/* collab.task.changeProjectTaskSection */
		UPDATE collab_task_map 
		   SET sectionSeq = #{sectionSeq}
		 WHERE prjSeq =  #{prjSeq}
		   AND prjType = #{prjType}
		   AND taskSeq =  #{taskSeq}		
	</update>

	<update id="changeProjectTaskOrder"   parameterType="cmap"  >
	/* collab.task.changeProjectTaskOrder */
	BEGIN
		<foreach collection="taskList" item="lst" open="" close=";" separator=";">
			UPDATE collab_task_map 
			   SET Workorder= #{lst.workOrder}
			 WHERE taskSeq =  #{lst.taskSeq}
			   AND prjType=  #{prjType}
			   AND prjSeq=  #{prjSeq}
		</foreach>	  
	END; 
	</update>

	<update id="changeProjectTaskTodoOrder"   parameterType="cmap"  >
	/* collab.task.changeProjectTaskTodoOrder */
	BEGIN
		<foreach collection="taskList" item="lst" open="" close=";" separator=";">
			UPDATE collab_task_member 
			   SET Todoorder= #{lst.todoOrder}
			 WHERE taskSeq =  #{lst.taskSeq}
			   AND userCode=  #{userCode}
		</foreach>	
	END;   
	</update>

	<update id="changeProjectTaskStatus"   parameterType="cmap"  >
	/* collab.task.changeProjectTaskStatus */
		UPDATE COLLAB_TASK
		   SET TaskStatus = #{taskStatus}
		   		<if test='taskStatus == "C"'>
		   		,ProgRate= 100
		   		,closeDate = TO_CHAR(SYSDATE ,'YYYYMMDD') 
		   		,StartDate = case when StartDate is null then TO_CHAR(SYSDATE ,'YYYYMMDD') else StartDate end
		   		,EndDate   = case when EndDate is null  then TO_CHAR(SYSDATE ,'YYYYMMDD') else EndDate end
		   		</if>
		   		,ModifyDate = SYSDATE
		   		,ModifierCode = #{USERID}
		 WHERE taskSeq =  #{taskSeq}		
	</update>
	
	<update id="changeProjectTaskDate"   parameterType="cmap"  >
	/* collab.task.changeProjectTaskDate */
		UPDATE COLLAB_TASK
		   SET StartDate = #{startDate}
		   		,EndDate   = #{endDate}
		   		<if test="taskStatus != null and taskStatus != ''">
			   		,TaskStatus = #{taskStatus} 
		   		</if>
		   		,ModifyDate = SYSDATE
		   		,ModifierCode = #{USERID}
		 WHERE taskSeq =  #{taskSeq}		
	</update>
	
	<insert id="saveTask"   parameterType="cmap">
	/* collab.task.saveTask */
		UPDATE collab_task
		   SET taskName =  #{taskName}
		       ,StartDate=  #{startDate}
               ,EndDate=  #{endDate}
               ,TaskStatus=  #{taskStatus}
               ,progRate = #{progRate}
               ,Remark=  #{remark}
               ,Label=  #{label}
               <choose>
               		<when test="impLevel != null and impLevel != ''">
            	,ImpLevel = #{impLevel}
               		</when>
               </choose>
               ,ModifierCode=  #{USERID}
               ,ModifyDate=  SYSDATE
		 WHERE taskSeq =  #{taskSeq}
	</insert>

	<update id="updateTaskStatus" parameterType="cmap">
	/* collab.task.updateTaskStatus */
		UPDATE COLLAB_TASK
		SET TaskStatus = #{taskStatus}
			,progRate = #{progRate}
			,ModifierCode=  #{USERID}
			,ModifyDate=  SYSDATE
		WHERE taskSeq =  #{taskSeq}
	</update>
	
	<select id="getTask"   parameterType="cmap" resultType="cmap">
	<![CDATA[
	/* collab.task.getTask */
		SELECT t.TASKSEQ as "TaskSeq"
				,t.PTASKSEQ as "PTaskSeq"
				,t.TASKNAME as "TaskName"
				,t.LABEL as "Label"
				,t.ImpLevel as "ImpLevel"
				,t.PARENTKEY as "ParentKey"
				,t.TOPPARENTKEY as "TopParentKey"
				,t.WORKORDER as "Workorder"
				,t.STARTDATE as "StartDate"
				,t.ENDDATE as "EndDate"
				,t.TASKSTATUS as "TaskStatus"
				,t.PROGRATE as "ProgRate"
				,t.CLOSEDATE as "CloseDate"
				,t.OBJECTTYPE as "ObjectType"
				,t.OBJECTID as "ObjectID"
				,t.IMAGEPATH as "ImagePath"
				,t.REGISTERCODE as "RegisterCode"
				,t.REGISTEDATE as "RegisteDate"
				,t.MODIFIERCODE as "ModifierCode"
				,t.MODIFYDATE as "ModifyDate"
				,t.REMARK as "Remark"
				,t.IsMile as "IsMile"
				, Fn_GetBaseCodeName('0', 'CollabStatus', t.TaskStatus) "TaskStatusName"
				, NVL((SELECT COUNT(*) FROM COLLAB_TASK_FAVORITE f WHERE t.taskseq = f.taskSeq AND UserCode = #{USERID}),0) as "IsFav"
				, NVL((SELECT SectionSeq FROM collab_task_map m WHERE t.taskseq = m.taskSeq AND prjSeq = #{prjSeq} AND prjType = #{prjType}),0) "SectionSeq"
				, par.TaskSeq "ParTaskSeq"
				, par.TaskName "ParTaskName"
				, par.TaskStatus "ParTaskStatus"
				, case when (t.EndDate is null OR TO_DATE(t.EndDate,'YYYYMMDD') <  SYSDATE) AND t.TaskStatus NOT IN ('C','H')  then 'Y' end AS "IsDelay"
		  FROM COLLAB_TASK t
 	 LEFT JOIN collab_task par on par.taskseq= t.parentKey 
		 WHERE t.taskSeq = #{taskSeq}
		 ]]>
	</select>
	
	<select id="getSubTask"   parameterType="cmap" resultType="cmap">
	/* collab.task.getSubTask */
		SELECT t.TASKSEQ as "TaskSeq"
				,t.PTASKSEQ as "PTaskSeq"
				,t.TASKNAME as "TaskName"
				,t.LABEL as "Label"
				,t.PARENTKEY as "ParentKey"
				,t.TOPPARENTKEY as "TopParentKey"
				,t.WORKORDER as "Workorder"
				,t.STARTDATE as "StartDate"
				,t.ENDDATE as "EndDate"
				,t.TASKSTATUS as "TaskStatus"
				,t.PROGRATE as "ProgRate"
				,t.CLOSEDATE as "CloseDate"
				,t.OBJECTTYPE as "ObjectType"
				,t.OBJECTID as "ObjectID"
				,t.IMAGEPATH as "ImagePath"
				,t.REGISTERCODE as "RegisterCode"
				,t.REGISTEDATE as "RegisteDate"
				,t.MODIFIERCODE as "ModifierCode"
				,t.MODIFYDATE as "ModifyDate"
				,t.REMARK as "Remark"
				,(SELECT nvl(COUNT(*),0) FROM collab_task WHERE ParentKey = t.TaskSeq AND ParentKey > 0) AS "PCnt"
				,(SELECT 
						LISTAGG(ctm.UserCode || '^' || Fn_BaseGetDictionary_S(#{lang},sou.MultiDisplayName) || '^' || sou.PhotoPath || '^' || bg.DeptName, '|') WITHIN GROUP(ORDER BY ctm.UserCode)
					FROM COLLAB_TASK_MEMBER ctm 
				   JOIN SYS_OBJECT_USER sou on ctm.userCode = sou.userCode
			       JOIN SYS_OBJECT_USER_BASEGROUP bg ON bg.UserCode = sou.UserCode AND bg.CompanyCode = #{CompanyCode}  AND bg.JobType = 'Origin'
					WHERE ctm.taskSeq = t.TaskSeq) as "tmUser"
		  FROM collab_task t
		 WHERE parentKey = #{taskSeq}
	</select>

	<delete id="deleteTask"  parameterType="cmap">
	/* collab.task.deleteTask */
		DELETE FROM COLLAB_TASK WHERE taskSeq =  #{taskSeq}
	</delete>
	<delete id="deleteSubTask"  parameterType="cmap">
	/* collab.task.deleteSubTask */
		DELETE FROM  COLLAB_TASK 
		 WHERE taskseq IN (
				WITH cte (taskSeq, taskName, parentKey) as
				(
				 select     taskSeq, taskName, parentKey
				 from       COLLAB_TASK
				 where      parentKey = #{taskSeq}
				 union all
				 select     r.taskSeq, r.taskName, r.parentKey
				 from       COLLAB_TASK r
				 inner join cte
				         on r.parentKey = cte.taskSeq
				)
			SELECT taskSeq from cte)
	</delete>
	
	<select id="getTaskUserForm"   parameterType="cmap" resultType="cmap">
	/* collab.task.getTaskUserForm */
		SELECT OptionTitle as "OptionTitle"
				, OptionType as "OptionType"
				, OptionVal as "OptionVal"
		  FROM COLLAB_TASK_USERFORM 
		 WHERE taskSeq =  #{taskSeq}
	</select>
	
	<select id="getTaskMap"   parameterType="cmap" resultType="cmap">
	/* collab.task.getTaskMap */
		SELECT CASE WHEN tm.PrjType = 'P' THEN cp.PrjName 
				ELSE FN_BASEGETDICTIONARY_S(#{lang}, MultiDisplayName) END as "PrjName" 
				, cs.SectionSeq as "SectionSeq"
				, cs.SectionName as "SectionName"
				, tm.PrjSeq as "PrjSeq"
				, tm.PrjType as "PrjType"
				, cp.PrjColor as "PrjColor"
		  FROM COLLAB_TASK_MAP  tm
	 LEFT JOIN COLLAB_PROJECT cp ON  tm.PrjType = 'P' AND cp.PrjSeq = tm.PrjSeq 
	 LEFT JOIN SYS_OBJECT_GROUP sb ON  tm.PrjType != 'P' AND tm.PrjSeq = sb.GroupID
	 LEFT JOIN COLLAB_SECTION cs ON  tm.PrjSeq = cs.PrjSeq and tm.PrjType = cs.PrjType AND  tm.SectionSeq = cs.SectionSeq
		 WHERE tm.taskSeq =  #{taskSeq}
	</select>

	<select id="getTaskUserFormCnt"   parameterType="cmap" resultType="int">
	/* collab.task.getTaskUserForm */
		SELECT count(*)
		  FROM collab_task_userform 
		 WHERE taskSeq =  #{taskSeq}
	</select>

	<select id="getTaskMapCnt"   parameterType="cmap" resultType="int">
	/* collab.task.getTaskMapCnt */
		SELECT count(*)
		  FROM COLLAB_TASK_MAP 
		 WHERE taskSeq =  #{taskSeq}
	</select>
	
	<select id="getTaskLink"   parameterType="cmap" resultType="cmap">
	/* collab.task.getTaskLink */
		SELECT 'AF' "LinkType", af.LinkTaskSeq "LinkTaskSeq", t.TaskName "TaskName", t.TaskStatus "TaskStatus"
				, Fn_GetBaseCodeName('0', 'CollabStatus', t.TaskStatus) "TaskStatusName"
				, (SELECT TaskName FROM collab_task WHERE TaskSeq = af.LinkTaskSeq) AS "LinkTaskName"
		  FROM collab_task_link aF
		  JOIN collab_task t ON af.LinkTaskSeq = t.TaskSeq
		 WHERE af.taskSeq =  #{taskSeq}
		 UNION  
		SELECT 'BF' LinkType, bf.TaskSeq, t.TaskName, t.TaskStatus
				, Fn_GetBaseCodeName('0', 'CollabStatus', t.TaskStatus) TaskStatusName
				, (SELECT TaskName FROM collab_task WHERE TaskSeq = bf.TaskSeq) AS "LinkTaskName"
		  FROM collab_task_link bf
		  JOIN collab_task t ON bf.taskSeq = t.TaskSeq
		 WHERE bf.linktaskseq =  #{taskSeq}
	</select>
	
	
	
	<insert id="addTaskUserForm"   parameterType="cmap">
	/* collab.task.addTaskUserForm */
	BEGIN
		<foreach collection="userFormList" item="user" open="" close=";" separator=";">
		INSERT INTO COLLAB_TASK_USERFORM
					(TASKUSERFORMSEQ, TaskSeq, optionTitle, optionType, optionVal, RegisterCode, RegisteDate, ModifierCode, ModifyDate )
			 VALUES (COLLAB_TASK_USERFORM_SEQ.NEXTVAL, #{taskSeq}, #{user.optionTitle}, #{user.optionType}, #{user.optionVal}, #{USERID}, SYSDATE, #{USERID}, SYSDATE)
		</foreach>
	END ;	
	</insert>

	<delete id="deleteTaskUserForm"   parameterType="cmap">
	/* collab.task.deleteTaskUserForm */
		DELETE FROM COLLAB_TASK_USERFORM WHERE taskSeq =  #{taskSeq}
	</delete>
	
	<select id="getTaskMember"   parameterType="cmap" resultType="cmap">
	/* collab.task.getTaskMember */
		SELECT cpm.UserCode as "UserCode"
				,Fn_BaseGetDictionary_S(#{lang},soub.MultiDeptName) as "DeptName"
				,Fn_BaseGetDictionary_S(#{lang},soub.MultiJobPositionName) as "JobPositionName"
				,Fn_BaseGetDictionary_S(#{lang},sou.MultiDisplayName) as "DisplayName"
				,sou.PhotoPath as "PhotoPath"
		  FROM COLLAB_TASK_MEMBER cpm 
		  JOIN SYS_OBJECT_USER sou on cpm.userCode = sou.userCode
		  JOIN SYS_OBJECT_USER_BASEGROUP soub		ON sou.UserCode = soub.UserCode  AND soub.JobType ='Origin'
		 WHERE cpm.taskSeq =  #{taskSeq}
	</select>
	
	<select id="getTaskMemberCnt"   parameterType="cmap"  resultType="java.lang.Long">
		SELECT count(*)
		  FROM collab_task_member cpm 
		  JOIN sys_object_user sou on cpm.userCode = sou.userCode
		  JOIN sys_object_user_basegroup soub		ON sou.UserCode = soub.UserCode  AND soub.JobType ='Origin'
		 WHERE cpm.taskSeq =  #{taskSeq}
	</select>
	
	<insert id="addTaskMember"   parameterType="cmap">
	/* collab.task.addTaskMember */
	BEGIN
		<foreach collection="memberList" item="user" open="" close=";" separator=";">
		
		MERGE INTO COLLAB_TASK_MEMBER
		USING DUAL
			ON (TASKSEQ = #{taskSeq} AND USERCODE = #{user.userCode})
		WHEN MATCHED THEN
		UPDATE SET
			RegisterCode= #{USERID}
			, RegisteDate= SYSDATE
		WHEN NOT MATCHED THEN
			INSERT (taskSeq, UserCode, RegisterCode, RegisteDate)
			VALUES ( #{taskSeq}, #{user.userCode}, #{USERID}, SYSDATE )
		
		</foreach>  
	END;
	</insert>

	<insert id="addTaskMemberBySchedule"   parameterType="cmap">
	/* collab.task.addTaskMemberBySchedule */
	BEGIN
		MERGE INTO COLLAB_TASK_MEMBER M
		USING (SELECT t.taskSeq, a.AttenderCode 
							FROM COLLAB_TASK t 
							JOIN EVENT_ATTENDANT a on t.objectid = a.eventid 
							WHERE ObjectType = #{objectType}
					        	AND ObjectID = #{objectID}
							) b
			ON (M.TASKSEQ = b.taskSeq AND M.USERCODE = b.AttenderCode)
		WHEN MATCHED THEN
		UPDATE SET
			M.RegisterCode= #{USERID}
			, M.RegisteDate= SYSDATE
		WHEN NOT MATCHED THEN
			INSERT (M.taskSeq, M.UserCode, M.RegisterCode, M.RegisteDate)
			VALUES (b.taskSeq, b.AttenderCode, #{USERID}, SYSDATE);
		
		MERGE INTO COLLAB_TASK_MEMBER M
		USING (SELECT taskSeq FROM COLLAB_TASK WHERE ObjectType = #{objectType} AND ObjectID = #{objectID}) b
			ON (M.TASKSEQ =  b.taskSeq AND M.USERCODE = #{USERID} )
		WHEN MATCHED THEN
		UPDATE SET
			M.RegisterCode= #{USERID}
			, M.RegisteDate= SYSDATE
		WHEN NOT MATCHED THEN
			INSERT (M.taskSeq, M.UserCode, M.RegisterCode, M.RegisteDate)
			VALUES (b.taskSeq, #{USERID}, #{USERID}, SYSDATE);
	END;
	</insert>

	<insert id="addTaskMemberBySurvey"   parameterType="cmap">
	/* collab.task.addTaskMemberBySurvey */
	BEGIN
		MERGE INTO COLLAB_TASK_MEMBER M
		USING (SELECT t.taskSeq, a.TargetCode
						FROM COLLAB_TASK t
						JOIN SURVEY_TARGET_RESPONDENT a ON t.ObjectID = a.SurveyID
						WHERE t.ObjectType = #{objectType}
							AND t.ObjectID = #{objectID}
							AND a.TargetType = 'UR') b
			ON (M.TASKSEQ = b.taskSeq AND M.USERCODE = b.TargetCode)
		WHEN MATCHED THEN
			UPDATE SET
				M.RegisterCode= #{USERID}
				, M.RegisteDate= SYSDATE
		WHEN NOT MATCHED THEN
			INSERT (M.taskSeq, M.userCode, M.RegisterCode, M.RegisteDate)
			VALUES (
						b.taskSeq, b.TargetCode, #{USERID}, SYSDATE
					);
					
		MERGE INTO COLLAB_TASK_MEMBER M
		USING (SELECT t.taskSeq, a.TargetCode
				FROM COLLAB_TASK t
				JOIN SURVEY_TARGET_RESULTVIEW a ON t.ObjectID = a.SurveyID
				WHERE t.ObjectType = #{objectType}
					AND t.ObjectID = #{objectID}
					AND a.TargetType = 'UR') b
			ON (M.TASKSEQ = b.taskSeq AND M.USERCODE = b.TargetCode)
		WHEN MATCHED THEN
			UPDATE SET
				M.RegisterCode= #{USERID}
				, M.RegisteDate= SYSDATE
		WHEN NOT MATCHED THEN
			INSERT (M.taskSeq, M.userCode, M.RegisterCode, M.RegisteDate)
			VALUES (b.taskSeq, b.TargetCode, #{USERID}, SYSDATE);			
	END;
	</insert>

	<delete id="deleteTaskMember"   parameterType="cmap">
	/* collab.task.deleteTaskMember */
		DELETE FROM COLLAB_TASK_MEMBER WHERE taskSeq =  #{taskSeq}
		<if test='userCode != null and userCode !=""'>
		 	AND userCode = #{userCode}
		</if>
	</delete>
	
	<select id="getNoAllocProject"   parameterType="cmap" resultType="cmap">
	/* collab.task.getNoAllocProject */
		SELECT PRJSEQ as "PrjSeq"
			, PRJNAME as "PrjName"
			, PRJTYPE as "PrjType"
			, SECTIONSEQ as "SectionSeq"
			, SECTIONNAME  as "SectionName"
			, NODEVALUE as "nodeValue"
			, PNO as "pno"
			, NO as "no"
			, NODENAME as "nodeName"
			, RDO as "rdo"
		FROM (
		WITH cte (PRJSEQ, PRJNAME, PRJTYPE, SECTIONSEQ, SECTIONNAME) as
			  (SELECT a.PRJSEQ, a.PRJNAME,a.PRJTYPE, a.SECTIONSEQ, a.SECTIONNAME
				 FROM (
						SELECT a.PRJSEQ, a.PRJNAME,s.PRJTYPE, s.SECTIONSEQ, s.SECTIONNAME
						  FROM COLLAB_PROJECT a
						  JOIN COLLAB_SECTION s           ON a.PrjSeq = s.PrJSeq AND s.PrjType='P'
				 	LEFT  JOIN COLLAB_PROJECT_MEMBER cpm  ON a.PrjSeq = cpm.PrjSeq AND cpm.UserCode = #{USERID}
					LEFT  JOIN COLLAB_PROJECT_MANAGER cpn ON a.PrjSeq = cpn.PrjSeq AND cpn.UserCode = #{USERID}
					LEFT  JOIN COLLAB_PROJECT cpr         ON A.PrjSeq = cpr.PrjSeq AND cpr.RegisterCode = #{USERID}
						 WHERE a.PrjStatus = 'P' AND  a.IsClose='N'
			   			 <if test='isSaaS == "Y"'>
						 	 AND a.CompanyCode = #{CompanyCode}
						 </if>
						   AND (cpm.PrjSeq IS NOT NULL OR  cpn.PrjSeq IS NOT NULL OR   cpr.PrjSeq IS NOT NULL )
						UNION all
						SELECT b.GroupID, b.MultiDisplayName,s.PrjType, s.SectionSeq, s.SectionName
					      FROM SYS_OBJECT_USER_BASEGROUP a
					      JOIN SYS_OBJECT_GROUP b ON a.DeptCode = b.GroupCode
						  JOIN COLLAB_SECTION s ON b.GroupId = s.PrJSeq AND s.PrjType='T'
						 WHERE UserCode = #{USERID}
						   AND B.GroupType='Dept') a
		LEFT OUTER JOIN COLLAB_TASK_MAP 	b ON b.TaskSeq =#{taskSeq} and a.PrjType = b.PrjType AND a.PrjSeq = b.PrjSeq 
		 <if test='callbackFunc != "saveTaskAllocPopup"'>
		 WHERE b.prjSeq IS null 
		 </if>
				  )
				  
		SELECT PrjSeq, PrjName, PrjType, 0 SectionSeq, '' SectionName
				, 0 nodeValue, 0 pno, TO_CHAR(PrjSeq) no, PrjName nodeName, 'N' rdo
		FROM cte
		GROUP BY PrjSeq, PrjName, PrjType
		UNION ALL
		SELECT PrjSeq, PrjName, PrjType, SectionSeq, SectionName
				, SectionSeq nodeValue, prjSeq pno, TO_CHAR(PrjSeq || '_' || SectionSeq) no, SectionName nodeName, 'Y' rdo
		FROM cte
		ORDER BY PrjType DESC, PrjSeq, SectionSeq
		)
	</select>
	
	<select id="getTaskFavorite"   parameterType="cmap" resultType="cmap">
	/* collab.task.getTaskFavorite */
		SELECT cpm.UserCode as "UserCode"
		  FROM COLLAB_TASK_FAVORITE cpm 
		 WHERE cpm.taskSeq =  #{taskSeq}
	 	   AND userCode = #{userCode}
	</select>
	
	<insert id="addTaskFavorite"   parameterType="cmap">
	/* collab.task.addTaskFavorite */
		MERGE INTO COLLAB_TASK_FAVORITE
		USING DUAL
			ON (TASKSEQ = #{taskSeq} AND USERCODE = #{userCode})
		WHEN MATCHED THEN
		UPDATE SET
			RegisterCode = #{USERID}
			, RegisteDate = SYSDATE
		WHEN NOT MATCHED THEN
			INSERT (taskSeq, UserCode, RegisterCode, RegisteDate)
			VALUES ( #{taskSeq}, #{userCode}, #{USERID}, SYSDATE )
	</insert>

	<delete id="deleteTaskFavorite"   parameterType="cmap">
	/* collab.task.deleteTaskFavorite */
		DELETE FROM COLLAB_TASK_FAVORITE WHERE taskSeq =  #{taskSeq}
		<if test='userCode != null and userCode !=""'>
		 	AND userCode = #{userCode}
		</if>
	</delete>
	
	<select id="getTaskTag"   parameterType="cmap" resultType="cmap">
	/* collab.task.getTaskTag */
		SELECT TagID as "TagID"
				, TagName as "TagName"
				, RegisterCode as "RegisterCode"
		  FROM   COLLAB_TASK_TAG
		 WHERE taskSeq =  #{taskSeq}
	</select>

	<insert id="addTaskTag"   parameterType="cmap">
	/* collab.task.addTaskTag */
	BEGIN
		<foreach collection="taskTagList" item="tag" open="" close=";" separator=";">
		INSERT INTO collab_task_tag
					( tagID, taskSeq, tagName, RegisterCode, RegisteDate)
		VALUES		( COLLAB_TASK_TAG_SEQ.NEXTVAL, #{taskSeq}, #{tag},  #{USERID}, SYSDATE)
		</foreach>
	END;	
	</insert>
	
	<delete id="deleteTaskTag"   parameterType="cmap">
	/* collab.task.deleteTaskTag */
		DELETE FROM COLLAB_TASK_TAG WHERE taskSeq =  #{taskSeq}
		<if test='tagID != null and tagID !=""'>
		 	AND TagId = #{tagID}
		</if>
	</delete>
	
	<insert id="copyTask"   parameterType="cmap" useGeneratedKeys="true">
	/* collab.task.copyTask */
		INSERT INTO COLLAB_TASK 
					( TaskSeq, taskName , StartDate, EndDate, Label, ImpLevel, ParentKey, TopParentKey, TaskStatus, ProgRate, CloseDate, ObjectType, ObjectID, Remark, RegisterCode, RegisteDate, ModifierCode, ModifyDate)
			(SELECT COLLAB_TASK_SEQ.NEXTVAL TaskSeq, #{taskName}, StartDate, EndDate, Label, ImpLevel, ParentKey, TopParentKey, TaskStatus, ProgRate, CloseDate, ObjectType, ObjectID, Remark, #{USERID}, SYSDATE, #{USERID}, SYSDATE
			   FROM COLLAB_TASK
			  WHERE taskSeq =  #{orgTaskSeq})
			    
	   <selectKey keyProperty="TaskSeq" resultType="Integer" order="AFTER">
		    SELECT COLLAB_TASK_SEQ.CURRVAL FROM DUAL
		</selectKey>
	</insert>
	
	<insert id="copyTaskMember"   parameterType="cmap">
	/* collab.task.copyTaskMember */
		INSERT INTO COLLAB_TASK_MEMBER
					(taskSeq	,userCode	,RegisterCode,RegisteDate)
			(SELECT #{taskSeq},userCode,#{USERID},SYSDATE
			   FROM COLLAB_TASK_MEMBER
			  WHERE taskSeq =  #{orgTaskSeq})
	</insert>
	
	<insert id="copyTaskMap"   parameterType="cmap">
	/* collab.task.copyTaskMap */
		INSERT INTO COLLAB_TASK_MAP
					(taskSeq  , prjType, prjSeq, sectionSeq, workOrder	,RegisterCode,RegisteDate)
			(SELECT #{taskSeq}, prjType, prjSeq, sectionSeq, workOrder,#{USERID},SYSDATE
			   FROM COLLAB_TASK_MAP
			  WHERE taskSeq =  #{orgTaskSeq})
	</insert>
	
	<insert id="copyTaskTag"   parameterType="cmap">
	/* collab.task.copyTaskTag */
		INSERT INTO COLLAB_TASK_TAG
					(TAGID, taskSeq  , tagName, RegisterCode,RegisteDate)
			(SELECT COLLAB_TASK_TAG_SEQ.NEXTVAL, #{taskSeq}, tagName, #{USERID}, SYSDATE
			   FROM COLLAB_TASK_TAG
			  WHERE taskSeq =  #{orgTaskSeq})
	</insert>
	
	<insert id="addTaskLink"   parameterType="cmap">
	/* collab.task.addTaskLink */
		MERGE INTO COLLAB_TASK_LINK
		USING DUAL
			ON (TASKSEQ = #{taskSeq} AND LINKTASKSEQ = #{linkTaskSeq})
		WHEN MATCHED THEN
			UPDATE SET
				RegisterCode = #{USERID}
				, RegisteDate = SYSDATE  
			
		WHEN NOT MATCHED THEN
			INSERT (taskSeq, linkTaskSeq, RegisterCode, RegisteDate)
			VALUES (#{taskSeq}, #{linkTaskSeq}, #{USERID}, SYSDATE)
	</insert>

	<delete id="deleteTaskLink"   parameterType="cmap">
	/* collab.task.deleteTaskLink */
		DELETE FROM COLLAB_TASK_LINK
		WHERE taskSeq = #{taskSeq}
		
	</delete>
	
	<select id="getTaskMapBySchedule" parameterType="cmap" resultType="cmap">
	/* collab.task.getTaskMapBySchedule */
		SELECT	  A.taskSeq as "taskSeq"
				, B.prjSeq as "prjSeq"
				, B.prjType as "prjType"
				, B.sectionSeq as "sectionSeq"
				, NVL(E.PrjName, Fn_BaseGetDictionary_S(#{lang}, F.MultiDisplayName)) AS "prjName"
				, NVL(D.SectionName, '') AS "sectionName"
		FROM COLLAB_TASK A
		INNER JOIN COLLAB_TASK_MAP B ON B.TaskSeq = A.TaskSeq
		INNER JOIN EVENT_DATE C ON C.EventID = A.ObjectID AND REPLACE(C.StartDate, '-', '') = A.StartDate AND REPLACE(C.EndDate, '-', '') = A.EndDate AND C.DateID = #{dateID}
		LEFT OUTER JOIN COLLAB_SECTION D ON D.SectionSeq = B.SectionSeq
		LEFT OUTER JOIN COLLAB_PROJECT E ON E.PrjSeq = B.PrjSeq AND B.PrjType = 'P'
		LEFT OUTER JOIN SYS_OBJECT_GROUP F ON F.GroupID = B.PrjSeq AND B.PrjType = 'T'
		WHERE 1=1
		AND A.ObjectID = #{eventID}
		AND A.ObjectType = 'EVENT'
	</select>
	
	<update id="updateTaskDate" parameterType="cmap">
	/* collab.task.updateTaskDate */
		UPDATE COLLAB_TASK
		SET	  StartDate = #{startDate}
			  <choose>
				<when test='objectType != null and objectType == "EVENT"'>
					, EndDate = REPLACE(DATE_ADD(#{startDate}, INTERVAL #{diffDate} DAY), '-', '')
				</when>
				<otherwise>
					, EndDate = #{endDate}
				</otherwise>
			  </choose>
			  <if test='flag != null and flag ="collabSurveyUpdate"'>
			  	, TaskName = #{taskName}
			  </if>
			, ModifyDate = SYSDATE
			, ModifierCode = #{USERID}
		WHERE taskSeq = #{taskSeq}
	</update>
	
	<select id="selectTaskSeqList" parameterType="cmap" resultType="cmap">
	/* collab.task.selectTaskSeqList */
		SELECT taskSeq as "taskSeq"
		FROM COLLAB_TASK
		WHERE 1=1
		AND ObjectID = #{objectID}
		AND ObjectType = #{objectType}
	</select>
	
	<select id="selectTaskSeqByObjectID" parameterType="cmap" resultType="cmap">
	/* collab.task.selectTaskSeqByObjectID */
		SELECT taskSeq as "taskSeq"
		FROM COLLAB_TASK a
		WHERE 1=1
			AND ObjectID = #{objectID}
			AND ObjectType = #{objectType}
			AND EXISTS (
				select 'x' from COLLAB_TASK_MAP s
				where s.TaskSeq = a.TaskSeq 
				AND s.PrjSeq = #{prjSeq}
				AND s.PrjType = #{prjType}
			)
	</select>
	
	<select id="selectTaskMemberList" parameterType="cmap" resultType="cmap">
	/* collab.task.selectTaskMemberList */
		WITH PROJECT_SEQ AS(
			SELECT PrjSeq 
			FROM COLLAB_TASK_MAP
			WHERE TaskSeq = #{taskSeq}
		)
		,TEAM_MEMBER AS(
			SELECT 	soub.UserCode
					,Fn_BaseGetDictionary_S(#{lang},soub.MultiDeptName) DeptName
					,Fn_BaseGetDictionary_S(#{lang},soub.MultiJobPositionName) JobPositionName
					,Fn_BaseGetDictionary_S(#{lang},sou.MultiDisplayName) DisplayName
					,sou.PhotoPath
		  	FROM SYS_OBJECT_GROUP sb 
		  	JOIN SYS_OBJECT_USER_BASEGROUP soub ON sb.GroupCode = soub.DeptCode 
		  	JOIN SYS_OBJECT_USER sou on sou.UserCode = soub.UserCode  --AND soub.JobType ='Origin'
			WHERE sb.GroupId IN ( SELECT PrjSeq FROM PROJECT_SEQ ) 
		)
		,PROJECT_MEMBER AS(
			SELECT 	cpm.UserCode
					,Fn_BaseGetDictionary_S(#{lang},soub.MultiDeptName) DeptName
					,Fn_BaseGetDictionary_S(#{lang},soub.MultiJobPositionName) JobPositionName
					,Fn_BaseGetDictionary_S(#{lang},sou.MultiDisplayName) DisplayName
					,sou.PhotoPath
			FROM COLLAB_PROJECT_MEMBER cpm 
			JOIN SYS_OBJECT_USER sou on cpm.userCode = sou.userCode
			JOIN SYS_OBJECT_USER_BASEGROUP soub		ON sou.UserCode = soub.UserCode  AND soub.JobType ='Origin'
			WHERE cpm.prjSeq IN ( SELECT PrjSeq FROM PROJECT_SEQ )
		)
		SELECT  DAT.UserCode as "UserCode"
				,DAT.DeptName as "DeptName"
				,DAT.JobPositionName as "JobPositionName"
				,DAT.DisplayName as "DisplayName"
				,DAT.PhotoPath as "PhotoPath"
		FROM (
			SELECT *
			FROM TEAM_MEMBER UNION ALL 
			SELECT * FROM PROJECT_MEMBER
		) DAT
		GROUP BY DAT.UserCode,DAT.DeptName,DAT.JobPositionName,DAT.DisplayName,DAT.PhotoPath
	</select>
	
	<delete id="deleteTaskBySchedule" parameterType="cmap">
	/* collab.task.deleteTaskBySchedule */
		DELETE A
		FROM EVENT_DATE A
		INNER JOIN COLLAB_TASK B ON B.TaskSeq = #{taskSeq} AND A.EventID = B.ObjectID
		WHERE 1=1
		AND A.EventID = #{EventID}
		AND REPLACE(A.StartDate, '-', '') = B.StartDate
		AND REPLACE(A.EndDate, '-', '') = B.EndDate
	</delete>

	<select id="getTaskMapUser" parameterType="cmap" resultType="cmap">
		SELECT 'MEM' "UserType", pm.UserCode "UserCode"
		  FROM collab_task_map  tm
		  JOIN collab_project_manager pm ON  pm.PrjSeq = tm.PrjSeq 
		 WHERE tm.taskSeq = #{taskSeq}
		   AND tm.PrjType = 'P' 
	  union    
		SELECT 'MAN', pm.UserCode
		  FROM collab_task_map  tm
		  JOIN collab_project_member  pm ON  pm.PrjSeq = tm.PrjSeq 
		 WHERE tm.taskSeq = #{taskSeq}
		   AND tm.PrjType = 'P' 
		 union    
		SELECT 'VIE', pm.UserCode
		  FROM collab_task_map  tm
		  JOIN collab_project_viewer  pm ON  pm.PrjSeq = tm.PrjSeq 
		 WHERE tm.taskSeq = #{taskSeq}
		   AND tm.PrjType = 'P' 
		 union    
		SELECT 'TEAM', soub.UserCode
		  FROM collab_task_map  tm
		  JOIN sys_object_group o  ON  o.GroupId = tm.PrjSeq 
		  JOIN sys_object_user_basegroup soub ON o.GroupCode = soub.DeptCode 
		 WHERE tm.taskSeq = #{taskSeq}
		   AND tm.PrjType != 'P' 
		 union    
  		SELECT 'SUM',  t.UserCode
  		  FROM collab_task_member T
  		 WHERE taskSeq = #{taskSeq}   
  
	</select>
		
	<update id="saveTaskMile" parameterType="cmap">
	/* collab.task.saveTaskMile */
		UPDATE collab_task
		SET	  IsMile = #{isMile}
			, ModifyDate = sysdate
			, ModifierCode = #{USERID}
		WHERE taskSeq = #{taskSeq}
	</update>
	
	<select id="selectPrjTask" parameterType="cmap" resultType="cmap">
		/* collab.task.selectPrjTask */
		SELECT	T1.TaskSeq, T1.TaskName, T3.SectionSeq, T3.SectionName
		FROM 	collab_task T1
		INNER JOIN collab_task_map T2 ON T2.TaskSeq = T1.TaskSeq
    	LEFT JOIN collab_section T3 on T3.SectionSeq = T2.SectionSeq
    	LEFT JOIN collab_task_member T4 on T4.TaskSeq = T1.TaskSeq
		where  	1=1
		AND 	T2.PrjSeq = #{prjSeq}
		AND  	T2.PrjType = #{prjType}
		AND 	T4.UserCode = #{userCode}
	</select>

	<select id="selectTaskLinkCnt" parameterType="cmap" resultType="java.lang.Long">
            /* collab.task.selectTaskLinkCnt */
            SELECT  COUNT(1)
            FROM  COLLAB_TASK_MAP T1
            INNER JOIN COLLAB_TASK T2 ON T2.TaskSeq = T1.TaskSeq
            WHERE	1=1
            AND   	T1.PrjSeq = #{prjSeq}
            AND   	T1.PrjType = #{prjType}
            AND   	T1.SectionSeq = #{sectionSeq}
            <if test="searchText != null and searchText != ''">
            AND  	UPPER(T2.TaskName) LIKE '%'||UPPER(#{searchText})||'%'
            </if>
            AND T2.ParentKey = 0
      </select>

      <select id="selectTaskLink" parameterType="cmap" resultType="cmap">
            /* collab.task.selectTaskLink */
            <if test="pageSize != null and pageOffset != null">
				<include refid="oracle.include.pagingHeader"/>
			</if>
            SELECT  T2.TaskSeq AS "TaskSeq", T2.TaskName AS "TaskName"
            FROM  COLLAB_TASK_MAP T1
            INNER JOIN COLLAB_TASK T2 ON T2.TaskSeq = T1.TaskSeq
            WHERE       1=1
            AND   T1.PrjSeq = #{prjSeq}
            AND   T1.PrjType = #{prjType}
            AND   T1.SectionSeq = #{sectionSeq}
            <if test="searchText != null and searchText != ''">
            AND   UPPER(T2.TaskName) LIKE '%'||UPPER(#{searchText})||'%'
            </if>
            AND T2.ParentKey = 0
            ORDER BY T2.TaskSeq
           	<if test="pageSize != null and pageOffset != null">
				<include refid="oracle.include.pagingFooter"/>
			</if>
      </select>

      <select id="selectMyTaskLinkCnt" parameterType="cmap" resultType="java.lang.Long">
            /* collab.task.selectMyTaskLinkCnt */
            SELECT COUNT(1)
            FROM COLLAB_TASK_MEMBER A
            INNER JOIN COLLAB_TASK B 
            ON B.TaskSeq = A.TaskSeq AND A.usercode = #{userCode}
            WHERE 1=1
            AND B.TaskStatus = #{taskStatus}
            <if test="searchText != null and searchText != ''">
            AND UPPER(B.TaskName) LIKE '%'||UPPER(#{searchText})||'%'
            </if>
            AND B.ParentKey = 0
      </select>
      
      <select id="selectMyTaskLink" parameterType="cmap" resultType="cmap">
            /* collab.task.selectMyTaskLink */
            <if test="pageSize != null and pageOffset != null">
				<include refid="oracle.include.pagingHeader"/>
			</if>
            SELECT  
            B.TaskSeq AS "TaskSeq", 
            B.TaskName AS "TaskName"
            FROM COLLAB_TASK_MEMBER A
            INNER JOIN COLLAB_TASK B 
            ON B.TaskSeq = A.TaskSeq AND A.usercode = #{userCode}
            WHERE	1=1
            AND B.TaskStatus = #{taskStatus}
            <if test="searchText != null and searchText != ''">
            AND UPPER(B.TaskName) LIKE '%'||UPPER(#{searchText})||'%'
            </if>
            AND B.ParentKey = 0
            ORDER BY A.TodoOrder ASC
			<if test="pageSize != null and pageOffset != null">
				<include refid="oracle.include.pagingFooter"/>
			</if>
      </select>

	<select id="getTaskFile" parameterType="cmap" resultType="cmap">
	/* queryID : collab.task.getTaskFile */
	SELECT 
	STORAGEID AS "StorageID", SERVICETYPE AS "ServiceType", OBJECTID AS "ObjectID", OBJECTTYPE AS "ObjectType",
	MESSAGEID AS "MessageID", VERSION AS "Version", SAVETYPE AS "SaveType", LASTSEQ AS "LastSeq", SEQ AS "Seq", 
	FILEPATH AS "FilePath", FILENAME AS "FileName", SAVEDNAME AS "SavedName", EXTENTION AS "Extention", SIZE_ AS "Size", 
	THUMWIDTH AS "ThumWidth", THUMHEIGHT AS "ThumHeight", DESCRIPTION AS "Description", REGISTDATE AS "RegistDate", 
	REGISTERCODE AS "RegisterCode", COMPANYCODE AS "CompanyCode", ENCRYPTED AS "Encrypted", ISDELETED AS "IsDeleted"
	FROM SYS_FILE
	WHERE 
	SERVICETYPE = 'Collab'
	AND OBJECTID = #{orgTaskSeq}
	</select>
	
	<update id="updateCopyFileName"   parameterType="cmap"  >
	/* collab.task."updateCopyFileName" */
		UPDATE SYS_FILE
		SET FILENAME = #{copyFileName}
		WHERE
		SERVICETYPE = 'Collab'
		AND SAVEDNAME = #{SavedName}
		AND OBJECTID = #{ObjectID}
	</update>
	
	<select id="selectOtherTaskDeleted" parameterType="cmap" resultType="cmap">
		/* queryID : collab.task.selectOtherTaskDeleted */
		SELECT      T3.TaskSeq AS "TaskSeq"
		FROM 		COLLAB_TASK_MAP T1
		INNER JOIN	COLLAB_TASK T2 ON T1.TaskSeq = T2.TaskSeq AND T2.TaskSeq = #{taskSeq}
		LEFT JOIN 	COLLAB_TASK_MAP T3 ON T3.PrjSeq = T1.PrjSeq AND T3.TaskSeq != #{taskSeq}
		WHERE   	ROWNUM =1
	</select>
	
	<update id="updateSurveyProgRate" parameterType="cmap">
	/* collab.task.updateSurveyProgRate */
		UPDATE COLLAB_TASK
		SET	  PROGRATE = #{JoinRate}
		WHERE OBJECTID = #{ObjectID}
		AND OBJECTTYPE = #{ObjectType}
	</update>
</mapper>

