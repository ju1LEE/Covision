<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="admin.schedule">
    
    <!-- 일정 폴더 트리 데이터 조회 -->
    <select id="selectFolderTreeList" parameterType="cmap"  resultType="cmap">
        SELECT A.FolderID AS "FolderID"
             , A.itemType AS "itemType"
             , A.FolderType AS "FolderType"
             , A.FolderPath AS "FolderPath"
             , A.MenuID AS "MenuID"
             , A.FolderName AS "FolderName"
             , A.MemberOf  AS "MemberOf"
             , A.DisplayName AS "DisplayName"
             , A.SortPath AS "SortPath"
             , A.hasChild AS "hasChild"
        	FROM (
				SELECT
			    	  SOF.FolderID
			    	, SOF.FolderType AS itemType
			    	, SOF.FolderType
			    	, SOF.FolderPath
					, SOF.MenuID
					, FN_BASEGETDICTIONARY_S(#{lang}, SOF.MultiDisplayName) AS FolderName
					, SOF.MemberOf
					, FN_BASEGETDICTIONARY_S(#{lang}, SOF.MultiDisplayName) AS DisplayName
					, SOF.SortPath
					, (SELECT COUNT(0) FROM SYS_OBJECT_FOLDER self WHERE self.MemberOf=sof.FolderID AND self.IsUse = 'Y' AND self.DeleteDate IS NULL) AS hasChild
			   FROM SYS_OBJECT_FOLDER SOF
				WHERE SOF.MenuID = #{MenuID}
				AND FolderType = #{FolderType}
				AND SOF.DeleteDate IS NULL
				AND SOF.IsUse = 'Y'
				
				UNION ALL
				
				SELECT
			    	  SOF.FolderID
			    	, SOF.FolderType AS itemType
			    	, SOF.FolderType
			    	, SOF.FolderPath
					, SOF.MenuID
					, FN_BASEGETDICTIONARY_S(#{lang}, SOF.MultiDisplayName) AS FolderName
					, SOF.MemberOf
					, FN_BASEGETDICTIONARY_S(#{lang}, SOF.MultiDisplayName) AS DisplayName
					, SOF.SortPath
					, (SELECT COUNT(0) FROM SYS_OBJECT_FOLDER self WHERE self.MemberOf=sof.FolderID AND self.IsUse = 'Y' AND self.DeleteDate IS NULL) AS hasChild
			    FROM SYS_OBJECT_FOLDER SOF
				WHERE SOF.DeleteDate IS NULL
				AND SOF.IsUse = 'Y'
				AND ( 	SOF.ManageCompany = #{DomainID}
						OR (SOF.DomainID != 0 AND SOF.DomainID = #{DomainID} )
					)
				AND NVL(SUBSTR(SOF.MemberOf,1, INSTR(SOF.MemberOf,';') -1),SOF.MemberOf) = (SELECT SOF.FolderID FROM SYS_OBJECT_FOLDER SOF
																							WHERE SOF.MenuID = #{MenuID}
																							AND FolderType = #{FolderType}
																							AND SOF.DeleteDate IS NULL
																							AND SOF.IsUse = 'Y')
		) A
		ORDER BY A.MenuID, A.SortPath
    </select>
    
    <!-- 일정폴더 타이틀 조회 -->
    <select id="selectFolderDisplayName" parameterType="cmap" resultType="cmap">
        SELECT
        	 FN_BASEGETDICTIONARY_S(#{lang}, MultiDisplayName) AS "MultiDisplayName"
        FROM SYS_OBJECT_FOLDER
        WHERE (FolderType LIKE '%'||'Schedule'||'%' OR FolderType = 'Folder')
        AND FolderID = #{FolderID}
    </select>
    
	<!-- 일정폴더 목록 조회 -->
	<select id="selectFolderList" parameterType="cmap" resultType="cmap">
		/* queryId : admin.schedule.selectFolderList */
		<include refid="oracle.include.pagingHeader"/>
		 SELECT
			  FolderID AS "FolderID"
			, FolderType AS "FolderType"
			, DefaultColor AS "DefaultColor"
			, DisplayName AS "DisplayName"
			, MultiDisplayName AS "MultiDisplayName"
			, ManageCompany AS "ManageCompany"
			, ManageCompanyName AS "ManageCompanyName"
			, OwnerCode AS "OwnerCode"
			, RegisterCode AS "RegisterCode"
			, IsUse AS "IsUse"
			, SortKey AS "SortKey"
			, RegistDate AS "RegistDate"
			, OwnerName AS "OwnerName"
			, RegisterName AS "RegisterName"
			, CASE WHEN (SELECT COUNT(0) FROM SYS_OBJECT_FOLDER self WHERE self.MemberOf = RESULT.FolderID AND self.IsUse = 'Y' AND self.DeleteDate IS NULL ) > '0' THEN 'Y' ELSE 'N' END AS "haveChild"
		FROM (
			SELECT
				  FD.FolderID
				, FD.FolderType
				, FD.Reserved2 AS DefaultColor
				, FD.DisplayName
				, FN_BASEGETDICTIONARY_S(#{lang}, FD.MultiDisplayName) AS MultiDisplayName
				, FD.ManageCompany
				, DN.DisplayName AS ManageCompanyName
				, FD.OwnerCode
				, FD.RegisterCode
				, FD.IsUse
				, FD.SortKey
				, FD.RegistDate
				, Fn_BaseGetDictionary_S(#{lang}, OW.MultiDisplayName)  AS OwnerName
        		, Fn_BaseGetDictionary_S(#{lang}, RE.MultiDisplayName) AS RegisterName
			FROM SYS_OBJECT_FOLDER FD
			LEFT JOIN SYS_OBJECT_DOMAIN DN ON ((FD.ManageCompany IS NOT NULL AND FD.ManageCompany = DN.DomainID	) 
												OR (FD.ManageCompany IS NULL AND FD.DomainID = DN.DomainID)
												)
			LEFT JOIN SYS_OBJECT_USER OW ON OW.UserCode = FD.OwnerCode
       		LEFT JOIN SYS_OBJECT_USER RE ON RE.UserCode = FD.RegisterCode
       		<if test="FolderType !=null and FolderType !='' ">
	   		JOIN 	SYS_OBJECT_FOLDER SOF ON SOF.MenuID = #{MenuID}	AND SOF.FolderType = #{FolderType}	AND SOF.DeleteDate IS NULL	AND SOF.IsUse = 'Y'	AND FD.MemberOf = SOF.FolderID			
	    	</if>
			<trim prefix="WHERE" prefixOverrides="AND | OR ">
				<if test="FolderID !=null and FolderID !='' ">
					FD.MemberOf = #{FolderID}
				</if>
				<if test="selectSearchType == 'MultiDisplayName' and searchValue !=null and searchValue !='' ">
					AND FD.MultiDisplayName LIKE '%'||#{searchValue}||'%'
				</if>
				<if test="selectSearchType == 'OwnerCode' and searchValue !=null and searchValue !='' ">
					AND FD.OwnerCode LIKE '%'||#{searchValue}||'%'
				</if>
				<if test="selectSearchType == 'OwnerName' and searchValue !=null and searchValue !='' ">
					AND OW.MultiDisplayName LIKE '%'||#{searchValue}||'%'
				</if>
				<if test="selectSearchType == 'RegisterCode' and searchValue !=null and searchValue !='' ">
					AND FD.RegisterCode LIKE '%'||#{searchValue}||'%'
				</if>
				<if test="selectSearchType == 'RegisterName' and searchValue !=null and searchValue !='' ">
					AND RE.MultiDisplayName LIKE '%'||#{searchValue}||'%'
				</if>
	    		<if test='isAll == "N"'>
	    			AND FD.IsUse = 'Y'
				</if>
				AND (FD.ManageCompany = #{DomainID} OR (FD.DomainID != 0 AND FD.DomainID = #{DomainID}))
				AND FD.DeleteDate IS NULL
			</trim>
		) RESULT
		<!-- Order by 절 -->
		<trim prefix="ORDER BY" >
			<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("DefaultColor")'>DefaultColor</when>
					<when test='sortColumn.equalsIgnoreCase("MultiDisplayName")'>MultiDisplayName</when>
					<when test='sortColumn.equalsIgnoreCase("ManageCompanyName")'>ManageCompanyName</when>
					<when test='sortColumn.equalsIgnoreCase("OwnerCode")'>OwnerCode</when>
					<when test='sortColumn.equalsIgnoreCase("RegisterCode")'>RegisterCode</when>
					<when test='sortColumn.equalsIgnoreCase("IsUse")'>IsUse</when>
					<when test='sortColumn.equalsIgnoreCase("RegistDate")'>RegistDate</when>
					<otherwise>SortKey</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
				<include refid="oracle.include.listOrderBy"/>
			</if>
		</trim>
		<include refid="oracle.include.pagingFooter"/>
	</select>
    
    <!-- 일정폴더 목록 개수 조회 -->
    <select id="selectFolderListCnt" parameterType="cmap" resultType="java.lang.Integer">
       /* queryId : admin.schedule.selectFolderListCnt */
       SELECT 		COUNT(*) AS CNT
       FROM 		SYS_OBJECT_FOLDER FD
       LEFT JOIN 	SYS_OBJECT_USER OW ON OW.UserCode = FD.OwnerCode
       LEFT JOIN 	SYS_OBJECT_USER RE ON RE.UserCode = FD.RegisterCode
       <if test="FolderType !=null and FolderType !='' ">
	   JOIN 		SYS_OBJECT_FOLDER SOF	ON SOF.MenuID = #{MenuID}	AND SOF.FolderType = #{FolderType}	AND SOF.DeleteDate IS NULL	AND SOF.IsUse = 'Y'	AND FD.MemberOf = SOF.FolderID
	   </if>
       <trim prefix="WHERE" prefixOverrides="AND | OR ">
		    <if test="FolderID !=null and FolderID !='' ">
			FD.MemberOf = #{FolderID}
			</if>
			<if test="selectSearchType == 'MultiDisplayName' and searchValue !=null and searchValue !='' ">
			AND FD.MultiDisplayName LIKE '%'||#{searchValue}||'%'
			</if>
			<if test="selectSearchType == 'OwnerCode' and searchValue !=null and searchValue !='' ">
			AND FD.OwnerCode LIKE '%'||#{searchValue}||'%'
			</if>
			<if test="selectSearchType == 'RegisterCode' and searchValue !=null and searchValue !='' ">
			AND FD.RegisterCode LIKE '%'||#{searchValue}||'%'
			</if>
	    	<if test='isAll == "N"'>
	    	AND FD.IsUse = 'Y'
			</if>
			AND (FD.ManageCompany = #{DomainID} OR (FD.DomainID != 0 AND FD.DomainID = #{DomainID}))
			AND FD.DeleteDate IS NULL
		</trim>
    </select>
    
    <!-- 일정 폴더 데이터 삭제 (하위폴더 포함) -->
    <delete id="deleteFolderData" parameterType="cmap" >
        /* queryId : admin.schedule.deleteFolderData */
        BEGIN
	        UPDATE SYS_OBJECT_FOLDER
	        SET 
	        	DeleteDate = SYSDATE
	        WHERE FolderID = #{FolderID}
	        <if test="FolderType !=null and FolderType !='' ">
	        AND FolderType = #{FolderType};
        	</if>
        	<if test="FolderType ==null or FolderType =='' ">
	        AND FolderType = 'Schedule';
        	</if>
	        
	        UPDATE SYS_OBJECT_FOLDER
	        SET 
	        	DeleteDate = SYSDATE
	        WHERE (';'||FolderPath) LIKE '%;'||#{FolderID}||';%'
	        <if test="FolderType !=null and FolderType !='' ">
	        AND FolderType = #{FolderType};
        	</if>
        	<if test="FolderType ==null or FolderType =='' ">
        	AND FolderType = 'Schedule';
        	</if>
		END;
    </delete>
    
    <!-- 일정 폴더 데이터에 대한 권한 삭제 (하위폴더 포함) -->
    <delete id="deleteFolderACLData" parameterType="cmap" >
        BEGIN
			    DELETE
		        FROM SYS_OBJECT_ACL
		        WHERE ObjectID = #{FolderID}
		        AND ObjectType = 'FD';
		        
		        DELETE
				FROM SYS_OBJECT_ACL ACL
				WHERE EXISTS (
						SELECT 1 FROM SYS_OBJECT_FOLDER FD
	                    WHERE ACL.ObjectID = FD.FolderID
	                    AND (';'||FolderPath) LIKE ('%;'||#{FolderID}||';%')
	                    AND FolderType = 'Schedule'
				)
	        	AND ACL.ObjectType = 'FD';
		END;
    </delete>
    
    <!-- 연결일정 Select Box 데이터 조회 -->
    <select id="selectLinkFolderListData" parameterType="cmap" resultType="cmap">
        SELECT
        	  FolderID  AS "optionValue"
        	, FolderType AS "optionData"
			, DisplayName AS "optionText"
		FROM SYS_OBJECT_FOLDER
		WHERE IsShared = 'Y'
		AND IsUse = 'Y'
		AND FolderType LIKE '%'||'Schedule'||'%'
		<if test="manageCompany != null and manageCompany != ''">
			AND (FolderType IN ('Schedule.Person', 'Schedule.Share', 'Schedule.Google') OR ManageCompany = #{manageCompany})
		</if>
		ORDER BY SortKey
    </select>
    
    <!-- 일정유형 Select Box 데이터 조회 -->
    <select id="selectFolderTypeData" parameterType="cmap" resultType="cmap">
        <![CDATA[
	        SELECT
				  FolderType AS "optionValue"
				, DisplayName AS "optionText"
			FROM SYS_OBJECT_FOLDER_TYPE
			WHERE FolderType <> 'Root'
		 ]]>
		 <if test="BizSection == null or BizSection == '' ">
			AND (BizSection='Schedule' OR BizSection='Common') 
	     </if>
	     <if test="BizSection != null and BizSection != '' ">
		 	AND BizSection=#{BizSection} 
	     </if>			
		 ORDER BY SortKey
    </select>
    
    <!-- 상위 폴더의 DomainID와 MenuID 조회  - for insert -->
    <select id="selectDomainMenuID" parameterType="cmap" resultType="cmap">
        /* queryId : admin.schedule.selectDomainMenuID */
        SELECT
        	  DomainID AS "DomainID"
        	, MenuID AS "MenuID"
        	, FolderID AS "FolderID"
        FROM SYS_OBJECT_FOLDER
        WHERE
        <if test="MemberOf == null or MemberOf == '' ">
        	FolderType = #{ScheduleType}
			AND DeleteDate IS NULL
			AND IsUse = 'Y'
        </if>
        <if test="MemberOf != null and MemberOf != '' ">
        	FolderID = #{MemberOf}
        </if>
    </select>
    
    <!-- SortKey 조회 - for insert -->
    <select id="selectSortKey" parameterType="cmap" resultType="java.lang.String">
        SELECT
        	NVL((
        		SELECT MAX(SortKey)
	        	FROM SYS_OBJECT_FOLDER
	        	WHERE MemberOf = #{MemberOf}
	        	AND DeleteDate IS NULL) + 1
	        , 0) AS SortKey
	    FROM dual
    </select>
    
    <!-- 일정폴더 데이터 삽입 -->
    <insert id="insertFolderData" parameterType="cmap" useGeneratedKeys="true">
        INSERT INTO SYS_OBJECT_FOLDER (
        	  DomainID
        	, MenuID
        	, ObjectType
        	, FolderType
        	, ParentObjectID
        	, ParentObjectType
        	, LinkFolderID
        	, DisplayName
        	, MultiDisplayName
        	, MemberOf
        	, SortKey
        	, SecurityLevel
        	, IsInherited
        	, IsShared
        	, IsUse
        	, IsDisplay
        	, IsURL
        	, URL
        	, IsMobileSupport
        	, IsAdminNotice
        	, ManageCompany
        	, IsMsgSecurity
        	, Description
        	, OwnerCode
        	, RegisterCode
        	, RegistDate
        	, ModifierCode
        	, ModifyDate
        	, DeleteDate
        	, Reserved1
        	, Reserved2
        	, Reserved3
        	, Reserved4
        	, Reserved5
        ) VALUES (
        	#{DomainID}
			, #{MenuID}
			, 'Schedule'
			, #{FolderType}
			, #{ParentObjectID}
			, #{ParentObjectType}
			, #{LinkFolderID}
			, #{DisplayName}
			, #{MultiDisplayName}
			, #{MemberOf}
			, #{SortKey}
			, #{SecurityLevel}
			, #{IsInherited}
			, #{IsShared}
			, #{IsUse}
			, #{IsDisplay}
			, #{IsURL}
			, #{URL}
			, #{IsMobileSupport}
			, #{IsAdminNotice}
			, #{ManageCompany}
			, #{IsMsgSecurity}
			, #{Description}
			, #{OwnerCode}
			, #{RegisterCode}
			, SYSDATE
			, #{ModifierCode}
			, SYSDATE
			, #{DeleteDate}
			, #{Reserved1}
			, #{Reserved2}
			, #{Reserved3}
			, #{Reserved4}
			, #{Reserved5}
        )
        <selectKey keyProperty="FolderID" resultType="Integer" order="AFTER">
		    SELECT MAX(FolderID) FROM SYS_OBJECT_FOLDER
		</selectKey>
    </insert>
    
    <select id="selectComSortPathCreateS" parameterType="cmap" resultType="java.lang.String">
         SELECT FN_COMSORTPATHCREATE_S(#{FolderID}, '', 'FD') AS SortPath FROM DUAL
    </select>
    
    <select id="selectComObjectPathCreateS" parameterType="cmap" resultType="java.lang.String">
        SELECT FN_COMOBJECTPATHCREATE_S(#{FolderID}, '', 'FD') AS FolderPath FROM DUAL
    </select>
    
    <!-- SortPath 수정 -->
    <update id="updateSortPath" parameterType="cmap" >
        UPDATE SYS_OBJECT_FOLDER
        SET SortPath = #{SortPath}
        WHERE FolderID = #{FolderID}
    </update>
    
    <!-- FolderPath 수정 -->
    <update id="updateFolderPath" parameterType="cmap" >
        UPDATE SYS_OBJECT_FOLDER
        SET FolderPath = #{FolderPath}
        WHERE FolderID = #{FolderID}
    </update>
    
    <!-- 폴더 데이터 조회 -->
    <select id="selectFolderData" parameterType="cmap" resultType="cmap">
        SELECT 
	          FD.FolderID AS "FolderID"
			, FD.DomainID AS "DomainID"
			, FD.MenuID AS "MenuID"
			, FD.FolderType AS "FolderType"
			, FD.ParentObjectID AS "ParentObjectID"
			, FD.ParentObjectType AS "ParentObjectType"
			, FD.LinkFolderID AS "LinkFolderID"
			, FD.DisplayName AS "DisplayName"
			, FD.MultiDisplayName AS "MultiDisplayName"
			, FD.MemberOf AS "MemberOf"
			, FD.FolderPath AS "FolderPath"
			, FD.SortKey AS "SortKey"
			, FD.SecurityLevel AS "SecurityLevel"
			, FD.SortPath  AS "SortPath"
			, FD.IsInherited  AS "IsInherited"
			, FD.IsShared AS "IsShared"
			, FD.IsUse AS "IsUse"
			, FD.IsDisplay AS "IsDisplay"
			, FD.IsURL AS "IsURL"
			, FD.URL AS "URL"
			, FD.IsMobileSupport AS "IsMobileSupport"
			, FD.IsAdminNotice AS "IsAdminNotice"
			, FD.ManageCompany AS "ManageCompany"
			, FD.IsMsgSecurity AS "IsMsgSecurity"
			, FD.Description AS "Description"
			, FD.OwnerCode AS "OwnerCode"
			, NVL(OWUR.DisplayName, '') AS "OwnerName"
			, FD.RegisterCode  AS "RegisterCode"
			, FD.RegistDate  AS "RegistDate"
			, FD.ModifierCode AS "ModifierCode"
			, FD.ModifyDate AS "ModifyDate"
			, FD.DeleteDate  AS "DeleteDate"
			, FD.Reserved1 AS "PersonLinkCode"
			, NVL(R1UR.DisplayName, '') AS "PersonLinkName"
			, FD.Reserved2 AS "DefaultColor"
			, FD.Reserved3 AS "Reserved3"
			, FD.Reserved4 AS "IsAdminSubMenu"
			, FD.Reserved5 AS "Reserved5"
		FROM SYS_OBJECT_FOLDER FD
		LEFT JOIN SYS_OBJECT_USER OWUR ON FD.OwnerCode = OWUR.UserCode
		LEFT JOIN SYS_OBJECT_USER R1UR ON  FD.Reserved1 = R1UR.UserCode
		WHERE FD.FolderID = #{FolderID}
    </select>
    
    <update id="updateFolderData" parameterType="cmap">
        UPDATE SYS_OBJECT_FOLDER
        SET
        	  DisplayName = #{DisplayName}
        	, MultiDisplayName = #{MultiDisplayName}
        	, Reserved2 = #{DefaultColor}
        	, SortKey = #{SortKey}
        	, FolderType = #{FolderType}
        	, ManageCompany = #{ManageCompany}
        	, OwnerCode = #{OwnerCode}
        	, Description = #{Description}
        	, IsInherited = #{IsInherited}
        	<if test='isEasyAdmin == null or isEasyAdmin ==""'>
        	, SecurityLevel = #{SecurityLevel}
        	, IsShared = #{IsShared}
        	, LinkFolderID = #{LinkFolderID}
        	, Reserved1 = #{PersonLinkCode}
        	, IsUse = #{IsUse}
        	, IsDisplay = #{IsDisplay}
        	, IsURL = #{IsURL}
        	, Reserved4 = #{IsAdminSubMenu}
        	, URL = #{URL}
        	</if>
        WHERE
        	FolderID = #{FolderID}
    </update>
    
    <!-- 공유 일정 관리 데이터 -->
    <select id="selectShareScheduleData" parameterType="cmap" resultType="cmap">
        <include refid="oracle.include.pagingHeader"/>
        	SELECT
        		SpecifierCode AS "SpecifierCode"
        		, SpecifierName AS "SpecifierName"
        		, TargetData AS "TargetData"
        	FROM (
		         SELECT
		        	  SpecifierCode
		        	, SpecifierName
		        	, LISTAGG(Fn_BaseGetDictionary_S(#{lang}, TargetName)||'('||TargetCode||')' , ',') WITHIN GROUP(ORDER BY TargetName) AS TargetData
		        FROM EVENT_SHARE ES
		        LEFT JOIN SYS_OBJECT_USER_BASEGROUP SOUB ON ES.SpecifierCode = SOUB.UserCode AND SOUB.JobType = 'Origin'
		        LEFT JOIN SYS_OBJECT_DOMAIN SOD ON SOUB.CompanyCode = SOD.DomainCode
				<!-- WHERE 절 -->
				<trim prefix="WHERE" prefixOverrides="AND | OR ">
				 	<if test="domainID != null and domainID != '' ">
						AND SOD.DomainID = #{domainID}
					</if>
				    <if test="selectSearchType == 'SpecifierCode' and shareUserName !=null and shareUserName !='' ">
						AND SpecifierName LIKE '%'||#{shareUserName}||'%'
					</if>
					<if test="selectSearchType == 'TargetCode' and shareUserName !=null and shareUserName !='' ">
						AND TargetName LIKE '%'||#{shareUserName}||'%'
					</if>
					<if test="startDate != null and startDate != ''">
						<![CDATA[ AND StartDate >= #{startDate} ]]>
					</if>
					<if test="endDate != null and endDate != '' ">
					    <![CDATA[ AND EndDate <= #{endDate} ]]>
					</if>
				</trim>	
				GROUP BY SpecifierCode, SpecifierName
				<!-- Order by 절 -->
				<trim prefix="ORDER BY" prefixOverrides=",">
				  	<if test="sortColumn != null and sortDirection != null">
		  				<choose>
							<when test='sortColumn.equalsIgnoreCase("TargetData")'>TargetData</when>
							<when test='sortColumn.equalsIgnoreCase("SpecifierName")'>SpecifierName</when>
							<otherwise>SpecifierCode</otherwise>
						</choose>
						<choose>
							<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
							<otherwise> DESC</otherwise>
						</choose>
					</if>
				</trim>
			) A
		<include refid="oracle.include.pagingFooter"/>
		<trim prefix="ORDER BY">
			 ROWNUM
		</trim>
    </select>
    
    <select id="selectShareScheduleCnt" parameterType="cmap" resultType="java.lang.Integer">
        /* queryId : admin.schedule.selectShareScheduleCnt */
        SELECT COUNT(*)  AS CNT
		FROM (
			SELECT
	        	  SpecifierCode
	        	, SpecifierName
	        	, LISTAGG(TargetName||'('||TargetCode||')', ',') WITHIN GROUP(ORDER BY TargetCode) AS TargetData
	        FROM 		EVENT_SHARE ES
	        LEFT JOIN 	SYS_OBJECT_USER_BASEGROUP SOUB ON ES.SpecifierCode = SOUB.UserCode AND SOUB.JobType = 'Origin'
	        LEFT JOIN 	SYS_OBJECT_DOMAIN SOD ON SOUB.CompanyCode = SOD.DomainCode
			<!-- WHERE 절 -->
			<trim prefix="WHERE" prefixOverrides="AND | OR ">
				<if test="domainID != null and domainID != '' ">
					AND SOD.DomainID = #{domainID}
				</if>
			    <if test="selectSearchType == 'SpecifierCode' and shareUserName !=null and shareUserName !='' ">
					AND SpecifierName LIKE '%'||#{shareUserName}||'%'
				</if>
				<if test="selectSearchType == 'TargetCode' and shareUserName !=null and shareUserName !='' ">
					AND TargetName LIKE '%'||#{shareUserName}||'%'
				</if>
				<if test="startDate != null and startDate != ''">
					<![CDATA[ AND StartDate >= #{startDate} ]]>
				</if>
				<if test="endDate != null and endDate != '' ">
				    <![CDATA[ AND EndDate <= #{endDate} ]]>
				</if>
			</trim>
	        GROUP BY SpecifierCode, SpecifierName
		) A
    </select>
    
    <insert id="insertShareSchedule" parameterType="clist">
    	INSERT ALL
        <foreach collection="list" item="targetData" index="index" separator=" ">
            INTO EVENT_SHARE (
            	TargetCode
				, TargetName
				, SpecifierCode
				, SpecifierName
				, StartDate
				, EndDate
				, RegisterCode
				, RegistDate
	        )
	        VALUES
            (
	        	#{targetData.TargetCode}
				, #{targetData.TargetName}
				, #{targetData.SpecifierCode}
				, #{targetData.SpecifierName}
				, #{targetData.StartDate}
				, #{targetData.EndDate}
				, #{targetData.RegisterCode}
				, SYSDATE
	        )
        </foreach>
        SELECT * FROM DUAL
  </insert>
    
    <select id="selectOneShareScheduleData" parameterType="cmap" resultType="cmap">
        SELECT
        	  ShareID AS "ShareID"
        	, SpecifierCode AS "SpecifierCode"
        	, SpecifierName AS "SpecifierName"
        	, TargetCode AS "TargetCode"
        	, FN_BASEGETDICTIONARY_S(#{lang}, TargetName) AS "TargetName"
        	, TO_CHAR(StartDate, 'YYYY-MM-DD') AS "StartDate"
			, TO_CHAR(EndDate, 'YYYY-MM-DD') AS "EndDate"
        FROM EVENT_SHARE
        WHERE SpecifierCode = #{SpecifierCode}
    </select>
    
    <delete id="deleteShareSchedule" parameterType="cmap">
        DELETE FROM EVENT_SHARE
        WHERE
        <if test="SpecifierCodeArr == null or SpecifierCodeArr.length == 0">
			SpecifierCode = #{SpecifierCode}
		</if>
        <if test="SpecifierCodeArr != null and SpecifierCodeArr.length > 0">
        	SpecifierCode in 
	        <foreach collection="SpecifierCodeArr" item="item" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>	
    </delete>
    
</mapper>
