<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="groupware.workreport">
	
 	<select id="selectSetWorkTimeList" parameterType="cmap" resultType="cmap">
 		/* queryID : groupware.workreport.selectSetWorkTimeList */
		SELECT year, month, workday, registdate, modifydate 
		FROM WORKREPORT_WORKDAY		
		<where>
		    <if test="year != null and year != ''">
		        YEAR = #{year}
		    </if>
		</where>
		<trim prefix="ORDER BY" prefixOverrides =",">
			<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection != ''">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("month")'>month</when>
					<when test='sortColumn.equalsIgnoreCase("workday")'>workday</when>
					<when test='sortColumn.equalsIgnoreCase("registdate")'>registdate</when>
					<when test='sortColumn.equalsIgnoreCase("modifydate")'>modifydate</when>
					<otherwise>year</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if> 
		</trim>
		<if test="pageSize != null and pageOffset != null">
		    LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>  
	</select>
	
 	<select id="selectSetWorkTimeCnt" parameterType="cmap" resultType="java.lang.Long">
 		/* queryID : groupware.workreport.selectSetWorkTimeCnt */
		SELECT COUNT(*) AS CNT 
		  FROM WORKREPORT_WORKDAY
		<where>
		    <if test="year != null and year != ''">
		        YEAR = #{year}
		    </if>
		</where>
	</select>
	
 	<select id="cntWorkTimeSetting" parameterType="cmap" resultType="cmap">
 	    SELECT COUNT(*) AS CNT 
 	      FROM WORKREPORT_WORKDAY
 	     WHERE YEAR = #{year} AND MONTH = #{month}
 	</select>
 	
 	<insert id="insertWorkTimeSetting" parameterType="cmap">
 		INSERT INTO WORKREPORT_WORKDAY (YEAR, MONTH, WORKDAY, REGISTDATE)
 		VALUES (#{year}, #{month}, #{workDay}, now(3))    
 	</insert>
 	
 	<update id="updateWorkTimeSetting" parameterType="cmap">
 	    UPDATE WORKREPORT_WORKDAY
 	       SET WORKDAY = #{workDay},
 	       	   MODIFYDATE = now(3)
 	     WHERE YEAR = #{year} AND MONTH = #{month}    
 	</update>
 	
 	<delete id="deleteWorkTimeSetting" parameterType="cmap">
 		DELETE FROM WORKREPORT_WORKDAY 
 		 WHERE CONCAT(YEAR, MONTH) IN
 		 <foreach collection="checked" item="item" index="index" separator="," open="(" close=")">
		    #{item}
		</foreach>    
 	</delete>
 	
 	
 	
 	<select id="duplicateCate" parameterType="cmap" resultType="java.lang.Long">
 	    SELECT COUNT(*) CNT
 	      FROM 
 	     <choose>
 	         <when test="cate == 'type'">
 	             WORKREPORT_JOB_CATE_TYPE
 	         </when>
 	         <otherwise>
 	             WORKREPORT_JOB_CATE_DIVISION
 	         </otherwise>
 	     </choose>
 	     WHERE 
 	     <choose>
 	         <when test="cate == 'type'">
 	             typeCode = #{code}
 	         </when>
 	         <otherwise>
 	             divisionCode = #{code}
 	         </otherwise>
 	     </choose>
 	</select>
 	
 	<insert id="insertCate" parameterType="cmap">
 	    INSERT INTO 
 	    <choose>
 	         <when test="cate == 'type'">
 	             WORKREPORT_JOB_CATE_TYPE (typeCode, displayName)
 	         </when>
 	         <otherwise>
 	             WORKREPORT_JOB_CATE_DIVISION (divisionCode, displayName)
 	         </otherwise>
 	     </choose>
 	     VALUES (#{code}, #{name})
 	</insert>
 	
 	<select id="selectCateTypeList" parameterType="cmap" resultType="cmap">
 	    SELECT TypeCode AS code, displayName AS name, 0 AS refcnt
 	      FROM WORKREPORT_JOB_CATE_TYPE
 	     ORDER BY displayName ASC
 	    <if test="pageSize != null and pageOffset != null">
		    LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>
 	</select>
 	
 	<select id="selectCateDivList" parameterType="cmap" resultType="cmap">
 	   SELECT DivisionCode AS code, displayName AS name, 0 AS refcnt
 	      FROM WORKREPORT_JOB_CATE_DIVISION
 	     ORDER BY displayName ASC
 	    <if test="pageSize != null and pageOffset != null">
		    LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>
 	</select>
 	
 	<select id="selectCateTypeCnt" parameterType="cmap" resultType="java.lang.Long">
 	    SELECT COUNT(*)
 	      FROM WORKREPORT_JOB_CATE_TYPE
 	</select>
 	
 	<select id="selectCateDivCnt" parameterType="cmap" resultType="java.lang.Long">
 	   SELECT COUNT(*)
 	      FROM WORKREPORT_JOB_CATE_DIVISION
 	</select>
 	
 	<delete id="deleteCate" parameterType="cmap">
 	    DELETE FROM 
 	    <choose>
 	         <when test="cate == 'type'">
 	             WORKREPORT_JOB_CATE_TYPE WHERE typeCode = #{code}
 	         </when>
 	         <otherwise>
 	             WORKREPORT_JOB_CATE_DIVISION WHERE divisionCode = #{code}
 	         </otherwise>
 	     </choose>
 	</delete>
 	
 	<insert id="insertDivisionDefaultType" parameterType="cmap">
 	    INSERT INTO WORKREPORT_JOB_CATE (DivisionCode, TypeCode)
 	    VALUES 
 	    <foreach collection="newcode" item="item" separator=",">
 	        (#{seldiv}, #{item})
 	    </foreach>
 	</insert>
 	
 	<delete id="deleteDivisionDefaultType" parameterType="cmap">
 	    DELETE FROM WORKREPORT_JOB_CATE 
 	     WHERE DivisionCode = #{seldiv} AND TypeCode IN 
 	     <foreach collection="delcode" item="item" separator="," open="(" close=")">
 	         #{item}
 	     </foreach>
 	</delete>
 	
 	<select id="selectCateTypeSelList" parameterType="cmap" resultType="cmap">
 	    SELECT A.TypeCode AS code, B.displayName AS name
 	      FROM WORKREPORT_JOB_CATE AS A
 	     INNER JOIN WORKREPORT_JOB_CATE_TYPE AS B
 	        ON A.TypeCode = B.TypeCode
 	    WHERE A.DivisionCode = #{code}
 	    ORDER BY B.displayName ASC
 	</select>
 	
 	<insert id="insertWork" parameterType="cmap">
 	    INSERT INTO WORKREPORT_JOB (JobName, JobDivision, IsUse, ManagerCode, CreatorCode, CreateDate, StartDate,EndDate, ProjectCode, MappingID)
 	    VALUES (#{jobName}, #{jobDivision}, #{useYN}, #{managerCode}, #{creatorCode}, now(3) , #{startDate}, #{endDate}, #{ProjectCode}, #{MappingID})
 	</insert>
 	
 	<select id="selectWorkJobNumber" parameterType="cmap" resultType="java.lang.Long">
    	SELECT IFNULL(MAX(RIGHT(ProjectCode, 4)), 0) + 1
		FROM WORKREPORT_JOB
		WHERE LEFT(ProjectCode, 2) = #{ProjectDivCode}
		AND RIGHT(LEFT(ProjectCode, 7), 4) = #{year}
 	</select>
 	
 	<select id="selectWorkJobCnt" parameterType="cmap" resultType="java.lang.Long">
 		/* queryID : groupware.workreport.selectWorkJobCnt */
    	SELECT COUNT(*) CNT FROM WORKREPORT_JOB AS A
    	INNER JOIN WORKREPORT_JOB_CATE_DIVISION AS C ON A.JobDivision = C.DivisionCode
    	<trim prefix="WHERE" prefixOverrides="AND |OR ">
	        <if test="division != null and division != ''">
	            A.JobDivision = #{division}
	        </if>
	        <if test="useyn != null and useyn != ''">
	            AND A.IsUse = #{useyn}
	        </if>
	        <if test="searchtext != null and searchtext != ''">
	            AND A.JobName like CONCAT('%',#{searchtext},'%')
	        </if>
    	</trim>
 	</select>
 	
 	<select id="selectWorkJobList" parameterType="cmap" resultType="cmap">
 		/* queryID : groupware.workreport.selectWorkJobList */
 	    SELECT * FROM (
 	    SELECT A.JobID, A.JobName, A.JobDivision, A.ManagerCode, A.IsUse, 
 	    	   A.CreateDate, A.CreatorCode, IFNULL(B.DisplayName, '') AS ManagerName, C.DisplayName AS JobDivisionName
 	      FROM WORKREPORT_JOB AS A
 	    LEFT OUTER JOIN covi_smart4j.sys_object_user AS B ON A.ManagerCode = B.UserCode
 	    INNER JOIN WORKREPORT_JOB_CATE_DIVISION AS C ON A.JobDivision = C.DivisionCode
 	    <trim prefix="WHERE" prefixOverrides="AND |OR ">
 	        <if test="division != null and division != ''">
 	            A.JobDivision = #{division}
 	        </if>
 	        <if test="useyn != null and useyn != ''">
 	            AND A.IsUse = #{useyn}
 	        </if>
 	        <if test="searchtext != null and searchtext != ''">
 	            AND A.JobName like CONCAT('%',#{searchtext},'%')
 	        </if>
 	    </trim>
 	    ) AS A
 	    <trim prefix="ORDER BY" prefixOverrides =",">
			<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection != ''">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("JobDivisionName")'>JobDivisionName</when>
					<when test='sortColumn.equalsIgnoreCase("ManagerName")'>ManagerName</when>
					<when test='sortColumn.equalsIgnoreCase("CreateDate")'>CreateDate</when>
					<when test='sortColumn.equalsIgnoreCase("IsUse")'>IsUse</when>
					<otherwise>JobName</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if> 
		</trim>
 	    <if test="pageSize != null and pageOffset != null">
		    LIMIT #{pageSize} OFFSET #{pageOffset}
		</if> 
 	</select>
 	
 	<update id="updateWorkUseYn" parameterType="cmap">
 	    UPDATE WORKREPORT_JOB
 	       SET IsUse = #{useyn}
 	     WHERE JobID = #{jobid} 
 	</update>
 	
 	<delete id="deleteWorkJob" parameterType="cmap">
 	    DELETE FROM WORKREPORT_JOB
 	     WHERE JobID IN 
 	     <foreach collection="deleteids" item="item" open="(" separator="," close=")">
 	         #{item}
 	     </foreach>
 	</delete>
 	
 	<select id="selectOneWorkJob" parameterType="cmap" resultType="cmap">
 		 SELECT A.JobID, A.JobName, A.JobDivision, A.ManagerCode, A.IsUse, 
 	    	   A.CreateDate, A.CreatorCode, IFNULL(B.DisplayName, '') AS ManagerName, C.DisplayName AS JobDivisionName, A.StartDate, A.EndDate
 	      FROM WORKREPORT_JOB AS A
 	    LEFT OUTER JOIN covi_smart4j.sys_object_user AS B ON A.ManagerCode = B.UserCode
 	    INNER JOIN WORKREPORT_JOB_CATE_DIVISION AS C ON A.JobDivision = C.DivisionCode
 	    WHERE JobID = #{jobid}
 	</select>
 	
 	<update id="updateWork" parameterType="cmap">
 	    UPDATE WORKREPORT_JOB
 	       SET JobName = #{jobName},
 	       	   JobDivision = #{jobDivision},
 	       	   ManagerCode = #{managerCode},
 	       	   IsUse = #{useYN},
 	       	   StartDate = #{startDate},
 	       	   EndDate = #{endDate}
 	     WHERE JobID = #{jobId}
 	</update>
 	
 	<select id="duplicateOSGrade" parameterType="cmap" resultType="java.lang.Long">
 	    SELECT COUNT(*) 
 	      FROM WORKREPORT_GRADE 
 	     WHERE ApplyYear = #{year} AND GradeKind = #{grade} AND MemberType = #{memberType}
 	</select>
 	
 	<insert id="insertOSGrade" parameterType="cmap">
 	    INSERT INTO WORKREPORT_GRADE (ApplyYear, MemberType, GradeKind, MonthPrice, DayPrice, MonthPriceEx, GradeSeq)
 	    VALUES (#{year}, #{memberType}, #{grade}, #{mmAmount}, #{mdAmount}, #{mmExAmount}, #{seq})
 	</insert>
 	
 	<select id="countOSGrade" parameterType="cmap" resultType="java.lang.Long">
 	    SELECT COUNT(*)
 	      FROM WORKREPORT_GRADE
 	     WHERE ApplyYear = #{year} AND MemberType = 'O' AND GradeKind IN ('S', 'H', 'M', 'N')
	</select>
	
 	<select id="listOSGrade" parameterType="cmap" resultType="cmap">
 	    SELECT * 
 	      FROM WORKREPORT_GRADE
 	     WHERE ApplyYear = #{year} AND MemberType = 'O' AND GradeKind IN ('S', 'H', 'M', 'N')
 	     ORDER BY GradeSeq ASC
 	</select>
 	
 	<delete id="deleteOSGrade" parameterType="cmap">
 	    DELETE FROM WORKREPORT_GRADE
 	     WHERE ApplyYear = #{year} AND MemberType = 'O'
 	</delete>
 	
 	<update id="updateOSGrade" parameterType="cmap">
 	    UPDATE WORKREPORT_GRADE
 	       SET MonthPrice = #{MonthPrice}, 
 	           MonthPriceEx = #{MonthPriceEx}
 	     WHERE ApplyYear = #{ApplyYear} AND MemberType = 'O' AND GradeKind = #{GradeKind}
 	</update>
 	
 	<insert id="reuseOSGrade" parameterType="cmap">
 	    INSERT INTO WORKREPORT_GRADE (ApplyYear, MemberType, GradeKind, MonthPrice, DayPrice, MonthPriceEx, GradeSeq)
 	    SELECT #{ApplyYear}, G.MemberType, G.GradeKind, G.MonthPrice, G.DayPrice, G.MonthPriceEx, G.GradeSeq
 	      FROM WORKREPORT_GRADE AS G
 	     WHERE ApplyYear = (#{ApplyYear} - 1) AND MemberType = 'O'
 	        ON DUPLICATE KEY UPDATE MonthPrice = G.MonthPrice, MonthPriceEx = G.MonthPriceEx
 	</insert>
 	
 	
 	<select id="checkcalendar" parameterType="cmap" resultType="java.lang.Long">
 	    SELECT CASE COUNT(*) WHEN 0 THEN 0 ELSE CalID END AS CalID
 	      FROM WORKREPORT_CALENDAR
 	     WHERE StartDate = #{StartDate}
 	</select>
 	
 	<select id="nextweekofmonth" parameterType="cmap" resultType="java.lang.Long">
 	    SELECT IFNULL(MAX(WeekOfMonth), 0) + 1 FROM WORKREPORT_CALENDAR WHERE Year = #{Year} AND Month = #{Month}
 	</select>
 	
 	<insert id="insertcalendar" parameterType="cmap">
 	    INSERT INTO WORKREPORT_CALENDAR (Year, Month, Day, WeekOfMonth, StartDate, EndDate)
 	    VALUES (#{Year}, #{Month}, #{Day}, #{WeekOfMonth}, #{StartDate}, #{EndDate})
 	    
 	    <selectKey keyProperty="CalID" resultType="Integer" order="AFTER">
 	        SELECT LAST_INSERT_ID()
 	    </selectKey>
 	</insert>
 	
 	<select id="selectcalendar" parameterType="cmap" resultType="cmap">
 	    SELECT * 
 	      FROM WORKREPORT_CALENDAR
 	     WHERE CalID = #{calID}
 	</select>
 	
 	<select id="selectcalendarbeforeandnext" parameterType="cmap" resultType="cmap">
 	   <![CDATA[
 	    SELECT IFNULL((
			 SELECT CalID
			  FROM WORKREPORT_CALENDAR 
			 WHERE StartDate < (SELECT StartDate FROM WORKREPORT_CALENDAR WHERE CalID = #{calID})
			 ORDER BY StartDate DESC
			 LIMIT 0, 1), 0) AS `BEFORE`, 
			 IFNULL((SELECT CalID
			  FROM WORKREPORT_CALENDAR 
			 WHERE StartDate > (SELECT StartDate FROM WORKREPORT_CALENDAR WHERE CalID = #{calID})
			 ORDER BY StartDate ASC
			 LIMIT 0, 1), 0) AS `NEXT`
		]]>
 	</select>
 	
 	<select id="selectcalendardate" parameterType="cmap" resultType="cmap">
 	    <![CDATA[
 	    	SELECT * FROM WORKREPORT_CALENDAR WHERE #{date} >= StartDate AND #{date} <= EndDate
		]]>
 	</select>
 	    
 	
 	<select id="getregulargrade" parameterType="cmap" resultType="cmap">
 	   <![CDATA[
 	   	   SELECT 'R' AS MemberType,  #{JobPositionCode} AS JobPositionCode, 
       CASE 
	    WHEN (#{JobPositionCode} > (   SELECT GroupCode FROM covi_smart4j.sys_object_group WHERE CompanyCode = #{DN_Code} AND GroupType='JobPosition' AND DisplayName = '대리')) 
		 	   THEN 'B'
	    WHEN (#{JobPositionCode} <= (   SELECT GroupCode FROM covi_smart4j.sys_object_group WHERE CompanyCode = #{DN_Code} AND GroupType='JobPosition' AND DisplayName = '대리')) AND
	   	   (#{JobPositionCode} > (   SELECT GroupCode FROM covi_smart4j.sys_object_group WHERE CompanyCode = #{DN_Code} AND GroupType='JobPosition' AND DisplayName = '과장')) 
		      THEN 'N'
		 WHEN (#{JobPositionCode} <= (SELECT GroupCode FROM covi_smart4j.sys_object_group WHERE CompanyCode = #{DN_Code} AND GroupType='JobPosition' AND DisplayName = '과장')) AND
	    	   (#{JobPositionCode} > (SELECT GroupCode FROM covi_smart4j.sys_object_group WHERE CompanyCode = #{DN_Code} AND GroupType='JobPosition' AND DisplayName = '차장')) 
		      THEN 'M'   
		 WHEN (#{JobPositionCode} <= (SELECT GroupCode FROM covi_smart4j.sys_object_group WHERE CompanyCode = #{DN_Code} AND GroupType='JobPosition' AND DisplayName = '차장')) AND
	   	   (#{JobPositionCode} > (SELECT GroupCode FROM covi_smart4j.sys_object_group WHERE CompanyCode = #{DN_Code} AND GroupType='JobPosition' AND DisplayName = '부장')) 
		      THEN 'H'
		 WHEN #{JobPositionCode} <= (SELECT GroupCode FROM covi_smart4j.sys_object_group WHERE CompanyCode = #{DN_Code} AND GroupType='JobPosition' AND DisplayName = '부장')
		      THEN 'S'
 	    ELSE 'N' END AS GradeKind
 	    ]]>
 	</select>
 	
 	<select id="getoutsourcinggrade" parameterType="cmap" resultType="cmap">
 	    SELECT 'O' AS MemberType, '' AS JobPositionCode, GradeKind FROM WORKREPORT_OUTSOURCING WHERE OUR_Code = #{userid}
 	</select>
 	
 	<insert id="insertWorkReport" parameterType="cmap">
 	    INSERT INTO WORKREPORT 
 	    	   (UR_Code, GR_Code, CalID, CreateDate, LastWeekPlan, NextWeekPlan, 
 	    	    MonDayReport, TuesDayReport, WedDayReport, ThuDayReport, FriDayReport,
 	    	    SatDayReport, SunDayReport, State, JobPositionCode, MemberType, GradeKind)
 	    VALUES (#{UR_Code}, #{GR_Code}, #{CalID}, now(3), #{LastWeekPlan}, #{NextWeekPlan}, #{MonDayReport}, 
 	    		#{TuesDayReport}, #{WedDayReport}, #{ThuDayReport}, #{FriDayReport}, #{SatDayReport}, #{SunDayReport},
 	    		'W', #{JobPositionCode}, #{MemberType}, #{GradeKind})
 	    <selectKey keyProperty="WorkReportID" resultType="Integer" order="AFTER">
 	        SELECT LAST_INSERT_ID()
 	    </selectKey>
 	</insert>
 	
 	<insert id="insertTimeCard" parameterType="cmap">
 	    INSERT INTO WORKREPORT_TIMECARD 
 	    	   (WorkReportID, WorkDate, JobID, TypeCode, Year, Month, Day, Hour, YearMonth)
 	    VALUES
 	    <foreach collection="list" item="item" separator=", ">
 	        (#{key}, #{item.workDate}, #{item.jobId}, #{item.jobType}, #{item.year}, #{item.month}, #{item.day}, #{item.hour}, #{item.yearMonth})
 	    </foreach>
 	</insert>
 	
 	<select id="selectBaseReport" parameterType="cmap" resultType="cmap">
 	    SELECT A.*, IFNULL(B.DisplayName, C.Name) AS UR_Name 
		  FROM WORKREPORT AS A
		  LEFT OUTER JOIN covi_smart4j.sys_object_user AS B
			 ON A.UR_Code = B.UserCode 
		  LEFT OUTER JOIN WORKREPORT_OUTSOURCING AS C
		    ON A.UR_Code = C.OUR_Code 
 	     WHERE A.UR_Code = #{userCode} AND A.WorkReportID = #{workReportID} AND A.CalID = #{calID}
 	</select>
 	
 	<select id="selectTimeSheetReport" parameterType="cmap" resultType="cmap">
 	    SELECT A.*, B.JobDivision AS DivisionCode, B.JobName, IFNULL(C.displayName, '') AS DivisionName, IFNULL(D.displayName, '') AS TypeName FROM (
			SELECT JobID, TypeCode, 
					 SUM(IF(WorkDate = (SELECT DATE_FORMAT(DATE_ADD(STR_TO_DATE(StartDate, '%Y-%c-%e'), INTERVAL 0 DAY), '%Y-%m-%d')  FROM  WORKREPORT_CALENDAR WHERE CalID = #{calID}), Hour, 0)) AS 'FRI',
					 SUM(IF(WorkDate = (SELECT DATE_FORMAT(DATE_ADD(STR_TO_DATE(StartDate, '%Y-%c-%e'), INTERVAL 1 DAY), '%Y-%m-%d')  FROM  WORKREPORT_CALENDAR WHERE CalID = #{calID}), Hour, 0)) AS 'SAT',
					 SUM(IF(WorkDate = (SELECT DATE_FORMAT(DATE_ADD(STR_TO_DATE(StartDate, '%Y-%c-%e'), INTERVAL 2 DAY), '%Y-%m-%d')  FROM  WORKREPORT_CALENDAR WHERE CalID = #{calID}), Hour, 0)) AS 'SUN',
					 SUM(IF(WorkDate = (SELECT DATE_FORMAT(DATE_ADD(STR_TO_DATE(StartDate, '%Y-%c-%e'), INTERVAL 3 DAY), '%Y-%m-%d')  FROM  WORKREPORT_CALENDAR WHERE CalID = #{calID}), Hour, 0)) AS 'MON',
					 SUM(IF(WorkDate = (SELECT DATE_FORMAT(DATE_ADD(STR_TO_DATE(StartDate, '%Y-%c-%e'), INTERVAL 4 DAY), '%Y-%m-%d')  FROM  WORKREPORT_CALENDAR WHERE CalID = #{calID}), Hour, 0)) AS 'TUE',
					 SUM(IF(WorkDate = (SELECT DATE_FORMAT(DATE_ADD(STR_TO_DATE(StartDate, '%Y-%c-%e'), INTERVAL 5 DAY), '%Y-%m-%d')  FROM  WORKREPORT_CALENDAR WHERE CalID = #{calID}), Hour, 0)) AS 'WED',
					 SUM(IF(WorkDate = (SELECT DATE_FORMAT(DATE_ADD(STR_TO_DATE(StartDate, '%Y-%c-%e'), INTERVAL 6 DAY), '%Y-%m-%d')  FROM  WORKREPORT_CALENDAR WHERE CalID = #{calID}), Hour, 0)) AS 'THU',
					 SUM(Hour) AS SUM
			  FROM WORKREPORT_TIMECARD WHERE WorkReportID = #{workReportID} 
			 GROUP BY JobID, TypeCode) AS A
		 INNER JOIN WORKREPORT_JOB AS B
		    ON A.JobID = B.JobID
		  LEFT OUTER JOIN WORKREPORT_JOB_CATE_DIVISION AS C
		    ON B.JobDivision = C.DivisionCode
		  LEFT OUTER JOIN WORKREPORT_JOB_CATE_TYPE AS D
		    ON A.TypeCode = D.TypeCode
 	     ORDER BY JobID ASC, TypeCode ASC
 	</select>
 	
 	<select id="selectWorkReportID" parameterType="cmap" resultType="cmap">
 	    SELECT IFNULL(WorkReportID, 0) AS WorkReportID, COUNT(*), IFNULL(State, 'W') AS State,
 	    		IFNULL( (SELECT DisplayName FROM covi_smart4j.sys_object_user WHERE UserCode = #{userCode}), '' ) AS UR_Name,
    	 		IFNULL( (SELECT JobPositionName FROM covi_smart4j.sys_object_user_basegroup WHERE UserCode = #{userCode} AND JobType = 'Origin'), '' ) AS JobPositionName
 	      FROM WORKREPORT 
 	     WHERE CalID = #{calID} AND UR_Code = #{userCode}
 	</select>
 	
 	<update id="updateWorkReport" parameterType="cmap">
 	    UPDATE WORKREPORT
 	       SET LastWeekPlan = #{LastWeekPlan},
 	           NextWeekPlan = #{NextWeekPlan},
 	           MonDayReport = #{MonDayReport},
 	           TuesDayReport = #{TuesDayReport},
 	           WedDayReport = #{WedDayReport},
 	           ThuDayReport = #{ThuDayReport},
 	           FriDayReport = #{FriDayReport},
 	           SatDayReport = #{SatDayReport},
 	           SunDayReport = #{SunDayReport}
 	     WHERE WorkReportID = #{WorkReportID} AND UR_Code = #{UR_Code}
 	</update>
 	
 	<update id="updateTimeCard" parameterType="cmap">
 	    INSERT INTO WORKREPORT_TIMECARD (WorkReportID, WorkDate, JobID, TypeCode, Year, Month, Day, Hour, YearMonth)
 	    VALUES
 	    <foreach collection="list" item="item" separator=", ">
 	        (#{item.workReportId}, #{item.workDate}, #{item.jobId}, #{item.jobType}, #{item.year}, #{item.month}, #{item.day}, #{item.hour}, #{item.yearMonth})
 	    </foreach>
 	</update>
 	
 	<delete id="clearZeroHourData">
		DELETE FROM WORKREPORT_TIMECARD WHERE Hour = 0 AND WorkReportID = #{workReportID}
 	</delete>
 	
 	<delete id="deleteAllTimeCard" parameterType="cmap">
 	    DELETE FROM WORKREPORT_TIMECARD
 	    WHERE WorkReportID = #{WorkReportID}
 	</delete>

 	<delete id="deleteTimeCard" parameterType="cmap">
 	    DELETE FROM WORKREPORT_TIMECARD
 	     WHERE WorkReportID = #{key}
 	       AND (JobID, TypeCode) NOT IN 
 	     <foreach collection="list" item="item" separator="," open=" (" close=")">
 	        (#{item.jobId}, #{item.jobType})
 	    </foreach>
 	</delete>
 	
 	<select id="selectManageUsers" parameterType="cmap" resultType="cmap">
 	   <![CDATA[
 	   SELECT * 
	     FROM WORKREPORT_OUTSOURCING 
		WHERE (FirstCode = #{currentUser} OR SecondCode = #{currentUser})
		  AND ContractStartDate <= (SELECT EndDate FROM WORKREPORT_CALENDAR WHERE CalID = #{calId}) 
		  AND ContractEndDate >= (SELECT StartDate FROM WORKREPORT_CALENDAR WHERE CalID = #{calId})
 	   ]]>
 	</select>
 	
 	<select id="chkIsManagerByUserCode" parameterType="cmap" resultType="java.lang.Long">
 	    SELECT COUNT(*) 
  	      FROM WORKREPORT_OUTSOURCING 
 		 WHERE OUR_Code = #{usercode} AND (FirstCode = #{currentUser} OR SecondCode = #{currentUser})
 	</select>
 	
 	<select id="selectWorkReportMyListCnt" parameterType="cmap" resultType="java.lang.Long">
 		/* queryID : groupware.workreport.selectWorkReportMyListCnt */
		SELECT COUNT(*) 
		  FROM (
			SELECT C.Month, C.StartDate, C.EndDate, C.WeekOfMonth, W.WorkReportID, W.UR_Code, W.GR_Code, C.CalID, W.CreateDate,
			  		 W.ReportDate, W.ApprovalDate, W.ApproverCode, IFNULL(W.State, 'W') AS State, W.Comment, U.DisplayName AS ApproverName
			  FROM (SELECT * FROM WORKREPORT_CALENDAR WHERE EndDate <![CDATA[ >= ]]>( SELECT IFNULL(EnterDate, '1970-01-01') FROM covi_smart4j.sys_object_user WHERE UserCode = #{userCode})) AS C
			  LEFT OUTER JOIN (SELECT * FROM WORKREPORT WHERE UR_Code = #{userCode}) AS W
			    ON C.CalID = W.CalID 
			 LEFT OUTER JOIN covi_smart4j.sys_object_user  AS U
			    ON W.ApproverCode = U.UserCode ) AS TB
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
 	        <if test="startDate != null and startDate != ''">
 	            DATE_FORMAT(StartDate, '%Y-%m-%d') <![CDATA[ >= ]]> DATE_FORMAT(#{startDate}, '%Y-%m-%d')
 	        </if>
 	        <if test="endDate != null and endDate != ''">
 	            AND DATE_FORMAT(EndDate, '%Y-%m-%d') <![CDATA[ <= ]]> DATE_FORMAT(#{endDate}, '%Y-%m-%d')
 	        </if>
 	        <if test="(division != null and division != '') or (jobid != null and jobid != '') or (type != null and type != '')">
 	             AND ( SELECT COUNT(*) FROM WORKREPORT_TIMECARD AS A
				  		INNER JOIN WORKREPORT_JOB AS B 
				     	   ON A.JobID = B.JobID  
		 		  		WHERE WorkReportID = TB.WorkReportID 
		 		  			<if test="division != null and division != ''">
		 		  			    AND B.JobDivision = #{division}
		 		  			</if>
		 		  			<if test="jobid != null and jobid != ''">
		 		  			    AND A.JobID = #{jobid}
		 		  			</if>
		 		  			<if test="type != null and type != ''">
		 		  			    AND A.TypeCode = #{type}
		 		  			</if>
		 		  	  ) > 0
 	        </if>
 	    </trim>
 	</select>
 	
 	<select id="selectWorkReportMyList" parameterType="cmap" resultType="cmap">
 		/* queryID : groupware.workreport.selectWorkReportMyList */
 	    SELECT * 
		  FROM (
			SELECT C.Month, C.StartDate, C.EndDate, C.WeekOfMonth, W.WorkReportID, W.UR_Code, W.GR_Code, C.CalID, W.CreateDate,
			  		 W.ReportDate, W.ApprovalDate, W.ApproverCode, IFNULL(W.State, 'W') AS State, W.Comment, U.DisplayName AS ApproverName
			  FROM (SELECT * FROM WORKREPORT_CALENDAR WHERE EndDate <![CDATA[ >= ]]> ( SELECT IFNULL(EnterDate, '1970-01-01') FROM covi_smart4j.sys_object_user WHERE UserCode = #{userCode})) AS C
			  LEFT OUTER JOIN (SELECT * FROM WORKREPORT WHERE UR_Code = #{userCode}) AS W
			    ON C.CalID = W.CalID 
			  LEFT OUTER JOIN covi_smart4j.sys_object_user  AS U
			    ON W.ApproverCode = U.UserCode ) AS TB
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
 	        <if test="startDate != null and startDate != ''">
 	            DATE_FORMAT(StartDate, '%Y-%m-%d') <![CDATA[ >= ]]> DATE_FORMAT(#{startDate}, '%Y-%m-%d')
 	        </if>
 	        <if test="endDate != null and endDate != ''">
 	            AND DATE_FORMAT(EndDate, '%Y-%m-%d') <![CDATA[ <= ]]> DATE_FORMAT(#{endDate}, '%Y-%m-%d')
 	        </if>
 	        <if test="(division != null and division != '') or (jobid != null and jobid != '') or (type != null and type != '')">
 	             AND ( SELECT COUNT(*) FROM WORKREPORT_TIMECARD AS A
				  		INNER JOIN WORKREPORT_JOB AS B 
				     	   ON A.JobID = B.JobID  
		 		  		WHERE WorkReportID = TB.WorkReportID 
		 		  			<if test="division != null and division != ''">
		 		  			    AND B.JobDivision = #{division}
		 		  			</if>
		 		  			<if test="jobid != null and jobid != ''">
		 		  			    AND A.JobID = #{jobid}
		 		  			</if>
		 		  			<if test="type != null and type != ''">
		 		  			    AND A.TypeCode = #{type}
		 		  			</if>
		 		  	  ) > 0
 	        </if>
 	    </trim>
		<trim prefix="ORDER BY" prefixOverrides =",">
			<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection != ''">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("StartDate")'>StartDate</when>
					<when test='sortColumn.equalsIgnoreCase("EndDate")'>EndDate</when>
					<when test='sortColumn.equalsIgnoreCase("ReportDate")'>ReportDate</when>
					<when test='sortColumn.equalsIgnoreCase("State")'>State</when>
					<when test='sortColumn.equalsIgnoreCase("ApprovalDate")'>ApprovalDate</when>
					<when test='sortColumn.equalsIgnoreCase("ApproverName")'>ApproverName</when>
					<otherwise>Month</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if> 
		</trim>
 	    <if test="pageSize != null and pageOffset != null">
		    LIMIT #{pageSize} OFFSET #{pageOffset}
		</if> 
 	</select>
 	
 	<update id="reportWorkReport" parameterType="cmap">
 	    UPDATE WORKREPORT
 	       SET State = 'I', ReportDate = now(3)
 	     WHERE WorkReportID = #{workReportID}
 	</update>
 	
 	<update id="collectWorkReport" parameterType="cmap">
 	    UPDATE WORKREPORT
 	       SET State = 'W', ReportDate = null
 	     WHERE WorkReportID = #{workReportId}
 	</update>
 	
 	<update id="approvalWorkReport" parameterType="cmap">
 	    UPDATE WORKREPORT
 	       SET State = 'A', 
 	       	   ApprovalDate = now(3), 
 	       	   ApproverCode = #{approvorCode}
 	       	   <if test="comment != null">
 	       	       , comment = #{comment}
 	       	   </if>
 	     WHERE WorkReportID IN 
 	     <foreach collection="workReportIds" item="item" open="(" close=")" separator=",">
 	         #{item}
 	     </foreach>
 	</update>
 	
 	<update id="rejectWorkReport" parameterType="cmap">
 	    UPDATE WORKREPORT
 	       SET State = 'R'
			   <if test="comment != null">
 	       	       , comment = #{comment}
 	       	   </if>
 	     WHERE WorkReportID IN
 	     <foreach collection="workReportIds" item="item" open="(" close=")" separator=",">
 	         #{item}
 	     </foreach>
 	</update>
 	
 	<select id="selectTeamMembers" parameterType="cmap" resultType="cmap">
	 	SELECT A.JobPositionName
				, A.UserCode AS UR_Code
				, A.DisplayName AS UR_Name
				, IFNULL(D.NotReportCnt, 0) AS NotReportCnt
				, IFNULL(D.NotApprovalCnt, 0) AS NotApprovalCnt
				, E.Year AS RecentYear
				, E.Month AS RecentMonth
				, E.Day AS RecentDay, E.WeekOfMonth AS RecentWeekOfMonth
				, E.State AS RecentState
		FROM (
				SELECT UR.UserCode, UR.DisplayName, UR.IsUse, UR.IsDisplay, BUR.JobPositionName, BUR.JobTitleSortKey, BUR.JobPositionSortKey, UR.EnterDate 
				FROM sys_object_user AS UR
				LEFT JOIN sys_object_user_basegroup AS BUR  ON UR.UserCode = BUR.UserCode  AND BUR.JobType ='Origin'
				JOIN sys_object_group GR ON BUR.DeptCode=GR.GroupCode
				WHERE GR.GroupPath LIKE CONCAT(#{groupCode},'%')
				AND UR.IsUse = 'Y' AND UR.IsDisplay = 'Y'
				<if test="userCode != null">
					AND UR.UserCode = #{userCode}
				</if>
		) AS A
		 LEFT OUTER JOIN (
								SELECT UserCode
								, COUNT(IF(State = 'W' OR State = 'R', state, null)) AS NotReportCnt
								, COUNT(IF(State = 'I', state, null)) AS NotApprovalCnt
								FROM (
										SELECT A.UserCode
												, B.*
												, IFNULL(C.State, 'W') AS State 
										FROM (
													SELECT UR.UserCode, UR.EnterDate
													FROM sys_object_user AS UR
													LEFT JOIN sys_object_user_basegroup AS BUR  ON UR.UserCode = BUR.UserCode AND BUR.JobType ='Origin'
													JOIN sys_object_group GR ON BUR.DeptCode=GR.GroupCode
													WHERE GR.GroupPath LIKE CONCAT(#{groupCode},'%')
													AND UR.IsUse = 'Y' AND UR.IsDisplay = 'Y'
													<if test="userCode != null">
														AND UR.UserCode = #{userCode}
													</if>
										) AS A
										LEFT OUTER JOIN WORKREPORT_CALENDAR AS B ON  B.EndDate	<![CDATA[ >= ]]> IFNULL(A.EnterDate, '1970-01-01')  
										LEFT OUTER JOIN WORKREPORT AS C ON A.UserCode = C.UR_Code AND B.CalID = C.CalID
								) AS TB
								GROUP BY UserCode 
		) AS D ON A.UserCode = D.UserCode
		LEFT OUTER JOIN (
								SELECT A.UserCode
								, B.*
								, IFNULL(C.State, 'W') AS State
								FROM (
										SELECT UR.UserCode
										FROM sys_object_user AS UR
										LEFT JOIN sys_object_user_basegroup AS BUR  ON UR.UserCode = BUR.UserCode  AND BUR.JobType ='Origin'
										JOIN sys_object_group GR ON BUR.DeptCode=GR.GroupCode
										WHERE GR.GroupPath LIKE CONCAT(#{groupCode},'%')
										AND UR.IsUse = 'Y' AND UR.IsDisplay = 'Y'
										<if test="userCode != null">
											AND UR.UserCode = #{userCode}
										</if>
								) AS A
								RIGHT OUTER JOIN WORKREPORT_CALENDAR AS B ON B.StartDate <![CDATA[ <= ]]>  DATE_FORMAT(now(3), '%Y-%m-%d') AND B.EndDate <![CDATA[ >= ]]> DATE_FORMAT(now(3), '%Y-%m-%d')
								LEFT OUTER JOIN WORKREPORT AS C ON A.UserCode = C.UR_Code AND B.CalID = C.CalID 
		 ) AS E ON A.UserCode = E.UserCode
		 ORDER BY A.JobTitleSortKey, A.JobPositionSortKey, A.EnterDate, A.DisplayName
 	</select>
 	
 	<select id="selectWorkReportTeamListCnt" parameterType="cmap" resultType="java.lang.Long">
 		/* queryID : groupware.workreport.selectWorkReportTeamListCnt */
 	    SELECT COUNT(*) FROM 
		(
			SELECT C.Month, C.StartDate, C.EndDate, C.WeekOfMonth, W.WorkReportID, U.UserCode AS UR_Code, C.CalID, U.DisplayName AS UR_Name,
	   	     	W.ReportDate, W.ApprovalDate, IFNULL(W.State, 'W') AS State, W.Comment, BG.JobPositionCode, BG.JobPositionName
		  	FROM (
				SELECT * FROM sys_object_user WHERE UserCode IN 
				<foreach collection="members" item="item" separator="," open=" (" close=")">
 	        		#{item}
 	    		</foreach>
			) AS U
			 RIGHT OUTER JOIN WORKREPORT_CALENDAR AS C ON 1=1
			  LEFT OUTER JOIN WORKREPORT AS W ON U.UserCode = W.UR_Code AND C.CalID = W.CalID
			 INNER JOIN sys_object_user_basegroup AS BG ON U.UserCode = BG.UserCode AND BG.JobType = 'Origin'
		) AS TB
		WHERE State != 'W' 
 	        <if test="startDate != null and startDate != ''">
 	        	AND DATE_FORMAT(StartDate, '%Y-%m-%d') <![CDATA[ >= ]]> DATE_FORMAT(#{startDate}, '%Y-%m-%d')
 	        </if>
 	        <if test="endDate != null and endDate != ''">
 	            AND DATE_FORMAT(EndDate, '%Y-%m-%d') <![CDATA[ <= ]]> DATE_FORMAT(#{endDate}, '%Y-%m-%d')
 	        </if>
 	        <if test="state != null and state != ''">
 	            AND State = #{state}
 	        </if>
 	        <if test="(division != null and division != '') or (jobid != null and jobid != '') or (type != null and type != '')">
 	             AND ( SELECT COUNT(*) FROM WORKREPORT_TIMECARD AS A
				  		INNER JOIN WORKREPORT_JOB AS B 
				     	   ON A.JobID = B.JobID  
		 		  		WHERE WorkReportID = TB.WorkReportID 
		 		  			<if test="division != null and division != ''">
		 		  			    AND B.JobDivision = #{division}
		 		  			</if>
		 		  			<if test="jobid != null and jobid != ''">
		 		  			    AND A.JobID = #{jobid}
		 		  			</if>
		 		  			<if test="type != null and type != ''">
		 		  			    AND A.TypeCode = #{type}
		 		  			</if>
		 		  	  ) > 0
 	        </if>
 	</select>
 	
 	<select id="selectWorkReportTeamList" parameterType="cmap" resultType="cmap">
 		/* queryID : groupware.workreport.selectWorkReportTeamList */
 	    SELECT * FROM 
		(
			SELECT C.Month, C.StartDate, C.EndDate, C.WeekOfMonth, W.WorkReportID, U.UserCode AS UR_Code, C.CalID, U.DisplayName AS UR_Name,
	   	     	W.ReportDate, W.ApprovalDate, IFNULL(W.State, 'W') AS State, W.Comment, BG.JobPositionCode, BG.JobPositionName
		  	FROM (
				SELECT * FROM sys_object_user WHERE UserCode IN 
				<foreach collection="members" item="item" separator="," open=" (" close=")">
 	        		#{item}
 	    		</foreach>
			) AS U
			 RIGHT OUTER JOIN WORKREPORT_CALENDAR AS C ON 1=1
			  LEFT OUTER JOIN WORKREPORT AS W ON U.UserCode = W.UR_Code AND C.CalID = W.CalID
			 INNER JOIN sys_object_user_basegroup AS BG ON U.UserCode = BG.UserCode AND BG.JobType = 'Origin'
		) AS TB
		WHERE State != 'W' 
 	        <if test="startDate != null and startDate != ''">
 	           	AND DATE_FORMAT(StartDate, '%Y-%m-%d') <![CDATA[ >= ]]> DATE_FORMAT(#{startDate}, '%Y-%m-%d')
 	        </if>
 	        <if test="endDate != null and endDate != ''">
 	            AND DATE_FORMAT(EndDate, '%Y-%m-%d') <![CDATA[ <= ]]> DATE_FORMAT(#{endDate}, '%Y-%m-%d')
 	        </if>
 	        <if test="state != null and state != ''">
 	            AND State = #{state}
 	        </if>
 	        <if test="(division != null and division != '') or (jobid != null and jobid != '') or (type != null and type != '')">
 	             AND ( SELECT COUNT(*) FROM WORKREPORT_TIMECARD AS A
				  		INNER JOIN WORKREPORT_JOB AS B 
				     	   ON A.JobID = B.JobID  
		 		  		WHERE WorkReportID = TB.WorkReportID 
		 		  			<if test="division != null and division != ''">
		 		  			    AND B.JobDivision = #{division}
		 		  			</if>
		 		  			<if test="jobid != null and jobid != ''">
		 		  			    AND A.JobID = #{jobid}
		 		  			</if>
		 		  			<if test="type != null and type != ''">
		 		  			    AND A.TypeCode = #{type}
		 		  			</if>
		 		  	  ) > 0
 	        </if>
		 ORDER BY StartDate DESC, JobPositionCode ASC, UR_Name ASC
 	    <if test="pageSize != null and pageOffset != null">
		    LIMIT #{pageSize} OFFSET #{pageOffset}
		</if> 
 	</select>
 	
 	<select id="selectTeamProject" parameterType="cmap" resultType="cmap">
		SELECT STRAIGHT_JOIN UR_Code, GR_Code, UR_Name, JobPositionName, SUM(Hour) AS MonthHour, TotalHour, JobName, JobID FROM (
			SELECT W.UR_Code, W.CalID, J.JobName, W.GR_Code, W.MemberType, TotalHour, UR.DisplayName AS UR_Name, BG.JobPositionName, GR.GroupPath,
					BG.JobTitleSortKey, BG.JobPositionSortKey, UR.EnterDate,
				    T.*
		     FROM WORKREPORT_TIMECARD AS T
			 INNER JOIN (SELECT * FROM WORKREPORT WHERE State = 'A') AS W ON T.WorkReportID = W.WorkReportID
			 INNER JOIN WORKREPORT_JOB AS J ON T.JobID = J.JobID 
			 INNER JOIN (SELECT UR_Code, JobID, SUM(Hour) AS TotalHour FROM (
									SELECT WA.UR_Code, WA.MemberType, WA.GR_Code, GRA.GroupPath, TA.* FROM WORKREPORT_TIMECARD AS TA
									 INNER JOIN (SELECT * FROM WORKREPORT WHERE State = 'A') AS WA ON TA.WorkReportID = WA.WorkReportID
									 INNER JOIN WORKREPORT_JOB AS JA ON TA.JobID = JA.JobID
									 LEFT OUTER JOIN sys_object_group AS GRA ON WA.GR_Code = GRA.GroupCode
							) AS TBA
									WHERE MemberType = 'R' AND GroupPath like CONCAT('%;',#{grcode},';%') 
									AND GR_Code  <![CDATA[ <> ]]>  '1_RetireDept'
									GROUP BY UR_Code, JobID
							) AS SUMT ON W.UR_Code = SUMT.UR_Code AND T.JobID = SUMT.JobID
			 LEFT OUTER JOIN sys_object_user AS UR ON W.UR_Code = UR.UserCode
			 LEFT OUTER JOIN sys_object_group AS GR ON W.GR_Code = GR.GroupCode
			 LEFT OUTER JOIN sys_object_user_basegroup AS BG ON UR.UserCode = BG.UserCode AND BG.JobType = 'Origin'
			) AS TB
		WHERE MemberType = 'R' AND GroupPath like CONCAT('%;',#{grcode},';%')  AND 
			  YearMonth <![CDATA[ >= ]]> #{startDate} AND YearMonth <![CDATA[ <= ]]> #{endDate}
		GROUP BY UR_Code, JobID
		ORDER BY JobTitleSortKey, JobPositionSortKey, EnterDate, UR_Name
 	</select>
 	
 	<select id="selectTeamProjectSummary" parameterType="cmap" resultType="cmap">
		SELECT SUM(Hour) AS MonthHour, TotalHour, JobName, JobID FROM (
			SELECT W.UR_Code, W.CalID, J.JobName, W.GR_Code, W.MemberType, TotalHour, UR.DisplayName AS UR_Name, BG.JobPositionName, GR.GroupPath,
				    T.*
			 FROM WORKREPORT_TIMECARD AS T
			 INNER JOIN (SELECT * FROM WORKREPORT WHERE State = 'A') AS W ON T.WorkReportID = W.WorkReportID
			 INNER JOIN WORKREPORT_JOB AS J ON T.JobID = J.JobID 
			 INNER JOIN (SELECT UR_Code, JobID, SUM(Hour) AS TotalHour FROM (
									SELECT WA.UR_Code, WA.MemberType, WA.GR_Code, GRA.GroupPath, TA.* FROM WORKREPORT_TIMECARD AS TA
									 INNER JOIN (SELECT * FROM WORKREPORT WHERE State = 'A') AS WA ON TA.WorkReportID = WA.WorkReportID
									 INNER JOIN WORKREPORT_JOB AS JA ON TA.JobID = JA.JobID
									 LEFT OUTER JOIN sys_object_group AS GRA ON WA.GR_Code = GRA.GroupCode
							) AS TBA
									WHERE MemberType = 'R' AND GroupPath like CONCAT('%;',#{grcode},';%') 
									AND GR_Code <![CDATA[ <> ]]> '1_RetireDept'
									GROUP BY UR_Code, JobID
							) AS SUMT ON W.UR_Code = SUMT.UR_Code AND T.JobID = SUMT.JobID
			 LEFT OUTER JOIN sys_object_user AS UR ON W.UR_Code = UR.UserCode
			 LEFT OUTER JOIN sys_object_group AS GR ON W.GR_Code = GR.GroupCode
			 LEFT OUTER JOIN sys_object_user_basegroup AS BG ON UR.UserCode = BG.UserCode AND BG.JobType = 'Origin'
			) AS TB
		WHERE MemberType = 'R' AND GroupPath like CONCAT('%;',#{grcode},';%')  AND 
			  YearMonth <![CDATA[ >= ]]> #{startDate} AND YearMonth <![CDATA[ <= ]]> #{endDate}
		GROUP BY JobID
		ORDER BY MonthHour DESC
 	</select>
 	
 	<select id="selectManageProject" parameterType="cmap" resultType="cmap">
 	    SELECT JobID, JobName, StartDate, EndDate FROM WORKREPORT_JOB 
 	     WHERE (ManagerCode = #{userCode} OR #{isManager} = 'Y') AND IsUse = 'Y' 
 	       AND JobDivision IN 
 	       <foreach collection="divs" item="item" open="(" close=")" separator=",">
 	           #{item}
 	       </foreach>
 	     ORDER BY JobName ASC
 	</select>
 	
 	<select id="selectProjectCost" parameterType="cmap" resultType="cmap">
 	    SELECT YearMonth, UR_Code, UR_Name, GradeKind, MonthPrice, MemberType, JobID, 
				 SUM(StandardHour) AS SumStandardHour, WorkDay, IF(SUM(StandardHour) / ( 8 * WorkDay ) > 1, 1, SUM(StandardHour) / ( 8 * WorkDay )) AS ManMonth, 
				 MonthPrice * IF(SUM(StandardHour) / ( 8 * WorkDay ) > 1, 1, SUM(StandardHour) / ( 8 * WorkDay )) AS ManPrice, SUM(OverTime) AS OverTime, 
				  SUM(OverTime) / ( 8 * WorkDay ) AS OverTimeManMonth, SUM(OverTime) / 8 AS OverTimeManHour, 
				  MonthPrice * (SUM(OverTime) / ( 8 * WorkDay )) * 1.5 AS OverTimeManPrice,
				  SUM(IF(DAY = 1, OverTime, 0)) AS '1',
		  		  SUM(IF(DAY = 2, OverTime, 0)) AS '2',
		  		  SUM(IF(DAY = 3, OverTime, 0)) AS '3',
		  		  SUM(IF(DAY = 4, OverTime, 0)) AS '4',
		  		  SUM(IF(DAY = 5, OverTime, 0)) AS '5',
		  		  SUM(IF(DAY = 6, OverTime, 0)) AS '6',
		  		  SUM(IF(DAY = 7, OverTime, 0)) AS '7',
		  		  SUM(IF(DAY = 8, OverTime, 0)) AS '8',
		  		  SUM(IF(DAY = 9, OverTime, 0)) AS '9',
		  		  SUM(IF(DAY = 10, OverTime, 0)) AS '10',
		  		  SUM(IF(DAY = 11, OverTime, 0)) AS '11',
		  		  SUM(IF(DAY = 12, OverTime, 0)) AS '12',
		  		  SUM(IF(DAY = 13, OverTime, 0)) AS '13',
		  		  SUM(IF(DAY = 14, OverTime, 0)) AS '14',
		  		  SUM(IF(DAY = 15, OverTime, 0)) AS '15',
		  		  SUM(IF(DAY = 16, OverTime, 0)) AS '16',
		  		  SUM(IF(DAY = 17, OverTime, 0)) AS '17',
		  		  SUM(IF(DAY = 18, OverTime, 0)) AS '18',
		  		  SUM(IF(DAY = 19, OverTime, 0)) AS '19',
		  		  SUM(IF(DAY = 20, OverTime, 0)) AS '20',
		  		  SUM(IF(DAY = 21, OverTime, 0)) AS '21',
		  		  SUM(IF(DAY = 22, OverTime, 0)) AS '22',
		  		  SUM(IF(DAY = 23, OverTime, 0)) AS '23',
		  		  SUM(IF(DAY = 24, OverTime, 0)) AS '24',
		  		  SUM(IF(DAY = 25, OverTime, 0)) AS '25',
		  		  SUM(IF(DAY = 26, OverTime, 0)) AS '26',
		  		  SUM(IF(DAY = 27, OverTime, 0)) AS '27',
		  		  SUM(IF(DAY = 28, OverTime, 0)) AS '28',
		  		  SUM(IF(DAY = 29, OverTime, 0)) AS '29',
		  		  SUM(IF(DAY = 30, OverTime, 0)) AS '30',
		  		  SUM(IF(DAY = 31, OverTime, 0)) AS '31'
		  FROM (
		SELECT WR.UR_Code, UR.DisplayName AS UR_Name, WR.GradeKind, IFNULL(MonthPrice, 0) AS MonthPrice, WR.MemberType, WT.*,
				 IF(WT.TypeCode = 'P', IF(WT.Hour > 8, 8, WT.Hour), WT.Hour) AS StandardHour, IFNULL(WD.WorkDay, 20) AS WorkDay,
				 IF(WT.TypeCode = 'P', IF(WT.Hour > 8, WT.Hour - 8, 0), 0) AS OverTime, GD.GradeSeq
		  FROM (SELECT * FROM WORKREPORT WHERE State = 'A') AS WR
		 INNER JOIN WORKREPORT_TIMECARD AS WT ON WR.WorkReportID = WT.WorkReportID
		 LEFT OUTER JOIN sys_object_user AS UR ON WR.UR_Code = UR.UserCode
		 LEFT OUTER JOIN WORKREPORT_GRADE AS GD ON WT.Year = GD.ApplyYear AND WR.MemberType = GD.MemberType AND WR.GradeKind = GD.GradeKind
		 LEFT OUTER JOIN WORKREPORT_WORKDAY AS WD ON WT.Year = WD.Year AND CAST(WT.Month AS UNSIGNED) = CAST(WD.Month AS UNSIGNED)
		) AS TB
		WHERE MemberType = 'R' AND JobID = #{jobId} AND YearMonth <![CDATA[ >= ]]> #{startDate} AND YearMonth <![CDATA[ <= ]]> #{endDate}
		GROUP BY UR_Code, GradeKind, YearMonth
		ORDER BY YearMonth ASC, GradeSeq ASC, UR_Name ASC
 	</select>
 	
 	
 	<select id="selectProjectCostOS" parameterType="cmap" resultType="cmap">
		SELECT YearMonth, UR_Code, Name, GradeKind, MonthPrice, MemberType, JobID, 
				 SUM(StandardHour) AS SumStandardHour, WorkDay, IF((SUM(StandardHour) / ( 8 * WorkDay )) > 1, 1, (SUM(StandardHour) / ( 8 * WorkDay ))) AS ManMonth, 
				 MonthPrice * IF((SUM(StandardHour) / ( 8 * WorkDay )) > 1, 1, (SUM(StandardHour) / ( 8 * WorkDay ))) AS ManPrice
		  FROM (
		SELECT WR.UR_Code, OS.Name, WR.GradeKind, 
			    CASE WHEN OS.ExProjectYN = 'Y' THEN IFNULL(MonthPriceEx, 0) ELSE IFNULL(MonthPrice, 0) END AS MonthPrice, WR.MemberType, WT.*,
				 IF(WT.Hour > 8, 8, WT.Hour) AS StandardHour, IFNULL(WD.WorkDay, 20) AS WorkDay, GD.GradeSeq
		  FROM WORKREPORT AS WR
		 INNER JOIN WORKREPORT_TIMECARD AS WT ON WR.WorkReportID = WT.WorkReportID
		 LEFT OUTER JOIN WORKREPORT_OUTSOURCING AS OS ON WR.UR_Code = OS.OUR_Code
		 LEFT OUTER JOIN WORKREPORT_GRADE AS GD ON WT.Year = GD.ApplyYear AND WR.MemberType = GD.MemberType AND WR.GradeKind = GD.GradeKind
		 LEFT OUTER JOIN WORKREPORT_WORKDAY AS WD ON WT.Year = WD.Year AND CAST(WT.Month AS UNSIGNED) = CAST(WD.Month AS UNSIGNED)
		) AS TB
		WHERE MemberType = 'O' AND JobID = #{jobId} AND YearMonth <![CDATA[ >= ]]> #{startDate} AND YearMonth <![CDATA[ <= ]]> #{endDate}
		GROUP BY UR_Code, GradeKind, YearMonth
		ORDER BY YearMonth ASC, GradeSeq ASC, Name ASC
 	</select>
 	
 	<select id="selectTeamManager" parameterType="cmap" resultType="cmap">
 	    SELECT GROUP_CONCAT(UserCode SEPARATOR ';') AS ManagerCode 
 	    FROM sys_object_user_basegroup
 	    WHERE DeptCode = #{deptCode}
 	    AND JobType = 'Origin'
		AND JobTitleCode IN 
		<foreach  collection="jobTitleCodes" item="item" separator="," open="(" close=")">
 	        #{item}
		</foreach>
 	</select>
 	
 	<select id="selectTeamManagerByUser" parameterType="cmap" resultType="cmap">
 		SELECT GROUP_CONCAT(UserCode SEPARATOR ';') AS ManagerCode 
		FROM sys_object_user_basegroup
		WHERE DeptCode = (SELECT DeptCode FROM sys_object_user_basegroup WHERE UserCode = #{userCode} AND JobType = 'Origin')
		AND JobType = 'Origin'
 		AND JobTitleCode IN 
 		<foreach  collection="jobTitleCodes" item="item" separator="," open="(" close=")">
 	       #{item}
		</foreach>
 	</select>
 	
 	<select id="selectTeamManagerByWrids" parameterType="cmap" resultType="cmap">
		 SELECT GROUP_CONCAT(UserCode SEPARATOR ';') AS ManagerCode 
		  FROM sys_object_user_basegroup
		  WHERE DeptCode IN (
					SELECT DeptCode FROM sys_object_user_basegroup WHERE JobType = 'Origin' AND UserCode IN (
					SELECT UR_Code FROM WORKREPORT WHERE WorkReportID IN 
					<foreach  collection="workReportIds" item="item" separator="," open="(" close=")">
			 	        #{item}
					</foreach>
			  ))
		 AND JobType = 'Origin'
		 AND JobTitleCode IN 
		 <foreach  collection="jobTitleCodes" item="item" separator="," open="(" close=")">
 	        #{item}
		</foreach>
 	</select>
 	
 	<select id="selectApprovalUsers" parameterType="cmap" resultType="cmap">
 	    SELECT GROUP_CONCAT(UR_Code SEPARATOR ';') AS userCodes FROM (SELECT UR_Code FROM WORKREPORT WHERE WorkReportID IN 
 	    <foreach  collection="workReportIds" item="item" separator="," open="(" close=")">
 	        #{item}
		</foreach>
 	    GROUP BY UR_Code) AS A
 	</select>
 	 	
	<select id="selectLastWeekPlan" parameterType="cmap" resultType="cmap">
 	    SELECT IFNULL(B.NextWeekPlan, '') AS LastWeekPlan, IFNULL(MigWorkreportID, 0) AS MigWorkreportID, 
 	    	   COUNT(*) AS CNT 
 	      FROM (
			SELECT * FROM WORKREPORT_CALENDAR 
				WHERE StartDate = (
				SELECT DATE_ADD(STR_TO_DATE(StartDate, '%Y-%m-%d'), INTERVAL -7 DAY) FROM WORKREPORT_CALENDAR WHERE CalID = #{calID}
			)
		) AS A
		INNER JOIN WORKREPORT AS B
		ON A.CalID = B.CalID
		WHERE UR_Code = #{userCode}
 	</select>
 	
	<select id="selectOSCalendarInfo" parameterType="cmap" resultType="cmap">
	    SELECT C.*, W.WorkReportID, W.UR_Code FROM WORKREPORT AS W
		 INNER JOIN WORKREPORT_CALENDAR AS C ON W.CalID = C.CalID
		 WHERE MemberType = 'O' AND UR_Code = #{our_code}
		 ORDER BY C.StartDate DESC
	</select>
	
	<select id="cntApproverSetting" parameterType="cmap" resultType="cmap">
	    SELECT COUNT(*) AS CNT FROM WORKREPORT_APPROVER WHERE approverUserCode = #{urCode} AND approverDeptCode = #{grCode}
	</select>
	
	<insert id="insertApproverSetting" parameterType="cmap">
	    INSERT INTO WORKREPORT_APPROVER (approverUserCode, approverDeptCode) VALUES (#{urCode}, #{grCode})
	</insert>
	
	<select id="selectGroupPath" parameterType="cmap" resultType="cmap">
	    SELECT groupPath FROM sys_object_group WHERE GROUPTYPE = 'DEPT' AND GroupCode = #{grCode}
	</select>
	
	<select id="selectApproverList" parameterType="cmap" resultType="cmap">
		  SELECT A.ApproverNo, U.UserCode AS UR_Code, G.GroupCode AS GR_Code, U.DisplayName AS urName, G.DisplayName AS grName
		  FROM WORKREPORT_APPROVER AS A
		 INNER JOIN sys_object_user AS U ON A.approverUserCode = U.UserCode
		 INNER JOIN sys_object_group AS G ON A.approverDeptCode = G.GroupCode
		 <where>
		     <if test="groupPath != null">
			     G.GroupCode IN 
			     <foreach collection="groupPath" item="item" open="(" close=")" separator=",">
			         #{item}
			     </foreach>
		     </if>
		 </where>
		 ORDER BY G.SortKey
		 <if test="pageSize != null and pageOffset != null">
		    LIMIT #{pageSize} OFFSET #{pageOffset}
		</if> 
	</select>
	
	<select id="selectApproverCnt" parameterType="cmap" resultType="java.lang.Long">
	    SELECT COUNT(*)
		  FROM WORKREPORT_APPROVER AS A
		 INNER JOIN sys_object_user AS U ON A.approverUserCode = U.UserCode
		 INNER JOIN sys_object_group AS G ON A.approverDeptCode = G.GroupCode
		 <where>
		     <if test="groupPath != null">
			     G.GroupCode IN 
			     <foreach collection="groupPath" item="item" open="(" close=")" separator=",">
			         #{item}
			     </foreach>
		     </if>
		 </where>
		 ORDER BY G.SortKey
	</select>
	
	<delete id="deleteApproverSetting" parameterType="cmap">
	    DELETE FROM WORKREPORT_APPROVER
	     WHERE approverNo IN 
	     <foreach collection="deleteList" item="item" open="(" close=")" separator=",">
	         #{item}
	     </foreach>
	</delete>
	
	<select id="selectWorkReportGroupPath" parameterType="cmap" resultType="cmap">
		SELECT G.GroupPath, W.UR_Code FROM WORKREPORT AS W
		INNER JOIN SYS_OBJECT_USER AS U ON W.UR_Code = U.UserCode
		INNER JOIN SYS_OBJECT_USER_BASEGROUP AS BG ON U.UserCode = BG.UserCode
		INNER JOIN SYS_OBJECT_GROUP AS G ON BG.DeptCode = G.GroupCode 
		WHERE W.WorkReportID = #{workReportID}
	</select>
	
	
	<select id="selectApproverListByDept" parameterType="cmap" resultType="cmap">
	    SELECT GROUP_CONCAT(U.UserCode SEPARATOR ';') AS ManagerCode, G.GroupCode AS GR_Code
		  FROM WORKREPORT_APPROVER AS A
		 INNER JOIN sys_object_user AS U ON A.approverUserCode = U.UserCode
		 INNER JOIN sys_object_group AS G ON A.approverDeptCode = G.GroupCode
		 <where>
		     <if test="groupPath != null">
			     G.GroupCode IN 
			     <foreach collection="groupPath" item="item" open="(" close=")" separator=",">
			         #{item}
			     </foreach>
		     </if>
		 </where>
	 	 GROUP BY G.GroupCode
		 ORDER BY G.SortKey DESC
	</select>
	
	<select id="selectDeptInfoByWrids" parameterType="cmap" resultType="java.lang.String">
	    SELECT GROUP_CONCAT(GR_Code SEPARATOR ';') AS GRList FROM (
			SELECT GR_Code FROM WORKREPORT WHERE WorkReportID IN 
			<foreach collection="workReportIds" item="item" open="(" close=")" separator=",">
		         #{item}
	     	</foreach>
			GROUP BY GR_Code ) AS A
	</select>
	
	<select id="selectManagersByDeptList" parameterType="cmap" resultType="java.lang.String">
		SELECT GROUP_CONCAT(approverUserCode SEPARATOR ';') AS ManagerCodes FROM (
		SELECT approverUserCode FROM WORKREPORT_APPROVER AS A
		INNER JOIN (SELECT GroupPath FROM sys_object_group WHERE GroupCode IN 
			<foreach collection="deptList" item="item" open="(" close=")" separator=",">
    		    #{item}
		    </foreach>
		) AS GP ON INSTR(GP.GroupPath, A.ApproverDeptCode) > 0
		GROUP BY approverUserCode) AS TB
	</select>
	
	<select id="selectGroupPathInfo" parameterType="cmap" resultType="cmap">
	    SELECT GROUPPATH FROM sys_object_group WHERE 
		GroupCode IN (SELECT approverDeptCode FROM WORKREPORT_APPROVER WHERE ApproverUserCode = #{userCode})
	</select>
	
	<select id="selectParentApprovor" parameterType="cmap" resultType="java.lang.Long">
	    SELECT COUNT(*) FROM WORKREPORT_APPROVER WHERE ApproverDeptCode IN 
	    <foreach collection="parentGroupCode" item="item" open="(" separator="," close=")">
	        #{item}
	    </foreach>
	</select>

	<select id="selectChildGroupInfo" parameterType="cmap" resultType="cmap">
	    SELECT G.GroupCode AS GR_Code, G.GroupPath, IFNULL(A.ApproverUserCode, '') AS ApproverUserCode FROM sys_object_group AS G 
		  LEFT OUTER JOIN WORKREPORT_APPROVER AS A ON G.GroupCode = A.ApproverDeptCode
	     WHERE GroupPath like CONCAT(#{groupPath},'%') AND IsUse = 'Y' AND GroupPath != #{groupPath} AND GroupType = 'Dept' Order By SortPath
	</select>
	
	<select id="selectApprovalTargetList" parameterType="cmap" resultType="cmap">
		SELECT A.JobPositionName, A.UserCode AS UR_Code, A.DisplayName AS UR_Name, IFNULL(C.NotReportCnt, 0) AS NotReportCnt, IFNULL(C.NotApprovalCnt, 0) AS NotApprovalCnt,
 	    	   E.Year AS RecentYear, E.Month AS RecentMonth, E.Day AS RecentDay, E.WeekOfMonth AS RecentWeekOfMonth, E.State AS RecentState
		  FROM (
					SELECT UR.UserCode, UR.DisplayName, UR.IsUse, UR.IsDisplay, UR.EnterDate, BG.JobPositionSortKey, BG.JobTitleSortKey, BG.JobPositionName 
					 FROM sys_object_user AS UR
					 INNER JOIN sys_object_user_basegroup AS BG ON UR.UserCode = BG.UserCode AND BG.JobType = 'Origin'
					 INNER JOIN sys_object_group AS GR ON BG.DeptCode = GR.GroupCode
					 WHERE 
					 	<if test="UserList != null or DeptList != null">
					 	(
					 	</if>
					 	<if test="UserList != null">
					 	 UR.UserCode IN 
					 		<foreach collection="UserList" item="item" open="(" separator="," close=")">
					 		    #{item}
					 		</foreach>
					    OR
					    </if>
					    <if test="DeptList != null"> 
					    GroupCode IN 
					    	<foreach collection="DeptList" item="item" open="(" separator="," close=")">
					 		    #{item}
					 		</foreach>
					 	</if>
					   <if test="UserList != null or DeptList != null">
					 	) AND
					 	</if>
					   <if test="AttachDeptList != null">
			  		   <choose>
			  		       <when test='flagMine == "Y"'>
			  		           (
				  		           	UR.UserCode NOT IN (
					  		   		SELECT ApproverUserCode FROM WORKREPORT_APPROVER WHERE approverDeptCode IN 
									<foreach collection="AttachDeptList" item="item" open="(" separator="," close=")">
							 		    #{item}
							 		</foreach>
									) OR  UR.UserCode = #{userCode}
			  		           )
			  		       </when>
			  		       <otherwise>
			  		            UR.UserCode NOT IN (
				  		   		SELECT ApproverUserCode FROM WORKREPORT_APPROVER WHERE approverDeptCode IN 
								<foreach collection="AttachDeptList" item="item" open="(" separator="," close=")">
						 		    #{item}
						 		</foreach>
								)
			  		       </otherwise>
			  		   </choose>
			  		  </if>
					GROUP BY UserCode
				 ) AS A
		 LEFT OUTER JOIN (
			SELECT UR_Code
				, COUNT(IF(State = 'W' OR State = 'R', state, null)) AS NotReportCnt
				, COUNT(IF(State = 'I', state, null)) AS NotApprovalCnt FROM 
			(
				SELECT A.UserCode AS UR_Code, B.*, IFNULL(C.State, 'W') AS State FROM (
					SELECT UR.* FROM sys_object_user AS UR
					 INNER JOIN sys_object_user_basegroup AS BG ON UR.UserCode = BG.UserCode AND BG.JobType = 'Origin'
					 INNER JOIN sys_object_group AS GR ON BG.DeptCode = GR.GroupCode
					 WHERE 
					 	<if test="UserList != null or DeptList != null">
					 	(
					 	</if>
					 	<if test="UserList != null">
					 	 UR.UserCode IN 
					 		<foreach collection="UserList" item="item" open="(" separator="," close=")">
					 		    #{item}
					 		</foreach>
					    OR
					    </if>
					    <if test="DeptList != null"> 
					    GroupCode IN 
					    	<foreach collection="DeptList" item="item" open="(" separator="," close=")">
					 		    #{item}
					 		</foreach>
					 	</if>
					   <if test="UserList != null or DeptList != null">
					 	) AND
					 	</if>
					   <if test="AttachDeptList != null">
			  		   <choose>
			  		       <when test='flagMine == "Y"'>
			  		           (
				  		           	 UR.UserCode NOT IN (
					  		   		SELECT ApproverUserCode FROM WORKREPORT_APPROVER WHERE approverDeptCode IN 
									<foreach collection="AttachDeptList" item="item" open="(" separator="," close=")">
							 		    #{item}
							 		</foreach>
									) OR  UR.UserCode = #{userCode}
			  		           )
			  		       </when>
			  		       <otherwise>
			  		           UR.UserCode NOT IN (
				  		   		SELECT ApproverUserCode FROM WORKREPORT_APPROVER WHERE approverDeptCode IN 
								<foreach collection="AttachDeptList" item="item" open="(" separator="," close=")">
						 		    #{item}
						 		</foreach>
								)
			  		       </otherwise>
			  		   </choose>
			  		  </if>
					GROUP BY UserCode
					) AS A
				RIGHT OUTER JOIN WORKREPORT_CALENDAR AS B ON B.EndDate	 <![CDATA[ >= ]]>  IFNULL(A.EnterDate, '1970-01-01') 
				LEFT OUTER JOIN WORKREPORT AS C ON A.UserCode = C.UR_Code AND B.CalID = C.CalID
			) AS TB
			GROUP BY UR_Code) AS C
		 ON A.UserCode = C.UR_Code
		 LEFT OUTER JOIN (
		 	SELECT A.UserCode AS UR_Code, B.*, IFNULL(C.State, 'W') AS State FROM (
					SELECT UR.* FROM sys_object_user AS UR
					 INNER JOIN sys_object_user_basegroup AS BG ON UR.UserCode = BG.UserCode AND BG.JobType = 'Origin'
					 INNER JOIN sys_object_group AS GR ON BG.DeptCode = GR.GroupCode
					 WHERE 
					 	<if test="UserList != null or DeptList != null">
					 	(
					 	</if>
					 	<if test="UserList != null">
					 	UR.UserCode IN 
					 		<foreach collection="UserList" item="item" open="(" separator="," close=")">
					 		    #{item}
					 		</foreach>
					    OR
					    </if>
					    <if test="DeptList != null"> 
					    GroupCode IN 
					    	<foreach collection="DeptList" item="item" open="(" separator="," close=")">
					 		    #{item}
					 		</foreach>
					 	</if>
					   <if test="UserList != null or DeptList != null">
					 	) AND
					 	</if>
					   <if test="AttachDeptList != null">
			  		   <choose>
			  		       <when test='flagMine == "Y"'>
			  		           (
				  		           	UR.UserCode NOT IN (
					  		   		SELECT ApproverUserCode FROM WORKREPORT_APPROVER WHERE approverDeptCode IN 
									<foreach collection="AttachDeptList" item="item" open="(" separator="," close=")">
							 		    #{item}
							 		</foreach>
									) OR UR.UserCode = #{userCode}
			  		           )
			  		       </when>
			  		       <otherwise>
			  		           UR.UserCode NOT IN (
				  		   		SELECT ApproverUserCode FROM WORKREPORT_APPROVER WHERE approverDeptCode IN 
								<foreach collection="AttachDeptList" item="item" open="(" separator="," close=")">
						 		    #{item}
						 		</foreach>
								)
			  		       </otherwise>
			  		   </choose>
			  		  </if>
					GROUP BY UserCode
					) AS A
				RIGHT OUTER JOIN WORKREPORT_CALENDAR AS B ON B.StartDate <![CDATA[ <= ]]> DATE_FORMAT(now(3), '%Y-%m-%d') AND B.EndDate <![CDATA[ >= ]]> DATE_FORMAT(now(3), '%Y-%m-%d')
				LEFT OUTER JOIN WORKREPORT AS C ON A.UserCode = C.UR_Code AND B.CalID = C.CalID 
		 ) AS E
		 ON A.UserCode = E.UR_Code
		 WHERE A.IsUse = 'Y' AND A.IsDisplay = 'Y'
		 ORDER BY A.JobTitleSortKey, A.JobPositionSortKey, A.EnterDate, A.DisplayName
	</select>
	
	
	<select id="selectProjectTime" parameterType="cmap" resultType="cmap">
 	    SELECT YearMonth, UR_Code, UR_Name, GradeKind, MonthPrice, MemberType, JobID, 
			   SUM(WorkHour) AS WorkTime, 
			   SUM(IF(DAY = 1, WorkHour, 0)) AS '1',
	  		   SUM(IF(DAY = 2, WorkHour, 0)) AS '2',
	  		   SUM(IF(DAY = 3, WorkHour, 0)) AS '3',
	  		   SUM(IF(DAY = 4, WorkHour, 0)) AS '4',
	  		   SUM(IF(DAY = 5, WorkHour, 0)) AS '5',
	  		   SUM(IF(DAY = 6, WorkHour, 0)) AS '6',
	  		   SUM(IF(DAY = 7, WorkHour, 0)) AS '7',
	  		   SUM(IF(DAY = 8, WorkHour, 0)) AS '8',
	  		   SUM(IF(DAY = 9, WorkHour, 0)) AS '9',
	  		   SUM(IF(DAY = 10, WorkHour, 0)) AS '10',
	  		   SUM(IF(DAY = 11, WorkHour, 0)) AS '11',
	  		   SUM(IF(DAY = 12, WorkHour, 0)) AS '12',
	  		   SUM(IF(DAY = 13, WorkHour, 0)) AS '13',
	  		   SUM(IF(DAY = 14, WorkHour, 0)) AS '14',
	  		   SUM(IF(DAY = 15, WorkHour, 0)) AS '15',
	  		   SUM(IF(DAY = 16, WorkHour, 0)) AS '16',
	  		   SUM(IF(DAY = 17, WorkHour, 0)) AS '17',
	  		   SUM(IF(DAY = 18, WorkHour, 0)) AS '18',
	  		   SUM(IF(DAY = 19, WorkHour, 0)) AS '19',
	  		   SUM(IF(DAY = 20, WorkHour, 0)) AS '20',
	  		   SUM(IF(DAY = 21, WorkHour, 0)) AS '21',
	  		   SUM(IF(DAY = 22, WorkHour, 0)) AS '22',
	  		   SUM(IF(DAY = 23, WorkHour, 0)) AS '23',
	  		   SUM(IF(DAY = 24, WorkHour, 0)) AS '24',
	  		   SUM(IF(DAY = 25, WorkHour, 0)) AS '25',
	  		   SUM(IF(DAY = 26, WorkHour, 0)) AS '26',
	  		   SUM(IF(DAY = 27, WorkHour, 0)) AS '27',
	  		   SUM(IF(DAY = 28, WorkHour, 0)) AS '28',
	  		   SUM(IF(DAY = 29, WorkHour, 0)) AS '29',
	  		   SUM(IF(DAY = 30, WorkHour, 0)) AS '30',
	  		   SUM(IF(DAY = 31, WorkHour, 0)) AS '31'
		  FROM (
		SELECT WR.UR_Code, UR.DisplayName AS UR_Name, WR.GradeKind, IFNULL(MonthPrice, 0) AS MonthPrice, WR.MemberType, WT.*,
				 WT.Hour AS WorkHour, GD.GradeSeq
		  FROM (SELECT * FROM WORKREPORT WHERE State = 'A') AS WR
		 INNER JOIN WORKREPORT_TIMECARD AS WT ON WR.WorkReportID = WT.WorkReportID
		 LEFT OUTER JOIN sys_object_user AS UR ON WR.UR_Code = UR.UserCode
		 LEFT OUTER JOIN WORKREPORT_GRADE AS GD ON WT.Year = GD.ApplyYear AND WR.MemberType = GD.MemberType AND WR.GradeKind = GD.GradeKind
		 LEFT OUTER JOIN WORKREPORT_WORKDAY AS WD ON WT.Year = WD.Year AND CAST(WT.Month AS UNSIGNED) = CAST(WD.Month AS UNSIGNED)
		) AS TB
		WHERE MemberType = 'R' AND JobID = #{jobId} AND YearMonth <![CDATA[ >= ]]> #{startDate} AND YearMonth <![CDATA[ <= ]]> #{endDate}
		GROUP BY UR_Code, GradeKind, YearMonth
		ORDER BY YearMonth ASC, GradeSeq ASC, UR_Name ASC
 	</select>
</mapper>
