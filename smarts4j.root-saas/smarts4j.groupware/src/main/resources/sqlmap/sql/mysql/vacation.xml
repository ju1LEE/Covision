<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="groupware.vacation">
	<sql id="chooseEmpType">
		<if test='empType != null and empType != "" and formType != null and formType != ""'>
  		 	 <choose>
				<when test='empType == "normal"'>
					<!-- AND #{year} <![CDATA[>=]]> year(EnterDate) + 1  -->
		        </when>
				<when test='empType == "newEmp"'>
					AND #{year} = year(EnterDate)
		        </when>
				<when test='empType == "newEmpForNine"'>
					<choose>
						<when test='formType == "notification1" or formType == "request" '>
						   AND #{year} = YEAR(DATE_ADD(EnterDate, INTERVAL 9 month))
			            </when>
						<when test='formType == "notification2"'>
						   AND #{year} = YEAR(DATE_ADD(DATE_ADD(EnterDate, INTERVAL 11 month), INTERVAL -1 DAY))
						</when>
					</choose>
		        </when>
				<when test='empType == "newEmpForTwo"'>
					<choose>
						<when test='formType == "notification1" or formType == "request" '>
						   AND #{year} = YEAR(DATE_ADD(EnterDate, INTERVAL 11 month))
			            </when>
						<when test='formType == "notification2"'>
						   AND #{year} = YEAR(DATE_ADD(DATE_ADD(EnterDate, INTERVAL 12 month), INTERVAL -11 DAY))
						</when>
					</choose>
		        </when>
			</choose>
  		 </if>
	</sql>

	<select id="selectVacationDayList" parameterType="cmap" resultType="cmap">
	/* groupware.vacation.selectVacationDayList */
		SELECT UR_Code, YEAR, DeptName, JobPositionName, DisplayName, EnterDate, RetireDate, CompanyCode
				,ExpDateStart ,ExpDateEnd, Reason, UseStartDate, UseEndDate, RegisterCode
				,CAST(VacDay AS FLOAT) AS VacDay
				,CAST(UseVacDay AS FLOAT) AS UseVacDay
				,CAST(VacDay - UseVacDay AS FLOAT) AS RemainVacDay
				,CAST(LastVacDay as FLOAT) as LastVacDay
				,CAST(LongVacDay as FLOAT) as LongVacDay
		FROM (
			SELECT A.UR_Code
				, A.YEAR
				, cast(cast(FORMAT(A.VacDay,3) as DECIMAL(9,3)) as float) AS VacDay
				, Fn_BaseGetDictionary_S(#{lang}, B.MultiDeptName) AS DeptName
				, Fn_BaseGetDictionary_S(#{lang}, B.MultiJobPositionName) AS JobPositionName
				, Fn_BaseGetDictionary_S(#{lang}, u.MultiDisplayName) AS DisplayName
				, u.EnterDate
				, u.RetireDate
				, B.CompanyCode
				, DATE_FORMAT(STR_TO_DATE(A.UseStartDate, '%Y%m%d'), '%y.%m.%d') AS ExpDateStart
				, DATE_FORMAT(STR_TO_DATE(A.UseEndDate, '%Y%m%d'), '%y.%m.%d')   AS ExpDateEnd
				, A.UseStartDate
				, A.UseEndDate
				, A.RegisterCode
				, (SELECT IFNULL(SUM(u.VacDay), 0) 
					 FROM vm_vacationinfo_day u 
				LEFT JOIN SYS_BASE_CODE k ON  u.VacFlag =  k.CODE AND k.CodeGroup = 'VACATION_TYPE' AND k.IsUse ='Y'	AND k.DomainID = #{domainID}						AND k.Reserved1 ='+' 
				LEFT JOIN SYS_BASE_CODE t ON  k.ReservedInt = t.CodeID
				    WHERE A.ur_code = u.UR_Code AND u.VacDate BETWEEN DATE_FORMAT(a.UseStartDate, '%Y-%m-%d') AND  DATE_FORMAT(a.UseEndDate  , '%Y-%m-%d')
					  AND A.VacKind = t.Code)	AS UseVacDay
				, A.VmComment  AS Reason
				, A.LastVacDay
				, A.LongVacDay
			FROM vm_vacationplan A
			INNER JOIN sys_object_user u on  A.UR_Code = u.UserCode
			INNER JOIN sys_object_user_basegroup B ON u.UserCode = B.UserCode AND JobType = 'Origin'
			WHERE A.year = #{year}
				<if test='domainCode != null and domainCode !=""'>
					AND B.CompanyCode = #{domainCode}
				</if>
			and A.VacKind='PUBLIC'
			<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
				<choose>
					<when test='schTypeSel == "deptName"'>
						AND B.DeptName LIKE CONCAT('%', #{schTxt}, '%')
					</when>
					<otherwise>
						AND DisplayName LIKE CONCAT('%', #{schTxt}, '%')
					</otherwise>
				</choose>
			</if>
			<if test='schEmploySel != null and schEmploySel != ""'>
				<choose>
					<when test='schEmploySel == "INOFFICE"'>
						AND U.RetireDate = ''
						AND B.DeptCode NOT LIKE '%RetireDept'
					</when>
					<otherwise> <!-- RETIRE -->
						AND U.RetireDate != ''
					</otherwise>
				</choose>
			</if>
			<if test='urCode != null and urCode !=""'>
				AND A.UR_CODE = #{urCode}
			</if>
			<trim prefix="ORDER BY"  prefixOverrides =",">
				<if test="sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
				<choose>
					<when test="orgOrders != null and orgOrders != '' ">
					  	<foreach collection="orgOrders" item="orgOrder" separator=",">
					  		<if test="orgOrder != null and orgOrder == 'JobTitle'">
					  			B.JobTitleSortKey ASC
					  		</if>
					  		<if test="orgOrder != null and orgOrder == 'JobLevel'">
					  			B.JobLevelSortKey ASC
					  		</if>
					  		<if test="orgOrder != null and orgOrder == 'JobPosition'">
					  			B.JobPositionSortKey ASC
					  		</if>
			  				<if test="orgOrder != null and orgOrder == 'DN'">
					  			DisplayName ASC
					  		</if>
					  	</foreach>
					  	, B.SortKey ASC
				  	</when>
				</choose>
				</if>
				<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("DeptName")'>DeptName</when>
					<when test='sortColumn.equalsIgnoreCase("DisplayName")'>DisplayName</when>
					<when test='sortColumn.equalsIgnoreCase("EnterDate")'>EnterDate</when>
					<when test='sortColumn.equalsIgnoreCase("JobPositionName")'>JobPositionName</when>
					<when test='sortColumn.equalsIgnoreCase("ExpDate")'>ExpDateStart</when>
					<when test='sortColumn.equalsIgnoreCase("VacDay")'>VacDay</when>
					<otherwise>B.SortKey</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
				</if>
			</trim>
			<if test='pageSize != null and pageOffset != null'>
				LIMIT #{pageSize} OFFSET #{pageOffset}
			</if>
		) TBL
	</select>
	
	<select id="selectVacationDayListCnt" resultType="java.lang.Long">
		SELECT COUNT(*) AS CNT
		FROM covi_smart4j.vm_vacationplan A
		INNER JOIN covi_smart4j.sys_object_user U ON A.UR_Code = U.UserCode
		INNER JOIN covi_smart4j.sys_object_user_basegroup B ON U.UserCode = b.UserCode AND JobType = 'Origin'	
		WHERE YEAR = #{year}
		<if test='domainCode != null and domainCode !=""'>
			AND B.CompanyCode = #{domainCode}
		</if>
		and A.VacKind='PUBLIC'
		<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
			<choose>
				<when test='schTypeSel == "deptName"'>
					AND B.DeptName LIKE CONCAT('%', #{schTxt}, '%')
				</when>
				<otherwise>
					AND DisplayName LIKE CONCAT('%', #{schTxt}, '%')
				</otherwise>
			</choose>
		</if>
		<if test='schEmploySel != null and schEmploySel != ""'>
			<choose>
				<when test='schEmploySel == "INOFFICE"'>
					AND U.RetireDate = ''
					AND B.DeptCode NOT LIKE '%RetireDept'
				</when>
				<otherwise> <!-- RETIRE -->
					AND U.RetireDate != ''
				</otherwise>
			</choose>
		</if>
		<if test='urCode != null and urCode !=""'>
			AND A.UR_CODE = #{urCode}
		</if>
	</select>

	<select id="selectVacationDayListV2" parameterType="cmap" resultType="cmap">
		SELECT UR_Code, YEAR, VacDay, DeptName, JobPositionName, DisplayName, EnterDate, RetireDate
		, CompanyCode, ExpDateStart, ExpDateEnd, UseStartDate, UseEndDate, RegisterCode
		, cast(cast(UseVacDay as DECIMAL(9,3)) as float) AS UseVacDay
		, (VacDay - UseVacDay) AS RemainVacDay, Reason
		FROM(
			SELECT A.UR_Code
			, A.YEAR
			, cast(cast(FORMAT(A.VacDay,3) as DECIMAL(9,3)) as float) AS VacDay
			, B.DeptName
			, B.DeptCode
			, B.JobPositionName
			, B.JobPositionSortKey
			, B.SortKey
			, B.DisplayName
			, B.EnterDate
			, B.RetireDate
			, B.CompanyCode
			, DATE_FORMAT(STR_TO_DATE(A.UseStartDate,'%Y%m%d'),'%y.%m.%d') AS ExpDateStart
			, DATE_FORMAT(STR_TO_DATE(A.UseEndDate,'%Y%m%d'),'%y.%m.%d') AS ExpDateEnd
			, A.UseStartDate
			, A.UseEndDate
			, A.RegisterCode
			, (SELECT IFNULL(SUM(VacDay), 0)
					FROM covi_smart4j.VM_VACATIONINFO
					WHERE STR_TO_DATE(Sdate,'%Y-%m-%d') between STR_TO_DATE(A.UseStartDate,'%Y%m%d') and STR_TO_DATE(A.UseEndDate,'%Y%m%d')
					AND STR_TO_DATE(Edate,'%Y-%m-%d') between STR_TO_DATE(A.UseStartDate,'%Y%m%d') and STR_TO_DATE(A.UseEndDate,'%Y%m%d')
					AND UR_Code = A.UR_Code
					AND GUBUN in ('VACATION_APPLY','VACATION_PUBLIC','VACATION_CANCEL','VACATION_PUBLIC_CANCEL')
					AND VacFlag IN (SELECT A.Code
					FROM ( SELECT *
					FROM covi_smart4j.SYS_BASE_CODE
					WHERE CodeGroup = 'VACATION_TYPE'
					AND IsUse = 'Y'
					AND Reserved1 = '+'
					AND DomainID = #{domainID}
					<!--AND (Reserved2 is null or Reserved2 = '')-->
				) A,
				( SELECT *
					FROM covi_smart4j.SYS_BASE_CODE
					WHERE CodeGroup = 'VACATION_KIND'
					AND IsUse = 'Y'
					AND DomainID = 0
					AND Code = 'PUBLIC'
				) B
				WHERE A.ReservedInt = B.CodeID
			)
			) AS UseVacDay
			, A.VmComment AS Reason
			FROM covi_smart4j.vm_vacationplan A
			INNER JOIN (
			SELECT A.UserCode
			, Fn_BaseGetDictionary_S(#{lang}, A.MultiDisplayName) AS DisplayName
			, A.EnterDate
			, A.RetireDate
			, A.SortKey
			, B.CompanyCode
			, B.DeptCode
			, Fn_BaseGetDictionary_S(#{lang},IFNULL(B.DeptName, B.MultiDeptName)) AS DeptName
			, Fn_BaseGetDictionary_S(#{lang}, B.MultiJobPositionName) AS JobPositionName
			, B.JobPositionSortKey
			, A.TargetYear
			FROM (select UserCode, EnterDate, MultiDisplayName, RetireDate, SortKey
				, CASE WHEN STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'),'%m%d')),'%Y%m%d') <![CDATA[<=]]> STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(NOW(3),'%m%d')),'%Y%m%d') THEN
					YEAR(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'))
				ELSE
					YEAR(DATE_ADD(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'), INTERVAL -1 YEAR )) END AS TargetYear
			from covi_smart4j.sys_object_user) A
			INNER JOIN sys_object_user_basegroup B ON A.UserCode = B.UserCode AND JobType = 'Origin'

			<if test='domainCode != null and domainCode !=""'>
				WHERE B.CompanyCode = #{domainCode}
			</if>
			) B ON A.UR_Code = B.UserCode
			and A.year = B.TargetYear
			and A.VacKind='PUBLIC'
		) TBL
			WHERE 1=1
			<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
				<choose>
					<when test='schTypeSel == "deptName"'>
						AND DeptName LIKE CONCAT('%', #{schTxt}, '%')
					</when>
					<otherwise>
						AND DisplayName LIKE CONCAT('%', #{schTxt}, '%')
					</otherwise>
				</choose>
			</if>
			<if test='schEmploySel != null and schEmploySel != ""'>
				<choose>
					<when test='schEmploySel == "INOFFICE"'>
						AND RetireDate = ''
						AND DeptCode NOT LIKE '%RetireDept'
					</when>
					<otherwise> <!-- RETIRE -->
						AND RetireDate != ''
						AND year(RetireDate) = #{year}
					</otherwise>
				</choose>
			</if>
			<if test='urCode != null and urCode !=""'>
				AND UR_CODE = #{urCode}
			</if>
			<trim prefix='ORDER BY'>
				<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
					<choose>
						<when test='sortColumn.equalsIgnoreCase("DeptName")'>DeptName</when>
						<when test='sortColumn.equalsIgnoreCase("DisplayName")'>DisplayName</when>
						<when test='sortColumn.equalsIgnoreCase("EnterDate")'>EnterDate</when>
						<when test='sortColumn.equalsIgnoreCase("JobPositionName")'>JobPositionName</when>
						<otherwise>VacDay</otherwise>
					</choose>
					<choose>
						<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
						<otherwise> DESC</otherwise>
					</choose>
				</if>
				<if test="sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
					JobPositionSortKey, SortKey ASC
				</if>
			</trim>
		<if test='pageSize != null and pageOffset != null'>
			LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>
	</select>

	<select id="selectVacationDayListCntV2" resultType="java.lang.Long">
		SELECT COUNT(*) AS CNT
		FROM covi_smart4j.vm_vacationplan A
		INNER JOIN (
		SELECT A.UserCode
		, Fn_BaseGetDictionary_S(#{lang}, A.MultiDisplayName) AS DisplayName
		, A.EnterDate
		, A.RetireDate
		, A.SortKey
		, B.CompanyCode
		, B.DeptCode
		, Fn_BaseGetDictionary_S(#{lang},IFNULL(B.DeptName, B.MultiDeptName)) AS DeptName
		, Fn_BaseGetDictionary_S(#{lang}, B.MultiJobPositionName) AS JobPositionName
		, B.JobPositionSortKey
		, A.TargetYear
		FROM (select UserCode, EnterDate, MultiDisplayName, RetireDate, SortKey
		, CASE WHEN STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'),'%m%d')),'%Y%m%d') <![CDATA[<=]]> STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(NOW(3),'%m%d')),'%Y%m%d') THEN
		YEAR(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'))
		ELSE
		YEAR(DATE_ADD(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'), INTERVAL -1 YEAR )) END AS TargetYear
		from covi_smart4j.sys_object_user) A
		INNER JOIN sys_object_user_basegroup B ON A.UserCode = B.UserCode AND JobType = 'Origin'

		<if test='domainCode != null and domainCode !=""'>
			WHERE B.CompanyCode = #{domainCode}
		</if>
		) B ON A.UR_Code = B.UserCode
		and A.year = B.TargetYear
		and A.VacKind='PUBLIC'
		WHERE 1=1
		<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
			<choose>
				<when test='schTypeSel == "deptName"'>
					AND B.DeptName LIKE CONCAT('%', #{schTxt}, '%')
				</when>
				<otherwise>
					AND DisplayName LIKE CONCAT('%', #{schTxt}, '%')
				</otherwise>
			</choose>
		</if>
		<if test='schEmploySel != null and schEmploySel != ""'>
			<choose>
				<when test='schEmploySel == "INOFFICE"'>
					AND B.RetireDate = ''
					AND B.DeptCode NOT LIKE '%RetireDept'
				</when>
				<otherwise> <!-- RETIRE -->
					AND B.RetireDate != ''
					AND year(B.RetireDate) = #{year}
				</otherwise>
			</choose>
		</if>
		<if test='urCode != null and urCode !=""'>
			AND A.UR_CODE = #{urCode}
		</if>
	</select>

  	<select id="selectVacationDayCnt" resultType="java.lang.Long">
		SELECT COUNT(UR_Code) as cnt 
		  FROM covi_smart4j.vm_vacationplan 
		 WHERE YEAR = (SELECT YEAR(NOW()) + 1)
	</select>
	    
	<insert id="insertNextVacation" parameterType="cmap">
		INSERT
		  INTO covi_smart4j.vm_vacationplan (UR_Code, YEAR, VacDay
											)
	    VALUES 
        <foreach collection="vacationListVo.vacations" item="item" open="(" separator="),(" close=")">
        	#{item.urCode}, YEAR(NOW()), #{item.vacDay}
        </foreach>
	</insert>
	
	<update id="updateVacDay" parameterType="cmap">
		UPDATE covi_smart4j.vm_vacationplan
		   SET LongVacDay = #{vacDay} ,
		       LastVacDay = fn_GetLastVacDay(#{urCode}, #{year}, #{domainCode}) ,
		       VacDay = #{vacDay} + fn_GetLastVacDay(#{urCode}, #{year}, #{domainCode}) 
		 WHERE UR_Code = #{urCode}
		   AND YEAR = #{year}
		<if test='vacKind != null and vacKind !=""'>
			AND VacKind = #{vacKind}
		</if>
	</update>	
	<update id="updateLastVacDay" parameterType="cmap">
	/* groupware.vacation.updateLastVacDay */
		<selectKey keyProperty="TargetYear,UseStartDate,UseEndDate,DomainCode,BeforeVacDay,AfterVacDay" resultType="cmap" order="BEFORE">
			SELECT YEAR(DATE_ADD(STR_TO_DATE(CONCAT(year,'0101'),'%Y%m%d'), INTERVAL 1 YEAR )) as TargetYear
			,DATE_FORMAT(DATE_ADD(STR_TO_DATE(UseStartDate,'%Y%m%d'), INTERVAL 1 YEAR ),'%Y%m%d') as UseStartDate
			,DATE_FORMAT(DATE_ADD(STR_TO_DATE(UseEndDate,'%Y%m%d'), INTERVAL 1 YEAR ),'%Y%m%d') as UseEndDate 
			,(SELECT CompanyCode FROM covi_smart4j.sys_object_user_basegroup WHERE UserCode = #{urCode} AND JobType = 'Origin') AS DomainCode
			,(select VacDay from covi_smart4j.vm_vacationplan where ur_code = #{urCode} and year = TargetYear and VacKind='PUBLIC') as BeforeVacDay
			,(select LongVacDay + fn_GetLastVacDay(#{urCode}, TargetYear , DomainCode) from covi_smart4j.vm_vacationplan where ur_code = #{urCode} and year = TargetYear and VacKind='PUBLIC') as AfterVacDay
			FROM covi_smart4j.vm_vacationplan WHERE ur_code= #{urCode} AND #{sDate} BETWEEN UseStartDate AND UseEndDate AND VacKind='PUBLIC'
		</selectKey>
		
		UPDATE covi_smart4j.vm_vacationplan
		   SET LastVacDay = fn_GetLastVacDay(#{urCode}, #{TargetYear}, #{DomainCode}) ,
		       VacDay = LongVacDay + fn_GetLastVacDay(#{urCode}, #{TargetYear}, #{DomainCode})
		 WHERE UR_Code = #{urCode}
		   AND YEAR = #{TargetYear}
		   AND VacKind = 'PUBLIC'
	</update>	
	<select id="selectVacPeriodCode" parameterType="cmap" resultType="java.lang.String">
		SELECT IFNULL(CONCAT(';', GROUP_CONCAT(Code SEPARATOR ';'), ';'), '') 
		FROM covi_smart4j.sys_base_code
		WHERE CodeGroup = 'VacationPromotionPeriod'
		AND DomainID = #{domainID}
	</select>
	
	<insert id="insertVacPeriodCode" parameterType="cmap">
		<foreach item="item" index="index" collection="insertPeriodList">
			INSERT INTO covi_smart4j.sys_base_code (
				BizSection
				, DomainID
				, CodeGroup
				, Code
				, SortKey
				, IsUse
				, CodeName
				, MultiCodeName
				, Reserved1
				, Reserved2
				, Reserved3
				, ReservedInt
				, Description
				, RegisterCode
				, RegistDate
			)
			SELECT BizSection
				, #{domainID} AS DomainID
				, CodeGroup
				, Code
				, SortKey
				, IsUse
				, CodeName
				, MultiCodeName
				, #{item.StartDate} AS Reserved1
				, #{item.EndDate} AS Reserved2
				, Reserved3
				, ReservedInt
				, Description
				, #{registerCode} AS RegisterCode
				, NOW(3) AS RegistDate
			FROM covi_smart4j.sys_base_code
			WHERE CodeGroup = 'VacationPromotionPeriod'
			AND Code = #{item.Code}
			AND DomainID = 0;
		</foreach>
	</insert>
	
	<update id="updateVacPeriodCode" parameterType="cmap">
		<foreach item="item" index="index" collection="updatePeriodList">
			UPDATE covi_smart4j.sys_base_code
			SET Reserved1 = #{item.StartDate},
		   	    Reserved2 = #{item.EndDate},
		   	    ModifierCode = #{modifierCode},
		   	    ModifyDate = now(3)
			 WHERE CodeGroup = 'VacationPromotionPeriod'
			 AND Code = #{item.Code}
			 AND DomainID = #{domainID};
		</foreach>
	</update>	
	
	<select id="selectVacationInfoList" parameterType="cmap" resultType="cmap">
		/* groupware.vacation.selectVacationInfoList */
		SELECT VacationInfoID
			, A.UR_Code
			, Fn_BaseGetDictionary_S(#{lang}, u.MultiDisplayName) DisplayName
			, APPDATE
			, ENDDATE
			, GUBUN
			, Fn_BaseGetDictionary_S(#{lang}, C.MultiCodeName) AS GubunName
			, VacYear
			, Sdate
			, Edate
			, VacFlag
			, VacOffFlag
			, Fn_BaseGetDictionary_S(#{lang}, D.MultiCodeName) AS VacFlagName
			, cast(cast(FORMAT(a.VacDay,3) as DECIMAL(9,3)) as float) AS VacDay
			, Reason
			, WorkItemID
			, A.ProcessID
			, Fn_BaseGetDictionary_S(#{lang}, B.MultiDeptName) DeptName
			, Fn_BaseGetDictionary_S(#{lang}, B.MultiJobPositionName) AS JobPositionName
			, (CASE WHEN (GUBUN = 'VACATION_CANCEL' OR GUBUN = 'VACATION_PUBLIC' OR GUBUN = 'VACATION_PUBLIC_CANCEL' )	
					THEN CONCAT('(', Fn_BaseGetDictionary_S(#{lang}, C.MultiCodeName), ')', Fn_BaseGetDictionary_S(#{lang}, D.MultiCodeName))
					ELSE Fn_BaseGetDictionary_S(#{lang}, D.MultiCodeName)
					END ) AS VACTEXT
		FROM 		vm_vacationplan p
		JOIN 		vm_vacationinfo A ON  a.UR_Code = p.UR_Code AND a.Sdate BETWEEN DATE_FORMAT(p.UseStartDate, '%Y-%m-%d') AND  DATE_FORMAT(p.UseEndDate  , '%Y-%m-%d')
		LEFT JOIN sys_object_user U ON A.UR_Code = u.UserCode
		LEFT JOIN sys_object_user_basegroup B ON A.UR_Code = B.UserCode AND JobType = 'Origin'
		LEFT JOIN sys_base_code C ON A.GUBUN = C.Code AND C.CodeGroup = 'VACATION_GUBUN' AND C.DomainID =0
		LEFT JOIN sys_base_code D ON A.VacFlag = D.Code AND D.CodeGroup = 'VACATION_TYPE' AND D.DomainID =#{domainID}
		WHERE p.year = #{year}
		<if test='vacationInfoID != null and vacationInfoID !=""'>
			AND A.VacationInfoID = #{vacationInfoID}
		</if>
		<if test='domainCode != null and domainCode != ""'>
			AND B.Companycode = #{domainCode}
		</if>
		<if test='reqType == "myVacation" or reqType == "vacationInfo"'>
			AND A.UR_Code = #{urCode}
		</if>
		<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
			<choose>
				<when test='schTypeSel == "deptName"'>
					AND DeptName LIKE CONCAT('%', #{schTxt}, '%')
				</when>
				<otherwise>
					AND DisplayName LIKE CONCAT('%', #{schTxt}, '%')
				</otherwise>
			</choose>
		</if>
		<trim prefix='ORDER BY'>
			<if test="sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
				VacationInfoID DESC
			</if>
			<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("DisplayName")'>DisplayName</when>
					<when test='sortColumn.equalsIgnoreCase("APPDATE")'>APPDATE</when>
					<when test='sortColumn.equalsIgnoreCase("ENDDATE")'>ENDDATE</when>
					<when test='sortColumn.equalsIgnoreCase("VacFlagName")'>VacFlagName</when>
					<when test='sortColumn.equalsIgnoreCase("VacYear")'>VacYear</when>
					<when test='sortColumn.equalsIgnoreCase("Sdate")'>Sdate</when>
					<when test='sortColumn.equalsIgnoreCase("Edate")'>Edate</when>
					<when test='sortColumn.equalsIgnoreCase("VacDay")'>VacDay</when>
					<when test='sortColumn.equalsIgnoreCase("Reason")'>Reason</when>
					<when test='sortColumn.equalsIgnoreCase("GubunName")'>GubunName</when>
					<when test='sortColumn.equalsIgnoreCase("VACTEXT")'>VACTEXT</when>
					<when test='sortColumn.equalsIgnoreCase("DeptName")'>DeptName</when>
					<otherwise>VacationInfoID</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if>
		</trim>
		<if test='pageSize != null and pageOffset != null and pageSize >= 0 and pageOffset >= 0'>
			LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>		 
	</select>
	
	<select id="selectVacationInfoListCnt" resultType="java.lang.Long">
		SELECT COUNT(VacationInfoID)
		FROM 		vm_vacationplan p
		JOIN 		vm_vacationinfo A ON  a.UR_Code = p.UR_Code AND a.Sdate BETWEEN DATE_FORMAT(p.UseStartDate, '%Y-%m-%d') AND  DATE_FORMAT(p.UseEndDate  , '%Y-%m-%d')
		LEFT JOIN sys_object_user U ON A.UR_Code = u.UserCode
		LEFT JOIN sys_object_user_basegroup B ON A.UR_Code = B.UserCode AND JobType = 'Origin'
		WHERE p.Year = #{year}
		<if test='vacationInfoID != null and vacationInfoID !=""'>
			AND A.VacationInfoID = #{vacationInfoID}
		</if>
		<if test='domainCode != null and domainCode != ""'>
			AND B.Companycode = #{domainCode}
		</if>
		<if test='reqType != null and reqType !=""'>
			<choose>
				<when
					test='reqType == "myVacation" or reqType == "vacationInfo"'>
					AND a.UR_Code = #{urCode}
				</when>
				<when test='reqType == "vacationCancel"'>
				</when>
				<otherwise>
					AND (GUBUN ='VACATION_PUBLIC' OR GUBUN ='VACATION_PUBLIC_CANCEL')
				</otherwise>
			</choose>
		</if>
		<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
			<choose>
				<when test='schTypeSel == "deptName"'>
					AND DeptName LIKE CONCAT('%', #{schTxt}, '%')
				</when>
				<otherwise>
					AND DisplayName LIKE CONCAT('%', #{schTxt}, '%')
				</otherwise>
			</choose>
		</if>
	</select>

	<select id="selectMyVacationInfoList" parameterType="cmap" resultType="cmap">
		/* groupware.vacation.selectMyVacationInfoList */
		SELECT VacationInfoID
			, APPDATE
			, ENDDATE
			, GUBUN
			, Fn_BaseGetDictionary_S(#{lang}, C.MultiCodeName) AS GubunName
			, VacYear
			, Sdate
			, Edate
			, VacFlag
			, VacOffFlag
			, cast(cast(FORMAT(e.VacDay,3) as DECIMAL(9,3)) as float) AS VacDay
			, Reason
			, WorkItemID
			, e.ProcessID
			, IFNULL(AR.ProcessID,0) AS EXIST_APPROVAL_FORM
			, IFNULL(AR2.ReqSeq,0) AS EXIST_REQUEST_FORM
			, IFNULL(AR2.ReqTitle,'') AS ReqTitle
			, (CASE WHEN (GUBUN = 'VACATION_CANCEL' OR GUBUN = 'VACATION_PUBLIC' OR GUBUN = 'VACATION_PUBLIC_CANCEL' )	
					THEN CONCAT('(', Fn_BaseGetDictionary_S(#{lang}, C.MultiCodeName), ')', Fn_BaseGetDictionary_S(#{lang}, D.MultiCodeName))
					ELSE Fn_BaseGetDictionary_S(#{lang}, D.MultiCodeName)
					END ) AS VACTEXT
		FROM vm_vacationplan A
		<if test="VacKind == 'PUBLIC'">
	   	LEFT JOIN SYS_BASE_CODE k ON  k.CodeGroup = 'VACATION_TYPE' AND k.IsUse ='Y'	AND k.DomainID = #{domainID}
	   	</if>
		JOIN vm_vacationinfo e ON  a.UR_Code = e.UR_Code AND e.Sdate BETWEEN DATE_FORMAT(a.UseStartDate, '%Y-%m-%d') AND  DATE_FORMAT(a.UseEndDate  , '%Y-%m-%d')
		<if test="VacKind == 'PUBLIC'">
			AND k.Code =  e.VacFlag
		</if>
		<if test="VacKind != 'PUBLIC'">
			AND a.VacKind = e.VacFlag
		</if>
		LEFT JOIN covi_smart4j.attendance_request AR ON e.ProcessID = AR.ProcessID
		LEFT JOIN covi_smart4j.attendance_request AR2 ON e.ProcessID = AR2.ReqSeq
		LEFT JOIN covi_smart4j.sys_base_code C ON e.GUBUN = C.Code AND C.CodeGroup = 'VACATION_GUBUN' AND C.DomainID =0
		LEFT JOIN covi_smart4j.sys_base_code D ON e.VacFlag = D.Code AND D.CodeGroup = 'VACATION_TYPE' AND D.DomainID =#{domainID}
		WHERE A.UR_Code = #{urCode}
		AND   a.VacKind = #{VacKind}
		AND   a.UseStartDate = #{UseStartDate}
		<trim prefix='ORDER BY'>
			<if test="sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
				VacationInfoID DESC
			</if>
			<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("DisplayName")'>DisplayName</when>
					<when test='sortColumn.equalsIgnoreCase("APPDATE")'>APPDATE</when>
					<when test='sortColumn.equalsIgnoreCase("ENDDATE")'>ENDDATE</when>
					<when test='sortColumn.equalsIgnoreCase("VacFlagName")'>VacFlagName</when>
					<when test='sortColumn.equalsIgnoreCase("VacYear")'>VacYear</when>
					<when test='sortColumn.equalsIgnoreCase("Sdate")'>Sdate</when>
					<when test='sortColumn.equalsIgnoreCase("Edate")'>Edate</when>
					<when test='sortColumn.equalsIgnoreCase("VacDay")'>VacDay</when>
					<when test='sortColumn.equalsIgnoreCase("Reason")'>Reason</when>
					<when test='sortColumn.equalsIgnoreCase("GubunName")'>GubunName</when>
					<when test='sortColumn.equalsIgnoreCase("VACTEXT")'>VACTEXT</when>
					<when test='sortColumn.equalsIgnoreCase("DeptName")'>DeptName</when>
					<otherwise>VacationInfoID</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if>
		</trim>
		<if test='pageSize != null and pageOffset != null and pageSize >= 0 and pageOffset >= 0'>
			LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>		 
	</select>
	
	<select id="selectMyVacationInfoListCnt" resultType="java.lang.Long">
		/* groupware.vacation.selectMyVacationInfoListCnt */
		SELECT count(VacationInfoID)
		FROM vm_vacationplan A
		<if test="VacKind == 'PUBLIC'">
	   	LEFT JOIN SYS_BASE_CODE k ON  k.CodeGroup = 'VACATION_TYPE' AND k.IsUse ='Y'	AND k.DomainID = #{domainID}
	   	</if>
		JOIN vm_vacationinfo e ON  a.UR_Code = e.UR_Code AND e.Sdate BETWEEN DATE_FORMAT(a.UseStartDate, '%Y-%m-%d') AND  DATE_FORMAT(a.UseEndDate  , '%Y-%m-%d')
		<if test="VacKind == 'PUBLIC'">
			AND k.Code =  e.VacFlag
		</if>
		<if test="VacKind != 'PUBLIC'">
			AND a.VacKind = e.VacFlag
		</if>
		WHERE A.UR_Code = #{urCode}
		AND   a.VacKind = #{VacKind}
		AND   a.UseStartDate = #{UseStartDate}
	</select>
	
	<select id="selectVacationInfoListV2" parameterType="cmap" resultType="cmap">
		SELECT VacationInfoID
		, A.UR_Code
		, DisplayName
		, APPDATE
		, ENDDATE
		, GUBUN
		, Fn_BaseGetDictionary_S(#{lang}, C.MultiCodeName) AS GubunName
		, VacYear
		, Sdate
		, Edate
		, VacFlag
		, VacOffFlag
		, Fn_BaseGetDictionary_S(#{lang}, D.MultiCodeName) AS VacFlagName
		, cast(cast(FORMAT(VacDay,3) as DECIMAL(9,3)) as float) AS VacDay
		, Reason
		, WorkItemID
		, A.ProcessID
		, IFNULL(AR.ProcessID,0) AS EXIST_APPROVAL_FORM
		, IFNULL(AR2.ReqSeq,0) AS EXIST_REQUEST_FORM
		, IFNULL(AR2.ReqTitle,'') AS ReqTitle
		, DeptName
		, JobPositionName
		, (CASE WHEN (GUBUN = 'VACATION_CANCEL' OR GUBUN = 'VACATION_PUBLIC' OR GUBUN = 'VACATION_PUBLIC_CANCEL' )
		THEN CONCAT('(', Fn_BaseGetDictionary_S(#{lang}, C.MultiCodeName), ')', Fn_BaseGetDictionary_S(#{lang}, D.MultiCodeName))
		ELSE Fn_BaseGetDictionary_S(#{lang}, D.MultiCodeName)
		END ) AS VACTEXT
		FROM covi_smart4j.vm_vacationinfo A
		LEFT JOIN (	SELECT A.UserCode
					, B.CompanyCode
					, Fn_BaseGetDictionary_S(#{lang}, A.MultiDisplayName) AS DisplayName
					, Fn_BaseGetDictionary_S(#{lang}, IFNULL(E.DeptName, B.MultiDeptName)) AS DeptName
					, Fn_BaseGetDictionary_S(#{lang}, B.MultiJobPositionName) AS JobPositionName
					, VacYearRange ,TargetYear
				FROM (select UserCode, EnterDate, MultiDisplayName, RetireDate, SortKey
						, (CASE WHEN DATE(DATE_ADD(EnterDate, INTERVAL 12 MONTH))   <![CDATA[<=]]>   DATE(NOW()) THEN 1
							ELSE 0 END
							) as IsOneYear
						,CASE WHEN STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(NOW(),'%m%d')),'%Y%m%d') <![CDATA[<]]> STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(EnterDate,'%Y-%m-%d'),'%m%d')),'%Y%m%d') THEN
								STR_TO_DATE(CONCAT(YEAR(DATE_ADD(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'), INTERVAL -1 YEAR )),DATE_FORMAT(STR_TO_DATE(EnterDate,'%Y-%m-%d'),'-%m-%d')),'%Y-%m-%d')
							ELSE
								STR_TO_DATE(CONCAT(YEAR(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d')),DATE_FORMAT(STR_TO_DATE(EnterDate,'%Y-%m-%d'),'-%m-%d')),'%Y-%m-%d')
							END AS VacYearRange
						, CASE WHEN STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'),'%m%d')),'%Y%m%d')  <![CDATA[<=]]>  STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(NOW(3),'%m%d')),'%Y%m%d') THEN
								YEAR(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'))
							ELSE
								YEAR(DATE_ADD(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'), INTERVAL -1 YEAR )) END AS TargetYear
						from covi_smart4j.sys_object_user) A
				LEFT JOIN covi_smart4j.sys_object_user_basegroup B ON A.UserCode = B.UserCode AND JobType = 'Origin'
				LEFT JOIN covi_smart4j.vm_vacationplan E ON A.UserCode = E.UR_Code and E.year = TargetYear and E.VacKind='PUBLIC'
			) B ON A.UR_Code = B.UserCode
				AND STR_TO_DATE(A.Sdate,'%Y-%m-%d') <![CDATA[>=]]> B.VacYearRange
				AND STR_TO_DATE(A.Edate,'%Y-%m-%d') <![CDATA[<=]]> DATE_ADD(DATE_ADD(B.VacYearRange, INTERVAL 1 YEAR), INTERVAL -1 DAY)
		LEFT JOIN covi_smart4j.sys_base_code C ON A.GUBUN = C.Code AND C.CodeGroup = 'VACATION_GUBUN' AND C.DomainID =0
		LEFT JOIN covi_smart4j.sys_base_code D ON A.VacFlag = D.Code AND D.CodeGroup = 'VACATION_TYPE' AND D.DomainID =#{domainID}
		LEFT JOIN covi_smart4j.attendance_request AR ON A.ProcessID = AR.ProcessID
		LEFT JOIN covi_smart4j.attendance_request AR2 ON A.ProcessID = AR2.ReqSeq
		WHERE VacYear = #{year}
		<if test='vacationInfoID != null and vacationInfoID !=""'>
			AND A.VacationInfoID = #{vacationInfoID}
		</if>
		<if test='domainCode != null and domainCode != ""'>
			AND B.Companycode = #{domainCode}
		</if>
		<if test='reqType != null and reqType !=""'>
			<choose>
				<when
						test='reqType == "myVacation" or reqType == "vacationInfo"'>
					AND A.UR_Code = #{urCode}
				</when>
				<when test='reqType == "vacationCancel"'>
				</when>
				<otherwise>
					AND (GUBUN ='VACATION_PUBLIC' OR GUBUN ='VACATION_PUBLIC_CANCEL')
				</otherwise>
			</choose>
		</if>
		<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
			<choose>
				<when test='schTypeSel == "deptName"'>
					AND DeptName LIKE CONCAT('%', #{schTxt}, '%')
				</when>
				<otherwise>
					AND DisplayName LIKE CONCAT('%', #{schTxt}, '%')
				</otherwise>
			</choose>
		</if>
		<trim prefix='ORDER BY'>
			<if test="sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
				VacationInfoID DESC
			</if>
			<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("DisplayName")'>DisplayName</when>
					<when test='sortColumn.equalsIgnoreCase("APPDATE")'>APPDATE</when>
					<when test='sortColumn.equalsIgnoreCase("ENDDATE")'>ENDDATE</when>
					<when test='sortColumn.equalsIgnoreCase("VacFlagName")'>VacFlagName</when>
					<when test='sortColumn.equalsIgnoreCase("VacYear")'>VacYear</when>
					<when test='sortColumn.equalsIgnoreCase("Sdate")'>Sdate</when>
					<when test='sortColumn.equalsIgnoreCase("Edate")'>Edate</when>
					<when test='sortColumn.equalsIgnoreCase("VacDay")'>VacDay</when>
					<when test='sortColumn.equalsIgnoreCase("Reason")'>Reason</when>
					<when test='sortColumn.equalsIgnoreCase("GubunName")'>GubunName</when>
					<when test='sortColumn.equalsIgnoreCase("VACTEXT")'>VACTEXT</when>
					<when test='sortColumn.equalsIgnoreCase("DeptName")'>DeptName</when>
					<otherwise>VacationInfoID</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if>
		</trim>
		<if test='pageSize != null and pageOffset != null and pageSize >= 0 and pageOffset >= 0'>
			LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>
	</select>

	<select id="selectVacationInfoListCntV2" resultType="java.lang.Long">
		SELECT COUNT(VacationInfoID)
		FROM covi_smart4j.vm_vacationinfo A
		LEFT JOIN (	SELECT A.UserCode
						, B.CompanyCode
						, Fn_BaseGetDictionary_S(#{lang}, A.MultiDisplayName) AS DisplayName
						, Fn_BaseGetDictionary_S(#{lang}, IFNULL(E.DeptName, B.MultiDeptName)) AS DeptName
						, Fn_BaseGetDictionary_S(#{lang}, B.MultiJobPositionName) AS JobPositionName
						, VacYearRange ,TargetYear
					FROM (select UserCode, EnterDate, MultiDisplayName, RetireDate, SortKey
							, (CASE WHEN DATE(DATE_ADD(EnterDate, INTERVAL 12 MONTH))   <![CDATA[<=]]>   DATE(NOW()) THEN 1
									ELSE 0 END
								) as IsOneYear
							,CASE WHEN STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(NOW(),'%m%d')),'%Y%m%d') <![CDATA[<]]> STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(EnterDate,'%Y-%m-%d'),'%m%d')),'%Y%m%d') THEN
									STR_TO_DATE(CONCAT(YEAR(DATE_ADD(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'), INTERVAL -1 YEAR )),DATE_FORMAT(STR_TO_DATE(EnterDate,'%Y-%m-%d'),'-%m-%d')),'%Y-%m-%d')
								ELSE
									STR_TO_DATE(CONCAT(YEAR(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d')),DATE_FORMAT(STR_TO_DATE(EnterDate,'%Y-%m-%d'),'-%m-%d')),'%Y-%m-%d')
								END AS VacYearRange
							, CASE WHEN STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'),'%m%d')),'%Y%m%d')  <![CDATA[<=]]>  STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(NOW(3),'%m%d')),'%Y%m%d') THEN
									YEAR(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'))
								ELSE
									YEAR(DATE_ADD(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'), INTERVAL -1 YEAR )) END AS TargetYear
							from covi_smart4j.sys_object_user) A
							LEFT JOIN covi_smart4j.sys_object_user_basegroup B ON A.UserCode = B.UserCode AND JobType = 'Origin'
							LEFT JOIN covi_smart4j.vm_vacationplan E ON A.UserCode = E.UR_Code and E.year = TargetYear and E.VacKind='PUBLIC'
					) B ON A.UR_Code = B.UserCode
						AND STR_TO_DATE(A.Sdate,'%Y-%m-%d') <![CDATA[>=]]> B.VacYearRange
						AND STR_TO_DATE(A.Edate,'%Y-%m-%d') <![CDATA[<=]]> DATE_ADD(DATE_ADD(B.VacYearRange, INTERVAL 1 YEAR), INTERVAL -1 DAY)
		WHERE VacYear = #{year}
		<if test='vacationInfoID != null and vacationInfoID !=""'>
			AND A.VacationInfoID = #{vacationInfoID}
		</if>
		<if test='domainCode != null and domainCode != ""'>
			AND B.Companycode = #{domainCode}
		</if>
		<if test='reqType != null and reqType !=""'>
			<choose>
				<when
						test='reqType == "myVacation" or reqType == "vacationInfo"'>
					AND UR_Code = #{urCode}
				</when>
				<when test='reqType == "vacationCancel"'>
				</when>
				<otherwise>
					AND (GUBUN ='VACATION_PUBLIC' OR GUBUN ='VACATION_PUBLIC_CANCEL')
				</otherwise>
			</choose>
		</if>
		<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
			<choose>
				<when test='schTypeSel == "deptName"'>
					AND DeptName LIKE CONCAT('%', #{schTxt}, '%')
				</when>
				<otherwise>
					AND DisplayName LIKE CONCAT('%', #{schTxt}, '%')
				</otherwise>
			</choose>
		</if>
	</select>
	
	<select id="selectNextVacationListForExcel" parameterType="cmap" resultType="cmap">
		SELECT A.UserCode, 
			   IFNULL(A.EnterDate,'') AS EnterDate, 
			   A.DisplayName,  
			   IFNULL(B.DeptName,'') AS DeptName,
				YEAR(ADDDATE(NOW(), INTERVAL 1 YEAR )) AS year,
			   IFNULL(Fn_GetVac(A.UserCode),0) AS vacDay
		FROM covi_smart4j.sys_object_user A
		LEFT JOIN (
			SELECT UserCode, CompanyName, CompanyCode, DeptName
			FROM covi_smart4j.sys_object_user_basegroup
			WHERE JobType = 'Origin'
		) B
		ON A.UserCode = B.UserCode
		left join covi_smart4j.vm_config vc on vc.CompanyCode=B.CompanyCode
		WHERE A.IsUse = 'Y'
		AND A.IsDisplay = 'Y'
		AND A.IsHR = 'Y'
		AND B.CompanyCode = #{domainCode}
		AND (EnterDate IS NOT NULL AND LENGTH(REPLACE(EnterDate,'-',''))=8)
		AND (RetireDate IS NULL OR RetireDate = '')
	</select>
	
	<select id="selectTargetUserListForExcel" parameterType="cmap" resultType="cmap">
		SELECT IFNULL(B.DeptName,'') AS DeptName, 
			   A.DisplayName, 
			   IFNULL(B.JobPositionName,'') AS JobPositionName, 
			   A.UserCode
		  FROM covi_smart4j.sys_object_user A
		  INNER JOIN (SELECT UserCode, DeptName, JobPositionName
					   FROM covi_smart4j.sys_object_user_basegroup
					  WHERE JobType = 'Origin'
					  AND	CompanyCode = #{domainCode}
					) B
		    ON A.UserCode = B.UserCode
		 WHERE A.UserCode IS NOT NULL
		 AND A.IsUse = 'Y'
		 AND A.IsDisplay = 'Y'
		 AND A.IsHR = 'Y'
	</select>
	
	<select id="selectUserRemaindVacation" resultType="cmap">
		SELECT (VacDay - FN_GetUseVacDay(#{urCode}, #{vacYear})) AS cnt
		  FROM covi_smart4j.vm_vacationplan
		 WHERE UR_Code = #{urCode}
		   AND YEAR = #{vacYear}
	</select>
	
	
	<select id="selectCommonVacationInfoList" resultType="cmap">
		SELECT * FROM covi_smart4j.vm_vacationinfo 
		WHERE VacYear=#{vacYear} And  UR_Code=#{urCode} 
		AND SDate=#{sDate} AND EDate=#{eDate}
		AND GUBUN='VACATION_PUBLIC'
		AND (
			(SELECT COUNT(0) FROM covi_smart4j.vm_vacationinfo
			WHERE UR_Code=#{urCode} AND SDate=#{sDate} AND EDate=#{eDate}
			AND GUBUN='VACATION_PUBLIC') 
			!= 
			(SELECT COUNT(0) FROM covi_smart4j.vm_vacationinfo
			WHERE UR_Code=#{urCode} AND SDate=#{sDate} AND EDate=#{eDate}
			AND GUBUN='VACATION_PUBLIC_CANCEL')
		)
		ORDER BY VacationInfoID DESC
		LIMIT 1 
	</select>
	
	<select id="selectCommonVacationInfoCnt" resultType="java.lang.Long">
		SELECT COUNT(0) FROM covi_smart4j.vm_vacationinfo 
		WHERE VacYear = #{vacYear}
		AND UR_Code = #{urCode} 
		AND SDate = #{sDate}
		AND EDate = #{eDate}
		AND GUBUN = #{applyGubun}
		AND (
			(SELECT COUNT(0) FROM covi_smart4j.vm_vacationinfo
			WHERE UR_Code = #{urCode}
			AND SDate = #{sDate}
			AND EDate = #{eDate}
			AND GUBUN = #{applyGubun}) 
			!= 
			(SELECT COUNT(0) FROM covi_smart4j.vm_vacationinfo
			WHERE UR_Code = #{urCode}
			AND SDate = #{sDate}
			AND EDate = #{eDate}
			AND GUBUN = #{cancelGubun})
		)
	</select>
	
	<insert id="insertVacationInfo" parameterType="cmap">
		INSERT 
		  INTO covi_smart4j.vm_vacationinfo (VacYear, UR_Code, 
		  									 UR_Name, 
		  									 VacFlag, Sdate, Edate, VacDay, 
		  									 Reason, APPDATE, ENDDATE, GUBUN
		  						   			)
	    VALUES (#{vacYear}, #{urCode}, 
	    		(SELECT DisplayName
				   FROM covi_smart4j.sys_object_user
				  WHERE UserCode = #{urCode}
				),
	    		#{vacFlag}, #{sDate}, #{eDate}, #{vacDay},
	    		#{reason}, DATE_FORMAT(NOW(),'%Y-%m-%d'), DATE_FORMAT(NOW(),'%Y-%m-%d'), #{gubun}
	    	   )

		<selectKey keyProperty="VacationInfoID" resultType="int" order="AFTER">
			SELECT LAST_INSERT_ID();
		</selectKey>
	</insert>

	<insert id="insertVacationInfoDayPublicVac" parameterType="cmap">
		INSERT INTO covi_smart4j.vm_vacationinfo_day
		( UR_Code, VacFlag, VacOffFlag, VacDate, Gubun,
		StartTime, EndTime, VacDay , VacationInfoID)
		VALUES ( #{urCode}, #{vacFlag}, '0', #{VacDate}, #{gubun},
		null, null, #{vacDay}, #{vacationInfoID} )
	</insert>

	<insert id="insertVacationInfoDayApplyVac" parameterType="cmap">
		INSERT INTO covi_smart4j.vm_vacationinfo_day
		( UR_Code, VacFlag, VacOffFlag, VacDate, Gubun,
		StartTime, EndTime, VacDay , VacationInfoID)
		VALUES ( #{urCode}, #{vacFlag}, #{vacOffFlag}, #{VacDate}, #{gubun},
		#{startTime}, #{endTime},
		(SELECT  CAST(IF(IFNULL(Reserved3, 1) = '', 1, IFNULL(Reserved3, 1)) AS DECIMAL(9,3))
			FROM covi_smart4j.sys_base_code
			WHERE CodeGroup = 'VACATION_TYPE'
			AND DomainID =#{domainID}
			AND Code = #{vacFlag}
		), #{vacationInfoID} )
	</insert>
	
	<insert id="insertVacationCancel" parameterType="cmap">
		INSERT 
		  INTO covi_smart4j.vm_vacationinfo (VacYear, UR_Code, 
		  									 UR_Name, 
		  									 VacFlag, VacOffFlag, Sdate, Edate, VacDay, 
		  									 Reason, APPDATE, ENDDATE, GUBUN,
		  									 WorkItemID, ProcessID
		  						   			)
	    VALUES (#{vacYear}, #{urCode}, 
	    		(SELECT DisplayName
				   FROM covi_smart4j.sys_object_user
				  WHERE UserCode = #{urCode}
				),
	    		#{vacFlag}, #{vacOffFlag}, #{sDate}, #{eDate}, #{vacDay},
	    		#{reason}, DATE_FORMAT(NOW(),'%Y-%m-%d'), DATE_FORMAT(NOW(),'%Y-%m-%d'), #{gubun},
	    		#{workItemId}, #{processId}
	    	   )
	</insert>


	<delete id="deleteVacationInfoDayPublicVac" parameterType="cmap">
		DELETE FROM covi_smart4j.vm_vacationinfo_day
		WHERE UR_Code = #{urCode}
		AND VacFlag =  #{vacFlag}
		AND VacOffFlag = '0'
		AND VacDate = #{VacDate}
		AND Gubun = #{gubun}
		AND VacDay = #{vacDay}
	</delete>
	
	<select id="selectUserVacationInfo" parameterType="cmap" resultType="cmap">
		/* groupware.vacation.selectUserVacationInfo */
		SELECT UserCode
			, Fn_BaseGetDictionary_S(#{lang},MultiDisplayName) AS DisplayName
			, EnterDate
			, Fn_BaseGetDictionary_S(#{lang},MultiDeptName) AS DeptName
			, Fn_BaseGetDictionary_S(#{lang},MultiJobPositionName) AS JobPositionName
			, CAST(CAST(OWNDAYS+BfUSEDAYS AS DECIMAL(9,4)) AS DOUBLE) AS OWNDAYS
			, CAST(CAST(USEDAYS+BfUSEDAYS AS DECIMAL(9,4)) AS DOUBLE) AS USEDAYS
			, CAST(CAST(OWNDAYS - USEDAYS AS DECIMAL(9,4)) AS DOUBLE) AS REMINDDAYS
			, CONCAT(YEAR - 1, '-01-01 ~ ', YEAR - 1, '-12-31') AS YESTERYEAR
			, CONCAT(YEAR, '-01-01 ~ ', YEAR, '-12-31') AS NOWYEAR
			, DATE_FORMAT(NOW(),'%Y.%m.%d') as TODAY
			, YEAR
			, TargetYear
			, DATE_FORMAT(NOW(),'%m') AS MONTH
			, FORMAT(IFNULL(ROUND((USEDAYS/OWNDAYS * 100),-1),0),0) AS PER
			<if test='empType != null and !empType.equalsIgnoreCase("normal")'>
			, (SELECT VACPLAN FROM covi_smart4j.vm_useage_plan WHERE UR_CODE = #{urCode} AND YEAR = SUBSTR(EnterDate,1,4)) AS VACPLAN
			</if>
			<if test='empType == null or empType.equalsIgnoreCase("normal")'>
			, (SELECT VACPLAN FROM covi_smart4j.vm_useage_plan WHERE UR_CODE = #{urCode} AND YEAR = TargetYear) AS VACPLAN
			</if>
			, (fn_attend_getPromotionDateRage('F','Code1' ,VacLimit ,#{domainCode})) AS VacLimitDayFrom
			, (fn_attend_getPromotionDateRage('T','Code1'
				,fn_attend_getPromotionDateRage('F','Code1'
				,VacLimit
				,#{domainCode}), #{domainCode})) AS VacLimitDayTo
			, (fn_attend_getPromotionDateRage('F','Code2' ,VacLimit ,#{domainCode})) AS VacLimitOneFrom
			, (fn_attend_getPromotionDateRage('T','Code2'
				,fn_attend_getPromotionDateRage('F','Code2'
				,VacLimit
				,#{domainCode}), #{domainCode})) AS VacLimitOneTo
			, (fn_attend_getPromotionDateRage('F','Code3' ,VacLimit ,#{domainCode}))  AS VacLimitTwoFrom
			, (fn_attend_getPromotionDateRage('T','Code3'
				,fn_attend_getPromotionDateRage('F','Code3'
				,VacLimit
				,#{domainCode}), #{domainCode})) AS VacLimitTwoTo
			, (fn_attend_getPromotionDateRage('F','Code4' ,VacLimit ,#{domainCode})) AS VacLimitLessFrom
			, (fn_attend_getPromotionDateRage('T','Code4'
				,fn_attend_getPromotionDateRage('F','Code4'
				,VacLimit
				,#{domainCode}), #{domainCode})) AS VacLimitLessTo
			, (fn_attend_getPromotionDateRage('F','Code5' ,VacLimit ,#{domainCode})) AS VacLimit091From
			, (fn_attend_getPromotionDateRage('T','Code5'
				, fn_attend_getPromotionDateRage('F','Code5'
				,VacLimit
				,#{domainCode}), #{domainCode})) AS VacLimit091To
			, (fn_attend_getPromotionDateRage('F','Code6' ,VacLimit ,#{domainCode})) AS VacLimit092From
			, (fn_attend_getPromotionDateRage('T','Code6'
				, fn_attend_getPromotionDateRage('F','Code6'
				,VacLimit
				,#{domainCode}), #{domainCode})) AS VacLimit092To
			, (fn_attend_getPromotionDateRage('F','Code7' ,VacLimit ,#{domainCode})) AS VacLimit021From
			, (fn_attend_getPromotionDateRage('T','Code7'
				, fn_attend_getPromotionDateRage('F','Code7'
				,VacLimit
				,#{domainCode}), #{domainCode})) AS VacLimit021To
			, (fn_attend_getPromotionDateRage('F','Code8' ,VacLimit ,#{domainCode})) AS VacLimit022From
			, (fn_attend_getPromotionDateRage('T','Code8'
				, fn_attend_getPromotionDateRage('F','Code8'
				,VacLimit
				,#{domainCode}), #{domainCode})) AS VacLimit022To
		FROM (
			SELECT A.UserCode, A.MultiDisplayName, A.EnterDate
				, B.MultiDeptName , B.MultiJobPositionName
				, #{year} as YEAR
				, A.TargetYear
				, CASE WHEN IsOneYear = 0 THEN
						DATE_ADD(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'), INTERVAL 1 YEAR)
					ELSE
						DATE_ADD(STR_TO_DATE(CONCAT(#{year},'-01-01'),'%Y-%m-%d'), INTERVAL 1 YEAR) END AS VacLimit
				, (SELECT
					IFNULL(SUM(VacDay),0)
					FROM covi_smart4j.VM_VACATIONPLAN vp
					LEFT JOIN (select Code, Fn_BaseGetDictionary_S(#{lang}, IFNULL(MultiCodeName, CodeName)) AS CodeName, SortKey
								from covi_smart4j.sys_base_code
								where IsUse = 'Y'
								and DomainID = (SELECT DomainID FROM covi_smart4j.sys_object_domain WHERE DomainCode = #{domainCode})
								and CodeGroup = 'VACATION_TYPE') G ON G.Code = vp.VacKind
								WHERE UR_Code = #{urCode}
								AND YEAR = #{year}
								AND (VacKind = 'PUBLIC' OR (VacKind != 'PUBLIC' AND G.Code is not null)
					)
				) AS OWNDAYS
				, IFNULL(F.USEDAYS,0) as USEDAYS
				<if test='bfYear != null and bfYear != ""'>
					, (SELECT FORMAT(IFNULL(SUM(CASE WHEN B.CodeID IS NOT NULL THEN VacDay ELSE 0 END),0),3)
						FROM covi_smart4j.VM_VACATIONINFO A
						LEFT JOIN covi_smart4j.sys_base_code B ON B.CodeGroup = 'VACATION_TYPE' AND	B.Reserved1 = '+' AND B.IsUse = 'Y' AND A.VacFlag = B.Code AND B.DomainID = #{domainID}
						WHERE A.VacYear =#{bfYear}
						AND   UR_Code = #{urCode})
				</if>
				<if test='bfYear == null or bfYear == ""'>
					, 0 
				</if>
					 BfUSEDAYS
			FROM (select UserCode, EnterDate, MultiDisplayName, RetireDate, SortKey
					, (CASE WHEN DATE(DATE_ADD(EnterDate, INTERVAL 12 MONTH))  <![CDATA[<=]]>  DATE(NOW()) THEN 1
					ELSE 0 END
					) as IsOneYear
					, (CASE WHEN DATE(DATE_ADD(EnterDate, INTERVAL 12 MONTH))  <![CDATA[<=]]>  DATE(NOW()) THEN
							#{year}
						ELSE
							CASE WHEN STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'),'%m%d')),'%Y%m%d') <![CDATA[<=]]> STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(NOW(3),'%m%d')),'%Y%m%d') THEN
								YEAR(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'))
							ELSE
								YEAR(DATE_ADD(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'), INTERVAL -1 YEAR )) END
						END
						) as TargetYear
					from covi_smart4j.sys_object_user)  A
			LEFT JOIN covi_smart4j.sys_object_user_basegroup b ON JobType = 'Origin' AND A.UserCode = B.UserCode
			LEFT JOIN (	SELECT UR_Code
							, FORMAT(IFNULL(SUM(CASE WHEN B.CodeID IS NOT NULL THEN VacDay ELSE 0 END),0),3) AS USEDAYS
						FROM covi_smart4j.VM_VACATIONINFO A
						LEFT JOIN covi_smart4j.sys_base_code B
							ON B.CodeGroup = 'VACATION_TYPE'
							AND	B.Reserved1 = '+'
							<!--AND (B.Reserved2 is null or B.Reserved2 ='')-->
							AND B.IsUse = 'Y'
							AND A.VacFlag = B.Code
							AND B.DomainID = (SELECT DomainID FROM covi_smart4j.sys_object_domain WHERE DomainCode = #{domainCode})
						WHERE A.VacYear =#{year}
						AND   UR_Code = #{urCode}
						<if test='termDate != null and termDate != ""'>
							AND A.EDATE <![CDATA[<=]]> #{termDate}
						</if>
						GROUP BY A.UR_Code
			) AS F ON A.UserCode = F.UR_Code
			WHERE A.UserCode = #{urCode}
		) A
		
	</select>

	<select id="selectUserVacationInfoV2" parameterType="cmap" resultType="cmap">
		/* groupware.vacation.selectUserVacationInfoV2 */
		SELECT UserCode
			, Fn_BaseGetDictionary_S(#{lang},MultiDisplayName) AS DisplayName
			, EnterDate
			, Fn_BaseGetDictionary_S(#{lang},MultiDeptName) AS DeptName
			, Fn_BaseGetDictionary_S(#{lang},MultiJobPositionName) AS JobPositionName
			, CAST(CAST(OWNDAYS+IFNULL(EtcOWNDAYS,0.0)+BfUSEDAYS AS DECIMAL(9,4)) AS DOUBLE) AS OWNDAYS
			, CAST(CAST(USEDAYS+BfUSEDAYS AS DECIMAL(9,4)) AS DOUBLE) AS USEDAYS
			, CAST(CAST((OWNDAYS+IFNULL(EtcOWNDAYS,0.0)) - USEDAYS AS DECIMAL(9,4)) AS DOUBLE) AS REMINDDAYS
			, CONCAT(DATE_ADD(VacYear, INTERVAL -1 YEAR), ' ~ ', DATE_ADD(VacYear, INTERVAL -1 DAY)) AS YESTERYEAR
			, CONCAT(VacYear,' ~ ', DATE_ADD(DATE_ADD(VacYear, INTERVAL 1 YEAR), INTERVAL -1 DAY)) AS NOWYEAR
			, DATE_FORMAT(NOW(),'%Y.%m.%d') as TODAY
			, #{year} AS YEAR
			, Tyear AS TargetYear
			, DATE_FORMAT(NOW(),'%m') AS MONTH
			, FORMAT(IFNULL(ROUND((USEDAYS/OWNDAYS * 100),-1),0),0) AS PER
			<if test='empType != null and !empType.equalsIgnoreCase("normal")'>
			, (SELECT VACPLAN FROM covi_smart4j.vm_useage_plan WHERE UR_CODE = #{urCode} AND YEAR = SUBSTR(EnterDate,1,4)) AS VACPLAN
			</if>
			<if test='empType == null or empType.equalsIgnoreCase("normal")'>
			, (SELECT VACPLAN FROM covi_smart4j.vm_useage_plan WHERE UR_CODE = #{urCode} AND YEAR = Tyear) AS VACPLAN
			</if>
			, VacLimitDayFrom
			, VacLimitOneFrom
			, VacLimitTwoFrom
			, VacLimitLessFrom
			, VacLimit091From
			, VacLimit092From
			, VacLimit021From
			, VacLimit022From
			, fn_attend_getPromotionDateRage('T','Code1' ,VacLimitDayFrom, #{domainCode}) AS VacLimitDayTo
			, fn_attend_getPromotionDateRage('T','Code2' ,VacLimitOneFrom, #{domainCode}) AS VacLimitOneTo
			, fn_attend_getPromotionDateRage('T','Code3' ,VacLimitTwoFrom, #{domainCode}) AS VacLimitTwoTo
			, fn_attend_getPromotionDateRage('T','Code4' ,VacLimitLessFrom, #{domainCode}) AS VacLimitLessTo
			, fn_attend_getPromotionDateRage('T','Code5' ,VacLimit091From, #{domainCode}) AS VacLimit091To
			, fn_attend_getPromotionDateRage('T','Code6' ,VacLimit092From, #{domainCode}) AS VacLimit092To
			, fn_attend_getPromotionDateRage('T','Code7' ,VacLimit021From, #{domainCode}) AS VacLimit021To
			, fn_attend_getPromotionDateRage('T','Code8' ,VacLimit022From, #{domainCode}) AS VacLimit022To
		FROM (
			SELECT UserCode, MultiDisplayName, EnterDate, MultiDeptName , MultiJobPositionName
			, Tyear, VacYear, VacLimit, BfUSEDAYS, USEDAYS
			, OWNDAYS, EtcOWNDAYS
			, CASE WHEN YEAR(fn_attend_getPromotionDateRage('F','Code1' ,VacLimit ,#{domainCode})) <![CDATA[<]]> #{year} THEN
					fn_attend_getPromotionDateRage('F','Code1' ,DATE_ADD(VacLimit, INTERVAL 1 YEAR) ,#{domainCode})
				ELSE
					fn_attend_getPromotionDateRage('F','Code1' ,VacLimit ,#{domainCode})
				END AS VacLimitDayFrom
			, CASE WHEN YEAR(fn_attend_getPromotionDateRage('F','Code2' ,VacLimit ,#{domainCode})) <![CDATA[<]]> #{year} THEN
					fn_attend_getPromotionDateRage('F','Code2' ,DATE_ADD(VacLimit, INTERVAL 1 YEAR) ,#{domainCode})
				ELSE
					fn_attend_getPromotionDateRage('F','Code2' ,VacLimit ,#{domainCode})
				END AS VacLimitOneFrom
			, CASE WHEN YEAR(fn_attend_getPromotionDateRage('F','Code3' ,VacLimit ,#{domainCode})) <![CDATA[<]]> #{year} THEN
					fn_attend_getPromotionDateRage('F','Code3' ,DATE_ADD(VacLimit, INTERVAL 1 YEAR) ,#{domainCode})
				ELSE
					fn_attend_getPromotionDateRage('F','Code3' ,VacLimit ,#{domainCode})
				END AS VacLimitTwoFrom
			, fn_attend_getPromotionDateRage('F','Code4' ,VacLimit ,#{domainCode}) AS VacLimitLessFrom
			, fn_attend_getPromotionDateRage('F','Code5' ,VacLimit ,#{domainCode}) AS VacLimit091From
			, fn_attend_getPromotionDateRage('F','Code6' ,VacLimit ,#{domainCode}) AS VacLimit092From
			, fn_attend_getPromotionDateRage('F','Code7' ,VacLimit ,#{domainCode}) AS VacLimit021From
			, fn_attend_getPromotionDateRage('F','Code8' ,VacLimit ,#{domainCode}) AS VacLimit022From

			FROM (
					SELECT A.UserCode, A.MultiDisplayName, A.EnterDate
					, B.MultiDeptName , B.MultiJobPositionName
					, Tyear
					, STR_TO_DATE(CONCAT(Tyear,DATE_FORMAT(STR_TO_DATE(EnterDate,'%Y-%m-%d'),'-%m-%d')),'%Y-%m-%d') AS VacYear
					, CASE WHEN  IsOneYear = 0 THEN
							DATE_ADD(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'), INTERVAL 1 YEAR)
						WHEN CFG.CreateMethod = 'J' THEN
							STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(EnterDate,'%Y-%m-%d'),'-%m-%d')),'%Y-%m-%d')
						ELSE
							DATE_ADD(STR_TO_DATE(CONCAT(#{year},'-01-01'),'%Y-%m-%d'), INTERVAL 1 YEAR) END AS VacLimit
					, (SELECT
						IFNULL(SUM(VacDay),0)
						FROM covi_smart4j.VM_VACATIONPLAN vp
						LEFT JOIN (select Code, Fn_BaseGetDictionary_S(#{lang}, IFNULL(MultiCodeName, CodeName)) AS CodeName, SortKey
									from covi_smart4j.sys_base_code
									where IsUse = 'Y'
									and DomainID = (SELECT DomainID FROM covi_smart4j.sys_object_domain WHERE DomainCode = #{domainCode})
									and CodeGroup = 'VACATION_TYPE') G ON G.Code = vp.VacKind
							WHERE UR_Code = #{urCode}
							AND YEAR = Tyear
							AND (VacKind = 'PUBLIC' <!--OR (VacKind != 'PUBLIC' AND G.Code is not null)--> )
					) AS OWNDAYS
				, (SELECT IFNULL(SUM(VacDay),0.0)
					FROM covi_smart4j.VM_VACATIONPLAN
					WHERE UR_Code = #{urCode}
					AND VacKind <![CDATA[<>]]> 'PUBLIC'
					AND VacKind IN (SELECT Code
									FROM covi_smart4j.SYS_BASE_CODE
									WHERE CodeGroup = 'VACATION_TYPE'
									AND IsUse ='Y'
									AND DomainID = (SELECT DomainID FROM covi_smart4j.sys_object_domain WHERE DomainCode = #{domainCode})
									AND Reserved1 ='+'
									AND (Reserved2 is null or Reserved2 ='')
					)
					AND STR_TO_DATE(UseStartDate,'%Y%m%d') <![CDATA[>=]]> Sdate
					AND STR_TO_DATE(UseEndDate,'%Y%m%d') <![CDATA[<=]]> Edate
					) AS EtcOWNDAYS
					<if test='bfYear != null and bfYear != ""'>
						, (SELECT FORMAT(IFNULL(SUM(CASE WHEN B.CodeID IS NOT NULL THEN VacDay ELSE 0 END),0),3)
						FROM covi_smart4j.VM_VACATIONINFO A
						LEFT JOIN covi_smart4j.sys_base_code B
							ON B.CodeGroup = 'VACATION_TYPE'
							AND	B.Reserved1 = '+'
							AND B.IsUse = 'Y'
							AND A.VacFlag = B.Code
							AND B.DomainID = (SELECT DomainID FROM covi_smart4j.sys_object_domain WHERE DomainCode = #{domainCode})
						WHERE A.VacYear = (Tyear-1)
						AND   UR_Code = #{urCode})
					</if>
					<if test='bfYear == null or bfYear == ""'>
						, 0
					</if>
					BfUSEDAYS
					, IFNULL(F.USEDAYS,0) AS USEDAYS
					FROM (SELECT UserCode, MultiDisplayName, EnterDate, Tyear
						,STR_TO_DATE(CONCAT(Tyear,DATE_FORMAT(STR_TO_DATE(EnterDate,'%Y-%m-%d'),'%m%d')),'%Y%m%d') as Sdate
						,DATE_ADD(DATE_ADD(STR_TO_DATE(CONCAT(Tyear,DATE_FORMAT(STR_TO_DATE(EnterDate,'%Y-%m-%d'),'%m%d')),'%Y%m%d'), INTERVAL 1 YEAR), INTERVAL -1 DAY ) as Edate
						, (CASE WHEN DATE(DATE_ADD(EnterDate, INTERVAL 12 MONTH))  <![CDATA[<=]]>  DATE(NOW()) THEN 1
							ELSE 0 END
							) as IsOneYear
						FROM (
							SELECT UserCode, MultiDisplayName, EnterDate
							,CASE WHEN STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'),'%m%d')),'%Y%m%d') <![CDATA[<=]]> STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(NOW(3),'%m%d')),'%Y%m%d') THEN
								YEAR(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'))
							ELSE
								YEAR(DATE_ADD(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'), INTERVAL -1 YEAR ))
							END AS Tyear
							FROM covi_smart4j.sys_object_user) a) A
						LEFT JOIN covi_smart4j.sys_object_user_basegroup b ON JobType = 'Origin' AND A.UserCode = B.UserCode
						LEFT JOIN covi_smart4j.vm_config CFG ON CFG.CompanyCode = B.CompanyCode
						LEFT JOIN (	SELECT UR_Code, VacYear
						, FORMAT(IFNULL(SUM(CASE WHEN B.CodeID IS NOT NULL THEN VacDay ELSE 0 END),0),3) AS USEDAYS
						FROM covi_smart4j.VM_VACATIONINFO V
						LEFT JOIN    (SELECT UserCode, MultiDisplayName, EnterDate
							,CASE WHEN STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(NOW(),'%m%d')),'%Y%m%d') <![CDATA[<]]> STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(EnterDate,'%Y-%m-%d'),'%m%d')),'%Y%m%d') THEN
								STR_TO_DATE(CONCAT(YEAR(DATE_ADD(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'), INTERVAL -1 YEAR )),DATE_FORMAT(STR_TO_DATE(EnterDate,'%Y-%m-%d'),'-%m-%d')),'%Y-%m-%d')
							ELSE
								STR_TO_DATE(CONCAT(YEAR(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d')),DATE_FORMAT(STR_TO_DATE(EnterDate,'%Y-%m-%d'),'-%m-%d')),'%Y-%m-%d')
							END AS VacYearRange
						FROM covi_smart4j.sys_object_user) A ON V.UR_Code = A.UserCode
						LEFT JOIN covi_smart4j.sys_base_code B
							ON B.CodeGroup = 'VACATION_TYPE'
							AND	B.Reserved1 = '+'
							<!--AND (B.Reserved2 is null or B.Reserved2 ='')-->
							AND B.IsUse = 'Y'
							AND V.VacFlag = B.Code
							AND B.DomainID = (SELECT DomainID FROM covi_smart4j.sys_object_domain WHERE DomainCode = #{domainCode})
						WHERE STR_TO_DATE(V.Sdate,'%Y-%m-%d') <![CDATA[>=]]> A.VacYearRange
						AND STR_TO_DATE(V.Edate,'%Y-%m-%d') <![CDATA[<=]]> DATE_ADD(DATE_ADD(A.VacYearRange, INTERVAL 1 YEAR), INTERVAL -1 DAY)
						AND   UR_Code = #{urCode}

					<if test='termDate != null and termDate != ""'>
						AND A.EDATE <![CDATA[<=]]> #{termDate}
					</if>
					GROUP BY V.UR_Code
					) AS F ON A.UserCode = F.UR_Code
				WHERE A.UserCode = #{urCode}
			) T
		) TBL
	</select>

	<select id="selectVacationListByType" parameterType="cmap" resultType="cmap">
	/* groupware.vacation.selectVacationListByType */
	SELECT UserCode UR_Code
		, Fn_BaseGetDictionary_S(#{lang}, a.DisplayName) AS DisplayName
		, Fn_BaseGetDictionary_S(#{lang}, IFNULL(P.DeptName, a.DeptName)) AS DeptName
		, Fn_BaseGetDictionary_S(#{lang}, JobPositionName) AS JobPositionName
		, Fn_BaseGetDictionary_S(#{lang}, JobTitleName) AS JobTitleName
		, year as year
		, EnterDate
		, RetireDate
		, CAST(IFNULL(P.VacDay,0) 
			<if test='hideExtraVacation eq "N" '> + IFNULL((SELECT SUM(pe.vacday) FROM vm_vacationplan pe where 	pe.VacKind != 'PUBLIC' AND pe.UR_Code = a.UserCode 		AND  pe.UseStartDate between p.UseStartDate AND p.UseEnddate ),0)</if>
			as float)AS planVacDay
		, CAST(IFNULL(SUM(CASE WHEN v.Reserved1 = '+' <if test='hideExtraVacation eq "Y" '>AND t.Code = 'PUBLIC' </if>  THEN  d.VacDay ELSE 0 END),0) as float) useDays
		, CAST(IFNULL(P.VacDay,0) 
			<if test='hideExtraVacation eq "N" '> + IFNULL((SELECT SUM(pe.vacday) FROM vm_vacationplan pe where 	pe.VacKind != 'PUBLIC' AND pe.UR_Code = a.UserCode 		AND  pe.UseStartDate between p.UseStartDate AND p.UseEnddate ),0)</if>
		 - IFNULL(SUM(CASE WHEN v.Reserved1 = '+' <if test='hideExtraVacation eq "Y" '>AND t.Code = 'PUBLIC' </if>  THEN  d.VacDay ELSE 0 END),0) as float) remindDays
		, p.Year Year
		, p.UseStartDate UseStartDate
		, p.UseEndDate UseEndDate
		<foreach collection="colList" item="col">
			, CAST(IFNULL(SUM(CASE WHEN VacFlag = #{col.Code} <if test='hideExtraVacation eq "Y" '>AND t.Code = 'PUBLIC' </if> THEN d.VacDay ELSE 0 END),0)as float) VAC_${col.Code}
		</foreach>
		,CAST(IFNULL(SUM(CASE WHEN VacFlag NOT IN
		<foreach item="col" index="index" collection="colList" open="(" close=")" separator=",">
			#{col.Code}
		</foreach> <if test='hideExtraVacation eq "Y" '>AND t.Code = 'PUBLIC' </if> THEN d.VacDay ELSE 0 END),0) as float) EtcVac
	FROM(
		SELECT u.UserCode
				, Fn_BaseGetDictionary_S(#{lang}, u.MultiDisplayName) AS DisplayName
				, ub.MultiDeptName AS DeptName
				, EnterDate
				, RetireDate
				, u.SortKey
				, ub.DeptCode
				, ub.JobTitleSortKey
				, ub.JobPositionSortKey
				, ub.JobLevelSortKey
				, Fn_BaseGetDictionary_S(#{lang}, ub.MultiJobPositionName) AS JobPositionName
				, Fn_BaseGetDictionary_S(#{lang}, ub.MultiJobTitleName) AS JobTitleName
		FROM sys_object_user u
		JOIN sys_object_user_basegroup ub ON u.UserCode = ub.UserCode and JobType = 'Origin'
		JOIN sys_object_group g ON ub.DeptCode = g.GroupCode 
			<if test='deptCode != null and deptCode != ""'> and CONCAT(';',GroupPath) LIKE CONCAT('%;',#{deptCode} ,';%')</if>
			<if test='schDeptID != null and schDeptID != ""'> and CONCAT(';',GroupPath) LIKE CONCAT('%;',#{schDeptID} ,';%')</if>
		WHERE ( year(u.EnterDate) <![CDATA[<=]]> #{year}
		AND year(CASE WHEN u.RetireDate = '' THEN '2999-01-01' ELSE	u.RetireDate END) >= #{year} )
			<if test='domainCode != null and domainCode != ""'>
				AND ub.Companycode = #{domainCode}
			</if>
			<if test='schEmploySel != null and schEmploySel != ""'>
				<choose>
					<when test='schEmploySel == "INOFFICE"'>
						AND u.RetireDate = ''
						AND ub.DeptCode NOT LIKE '%RetireDept'
					</when>
					<otherwise> <!-- RETIRE -->
						AND u.RetireDate != ''
					</otherwise>
				</choose>
			</if>
			<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
				<choose>
					<when test='schTypeSel == "deptName"'>
						AND ub.DeptName LIKE CONCAT('%', #{schTxt}, '%')
					</when>
					<otherwise>
						AND u.MultiDisplayName LIKE CONCAT('%', #{schTxt}, '%')
					</otherwise>
				</choose>
			</if>
			<trim prefix="ORDER BY"  prefixOverrides =",">
				<choose>
					<when test="orgOrders != null and orgOrders != '' ">
					  	<foreach collection="orgOrders" item="orgOrder" separator=",">
					  		<if test="orgOrder != null and orgOrder == 'JobTitle'">
					  			JobTitleSortKey ASC
					  		</if>
					  		<if test="orgOrder != null and orgOrder == 'JobLevel'">
					  			JobLevelSortKey ASC
					  		</if>
					  		<if test="orgOrder != null and orgOrder == 'JobPosition'">
					  			JobPositionSortKey ASC
					  		</if>
			  				<if test="orgOrder != null and orgOrder == 'DN'">
					  			DisplayName ASC
					  		</if>
					  	</foreach>
					  	, SortKey ASC
				  	</when>
				</choose>
			</trim>
			<if test='pageSize != null and pageOffset != null'>
				LIMIT #{pageSize} OFFSET #{pageOffset}
			</if>			
		) A
		LEFT JOIN vm_vacationplan p ON 	p.VacKind = 'PUBLIC' AND p.UR_Code = a.UserCode 
			AND <if test='stndCur == "Y"'>DATE_FORMAT(NOW(),'%Y%m%d') BETWEEN  UseStartDate AND UseEndDate </if>
				<if test='stndCur != "Y"'>p.year=#{year}</if>	
		LEFT JOIN vm_vacationinfo_day d  on a.UserCode = d.UR_Code AND d.VacDate BETWEEN DATE_FORMAT(p.UseStartDate, '%Y-%m-%d') AND  DATE_FORMAT(P.UseEndDate  , '%Y-%m-%d')
	    LEFT JOIN sys_base_code v ON  d.VacFlag =  v.CODE AND v.CodeGroup = 'VACATION_TYPE' AND v.IsUse ='Y'	AND v.DomainID = #{domainID} 
	    LEFT JOIN sys_base_code t ON  v.ReservedInt = t.CodeID  <if test='hideExtraVacation eq "Y" '>AND t.Code = 'PUBLIC' </if>
			GROUP BY a.UserCode
		<trim prefix="ORDER BY"  prefixOverrides =",">
			<choose>
				<when test="orgOrders != null and orgOrders != '' ">
				  	<foreach collection="orgOrders" item="orgOrder" separator=",">
				  		<if test="orgOrder != null and orgOrder == 'JobTitle'">
				  			a.JobTitleSortKey ASC
				  		</if>
				  		<if test="orgOrder != null and orgOrder == 'JobLevel'">
				  			a.JobLevelSortKey ASC
				  		</if>
				  		<if test="orgOrder != null and orgOrder == 'JobPosition'">
				  			a.JobPositionSortKey ASC
				  		</if>
		  				<if test="orgOrder != null and orgOrder == 'DN'">
				  			a.DisplayName ASC
				  		</if>
				  	</foreach>
				  	, a.SortKey ASC
			  	</when>
			</choose>
		</trim>
	</select>
	
	<select id="selectVacationListCntByType" resultType="java.lang.Long">
		SELECT count(u.UserCode)
		FROM sys_object_user u
		JOIN sys_object_user_basegroup ub ON u.UserCode = ub.UserCode and JobType = 'Origin'
		JOIN sys_object_group g ON ub.DeptCode = g.GroupCode 
			<if test='deptCode != null and deptCode != ""'> and CONCAT(';',GroupPath) LIKE CONCAT('%;',#{deptCode} ,';%')</if>
			<if test='schDeptID != null and schDeptID != ""'> and CONCAT(';',GroupPath) LIKE CONCAT('%;',#{schDeptID} ,';%')</if>
		WHERE ( year(u.EnterDate) <![CDATA[<=]]> #{year}
		AND year(CASE WHEN u.RetireDate = '' THEN '2999-01-01' ELSE	u.RetireDate END) >= #{year} )
			<if test='domainCode != null and domainCode != ""'>
				AND ub.Companycode = #{domainCode}
			</if>
			<if test='schEmploySel != null and schEmploySel != ""'>
				<choose>
					<when test='schEmploySel == "INOFFICE"'>
						AND u.RetireDate = ''
						AND ub.DeptCode NOT LIKE '%RetireDept'
					</when>
					<otherwise> <!-- RETIRE -->
						AND u.RetireDate != ''
					</otherwise>
				</choose>
			</if>
			<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
				<choose>
					<when test='schTypeSel == "deptName"'>
						AND ub.DeptName LIKE CONCAT('%', #{schTxt}, '%')
					</when>
					<otherwise>
						AND u.DisplayName LIKE CONCAT('%', #{schTxt}, '%')
					</otherwise>
				</choose>
			</if>
	</select>

	<select id="selectVacationListByTypeV2" parameterType="cmap" resultType="cmap">
		SELECT UserCode UR_Code
		, DisplayName
		, CAST(planVacDay as float) AS planVacDay
		<if test='hideExtraVacation eq "Y" '>
			, CAST(VacDayPublic as float) AS useDays
			, CAST(planVacDay - VacDayPublic  as float) AS remindDays
		</if>
		<if test='hideExtraVacation eq "N" '>
		, CAST(VacDayPublic+VacDayExtra as float) AS useDays
		, CAST(planVacDay - (VacDayPublic+VacDayExtra)  as float) AS remindDays
		</if>
		, DeptName
		, JobPositionName
		, JobTitleName
		, TargetYear as year
		, UseStartDate
		, UseEndDate
		, EnterDate
		, RetireDate
		, IFNULL((SELECT SUM(VacDay) RewardVacDay FROM covi_smart4j.vm_vacationplan H WHERE H.UR_Code = A.UserCode AND VacKind='VACATION_REWARD' AND	YEAR = #{year}),0) AS RewardVacDay
		<foreach collection="colList" item="col">
			, cast(cast(VAC_${col.Code} as DECIMAL(9,4)) as float) as VAC_${col.Code}
		</foreach>
		, cast(cast(EtcVac as DECIMAL(9,4)) as float) as EtcVac
		FROM(
		SELECT UserCode
		, Fn_BaseGetDictionary_S(#{lang}, DisplayName) AS DisplayName
		, Fn_BaseGetDictionary_S(#{lang}, IFNULL(P.DeptName, A.DeptName)) AS DeptName
		, IFNULL(P.VacDay,0) AS planVacDay
		, EnterDate
		, RetireDate
		, a.SortKey
		, A.DeptCode
		, JobTitleSortKey
		, JobPositionSortKey
		, Fn_BaseGetDictionary_S(#{lang}, JobPositionName) AS JobPositionName
		, Fn_BaseGetDictionary_S(#{lang}, JobTitleName) AS JobTitleName
		<foreach collection="colList" item="col">
			, IFNULL(SUM(CASE WHEN VacFlag = #{col.Code} and Reserved1 = '+' THEN V.VacDay ELSE 0 END),0) VAC_${col.Code}
		</foreach>
		,IFNULL(SUM(CASE WHEN VacFlag NOT IN
		<foreach item="col" index="index" collection="colList" open="(" close=")" separator=",">
			#{col.Code}
		</foreach>
		and Reserved1 = '+'
		THEN V.VacDay ELSE 0 END),0) EtcVac
		, (SELECT SUM(V.VacDay) FROM
			(select vi.VacDay, C.GroupCode, vi.Sdate, vi.Edate, vi.UR_Code, C.Reserved1
			from covi_smart4j.vm_vacationinfo vi
			LEFT JOIN (SELECT B.Code
						, CASE WHEN Fn_BaseGetDictionary_S(#{lang}, B.MultiCodeName) is not null THEN
								Fn_BaseGetDictionary_S(#{lang}, B.MultiCodeName)
							ELSE
								B.CodeName
							END    AS CodeName
						, B.Reserved1
						, A.Code as GroupCode
						, B.SortKey
						, B.CodeID
						FROM (select *
								from covi_smart4j.sys_base_code
								WHERE IsUse = 'Y'
									AND DomainID = 0
								) A,
							covi_smart4j.sys_base_code B
							WHERE A.CodeID = B.ReservedInt
							AND B.IsUse = 'Y'
							AND B.DomainID = #{domainID}) C ON vi.VacFlag = C.Code
						) V
			WHERE A.UserCode = V.UR_Code AND V.GroupCode = 'PUBLIC' AND V.Reserved1 = '+'
			AND STR_TO_DATE(V.Sdate,'%Y-%m-%d') <![CDATA[>=]]> STR_TO_DATE(P.UseStartDate,'%Y%m%d')
			AND STR_TO_DATE(V.Edate,'%Y-%m-%d') <![CDATA[<=]]> STR_TO_DATE(P.UseEndDate,'%Y%m%d')
		) AS VacDayPublic
		<if test='hideExtraVacation eq "N" '>
		, (SELECT SUM(V.VacDay) FROM
			(select vi.VacDay, C.GroupCode, vi.Sdate, vi.Edate, vi.UR_Code, C.Reserved1
				from covi_smart4j.vm_vacationinfo vi
				LEFT JOIN (SELECT B.Code
				, CASE WHEN Fn_BaseGetDictionary_S(#{lang}, B.MultiCodeName) is not null THEN
						Fn_BaseGetDictionary_S(#{lang}, B.MultiCodeName)
					ELSE
						B.CodeName
					END    AS CodeName
				, B.Reserved1
				, A.Code as GroupCode
				, B.SortKey
				, B.CodeID
			FROM (select * from covi_smart4j.sys_base_code
						WHERE IsUse = 'Y'
						AND DomainID = 0
					 ) A,
					covi_smart4j.sys_base_code B
					WHERE A.CodeID = B.ReservedInt
					AND B.IsUse = 'Y'
					AND B.DomainID = #{domainID}) C ON vi.VacFlag = C.Code
				) V
			WHERE A.UserCode = V.UR_Code AND V.GroupCode <![CDATA[<>]]> 'PUBLIC' AND V.Reserved1 = '+'
			AND STR_TO_DATE(V.Sdate,'%Y-%m-%d') <![CDATA[>=]]> STR_TO_DATE(P.UseStartDate,'%Y%m%d')
			AND STR_TO_DATE(V.Edate,'%Y-%m-%d') <![CDATA[<=]]> STR_TO_DATE(P.UseEndDate,'%Y%m%d')
		) AS VacDayExtra
		</if>
		, A.TargetYear
		, P.UseStartDate
		, P.UseEndDate
		FROM (
		SELECT A.UserCode
		, A.MultiDeptName AS DeptName
		, A.DeptCode
		, B.MultiDisplayName AS DisplayName
		, B.EnterDate
		, B.RetireDate
		, CAST(B.SortKey AS INTEGER) AS SortKey
		, A.JobTitleSortKey
		, A.JobPositionSortKey
		, MultiJobPositionName AS JobPositionName
		, MultiJobTitleName AS JobTitleName
		, B.TargetYear
		FROM (	SELECT *
		FROM covi_smart4j.sys_object_user_basegroup
		<if test='userCodeList != null and userCodeList != ""'>
			<if test='userCodeList.size != 0'>
				<foreach collection="userCodeList" item="user" open="WHERE UserCode IN (" close=")" separator=",">
					#{user.UserCode}
				</foreach>
			</if>
		</if>
		) A
		LEFT JOIN (select UserCode, EnterDate, MultiDisplayName, RetireDate, SortKey
					, CASE WHEN STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'),'%m%d')),'%Y%m%d') <![CDATA[<=]]> STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(NOW(3),'%m%d')),'%Y%m%d') THEN
							YEAR(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'))
						ELSE
							YEAR(DATE_ADD(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'), INTERVAL -1 YEAR )) END AS TargetYear
					from covi_smart4j.sys_object_user) B ON A.UserCode = B.UserCode
		<if test='deptCode != null and deptCode != ""'>
			JOIN (
			SELECT GroupCode
			FROM covi_smart4j.sys_object_group
			WHERE CONCAT(';',GroupPath) LIKE CONCAT('%;',#{deptCode} ,';%')
			) C ON A.DeptCode = C.GroupCode
		</if>
		<if test='schDeptID != null and schDeptID != ""'>
			JOIN (
			SELECT GroupCode
			FROM covi_smart4j.sys_object_group
			WHERE CONCAT(';',GroupPath) LIKE CONCAT('%;',#{schDeptID} ,';%')
			) C ON A.DeptCode = C.GroupCode
		</if>
		WHERE A.JobType = 'Origin'
		AND ( year(B.EnterDate) <![CDATA[<=]]> #{year}
		AND year(CASE WHEN B.RetireDate = '' THEN '2999-01-01' ELSE	B.RetireDate END) >= #{year} )
		<if test='domainCode != null and domainCode != ""'>
			AND A.Companycode = #{domainCode}
		</if>
		<if test='schEmploySel != null and schEmploySel != ""'>
			<choose>
				<when test='schEmploySel == "INOFFICE"'>
					AND B.RetireDate = ''
					AND A.DeptCode NOT LIKE '%RetireDept'
				</when>
				<otherwise> <!-- RETIRE -->
					AND B.RetireDate != ''
					AND year(B.RetireDate) = #{year}
				</otherwise>
			</choose>
		</if>
		) A
		<if test='hideExtraVacation eq "N" '>
		LEFT JOIN (
			select YEAR, UR_Code, DeptName, VacDay+EtcVacDay as VacDay, UseStartDate, UseEndDate
			from (
				select YEAR, UR_Code, DeptName, UseStartDate, UseEndDate
					, IFNULL(VacDay,0.0) as VacDay
					, (select  SUM(VacDay)
							from covi_smart4j.vm_vacationplan  vmp
							left join (select *
										from covi_smart4j.sys_base_code
										where  DomainID = #{domainID}
										and CodeGroup = 'VACATION_TYPE') bc
							on vmp.VacKind = bc.Code
							where vmp.VacKind not in ('PUBLIC')
							and bc.Reserved1 = '+'
							and vmp.UR_Code = p1.UR_Code
							and vmp.UseStartDate <![CDATA[>=]]> p1.UseStartDate
							and vmp.UseEndDate <![CDATA[<=]]> p1.UseEndDate
						) as EtcVacDay
					from (select UR_Code, YEAR, UseStartDate, UseEndDate, VacDay, DeptName, VacKind
							from covi_smart4j.vm_vacationplan
							where VacKind = 'PUBLIC'
					) p1
				) t
			) P ON P.YEAR = A.TargetYear AND  P.UR_Code = A.UserCode
		</if>
		<if test='hideExtraVacation eq "Y" '>
		LEFT JOIN (select UR_Code, YEAR, UseStartDate, UseEndDate, VacDay, DeptName, VacKind
			from covi_smart4j.vm_vacationplan
			where VacKind = 'PUBLIC'
		) P ON P.YEAR = A.TargetYear AND A.UserCode = P.UR_Code
		</if>
		LEFT JOIN covi_smart4j.vm_vacationinfo V
			ON A.UserCode = V.UR_Code
				AND STR_TO_DATE(V.Sdate,'%Y-%m-%d') <![CDATA[>=]]> STR_TO_DATE(P.UseStartDate,'%Y%m%d')
				AND STR_TO_DATE(V.Edate,'%Y-%m-%d') <![CDATA[<=]]> STR_TO_DATE(P.UseEndDate,'%Y%m%d')
		LEFT JOIN (SELECT  B.Code
		, CASE WHEN Fn_BaseGetDictionary_S(#{lang}, B.MultiCodeName) is not null THEN
				Fn_BaseGetDictionary_S(#{lang}, B.MultiCodeName)
			ELSE
				B.CodeName
			END AS CodeName
		,A.Code as GroupCode
		,B.Reserved1
		FROM
			(select *
				from covi_smart4j.sys_base_code
				WHERE IsUse = 'Y'
				AND DomainID = 0
				AND CodeGroup = 'VACATION_KIND'
			) A,
			covi_smart4j.sys_base_code B
		WHERE A.CodeID = B.ReservedInt
			AND B.IsUse = 'Y'
			AND B.DomainID = #{domainID}) C ON IFNULL(C.Reserved1,'N') = '+' AND  V.VacFlag = C.Code
		<if test='hideExtraVacation eq "Y" '>
			AND C.GroupCode = 'PUBLIC'
		</if>
			GROUP BY A.UserCode
		) A
		<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
			<choose>
				<when test='schTypeSel == "deptName"'>
					WHERE DeptName LIKE CONCAT('%', #{schTxt}, '%')
				</when>
				<otherwise>
					WHERE DisplayName LIKE CONCAT('%', #{schTxt}, '%')
				</otherwise>
			</choose>
		</if>
		<trim prefix='ORDER BY'>
			<if test='sortColumn == null or sortColumn == "" or sortDirection == null or sortDirection == ""'>
				JobPositionSortKey, SortKey ASC
			</if>
			<if test='sortColumn != null and sortColumn != "" and sortDirection != null and sortDirection != ""'>
				<choose>
					<when test='sortColumn.equalsIgnoreCase("DisplayName")'>DisplayName</when>
					<when test='sortColumn.equalsIgnoreCase("JobPositionName")'>JobPositionName</when>
					<otherwise>DeptName</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if>
		</trim>
		<if test='pageSize != null and pageOffset != null'>
			LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>
	</select>

	<select id="selectVacationListCntByTypeV2" resultType="java.lang.Long">
		SELECT COUNT(*)
		FROM(
		SELECT UserCode
		, Fn_BaseGetDictionary_S(#{lang}, DisplayName) AS DisplayName
		, Fn_BaseGetDictionary_S(#{lang}, IFNULL(P.DeptName, A.DeptName)) AS DeptName
		, MAX(P.VacDay) AS planVacDay
		, EnterDate
		, RetireDate
		, A.DeptCode
		, Fn_BaseGetDictionary_S(#{lang}, JobPositionName) AS JobPositionName
		, Fn_BaseGetDictionary_S(#{lang}, JobTitleName) AS JobTitleName
		FROM (
		SELECT A.UserCode
		, A.MultiDeptName AS DeptName
		, A.DeptCode
		, B.MultiDisplayName AS DisplayName
		, B.EnterDate
		, B.RetireDate
		, CAST(B.SortKey AS INT) AS SortKey
		, A.JobTitleSortKey
		, A.JobPositionSortKey
		, MultiJobPositionName AS JobPositionName
		, MultiJobTitleName AS JobTitleName
		FROM (	SELECT *
		FROM covi_smart4j.sys_object_user_basegroup
		<if test='userCodeList != null and userCodeList != ""'>
			<if test='userCodeList.size != 0'>
				<foreach collection="userCodeList" item="user" open="WHERE UserCode IN (" close=")" separator=",">
					#{user.UserCode}
				</foreach>
			</if>
		</if>
		) A
		LEFT JOIN covi_smart4j.sys_object_user B ON A.UserCode = B.UserCode
		<if test='deptCode != null and deptCode != ""'>
			JOIN (
			SELECT GroupCode
			FROM covi_smart4j.sys_object_group
			WHERE CONCAT(';',GroupPath) LIKE CONCAT('%;',#{deptCode} ,';%')
			) C ON A.DeptCode = C.GroupCode
		</if>
		<if test='schDeptID != null and schDeptID != ""'>
			JOIN (
			SELECT GroupCode
			FROM covi_smart4j.sys_object_group
			WHERE CONCAT(';',GroupPath) LIKE CONCAT('%;',#{schDeptID} ,';%')
			) C ON A.DeptCode = C.GroupCode
		</if>
		WHERE A.JobType = 'Origin'
		AND ( year(B.EnterDate) <![CDATA[<=]]> #{year}
		AND year(CASE WHEN B.RetireDate = '' THEN '2999-01-01' ELSE	B.RetireDate END) >= #{year} )
		<if test='domainCode != null and domainCode != ""'>
			AND A.Companycode = #{domainCode}
		</if>
		<if test='schEmploySel != null and schEmploySel != ""'>
			<choose>
				<when test='schEmploySel == "INOFFICE"'>
					AND B.RetireDate = ''
					AND A.DeptCode NOT LIKE '%RetireDept'
				</when>
				<otherwise> <!-- RETIRE -->
					AND B.RetireDate != ''
					AND year(B.RetireDate) = #{year}
				</otherwise>
			</choose>
		</if>
		) A
		LEFT JOIN covi_smart4j.vm_vacationplan P ON A.UserCode = P.UR_Code and P.year = #{year}
		GROUP BY A.UserCode
		) A
		<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
			<choose>
				<when test='schTypeSel == "deptName"'>
					WHERE DeptName LIKE CONCAT('%', #{schTxt}, '%')
				</when>
				<otherwise>
					WHERE DisplayName LIKE CONCAT('%', #{schTxt}, '%')
				</otherwise>
			</choose>
		</if>
	</select>
	
	<update id="updateVacationPlan" parameterType="cmap">
		<selectKey keyProperty="FromDate,ToDate,DeptCode,DeptName" resultType="cmap" order="BEFORE">
			SELECT
			CONCAT(#{year},'0101') AS "FromDate"
			, CONCAT(#{year},'1231') AS "ToDate"
			, (
				SELECT DeptCode FROM covi_smart4j.sys_object_user_basegroup WHERE UserCode = #{urCode} AND JobType = 'Origin'
			) AS "DeptCode"
			, (
				SELECT IFNULL(MultiDeptName, DeptName) AS DeptName FROM covi_smart4j.sys_object_user_basegroup WHERE UserCode = #{urCode} AND JobType = 'Origin'
			) AS "DeptName"
			FROM dual
		</selectKey>
		
		DELETE FROM covi_smart4j.vm_vacationplan
		WHERE UR_Code = #{urCode} 
		  AND YEAR =  CAST(SUBSTR(#{FromDate},1,4) AS INTEGER)
		  AND VacKind =  'PUBLIC';
		  
		INSERT INTO covi_smart4j.vm_vacationplan (UR_Code, YEAR, LongVacDay, LastVacDay, VacDay, VacKind, UseStartDate, UseEndDate, DeptCode, DeptName, RegisterCode, RegistDate)
		VALUES (#{urCode}, #{year}, #{longVacDay}, fn_GetLastVacDay(#{urCode}, #{year}, #{domainCode}), #{longVacDay}+fn_GetLastVacDay(#{urCode}, #{year}, #{domainCode}), 'PUBLIC', #{FromDate}	, #{ToDate}, #{DeptCode} , #{DeptName}, #{registerCode}, now())
		ON DUPLICATE KEY
		UPDATE VacDay = #{longVacDay}+fn_GetLastVacDay(#{urCode}, #{year}, #{domainCode})
			, UseStartDate =  #{FromDate}
			, UseEndDate = #{ToDate}
			, LongVacDay = #{longVacDay}
			, LastVacDay = fn_GetLastVacDay(#{urCode}, #{year}, #{domainCode})
	</update>

	<update id="updateVacationPlanV2" parameterType="cmap">
		<selectKey keyProperty="FromDate,ToDate,DeptCode,DeptName" resultType="cmap" order="BEFORE">
			SELECT
			(SELECT
					CASE WHEN STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'),'%m%d')),'%Y%m%d') <![CDATA[<=]]> STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(NOW(3),'%m%d')),'%Y%m%d') THEN
						CONCAT(YEAR(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d')),DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'),'%m%d'))
					ELSE
						CONCAT(YEAR(DATE_ADD(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'), INTERVAL -1 YEAR )),DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'),'%m%d'))
					END
				FROM covi_smart4j.sys_object_user
				WHERE UserCode = #{urCode}
			) AS "FromDate"
			, (SELECT
					CASE WHEN STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'),'%m%d')),'%Y%m%d') <![CDATA[<=]]> STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(NOW(3),'%m%d')),'%Y%m%d') THEN
						DATE_FORMAT(DATE_ADD(DATE_ADD(STR_TO_DATE(CONCAT(YEAR(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d')),DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'),'%m%d')),'%Y%m%d'), INTERVAL 1 YEAR), INTERVAL -1 DAY),'%Y%m%d')
					ELSE
						DATE_FORMAT(DATE_ADD(DATE_ADD(STR_TO_DATE(CONCAT(YEAR(DATE_ADD(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'), INTERVAL -1 YEAR )),DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'),'%m%d')),'%Y%m%d'), INTERVAL 1 YEAR), INTERVAL -1 DAY),'%Y%m%d')
					END
				FROM covi_smart4j.sys_object_user
				WHERE UserCode = #{urCode}
			) AS "ToDate"
			, (
				SELECT DeptCode FROM covi_smart4j.sys_object_user_basegroup WHERE UserCode = #{urCode} AND JobType = 'Origin'
			) AS "DeptCode"
			, (
				SELECT IFNULL(MultiDeptName, DeptName) AS DeptName FROM covi_smart4j.sys_object_user_basegroup WHERE UserCode = #{urCode} AND JobType = 'Origin'
			) AS "DeptName"
			FROM dual
		</selectKey>

		DELETE FROM covi_smart4j.vm_vacationplan
		WHERE UR_Code = #{urCode} 
		  AND YEAR =  CAST(SUBSTR(#{FromDate},1,4) AS INTEGER)
		  AND VacKind =  'PUBLIC';


		INSERT INTO covi_smart4j.vm_vacationplan (UR_Code, YEAR, LongVacDay, LastVacDay, VacDay, VacKind
			, UseStartDate, UseEndDate
			, DeptCode, DeptName, RegisterCode, RegistDate
		)
		VALUES (#{urCode}, CAST(SUBSTR(#{FromDate},1,4) AS INTEGER), #{longVacDay}, fn_GetLastVacDay(#{urCode}, CAST(SUBSTR(#{FromDate},1,4) AS INTEGER), #{domainCode}) , #{longVacDay} + fn_GetLastVacDay(#{urCode}, CAST(SUBSTR(#{FromDate},1,4) AS INTEGER), #{domainCode}), 'PUBLIC'
			, #{FromDate} , #{ToDate}
			, #{DeptCode} , #{DeptName}, #{registerCode}, now()
		)
		ON DUPLICATE KEY
		UPDATE VacDay = #{longVacDay}+fn_GetLastVacDay(#{urCode}, CAST(SUBSTR(#{FromDate},1,4) AS INTEGER), #{domainCode})
			, UseStartDate =  #{FromDate}
			, UseEndDate = #{ToDate}
			, LongVacDay = #{longVacDay}
			, LastVacDay = fn_GetLastVacDay(#{urCode}, CAST(SUBSTR(#{FromDate},1,4) AS INTEGER), #{domainCode})
	</update>
	
	<update id="updateVacationMessageRead" parameterType="cmap">
		INSERT INTO covi_smart4j.vm_message_reader (MessageID, ReaderCode, ReadDate, Year) 
		VALUES (#{messageId}, #{readerCode}, now(), #{year})
		ON DUPLICATE KEY
		UPDATE ReadDate = now()
	</update>
	
	<select id="selectVacationListByMonth" parameterType="cmap" resultType="cmap">
	/* groupware.vacation.selectVacationListByMonth */
	SELECT UserCode UR_Code
		, Fn_BaseGetDictionary_S(#{lang}, a.DisplayName) AS DisplayName
		, Fn_BaseGetDictionary_S(#{lang}, IFNULL(P.DeptName, a.DeptName)) AS DeptName
		, Fn_BaseGetDictionary_S(#{lang}, JobPositionName) AS JobPositionName
		, Fn_BaseGetDictionary_S(#{lang}, JobTitleName) AS JobTitleName
		, EnterDate
		, RetireDate
		, p.Year Year
		, p.UseStartDate UseStartDate
		, p.UseEndDate UseEndDate
		, year as year
		, UseStartDate
		, UseEndDate
		, CAST(IFNULL(SUM(CASE WHEN DATE_FORMAT(d.VacDate,'%m') = '01' AND v.Reserved1 = '+'  THEN d.VacDay ELSE 0 END),0) as float) AS VacDay_1
		, CAST(IFNULL(SUM(CASE WHEN DATE_FORMAT(d.VacDate,'%m') = '02' AND v.Reserved1 = '+'  THEN d.VacDay ELSE 0 END),0) as float) AS VacDay_2
		, CAST(IFNULL(SUM(CASE WHEN DATE_FORMAT(d.VacDate,'%m') = '03' AND v.Reserved1 = '+'  THEN d.VacDay ELSE 0 END),0) as float) AS VacDay_3
		, CAST(IFNULL(SUM(CASE WHEN DATE_FORMAT(d.VacDate,'%m') = '04' AND v.Reserved1 = '+'  THEN d.VacDay ELSE 0 END),0) as float) AS VacDay_4
		, CAST(IFNULL(SUM(CASE WHEN DATE_FORMAT(d.VacDate,'%m') = '05' AND v.Reserved1 = '+'  THEN d.VacDay ELSE 0 END),0) as float) AS VacDay_5
		, CAST(IFNULL(SUM(CASE WHEN DATE_FORMAT(d.VacDate,'%m') = '06' AND v.Reserved1 = '+'  THEN d.VacDay ELSE 0 END),0) as float) AS VacDay_6
		, CAST(IFNULL(SUM(CASE WHEN DATE_FORMAT(d.VacDate,'%m') = '07' AND v.Reserved1 = '+'  THEN d.VacDay ELSE 0 END),0) as float) AS VacDay_7
		, CAST(IFNULL(SUM(CASE WHEN DATE_FORMAT(d.VacDate,'%m') = '08' AND v.Reserved1 = '+'  THEN d.VacDay ELSE 0 END),0) as float) AS VacDay_8
		, CAST(IFNULL(SUM(CASE WHEN DATE_FORMAT(d.VacDate,'%m') = '09' AND v.Reserved1 = '+'  THEN d.VacDay ELSE 0 END),0) as float) AS VacDay_9
		, CAST(IFNULL(SUM(CASE WHEN DATE_FORMAT(d.VacDate,'%m') = '10' AND v.Reserved1 = '+'  THEN d.VacDay ELSE 0 END),0) as float) AS VacDay_10
		, CAST(IFNULL(SUM(CASE WHEN DATE_FORMAT(d.VacDate,'%m') = '11' AND v.Reserved1 = '+'  THEN d.VacDay ELSE 0 END),0) as float) AS VacDay_11
		, CAST(IFNULL(SUM(CASE WHEN DATE_FORMAT(d.VacDate,'%m') = '12' AND v.Reserved1 = '+'  THEN d.VacDay ELSE 0 END),0) as float) AS VacDay_12
		, CAST(IFNULL(p.VacDay,0.0) as float) AS planVacDay
		, CAST(IFNULL(SUM(CASE WHEN v.Reserved1 = '+' THEN  d.VacDay ELSE 0 END),0) as float) useDays
		, CAST(IFNULL(P.VacDay,0) 
		 - IFNULL(SUM(CASE WHEN v.Reserved1 = '+' THEN  d.VacDay ELSE 0 END),0) as float) remindDays
	FROM(
		SELECT u.UserCode
				, Fn_BaseGetDictionary_S(#{lang}, u.MultiDisplayName) AS DisplayName
				, ub.DeptName AS DeptName
				, EnterDate
				, RetireDate
				, u.SortKey
				, ub.DeptCode
				, JobTitleSortKey
				, JobPositionSortKey
				, JobLevelSortKey
				, Fn_BaseGetDictionary_S(#{lang}, ub.MultiJobPositionName) AS JobPositionName
				, Fn_BaseGetDictionary_S(#{lang}, ub.MultiJobTitleName) AS JobTitleName
		FROM sys_object_user u
		JOIN sys_object_user_basegroup ub ON u.UserCode = ub.UserCode and JobType = 'Origin'
		JOIN sys_object_group g ON ub.DeptCode = g.GroupCode 
			<if test='deptCode != null and deptCode != ""'> and CONCAT(';',GroupPath) LIKE CONCAT('%;',#{deptCode} ,';%')</if>
			<if test='schDeptID != null and schDeptID != ""'> and CONCAT(';',GroupPath) LIKE CONCAT('%;',#{schDeptID} ,';%')</if>
		WHERE ( year(u.EnterDate) <![CDATA[<=]]> #{year}
		AND year(CASE WHEN u.RetireDate = '' THEN '2999-01-01' ELSE	u.RetireDate END) >= #{year} )
			<if test='domainCode != null and domainCode != ""'>
				AND ub.Companycode = #{domainCode}
			</if>
			<if test='schEmploySel != null and schEmploySel != ""'>
				<choose>
					<when test='schEmploySel == "INOFFICE"'>
						AND u.RetireDate = ''
						AND ub.DeptCode NOT LIKE '%RetireDept'
					</when>
					<otherwise> <!-- RETIRE -->
						AND u.RetireDate != ''
					</otherwise>
				</choose>
			</if>
			<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
				<choose>
					<when test='schTypeSel == "deptName"'>
						AND ub.DeptName LIKE CONCAT('%', #{schTxt}, '%')
					</when>
					<otherwise>
						AND u.DisplayName LIKE CONCAT('%', #{schTxt}, '%')
					</otherwise>
				</choose>
			</if>
			<trim prefix="ORDER BY"  prefixOverrides =",">
				<choose>
					<when test="orgOrders != null and orgOrders != '' ">
					  	<foreach collection="orgOrders" item="orgOrder" separator=",">
					  		<if test="orgOrder != null and orgOrder == 'JobTitle'">
					  			JobTitleSortKey ASC
					  		</if>
					  		<if test="orgOrder != null and orgOrder == 'JobLevel'">
					  			JobLevelSortKey ASC
					  		</if>
					  		<if test="orgOrder != null and orgOrder == 'JobPosition'">
					  			JobPositionSortKey ASC
					  		</if>
			  				<if test="orgOrder != null and orgOrder == 'DN'">
					  			DisplayName ASC
					  		</if>
					  	</foreach>
					  	, SortKey ASC
				  	</when>
				</choose>
			</trim>
			<if test='pageSize != null and pageOffset != null'>
				LIMIT #{pageSize} OFFSET #{pageOffset}
			</if>
		) A
		LEFT JOIN vm_vacationplan p ON 	p.VacKind = 'PUBLIC' AND p.UR_Code = a.UserCode 
			AND <if test='stndCur == "Y"'>DATE_FORMAT(NOW(),'%Y%m%d') BETWEEN  UseStartDate AND UseEndDate </if>
				<if test='stndCur != "Y"'>p.year=#{year}</if>	
		LEFT JOIN vm_vacationinfo_day d  on a.UserCode = d.UR_Code AND d.VacDate BETWEEN DATE_FORMAT(p.UseStartDate, '%Y-%m-%d') AND  DATE_FORMAT(p.UseEndDate  , '%Y-%m-%d')
	    LEFT JOIN sys_base_code v ON  d.VacFlag =  v.CODE AND v.CodeGroup = 'VACATION_TYPE' AND v.IsUse ='Y'	AND v.DomainID = #{domainID}  AND v.Reserved1 = '+'
	    LEFT JOIN sys_base_code t ON  v.ReservedInt = t.CodeID  AND t.Code = 'PUBLIC' 
		GROUP BY a.UserCode
		<trim prefix="ORDER BY"  prefixOverrides =",">
			<choose>
				<when test="orgOrders != null and orgOrders != '' ">
				  	<foreach collection="orgOrders" item="orgOrder" separator=",">
				  		<if test="orgOrder != null and orgOrder == 'JobTitle'">
				  			a.JobTitleSortKey ASC
				  		</if>
				  		<if test="orgOrder != null and orgOrder == 'JobLevel'">
				  			a.JobLevelSortKey ASC
				  		</if>
				  		<if test="orgOrder != null and orgOrder == 'JobPosition'">
				  			a.JobPositionSortKey ASC
				  		</if>
		  				<if test="orgOrder != null and orgOrder == 'DN'">
				  			a.DisplayName ASC
				  		</if>
				  	</foreach>
				  	, a.SortKey ASC
			  	</when>
			</choose>
		</trim>
	</select>
	
	<select id="selectVacationListByMonth2" parameterType="cmap" resultType="cmap">
		SELECT UR_Code
			, DisplayName
			, planVacDay
			<if test='hideEarlyVacation eq "Y" '>
			, cast(cast(FORMAT((totVacDays),3) as DECIMAL(9,3)) as float) AS useDays
			, cast(cast(FORMAT(planVacDay - totVacDays, 3) as DECIMAL(9,3)) as float) AS remindDays
			</if>
			<if test='hideEarlyVacation eq "N" '>
			, cast(cast(FORMAT((totVacDays + aforeTotVacDays),3) as DECIMAL(9,3)) as float) AS useDays
			, cast(cast(FORMAT(planVacDay - (totVacDays + aforeTotVacDays), 3) as DECIMAL(9,3)) as float) AS remindDays
			</if>
			, cast(cast(janTotVacDay as DECIMAL(9,3)) as float) AS janTotVacDay
			, cast(cast(febTotVacDay as DECIMAL(9,3)) as float) AS febTotVacDay
			, cast(cast(marTotVacDay as DECIMAL(9,3)) as float) AS marTotVacDay
			, cast(cast(aprTotVacDay as DECIMAL(9,3)) as float) AS aprTotVacDay
			, cast(cast(mayTotVacDay as DECIMAL(9,3)) as float) AS mayTotVacDay
			, cast(cast(junTotVacDay as DECIMAL(9,3)) as float) AS junTotVacDay
			, cast(cast(julTotVacDay as DECIMAL(9,3)) as float) AS julTotVacDay
			, cast(cast(augTotVacDay as DECIMAL(9,3)) as float) AS augTotVacDay
			, cast(cast(sepTotVacDay as DECIMAL(9,3)) as float) AS sepTotVacDay
			, cast(cast(octTotVacDay as DECIMAL(9,3)) as float) AS octTotVacDay
			, cast(cast(novTotVacDay as DECIMAL(9,3)) as float) AS novTotVacDay
			, cast(cast(decTotVacDay as DECIMAL(9,3)) as float) AS decTotVacDay
			, Fn_BaseGetDictionary_S(#{lang}, DeptName) AS DeptName
			, Fn_BaseGetDictionary_S(#{lang}, JobPositionName) AS JobPositionName
			, Fn_BaseGetDictionary_S(#{lang}, JobTitleName) AS JobTitleName
			, #{year} AS year
			, EnterDate
			, RetireDate
		FROM (
			SELECT UserCode AS UR_Code
				, DisplayName
				, FORMAT(IFNULL( (	select IFNULL(VacDay,0.0) from
								(select
								<if test='hideExtraVacation eq "Y" '>
									IFNULL(VacDay,0.0) as VacDay
								</if>
								<if test='hideExtraVacation eq "N" '>
									IFNULL(VacDay,0.0)+IFNULL(EtcVacDay,0.0) as VacDay
								</if>
								, p1.YEAR, p1.UR_Code
								from
								(
								select UR_Code, YEAR, UseStartDate, UseEndDate
								, VacDay
							<if test='hideExtraVacation eq "N" '>
								, (select SUM(VacDay)
									  from covi_smart4j.vm_vacationplan vmp
										left join (select *
													from covi_smart4j.sys_base_code
													where  DomainID = #{domainID}
													and CodeGroup = 'VACATION_TYPE') bc
										on vmp.VacKind = bc.Code
										where vmp.VacKind not in ('PUBLIC')
										and bc.Reserved1 = '+'
										and vmp.UR_Code = vp.UR_Code
										and vmp.UseStartDate <![CDATA[>=]]> vp.UseStartDate
										and vmp.UseEndDate <![CDATA[<=]]> vp.UseEndDate
								) AS EtcVacDay
							</if>
							, DeptName
							, VacKind
							from covi_smart4j.vm_vacationplan vp
							where VacKind in ('PUBLIC')
							) p1
							) P WHERE P.YEAR = #{year} AND A.UserCode = P.UR_Code
					) ,0)	,3) AS planVacDay
				, IFNULL(janTotVacDay,0) AS janTotVacDay
				, IFNULL(febTotVacDay,0) AS febTotVacDay
				, IFNULL(marTotVacDay,0) AS marTotVacDay
				, IFNULL(aprTotVacDay,0) AS aprTotVacDay
				, IFNULL(mayTotVacDay,0) AS mayTotVacDay
				, IFNULL(junTotVacDay,0) AS junTotVacDay
				, IFNULL(julTotVacDay,0) AS julTotVacDay
				, IFNULL(augTotVacDay,0) AS augTotVacDay
				, IFNULL(sepTotVacDay,0) AS sepTotVacDay
				, IFNULL(octTotVacDay,0) AS octTotVacDay
				, IFNULL(novTotVacDay,0) AS novTotVacDay
				, IFNULL(decTotVacDay,0) AS decTotVacDay
				, DeptName
				, JobPositionName
				, JobTitleName
				, IFNULL(totVacDays,0.0) AS totVacDays
				, IFNULL(aforeTotVacDays,0.0) AS aforeTotVacDays
				, EnterDate
				, RetireDate
				, DeptCode
				, SortKey
				, JobTitleSortKey
				, JobPositionSortKey
			FROM (
				SELECT A.UserCode
					, IFNULL(D.DeptName, A.MultiDeptName) AS DeptName
					, A.DeptCode
					, Fn_BaseGetDictionary_S(#{lang},  B.MultiDisplayName) AS DisplayName
					, B.EnterDate
					, B.RetireDate
					, CAST(B.SortKey AS INTEGER) AS SortKey
					, A.JobTitleSortKey
					, A.JobPositionSortKey
					, JobTitleName
					, JobPositionName
				FROM covi_smart4j.sys_object_user_basegroup A
				LEFT JOIN covi_smart4j.sys_object_user B ON A.UserCode = B.UserCode
				LEFT JOIN covi_smart4j.vm_vacationplan D ON A.UserCode = D.UR_Code AND	D.year = #{year} AND D.VacKind='PUBLIC'
				<if test='deptCode != null and deptCode != ""'>
					JOIN (
						SELECT GroupCode
						FROM covi_smart4j.sys_object_group
						WHERE CONCAT(';',GroupPath) LIKE CONCAT('%;',#{deptCode} ,';%')
					) C ON A.DeptCode = C.GroupCode
				</if>
				<if test='schDeptID != null and schDeptID != ""'>
					JOIN (
						SELECT GroupCode
						FROM covi_smart4j.sys_object_group
						WHERE CONCAT(';',GroupPath) LIKE CONCAT('%;',#{schDeptID} ,';%')
					) C ON A.DeptCode = C.GroupCode
				</if>
				WHERE A.JobType = 'Origin'
				AND ( year(B.EnterDate) <![CDATA[<=]]> #{year} AND year(CASE WHEN B.RetireDate = '' THEN '2999-01-01' ELSE	B.RetireDate END) >= #{year} )
				<if test='domainCode != null and domainCode != ""'>
					AND A.Companycode = #{domainCode}
				</if>
				<if test='schEmploySel != null and schEmploySel != ""'>
					<choose>
						<when test='schEmploySel == "INOFFICE"'>
							AND B.RetireDate = ''
							AND A.DeptCode NOT LIKE '%RetireDept'
						</when>
						<otherwise> <!-- RETIRE -->
							AND B.RetireDate != ''
							AND year(B.RetireDate) = #{year}
						</otherwise>
					</choose>
				</if>
			) A
			LEFT JOIN (
				SELECT UR_Code
					, UR_Name
					, FORMAT(IFNULL((SELECT SUM(VacDay) as VacDay FROM covi_smart4j.vm_vacationplan C WHERE C.UR_Code = V.UR_Code AND YEAR = #{year}),0),3) AS planVacDay
					, FORMAT(IFNULL(SUM(CASE WHEN (V.CodeID IS NOT NULL AND IFNULL(V.Reserved2, '') = '') THEN VacDay ELSE 0 END),0),3) AS totVacDays
					, FORMAT(IFNULL(SUM(CASE WHEN (V.CodeID IS NOT NULL AND IFNULL(V.Reserved2, '') != '') THEN VacDay ELSE 0 END),0),3) AS aforeTotVacDays
					<if test='hideEarlyVacation eq "Y" '>
						, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 1 AND IFNULL(V.Reserved2, '') = '' THEN VacDay ELSE 0 END),0),3) AS janTotVacDay
						, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 2 AND IFNULL(V.Reserved2, '') = '' THEN VacDay ELSE 0	END),0),3) AS febTotVacDay
						, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 3 AND IFNULL(V.Reserved2, '') = '' THEN VacDay ELSE 0 END),0),3) AS marTotVacDay
						, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 4 AND IFNULL(V.Reserved2, '') = '' THEN VacDay ELSE 0	END),0),3) AS aprTotVacDay
						, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 5 AND IFNULL(V.Reserved2, '') = '' THEN VacDay ELSE 0 END),0),3) AS mayTotVacDay
						, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 6 AND IFNULL(V.Reserved2, '') = '' THEN VacDay ELSE 0	END),0),3) AS junTotVacDay
						, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 7 AND IFNULL(V.Reserved2, '') = '' THEN VacDay ELSE 0 END),0),3) AS julTotVacDay
						, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 8 AND IFNULL(V.Reserved2, '') = '' THEN VacDay ELSE 0	END),0),3) AS augTotVacDay
						, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 9 AND IFNULL(V.Reserved2, '') = '' THEN VacDay ELSE 0 END),0),3) AS sepTotVacDay
						, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 10 AND IFNULL(V.Reserved2, '') = '' THEN VacDay ELSE 0 END),0),3) AS octTotVacDay
						, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 11 AND IFNULL(V.Reserved2, '') = '' THEN VacDay ELSE 0 END),0),3) AS novTotVacDay
						, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 12 AND IFNULL(V.Reserved2, '') = '' THEN VacDay ELSE 0 END),0),3) AS decTotVacDay
					</if>
					<if test='hideEarlyVacation eq "N" '>
					, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 1 THEN VacDay ELSE 0 END),0),3) AS janTotVacDay
					, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 2 THEN VacDay ELSE 0	END),0),3) AS febTotVacDay
					, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 3 THEN VacDay ELSE 0 END),0),3) AS marTotVacDay
					, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 4 THEN VacDay ELSE 0	END),0),3) AS aprTotVacDay
					, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 5 THEN VacDay ELSE 0 END),0),3) AS mayTotVacDay
					, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 6 THEN VacDay ELSE 0	END),0),3) AS junTotVacDay
					, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 7 THEN VacDay ELSE 0 END),0),3) AS julTotVacDay
					, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 8 THEN VacDay ELSE 0	END),0),3) AS augTotVacDay
					, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 9 THEN VacDay ELSE 0 END),0),3) AS sepTotVacDay
					, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 10 THEN VacDay ELSE 0 END),0),3) AS octTotVacDay
					, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 11 THEN VacDay ELSE 0 END),0),3) AS novTotVacDay
					, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 12 THEN VacDay ELSE 0 END),0),3) AS decTotVacDay
					</if>
				FROM (
					SELECT *
					FROM covi_smart4j.VM_VACATIONINFO A,
					(SELECT B.Code
						, CASE WHEN Fn_BaseGetDictionary_S(#{lang}, B.MultiCodeName) is not null THEN
								Fn_BaseGetDictionary_S(#{lang}, B.MultiCodeName)
							ELSE
								B.CodeName
							END AS CodeName
						, B.Reserved1
						, B.Reserved2
						, A.Code as GroupCode
						, B.SortKey
						, B.CodeID
						FROM (select *
								from covi_smart4j.sys_base_code
								WHERE IsUse = 'Y'
								AND DomainID = 0
							) A,
							covi_smart4j.sys_base_code B
							WHERE A.CodeID = B.ReservedInt
							AND B.IsUse = 'Y'
							AND B.DomainID = #{domainID}
						) B WHERE TRIM(A.VacFlag) = TRIM(B.Code)
					) V
					WHERE V.VacYear = #{year}
					<if test='hideExtraVacation eq "Y" '>
					AND V.GroupCode  = 'PUBLIC'
					</if>
					AND V.Reserved1 = '+'
					GROUP BY UR_Code
				) B ON A.UserCode = B.UR_Code
			<if test='displayName != null and displayName != ""'>
				WHERE DisplayName LIKE CONCAT('%', #{displayName}, '%')
			</if>
		) A
		<trim prefix='ORDER BY'>
			<if test='sortColumn == null or sortColumn == "" or sortDirection == null or sortDirection == ""'>
				JobPositionSortKey, SortKey ASC
			</if>
			<if test='sortColumn != null and sortColumn != "" and sortDirection != null and sortDirection != ""'>
				<choose>
					<when test='sortColumn.equalsIgnoreCase("DisplayName")'>DisplayName</when>
					<otherwise>DeptName</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if>
		</trim>
		<if test='pageSize != null and pageOffset != null'>
			LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>	
	</select>
	
	<select id="selectVacationListCntByMonth" resultType="java.lang.Long">
		SELECT count(u.UserCode)
		FROM sys_object_user u
		JOIN sys_object_user_basegroup ub ON u.UserCode = ub.UserCode and JobType = 'Origin'
		JOIN sys_object_group g ON ub.DeptCode = g.GroupCode 
			<if test='deptCode != null and deptCode != ""'> and CONCAT(';',GroupPath) LIKE CONCAT('%;',#{deptCode} ,';%')</if>
			<if test='schDeptID != null and schDeptID != ""'> and CONCAT(';',GroupPath) LIKE CONCAT('%;',#{schDeptID} ,';%')</if>
		WHERE ( year(u.EnterDate) <![CDATA[<=]]> #{year}
		AND year(CASE WHEN u.RetireDate = '' THEN '2999-01-01' ELSE	u.RetireDate END) >= #{year} )
			<if test='domainCode != null and domainCode != ""'>
				AND ub.Companycode = #{domainCode}
			</if>
			<if test='schEmploySel != null and schEmploySel != ""'>
				<choose>
					<when test='schEmploySel == "INOFFICE"'>
						AND u.RetireDate = ''
						AND ub.DeptCode NOT LIKE '%RetireDept'
					</when>
					<otherwise> <!-- RETIRE -->
						AND u.RetireDate != ''
					</otherwise>
				</choose>
			</if>
			<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
				<choose>
					<when test='schTypeSel == "deptName"'>
						AND ub.DeptName LIKE CONCAT('%', #{schTxt}, '%')
					</when>
					<otherwise>
						AND u.DisplayName LIKE CONCAT('%', #{schTxt}, '%')
					</otherwise>
				</choose>
			</if>
	</select>

	<select id="selectVacationListByMonthV2" parameterType="cmap" resultType="cmap">
		SELECT UR_Code
		, DisplayName
		, planVacDay
		<if test='hideEarlyVacation eq "Y" '>
			, cast(cast(FORMAT(totVacDays,3) as DECIMAL(9,3)) as float) AS useDays
			, cast(cast(FORMAT(planVacDay - totVacDays, 3) as DECIMAL(9,3)) as float) AS remindDays
		</if>
		<if test='hideEarlyVacation eq "N" '>
		, cast(cast(FORMAT((totVacDays + aforeTotVacDays),3) as DECIMAL(9,3)) as float) AS useDays
		, cast(cast(FORMAT(planVacDay - (totVacDays + aforeTotVacDays), 3) as DECIMAL(9,3)) as float) AS remindDays
		</if>
		, cast(cast(janTotVacDay as DECIMAL(9,3)) as float) AS janTotVacDay
		, cast(cast(febTotVacDay as DECIMAL(9,3)) as float) AS febTotVacDay
		, cast(cast(marTotVacDay as DECIMAL(9,3)) as float) AS marTotVacDay
		, cast(cast(aprTotVacDay as DECIMAL(9,3)) as float) AS aprTotVacDay
		, cast(cast(mayTotVacDay as DECIMAL(9,3)) as float) AS mayTotVacDay
		, cast(cast(junTotVacDay as DECIMAL(9,3)) as float) AS junTotVacDay
		, cast(cast(julTotVacDay as DECIMAL(9,3)) as float) AS julTotVacDay
		, cast(cast(augTotVacDay as DECIMAL(9,3)) as float) AS augTotVacDay
		, cast(cast(sepTotVacDay as DECIMAL(9,3)) as float) AS sepTotVacDay
		, cast(cast(octTotVacDay as DECIMAL(9,3)) as float) AS octTotVacDay
		, cast(cast(novTotVacDay as DECIMAL(9,3)) as float) AS novTotVacDay
		, cast(cast(decTotVacDay as DECIMAL(9,3)) as float) AS decTotVacDay
		, Fn_BaseGetDictionary_S(#{lang}, DeptName) AS DeptName
		, Fn_BaseGetDictionary_S(#{lang}, JobPositionName) AS JobPositionName
		, Fn_BaseGetDictionary_S(#{lang}, JobTitleName) AS JobTitleName
		, #{year} AS year
		, EnterDate
		, RetireDate
		FROM (
			SELECT UserCode AS UR_Code
				, DisplayName
				, FORMAT(IFNULL( (	select VacDay from
					(select
					<if test='hideExtraVacation eq "Y" '>
						IFNULL(VacDay,0.0) as VacDay
					</if>
					<if test='hideExtraVacation eq "N" '>
						IFNULL(VacDay+EtcVacDay,0.0) as VacDay
					</if>
							, p1.YEAR, p1.UR_Code
					from
						(
							select UR_Code, YEAR, UseStartDate, UseEndDate
								, VacDay
					<if test='hideExtraVacation eq "N" '>
								, (select IFNULL(SUM(VacDay),0.0)
									from covi_smart4j.vm_vacationplan  vmp
									left join (select *
									from covi_smart4j.sys_base_code
									where  DomainID = #{domainID}
									and CodeGroup = 'VACATION_TYPE') bc
									on vmp.VacKind = bc.Code
									where vmp.VacKind not in ('PUBLIC')
									and bc.Reserved1 = '+'
									and vmp.UR_Code = vp.UR_Code
									and vmp.UseStartDate <![CDATA[>=]]> vp.UseStartDate
									and vmp.UseEndDate <![CDATA[<=]]> vp.UseEndDate
								) AS EtcVacDay
					</if>
							, DeptName
							, VacKind
							from covi_smart4j.vm_vacationplan vp
							where VacKind in ('PUBLIC')
						) p1
					) P WHERE P.YEAR = A.TargetYear AND A.UserCode = P.UR_Code
				) ,0)	,3) AS planVacDay
		, FORMAT(IFNULL(SUM(CASE WHEN (B.CodeID IS NOT NULL AND IFNULL(B.Reserved2, '') = '') THEN B.VacDay ELSE 0 END),0),3) AS totVacDays
		, FORMAT(IFNULL(SUM(CASE WHEN (B.CodeID IS NOT NULL AND IFNULL(B.Reserved2, '') != '') THEN B.VacDay ELSE 0 END),0),3) AS aforeTotVacDays

		<if test='hideEarlyVacation eq "Y" '>
			, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 1 AND IFNULL(B.Reserved2, '') = '' THEN B.VacDay ELSE 0 END),0),3) AS janTotVacDay
			, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 2 AND IFNULL(B.Reserved2, '') = '' THEN B.VacDay ELSE 0	END),0),3) AS febTotVacDay
			, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 3 AND IFNULL(B.Reserved2, '') = '' THEN B.VacDay ELSE 0 END),0),3) AS marTotVacDay
			, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 4 AND IFNULL(B.Reserved2, '') = '' THEN B.VacDay ELSE 0	END),0),3) AS aprTotVacDay
			, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 5 AND IFNULL(B.Reserved2, '') = '' THEN B.VacDay ELSE 0 END),0),3) AS mayTotVacDay
			, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 6 AND IFNULL(B.Reserved2, '') = '' THEN B.VacDay ELSE 0	END),0),3) AS junTotVacDay
			, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 7 AND IFNULL(B.Reserved2, '') = '' THEN B.VacDay ELSE 0 END),0),3) AS julTotVacDay
			, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 8 AND IFNULL(B.Reserved2, '') = '' THEN B.VacDay ELSE 0	END),0),3) AS augTotVacDay
			, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 9 AND IFNULL(B.Reserved2, '') = '' THEN B.VacDay ELSE 0 END),0),3) AS sepTotVacDay
			, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 10 AND IFNULL(B.Reserved2, '') = '' THEN B.VacDay ELSE 0 END),0),3) AS octTotVacDay
			, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 11 AND IFNULL(B.Reserved2, '') = '' THEN B.VacDay ELSE 0 END),0),3) AS novTotVacDay
			, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 12 AND IFNULL(B.Reserved2, '') = '' THEN B.VacDay ELSE 0 END),0),3) AS decTotVacDay
		</if>

		<if test='hideEarlyVacation eq "N" '>
		, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 1 THEN B.VacDay ELSE 0 END),0),3) AS janTotVacDay
		, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 2 THEN B.VacDay ELSE 0	END),0),3) AS febTotVacDay
		, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 3 THEN B.VacDay ELSE 0 END),0),3) AS marTotVacDay
		, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 4 THEN B.VacDay ELSE 0	END),0),3) AS aprTotVacDay
		, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 5 THEN B.VacDay ELSE 0 END),0),3) AS mayTotVacDay
		, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 6 THEN B.VacDay ELSE 0	END),0),3) AS junTotVacDay
		, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 7 THEN B.VacDay ELSE 0 END),0),3) AS julTotVacDay
		, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 8 THEN B.VacDay ELSE 0	END),0),3) AS augTotVacDay
		, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 9 THEN B.VacDay ELSE 0 END),0),3) AS sepTotVacDay
		, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 10 THEN B.VacDay ELSE 0 END),0),3) AS octTotVacDay
		, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 11 THEN B.VacDay ELSE 0 END),0),3) AS novTotVacDay
		, FORMAT(IFNULL(SUM(CASE WHEN MONTH(Sdate) = 12 THEN B.VacDay ELSE 0 END),0),3) AS decTotVacDay
		</if>
		, A.DeptName
		, JobPositionName
		, JobTitleName
		, EnterDate
		, RetireDate
		, A.DeptCode
		, SortKey
		, JobTitleSortKey
		, JobPositionSortKey
		, TargetYear
		FROM (
		SELECT A.UserCode
		, IFNULL(D.DeptName, A.MultiDeptName) AS DeptName
		, A.DeptCode
		, DisplayName
		, B.EnterDate
		, B.RetireDate
		, CAST(B.SortKey AS INTEGER) AS SortKey
		, A.JobTitleSortKey
		, A.JobPositionSortKey
		, JobTitleName
		, JobPositionName
		, B.TargetYear
		FROM covi_smart4j.sys_object_user_basegroup A
		LEFT JOIN (select UserCode, EnterDate, Fn_BaseGetDictionary_S(#{lang},  MultiDisplayName) AS DisplayName, RetireDate, SortKey
				, CASE WHEN STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'),'%m%d')),'%Y%m%d') <![CDATA[<=]]>  STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(NOW(3),'%m%d')),'%Y%m%d') THEN
					YEAR(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'))
				ELSE
					YEAR(DATE_ADD(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'), INTERVAL -1 YEAR )) END AS TargetYear
				from covi_smart4j.sys_object_user) B ON A.UserCode = B.UserCode
		LEFT JOIN covi_smart4j.vm_vacationplan D ON A.UserCode = D.UR_Code AND	D.year = #{year} AND D.VacKind='PUBLIC'
		<if test='deptCode != null and deptCode != ""'>
			JOIN (
			SELECT GroupCode
			FROM covi_smart4j.sys_object_group
			WHERE CONCAT(';',GroupPath) LIKE CONCAT('%;',#{deptCode} ,';%')
			) C ON A.DeptCode = C.GroupCode
		</if>
		<if test='schDeptID != null and schDeptID != ""'>
			JOIN (
			SELECT GroupCode
			FROM covi_smart4j.sys_object_group
			WHERE CONCAT(';',GroupPath) LIKE CONCAT('%;',#{schDeptID} ,';%')
			) C ON A.DeptCode = C.GroupCode
		</if>
		WHERE A.JobType = 'Origin'
		AND ( year(B.EnterDate) <![CDATA[<=]]> #{year} AND year(CASE WHEN B.RetireDate = '' THEN '2999-01-01' ELSE	B.RetireDate END) >= #{year} )
		<if test='domainCode != null and domainCode != ""'>
			AND A.Companycode = #{domainCode}
		</if>
		<if test='schEmploySel != null and schEmploySel != ""'>
			<choose>
				<when test='schEmploySel == "INOFFICE"'>
					AND B.RetireDate = ''
					AND A.DeptCode NOT LIKE '%RetireDept'
				</when>
				<otherwise> <!-- RETIRE -->
					AND B.RetireDate != ''
					AND year(B.RetireDate) = #{year}
				</otherwise>
			</choose>
		</if>
		<if test='displayName != null and displayName != ""'>
			AND DisplayName LIKE CONCAT('%', #{displayName}, '%')
		</if>
		) A
		LEFT JOIN covi_smart4j.vm_vacationplan P ON A.UserCode = P.UR_Code AND P.VacKind = 'PUBLIC' AND P.YEAR = A.TargetYear
		LEFT JOIN (
			SELECT A.UR_Code, A.VacDay, A.VacFlag
					, A.Sdate, A.Edate
					, B.CodeID, B.Reserved2, B.GroupCode
			FROM covi_smart4j.VM_VACATIONINFO A
			LEFT JOIN (SELECT B.Code
							, CASE WHEN Fn_BaseGetDictionary_S(#{lang}, B.MultiCodeName) is not null THEN
									Fn_BaseGetDictionary_S(#{lang}, B.MultiCodeName)
								ELSE
									B.CodeName
								END AS CodeName
							, B.Reserved1
							, B.Reserved2
							, A.Code as GroupCode
							, B.SortKey
							, B.CodeID
						FROM (select *
								from covi_smart4j.sys_base_code
								WHERE IsUse = 'Y'
								AND DomainID = 0
							 ) A,
							covi_smart4j.sys_base_code B
							WHERE A.CodeID = B.ReservedInt
							AND B.IsUse = 'Y'
							AND B.DomainID = #{domainID}
					) B ON A.VacFlag = B.Code AND B.Reserved1 = '+'
					WHERE  B.CodeID IS NOT NULL
			) B ON A.UserCode = B.UR_Code
			AND STR_TO_DATE(B.Sdate,'%Y-%m-%d') <![CDATA[>=]]> STR_TO_DATE(P.UseStartDate, '%Y%m%d')
			AND STR_TO_DATE(B.Edate,'%Y-%m-%d') <![CDATA[<=]]> STR_TO_DATE(P.UseEndDate, '%Y%m%d')
			<if test='hideExtraVacation eq "Y" '>
			AND B.GroupCode = 'PUBLIC'
			</if>
			GROUP BY UserCode
		) A
		<trim prefix='ORDER BY'>
			<if test='sortColumn == null or sortColumn == "" or sortDirection == null or sortDirection == ""'>
				JobPositionSortKey, SortKey ASC
			</if>
			<if test='sortColumn != null and sortColumn != "" and sortDirection != null and sortDirection != ""'>
				<choose>
					<when test='sortColumn.equalsIgnoreCase("DisplayName")'>DisplayName</when>
					<otherwise>DeptName</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if>
		</trim>
		<if test='pageSize != null and pageOffset != null'>
			LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>
	</select>

	<select id="selectVacationListCntByMonthV2" resultType="java.lang.Long">
		SELECT COUNT(UserCode)
		FROM (
		SELECT UserCode
		FROM (
		SELECT A.UserCode
		, Fn_BaseGetDictionary_S(#{lang},  B.MultiDisplayName) AS DisplayName
		FROM covi_smart4j.sys_object_user_basegroup A
		LEFT JOIN covi_smart4j.sys_object_user B ON A.UserCode = B.UserCode
		<if test='deptCode != null and deptCode != ""'>
			INNER JOIN (
			SELECT GroupCode
			FROM covi_smart4j.sys_object_group
			WHERE CONCAT(';',GroupPath) LIKE CONCAT('%;',#{deptCode} ,';%')
			) C ON A.DeptCode = C.GroupCode
		</if>
		<if test='schDeptID != null and schDeptID != ""'>
			INNER JOIN (
			SELECT GroupCode
			FROM covi_smart4j.sys_object_group
			WHERE CONCAT(';',GroupPath) LIKE CONCAT('%;',#{schDeptID} ,';%')
			) C ON A.DeptCode = C.GroupCode
		</if>
		WHERE A.JobType = 'Origin'
		AND ( year(B.EnterDate) <![CDATA[<=]]> #{year} AND year(CASE WHEN B.RetireDate = '' THEN '2999-01-01' ELSE	B.RetireDate END) >= #{year} )
		<if test='domainCode != null and domainCode != ""'>
			AND A.Companycode = #{domainCode}
		</if>
		<if test='schEmploySel != null and schEmploySel != ""'>
			<choose>
				<when test='schEmploySel == "INOFFICE"'>
					AND B.RetireDate = ''
					AND A.DeptCode NOT LIKE '%RetireDept'
				</when>
				<otherwise> <!-- RETIRE -->
					AND B.RetireDate != ''
					AND year(B.RetireDate) = #{year}
				</otherwise>
			</choose>
		</if>
		) A
		<if test='displayName != null and displayName != ""'>
			WHERE DisplayName LIKE CONCAT('%', #{displayName}, '%')
		</if>
		) A
	</select>
	
	<select id="selectVacationMessageReadList" parameterType="cmap" resultType="cmap">
		SELECT UserCode
			, DisplayName
			, DeptName
			, JobPositionName
			, EnterDate
			, RetireDate
			, B.ReadDate
		FROM (
			SELECT A.UserCode
				, Fn_BaseGetDictionary_S(#{lang}, A.MultiDisplayName) AS DisplayName
				, A.EnterDate
				, A.RetireDate
				, A.SortKey
				, B.DeptCode
				, Fn_BaseGetDictionary_S(#{lang}, IFNULL(C.DeptName, B.MultiDeptName)) AS DeptName
				, Fn_BaseGetDictionary_S(#{lang}, B.MultiJobPositionName) AS JobPositionName
				, JobPositionSortKey
				, JobLevelSortKey
				, JobTitleSortKey
			FROM covi_smart4j.sys_object_user A
			LEFT JOIN covi_smart4j.sys_object_user_basegroup B ON A.UserCode = B.UserCode AND JobType = 'Origin'
			LEFT JOIN covi_smart4j.vm_vacationplan C ON A.UserCode = C.UR_Code and C.year = #{year}
			WHERE B.CompanyCode = #{domainCode}
		) A
		LEFT JOIN (	SELECT MessageID, ReaderCode, ReadDate
					FROM covi_smart4j.vm_message_reader
					WHERE YEAR = #{year} 
					AND MessageID = #{messageId} ) B ON A.UserCode = B.ReaderCode
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<include refid="chooseEmpType" />
			<if test='schReadTypeSel != null and schReadTypeSel !=""'>
				<choose>
					<when test='schReadTypeSel == "read"'>
						AND ReadDate IS NOT NULL
					</when>
					<otherwise>
						AND ReadDate IS NULL
					</otherwise>
				</choose>
			</if>
			<if test='schEmploySel != null and schEmploySel != ""'>
				<choose>
					<when test='schEmploySel == "INOFFICE"'>
						AND A.RetireDate = ''
						AND A.DeptCode NOT LIKE	'%RetireDept'
					</when>
					<otherwise> <!-- RETIRE -->
						AND A.RetireDate != ''
						AND year(A.RetireDate) = #{year}
					</otherwise>
				</choose>
			</if>
			<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
				<choose>
					<when test='schTypeSel == "deptName"'>
						AND DeptName LIKE CONCAT('%', #{schTxt}, '%')
					</when>
					<otherwise>
						AND DisplayName LIKE CONCAT('%', #{schTxt}, '%')
					</otherwise>
				</choose>
			</if>
		</trim>
	 	<trim prefix="ORDER BY"  prefixOverrides =",">
			<choose>
				<when test="orgOrders != null and orgOrders != '' ">
				  	<foreach collection="orgOrders" item="orgOrder" separator=",">
				  		<if test="orgOrder != null and orgOrder == 'JobTitle'">
				  			JobTitleSortKey ASC
				  		</if>
				  		<if test="orgOrder != null and orgOrder == 'JobLevel'">
				  			JobLevelSortKey ASC
				  		</if>
				  		<if test="orgOrder != null and orgOrder == 'JobPosition'">
				  			JobPositionSortKey ASC
				  		</if>
		  				<if test="orgOrder != null and orgOrder == 'DN'">
				  			DisplayName ASC
				  		</if>
				  	</foreach>
				  	, SortKey ASC
			  	</when>
			</choose>
		</trim>
		<if test='pageSize != null and pageOffset != null'>
			LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>
	</select>
	
	<select id="selectVacationMessageReadListCnt" resultType="java.lang.Long">
		SELECT COUNT(UserCode)
		FROM (
			SELECT A.UserCode
				, Fn_BaseGetDictionary_S(#{lang}, A.MultiDisplayName) AS DisplayName
				, A.EnterDate
				, A.RetireDate
				, B.DeptCode
				, Fn_BaseGetDictionary_S(#{lang}, IFNULL(C.DeptName, B.MultiDeptName)) AS DeptName
			FROM covi_smart4j.sys_object_user A
			LEFT JOIN covi_smart4j.sys_object_user_basegroup B ON A.UserCode = B.UserCode AND JobType = 'Origin'
			LEFT JOIN covi_smart4j.vm_vacationplan C ON A.UserCode = C.UR_Code and C.year = #{year}
			WHERE B.CompanyCode = #{domainCode}
		) A
		LEFT JOIN (	SELECT MessageID, ReaderCode, ReadDate
					FROM covi_smart4j.vm_message_reader
					WHERE YEAR = #{year} 
					AND MessageID = #{messageId} ) B ON A.UserCode = B.ReaderCode
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<include refid="chooseEmpType" />
			<if test='schReadTypeSel != null and schReadTypeSel !=""'>
				<choose>
					<when test='schReadTypeSel == "read"'>
						AND ReadDate IS NOT NULL
					</when>
					<otherwise>
						AND ReadDate IS NULL
					</otherwise>
				</choose>
			</if>
			<if test='schEmploySel != null and schEmploySel != ""'>
				<choose>
					<when test='schEmploySel == "INOFFICE"'>
						AND A.RetireDate = ''
						AND A.DeptCode NOT LIKE	'%RetireDept'
					</when>
					<otherwise> <!-- RETIRE -->
						AND A.RetireDate != ''
						AND year(A.RetireDate) = #{year}
					</otherwise>
				</choose>
			</if>
			<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
				<choose>
					<when test='schTypeSel == "deptName"'>
						AND DeptName LIKE CONCAT('%', #{schTxt}, '%')
					</when>
					<otherwise>
						AND DisplayName LIKE CONCAT('%', #{schTxt}, '%')
					</otherwise>
				</choose>
			</if>
		</trim>
	</select>
	
	<select id="selectVacationUsePlanList" parameterType="cmap" resultType="cmap">
		SELECT DeptName
		, JobPositionName
		, UserCode
		, DisplayName
		, EnterDate
		, TargetYear
		, IsOneYear
		, #{year} AS YEAR
		, VacDayPublic+VacDayExtra AS OWNDAYS
		, USEDAYS
		, (VacDayPublic+VacDayExtra) - USEDAYS AS REMINDDAYS
		, VACPLAN
		FROM (
			SELECT A.DeptName
			, A.JobPositionName
			, A.UserCode
			, A.DisplayName
			, A.EnterDate
			, A.TargetYear
			, IsOneYear
			, JobPositionSortKey
			, SortKey
			, CAST(IFNULL(B.VacDay, 0.0) AS FLOAT)      AS VacDayPublic
			, (select CAST(IFNULL(SUM(E.VacDay), 0.0) AS FLOAT)
			from covi_smart4j.vm_vacationplan E
			where E.VacKind <![CDATA[<>]]> 'PUBLIC'
			and E.UseStartDate <![CDATA[>=]]> B.UseStartDate
			and E.UseEndDate <![CDATA[<=]]> B.UseEndDate
			and E.UR_Code = B.UR_Code)             AS VacDayExtra
			, CAST(IFNULL(SUM(D.VacDay), 0.0) AS FLOAT) AS USEDAYS
			, C.VACPLAN
			FROM (
				SELECT *
				FROM (
					SELECT U.UserCode
						, U.SortKey
						, Fn_BaseGetDictionary_S(#{lang}, U.MultiDisplayName) AS DisplayName
						, U.EnterDate
						, U.RetireDate
						, UB.CompanyCode
						, UB.DeptCode
						, Fn_BaseGetDictionary_S(#{lang}, IFNULL(UB.MultiDeptName, UB.DeptName)) AS DeptName
						, Fn_BaseGetDictionary_S(#{lang}, UB.MultiJobPositionName) AS JobPositionName
						, UB.JobPositionSortKey
						, CASE WHEN CFG.CreateMethod = 'J' THEN
								CASE WHEN STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'),'%m%d')),'%Y%m%d') <![CDATA[<=]]> STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(NOW(3),'%m%d')),'%Y%m%d') THEN
									YEAR(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'))
								ELSE
									YEAR(DATE_ADD(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'), INTERVAL -1 YEAR ))
								END
						  ELSE
								CASE WHEN DATE_ADD(STR_TO_DATE(REPLACE(U.EnterDate,'-',''),'%Y%m%d'), INTERVAL 12 MONTH)  <![CDATA[<]]>  NOW() THEN
									#{year}
								ELSE
									YEAR(DATE_ADD(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'), INTERVAL -1 YEAR ))
								END
						  END AS TargetYear
						  , (CASE WHEN DATE(DATE_ADD(EnterDate, INTERVAL 12 MONTH)) <![CDATA[<=]]> DATE(NOW()) THEN 1
								ELSE 0 END
							) as IsOneYear
				   FROM covi_smart4j.sys_object_user U
				   LEFT JOIN covi_smart4j.vm_config CFG ON CFG.CompanyCode = #{domainCode}
				   LEFT JOIN covi_smart4j.sys_object_user_basegroup UB ON U.UserCode = UB.UserCode AND UB.JobType = 'Origin'
				) U
				WHERE U.EnterDate <![CDATA[<>]]> ''
				<if test='empType != null and empType != ""'>
					<choose>
						<when test='empType == "normal"'>
						AND U.IsOneYear = 1
						</when>
						<when test='empType != "normal"'>
							AND U.IsOneYear = 0
						</when>
					</choose>
				</if>
				<if test='domainCode != null and domainCode != ""'>
					AND U.CompanyCode = #{domainCode}
				</if>
				<if test='urCode != null and urCode != ""'>
					AND U.UserCode = #{urCode}
				</if>
				<if	test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
					<choose>
						<when test='schTypeSel == "deptName"'>
							AND U.DeptName LIKE CONCAT('%', #{schTxt}, '%')
						</when>
						<otherwise>
							AND U.DisplayName LIKE CONCAT('%', #{schTxt}, '%')
						</otherwise>
					</choose>
				</if>
				<if test='schEmploySel != null and schEmploySel != ""'>
					<choose>
						<when test='schEmploySel == "INOFFICE"'>
							AND U.RetireDate = ''
							AND U.DeptCode NOT LIKE '%RetireDept'
						</when>
						<otherwise> <!-- RETIRE -->
							AND U.RetireDate != ''
							AND year(U.RetireDate) = #{year}
						</otherwise>
					</choose>
				</if>
			) A
			LEFT JOIN covi_smart4j.vm_vacationplan B ON A.UserCode = B.UR_Code AND B.YEAR = A.TargetYear  AND B.VacKind = 'PUBLIC'
			LEFT JOIN covi_smart4j.vm_useage_plan C ON A.UserCode = C.UR_Code AND C.YEAR = A.TargetYear
			LEFT JOIN covi_smart4j.vm_vacationinfo D ON A.UserCode = D.UR_Code
				AND STR_TO_DATE(D.Sdate, '%Y-%m-%d') <![CDATA[>=]]> STR_TO_DATE(B.UseStartDate, '%Y%m%d')
				AND STR_TO_DATE(D.Edate, '%Y-%m-%d') <![CDATA[<=]]> STR_TO_DATE(B.UseEndDate, '%Y%m%d')
			AND D.VacFlag IN (SELECT code FROM covi_smart4j.sys_base_code cd WHERE cd.domainid= #{domainID} AND cd.CodeGroup = 'VACATION_TYPE' AND IFNULL(Reserved1,'N') = '+' )
			GROUP BY A.UserCode
			<trim prefix='ORDER BY'>
				<if test="sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
					JobPositionSortKey ASC, A.SortKey ASC
				</if>
				<if test='sortColumn != null and sortColumn != "" and sortDirection != null and sortDirection != ""'>
					<choose>
						<when test='sortColumn.equalsIgnoreCase("JobPositionName")'>JobPositionName</when>
						<when test='sortColumn.equalsIgnoreCase("DisplayName")'>DisplayName</when>
						<otherwise>DeptName</otherwise>
					</choose>
					<choose>
						<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
						<otherwise> DESC</otherwise>
					</choose>
				</if>
			</trim>
		) TBL
		<if test='pageSize != null and pageOffset != null'>
			LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>			    
	</select>
	
	<select id="selectVacationUsePlanListCnt" resultType="java.lang.Long">
		SELECT COUNT(*) 
		FROM (
			SELECT UserCode
			FROM ( 
				SELECT * 
				FROM (
					SELECT U.UserCode
						, Fn_BaseGetDictionary_S(#{lang}, U.MultiDisplayName) AS DisplayName
						, U.EnterDate
						, U.RetireDate
						, UB.CompanyCode
						, UB.DeptCode
						, Fn_BaseGetDictionary_S(#{lang}, IFNULL(P.DeptName, UB.MultiDeptName)) AS DeptName
						, Fn_BaseGetDictionary_S(#{lang}, UB.MultiJobPositionName) AS JobPositionName
						, (CASE WHEN DATE(DATE_ADD(EnterDate, INTERVAL 12 MONTH)) <![CDATA[<=]]> DATE(NOW()) THEN 1
								ELSE 0 END
							) as IsOneYear
				   FROM covi_smart4j.sys_object_user U
				   LEFT JOIN covi_smart4j.sys_object_user_basegroup UB ON U.UserCode = UB.UserCode AND UB.JobType = 'Origin'	
				   LEFT JOIN covi_smart4j.vm_vacationplan P ON U.UserCode = P.UR_Code and P.year = #{year}
				) U
				WHERE U.EnterDate <![CDATA[<>]]> ''
				<if test='empType != null and empType != ""'>
					<choose>
						<when test='empType == "normal"'>
							AND U.IsOneYear = 1
						</when>
						<when test='empType != "normal"'>
							AND U.IsOneYear = 0
						</when>
					</choose>
				</if>
				<if test='domainCode != null and domainCode != ""'>
					AND U.CompanyCode = #{domainCode}
				</if>
				<if test='urCode != null and urCode != ""'>
					AND U.UserCode = #{urCode}
				</if>
				<if	test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
					<choose>
						<when test='schTypeSel == "deptName"'>
							AND U.DeptName LIKE CONCAT('%', #{schTxt}, '%')
						</when>
						<otherwise>
							AND U.DisplayName LIKE CONCAT('%', #{schTxt}, '%')
						</otherwise>
					</choose>
				</if>
				<if test='schEmploySel != null and schEmploySel != ""'>
					<choose>
						<when test='schEmploySel == "INOFFICE"'>
							AND U.RetireDate = ''
							AND U.DeptCode NOT LIKE '%RetireDept'
						</when>
						<otherwise> <!-- RETIRE -->
							AND U.RetireDate != ''
							AND year(U.RetireDate) = #{year}
						</otherwise>
					</choose>
				</if>
			) A
			GROUP BY A.UserCode
		) B
	</select>
		
	<update id="updateVacationUsePlan" parameterType="cmap">
		INSERT 
		  INTO covi_smart4j.vm_useage_plan (GR_CODE, GR_NAME, UR_CODE, UR_NAME, 
		  									YEAR, VACPLAN, INSERT_DATE
		  								   ) 
		SELECT B.DeptCode, B.DeptName, A.UserCode, A.DisplayName,
			   #{year}, #{usePlan}, now(3)
	      FROM covi_smart4j.sys_object_user A
	      LEFT JOIN (SELECT UserCode, DeptCode, DeptName
					   FROM covi_smart4j.sys_object_user_basegroup
					  WHERE JobType = 'Origin'
					) B
	        ON A.UserCode = B.UserCode
		 WHERE A.UserCode = #{urCode}
			ON DUPLICATE KEY
		UPDATE VACPLAN = #{usePlan},
			   INSERT_DATE = now(3)
	</update>
	
	<select id="selectVacationCancelDocList" parameterType="cmap" resultType="cmap">
		SELECT A.UR_Code,
			   CONCAT(A.WorkItemID, ';', A.ProcessID) AS formKey,
			   B.DocSubject, B.InitiatorUnitName, B.InitiatorName, B.FormName, B.EndDate
		  FROM covi_smart4j.vm_vacationinfo A
		  LEFT JOIN (SELECT ProcessID, DocSubject, InitiatorUnitName, InitiatorName, FormName, EndDate
					   FROM covi_approval4j.jwf_process
					) B
			ON A.ProcessID = B.Process
		 WHERE A.ProcessID IS NOT NULL
		   AND A.GUBUN = 'VACATION_APPLY'
		   AND UR_Code = #{urCode}
		 <trim prefix='ORDER BY'>
			<if test='sortColumn != null and sortColumn != "" and sortDirection != null and sortDirection != ""'>
				<choose>
					<when test='sortColumn.equalsIgnoreCase("DocSubject")'>DocSubject</when>
					<when test='sortColumn.equalsIgnoreCase("InitiatorUnitName")'>InitiatorUnitName</when>
					<when test='sortColumn.equalsIgnoreCase("InitiatorName")'>InitiatorName</when>
					<when test='sortColumn.equalsIgnoreCase("FormName")'>FormName</when>
					<otherwise>EndDate</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if>
		</trim>
		 <if test='pageSize != null and pageOffset != null'>
			LIMIT #{pageSize} OFFSET #{pageOffset}
		 </if> 
	</select>
		
	<select id="selectVacationCancelDocListCnt" resultType="java.lang.Long">
		SELECT COUNT(VacationInfoID) AS cnt
		  FROM covi_smart4j.vm_vacationinfo
		 WHERE ProcessID IS NOT NULL
		   AND GUBUN = 'VACATION_APPLY'
		   AND UR_Code = #{urCode}
	</select>
	
	<select id="selectVacationToday" parameterType="cmap" resultType="cmap">
		SELECT A.UR_Code, A.UR_Name,
			   A.VacFlag,
			   C.CodeName AS VacFlagName, 
			   (CASE WHEN A.Sdate = A.Edate THEN A.Sdate 
			   		 ELSE CONCAT(A.Sdate, ' ~ ', A.Edate) 
			   		  END) AS period,
			   B.DeptCode, B.DeptName
			   , Fn_BaseGetDictionary_S(#{lang}, B.MultiJobPositionName) AS JobPositionName
			   , Fn_BaseGetDictionary_S(#{lang}, B.MultiJobLevelName) AS JobLevelName
			   , Fn_BaseGetDictionary_S(#{lang}, B.MultiJobTitleName) AS JobTitleName
			   , A.DEPUTY_NAME
			   , A.GUBUN
		  FROM covi_smart4j.vm_vacationinfo A
		  LEFT JOIN (SELECT A.UserCode, A.DisplayName, B.DeptName, B.MultiJobPositionName, B.MultiJobLevelName, B.MultiJobTitleName, B.DeptCode, B.CompanyCode, CONCAT(';',C.GroupPath) AS GroupPath
					   FROM covi_smart4j.sys_object_user A
					   LEFT JOIN (SELECT UserCode, DeptName, MultiJobPositionName, MultiJobLevelName, MultiJobTitleName, DeptCode, CompanyCode
							  	    FROM covi_smart4j.sys_object_user_basegroup
							       WHERE JobType = 'Origin'
							  	 ) B ON A.UserCode = B.UserCode
						LEFT JOIN covi_smart4j.sys_object_group C ON B.DeptCode = C.GroupCode
				  	) B
		  	ON A.UR_Code = B.UserCode
		  LEFT JOIN covi_smart4j.sys_base_code C
		    ON A.VacFlag = C.Code
		 WHERE VacYear = #{year}
		   AND B.GroupPath LIKE CONCAT('%;',#{deptCode} ,';%')
		   AND GUBUN IN ('VACATION_APPLY', 'VACATION_CANCEL')
		   AND Sdate <![CDATA[<=]]> DATE_FORMAT(SUBDATE(#{localCurrentDate},-7), '%Y-%m-%d')
		   AND Edate <![CDATA[>=]]> DATE_FORMAT(SUBDATE(#{localCurrentDate},0), '%Y-%m-%d')
		   AND C.DomainID = #{domainID}
		   ORDER BY period, UR_Name
	</select>
	
	<select id="selectPromotionBtnVisible" parameterType="cmap" resultType="cmap">
		SELECT Code, Reserved1, Reserved2
		FROM covi_smart4j.sys_base_code sbc
		WHERE CodeGroup = 'VacationPromotionPeriod'
		AND IsUse = 'Y'
		AND DomainID = (SELECT DomainID FROM covi_smart4j.sys_base_code WHERE Code = sbc.Code AND CodeGroup = 'VacationPromotionPeriod' ORDER BY IF(DomainID = #{domainID}, 0, 1) LIMIT 1 )
		ORDER BY SortKey
	</select>
	<select id="selectAutoIncreaseMonthlyVacation" parameterType="cmap" resultType="cmap">
		/* groupware.vacation.selectAutoIncreaseMonthlyVacation */
	<![CDATA[		
		select 
			  vacday+1 as Vacday
			, CONCAT('[스케줄러] ', NOW(), ' 월차1개 추가') as VmComment
			, ur_code as UrCode
			, vacKind as VacKind
			, year as Year
			, UseStartDate as UseStartDate
			, UseEndDate as UseEndDate
		from vm_vacationplan
		WHERE YEAR = year(NOW())
    	AND VACKIND = 'PUBLIC'
		AND ur_code IN(
			SELECT u.usercode
			FROM covi_smart4j.sys_object_user u
			LEFT JOIN covi_smart4j.sys_object_user_basegroup ub ON u.UserCode = ub.UserCode AND JobType = 'Origin'
			where u.IsUse = 'Y'
			AND u.EnterDate IS NOT NULL 
			AND u.EnterDate != ''
			AND ub.CompanyCode = #{domainCode}
			AND (YEAR(EnterDate) = YEAR(NOW()) # 올해 입사자
				OR (YEAR(EnterDate) = YEAR(date_add(NOW(), INTERVAL -1 YEAR)) #작년입사자중 6월 이전 입사자 또는 연차 11개 미만  발생자 
					AND (
						(MONTH(EnterDate) <=  7  AND MONTH(NOW()) <  7) 
						OR (MONTH(EnterDate) > 7 AND TIMESTAMPDIFF(MONTH, EnterDate, NOW()) <  12 )
					)
				)
			)
			AND TIMESTAMPDIFF (MONTH, DATE_FORMAT(EnterDate, '%Y-%m-01') , DATE_FORMAT(NOW(), '%Y-%m-01')) > 0 #다음달부터 연차 생성
			AND ( DAY(EnterDate) = DAY(NOW()) # 입사일과 오늘의 일(Day)이 동일하거나 
					# 오늘이 이번 달의 마지막날인데 입사일이 이번 달의 마지막일 보다 클 때 
					OR (date_format(NOW(), '%Y-%m-%d') = LAST_DAY(NOW()) 
						AND DAY(EnterDate) > DAY(LAST_DAY(NOW())) )
			)
		)
	]]>
	</select>
	<!-- 본사운영: 2020-01-01 이후 연차 자동생성 쿼리 -->
	<!-- 신규입사자 월차 자동증가 -->
	<update id="updateAutoIncreaseMonthlyVacation" parameterType="cmap">
		/* groupware.vacation.updateAutoIncreaseMonthlyVacation */
	<![CDATA[
		UPDATE covi_smart4j.vm_vacationplan
		SET VacDay = #{vacday}
		, LongVacDay = #{vacday}-LastVacDay
		WHERE UR_Code = #{urCode}
		AND  VacKind = #{vacKind}
		AND  YEAR = #{year}
	]]>
	</update>
	
	<!-- 월차 자동증가 전, 연차 생성안된 사용자 연차 생성 -->
	<insert id="insertNewAnnualVacation" parameterType="cmap">
		INSERT INTO covi_smart4j.vm_vacationplan (UR_Code, DeptCode, DeptName, YEAR, VacDay, VacKind, UseStartDate, UseEndDate, RegistDate)
		SELECT a.UserCode, b.DeptCode, b.MultiDeptName, YEAR(NOW()), 0, 'PUBLIC', CONCAT(YEAR(NOW()),'0101'), CONCAT(YEAR(NOW()),'1231'), now()
		FROM covi_smart4j.sys_object_user a
			INNER JOIN covi_smart4j.sys_object_user_basegroup b
				ON a.usercode = b.usercode AND b.JobType = 'Origin'
		WHERE a.UserCode NOT IN(SELECT ur_code FROM covi_smart4j.vm_vacationplan WHERE YEAR = YEAR(NOW()) AND VacKind='PUBLIC')
		AND a.IsUse = 'Y'
		AND a.IsHR = 'Y'
		AND a.IsDisplay = 'Y'
		AND a.EnterDate IS NOT NULL 
		AND a.EnterDate != ''
		AND b.CompanyCode = #{domainCode}
	</insert>
	
	<!-- 신규입사자 입사 다음해 06/30 연차 정산 -->
	<!-- [본사 운영]  
	전년도 1월~7월 입사자
	  [(15일 * 입사년도일수 / 365일) + 11일] - 입사년도부터 6/30일 이전까지 발생한 연차 
	전년도 8월~12월 입사자  
	  (15일 * 입사년도일수 / 365일) 
	-->
	<update id="updateAutoUpdateAnnualVacation" parameterType="cmap">
		UPDATE vm_vacationplan a
		INNER JOIN (
							SELECT usercode
								,CASE ROUND(c.tempCal) WHEN c.tempCal THEN
									CASE WHEN truncate(c.tempCal,1) > #{MaxCnt} THEN
										#{MaxCnt}
									ELSE
										truncate(c.tempCal,1)
									END
								WHEN FLOOR(c.tempCal) THEN
									CASE WHEN FLOOR(c.tempCal) + 0.5 > #{MaxCnt} THEN
										#{MaxCnt}
									ELSE
										FLOOR(c.tempCal) + 0.5
									END
								ELSE
									CASE WHEN ROUND(c.tempCal) > #{MaxCnt} THEN
										#{MaxCnt}
									ELSE
										ROUND(c.tempCal)
									END
								END AS vacationCal
							FROM (	SELECT u.usercode,
										  CASE WHEN MONTH(STR_TO_DATE(REPLACE(u.EnterDate,'-',''),'%Y%m%d')) <![CDATA[<=]]>  7
										  THEN (#{InitCnt} * (TIMESTAMPDIFF(DAY, STR_TO_DATE(REPLACE(u.EnterDate,'-',''),'%Y%m%d'), STR_TO_DATE(CONCAT(YEAR(STR_TO_DATE(REPLACE(u.EnterDate,'-',''),'%Y%m%d')), '-12-31'),'%Y-%m-%d')) + 1) / 365 + 11
											- TIMESTAMPDIFF(MONTH, STR_TO_DATE(REPLACE(u.EnterDate,'-',''),'%Y%m%d'), now())) * #{IncCnt}
										  ELSE (#{InitCnt} * (TIMESTAMPDIFF(DAY, STR_TO_DATE(REPLACE(u.EnterDate,'-',''),'%Y%m%d'), CONCAT(YEAR(STR_TO_DATE(REPLACE(u.EnterDate,'-',''),'%Y%m%d')), '-12-31')) + 1) / 365) * #{IncCnt} END AS tempCal
									FROM covi_smart4j.sys_object_user u
									LEFT JOIN covi_smart4j.sys_object_user_basegroup ub ON u.UserCode = ub.UserCode AND ub.JobType = 'Origin'
									WHERE u.isuse = 'Y'
									AND u.EnterDate IS NOT NULL
									AND LENGTH(REPLACE(u.EnterDate,'-','')) = 8
									AND ub.CompanyCode = #{domainCode}
									AND YEAR(enterdate) = YEAR(date_add(NOW(), INTERVAL -1 YEAR))				
							) as c
						) b ON a.UR_Code = b.usercode
		SET a.vacday = (a.vacDay +  vacationCal)
			, a.VmComment = CONCAT(a.VmComment, ' [스케줄러] ', now(), ' 6월 정산; ')
		WHERE a.YEAR = year(NOW())
		AND a.VacKind = 'PUBLIC'
	</update>

	<select id="selectAutoCreateAnnualVacation" parameterType="cmap" resultType="cmap">
	/* groupware.vacation.selectAutoCreateAnnualVacation */
		SELECT
			YEAR,UR_Code, VacKind, UseStartDate, UseEndDate, DeptCode,DeptName
			,CASE WHEN LongVacDay > #{MaxCnt} THEN
					#{MaxCnt}
				ELSE
					LongVacDay
				END AS LongVacDay
			, fn_GetLastVacDay(UR_Code, YEAR(date_add(NOW(), INTERVAL 1 YEAR)), #{domainCode}) AS LastVacDay
			, RewardVacDay
			, RegisterCode
		FROM (
			SELECT YEAR(date_add(NOW(), INTERVAL 1 YEAR)) AS YEAR,
				A.usercode AS UR_Code,
				'PUBLIC' AS VacKind,
				CONCAT(YEAR(date_add(NOW(), INTERVAL 1 YEAR)),'0101') AS UseStartDate,
				CONCAT(YEAR(date_add(NOW(), INTERVAL 1 YEAR)),'1231') AS UseEndDate,
				B.DeptCode AS DeptCode,
				B.MultiDeptName AS DeptName,
				CASE WHEN (YEAR(enterdate) != YEAR(NOW())) THEN
						#{InitCnt} + FLOOR( ((YEAR(date_add(NOW(), INTERVAL 1 YEAR)) - YEAR(STR_TO_DATE(REPLACE(A.EnterDate,'-',''),'%Y%m%d')) - 1) / #{IncTerm}) ) * #{IncCnt}
					ELSE 0 END AS LongVacDay
				, 0 AS RewardVacDay
				,'system' AS RegisterCode
				FROM covi_smart4j.sys_object_user A
				LEFT JOIN (SELECT UserCode, CompanyName, CompanyCode, DeptCode, MultiDeptName
				FROM covi_smart4j.sys_object_user_basegroup
				WHERE JobType = 'Origin'
			) B ON A.UserCode = B.UserCode
			WHERE A.IsUse = 'Y'
			AND A.IsDisplay = 'Y'
			AND A.IsHR = 'Y'
			AND B.CompanyCode = #{domainCode}
			AND EnterDate IS NOT NULL
			AND LENGTH(REPLACE(EnterDate,'-','')) = 8
			AND (RetireDate IS NULL  OR TRIM(RetireDate) = '')
			AND A.usercode NOT IN (SELECT UR_Code FROM covi_smart4j.vm_vacationplan WHERE UR_Code = A.usercode AND YEAR = YEAR(date_add(NOW(), INTERVAL 1 YEAR)) AND VacKind = 'PUBLIC')
		) TBL
	</select>

	<insert id="insertAutoCreateAnnualVacation" parameterType="cmap">
		/* groupware.vacation.insertAutoCreateAnnualVacation */
		INSERT INTO covi_smart4j.vm_vacationplan (
			YEAR, UR_Code, VacKind, UseStartDate, UseEndDate
			, DeptCode, DeptName, LongVacDay, LastVacDay, VacDay, VmComment, RewardVacDay
			, RegisterCode, RegistDate
		)VALUES(
			#{year}, #{urCode}, #{vacKind}, #{useStartDate}, #{useEndDate}
			, #{deptCode}, #{deptName}, #{longVacDay}, #{lastVacDay}, #{longVacDay}+#{lastVacDay}, #{vmComment}, #{rewardVacDay}
			, #{registerCode}, now()
		 	
		)
	</insert>
	
	<!-- 해당 연도 부서정보 update -->
	<update id="updateDeptInfo" parameterType="cmap">
		UPDATE covi_smart4j.vm_vacationplan a
		INNER JOIN covi_smart4j.sys_object_user_basegroup b 
			ON a.ur_code = b.usercode AND b.CompanyCode = #{domainCode} AND JobType= 'Origin'
		SET a.DeptCode = b.deptcode
			, a.DeptName = b.MultiDeptName
		WHERE a.YEAR = YEAR(NOW());
	</update>
	
	<!-- 휴가유형 리스트 조회 -->
	<select id="selectVacTypeList" parameterType="cmap" resultType= "cmap">
		SELECT  
			c.CodeID
			,c.CodeGroup
			,c.Code
			,c.IsUse
			,c.CodeName
			,c.MultiCodeName
			,IF(IFNULL(c.Reserved1,'N') = '+','Y','N') AS Reserved1
			,c.Reserved2
			,IFNULL(IF(c.Reserved3='',1,c.Reserved3),1) AS Reserved3
			,c.ReservedInt
			,c.SortKey
			,Fn_BaseGetDictionary_S(#{lang}, c.CodeName)   AS attCodeName
			, b.Code AS GroupCode
			, b.CodeName AS GroupCodeName
		FROM covi_smart4j.sys_base_code c
		LEFT JOIN covi_smart4j.sys_base_code b ON b.DomainID = 0 AND b.IsUse = 'Y' AND b.CodeGroup = 'VACATION_KIND' AND b.CodeID = c.ReservedInt
		WHERE c.codegroup = 'VACATION_TYPE'
		<if test='showAll != null and showAll != ""'>
			<choose>
				<when test='showAll == "Y"'> </when>
				<otherwise> AND c.IsUse = 'Y'</otherwise>
			</choose>
		</if>
		<if test='hideExtraVacation eq "Y" '>
		AND b.Code not like 'EXTRA'
		</if>
		AND c.DomainID = #{domainID}
		<if test='columnYn eq "Y" '> 
			AND IFNULL(c.Reserved1,'N') = '+'
		</if>
		<if test='Code != null and Code != ""'>
			AND c.Code = #{Code}
		</if>
		<trim prefix='ORDER BY'>
			<if test='sortColumn != null and sortColumn != "" and sortDirection != null and sortDirection != ""'>
				<choose>
					<when test='sortColumn.equalsIgnoreCase("IsUse")'>IsUse</when>
					<when test='sortColumn.equalsIgnoreCase("Code")'>Code</when>
					<when test='sortColumn.equalsIgnoreCase("CodeName")'>CodeName</when>
					<when test='sortColumn.equalsIgnoreCase("SortKey")'>SortKey</when>
					<when test='sortColumn.equalsIgnoreCase("Reserved1")'>Reserved1</when>
					<otherwise>CodeID</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if>
			<if test = "sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
				SortKey
			</if>
		</trim>
		<if test='pageSize != null and pageOffset != null'>
			LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>	
	</select>
	<select id="selectVacTypeListCnt" parameterType="cmap" resultType="java.lang.Long">
		SELECT  
			COUNT(1) cnt
		FROM covi_smart4j.sys_base_code c
		WHERE codegroup = 'VACATION_TYPE'
		AND c.DomainID = #{domainID}
		<if test='columnYn eq "Y" '> 
			AND IFNULL(Reserved1,'N') = '+'
		</if>
	</select>

	<select id="selectVacTypeEtcList" parameterType="cmap" resultType= "cmap">
		SELECT c.Code
		, Fn_BaseGetDictionary_S(#{lang}, c.MultiCodeName) AS MultiCodeName
		, b.Code AS GroupCode
		, b.CodeName AS GroupCodeName
		FROM covi_smart4j.sys_base_code c
		LEFT JOIN covi_smart4j.sys_base_code b ON b.DomainID = 0 AND b.IsUse = 'Y' AND b.CodeGroup = 'VACATION_KIND' AND b.CodeID = c.ReservedInt
		WHERE c.codegroup = 'VACATION_TYPE'
		AND c.IsUse = 'Y'
		AND c.DomainID = #{domainID}
		AND IFNULL(c.Reserved1,'N') = '+'
		AND b.Code not in ('PUBLIC', 'VACATION_REWARD')
	</select>
	
	<!-- 휴가 유형 수정 -->
	<update id="updVacationType" parameterType="cmap">
		UPDATE covi_smart4j.sys_base_code 
		SET CodeName = #{CodeName}
			,MultiCodeName= #{MultiCodeName}
			,SortKey = #{SortKey}
			,IsUse = #{IsUse}
			,Reserved1 = #{Reserved1}
			,Reserved2 = #{Reserved2}
			,Reserved3 = #{Reserved3}
			,ReservedInt = #{ReservedInt}
			,ModifierCode = #{RegUserCode}
			,ModifyDate = now()
		WHERE CodeID = #{CodeID}
	</update>
	
	<!-- 휴가유형 등록 -->
	<insert id="setVacationType" parameterType="cmap" >
		INSERT INTO covi_smart4j.sys_base_code
		(
			BizSection , CodeGroup , Code , DomainID , SortKey 
			, IsUse , CodeName ,MultiCodeName , Reserved1 , Reserved2, Reserved3 ,ReservedInt
			,RegisterCode , RegistDate
			,ModifierCode , ModifyDate
		) VALUES (
			'Approval' , 'VACATION_TYPE' , #{Code} , #{DomainID} , ifnull(#{SortKey},1) 
			, #{IsUse} , #{CodeName} ,#{MultiCodeName} , #{Reserved1} , Reserved2, #{Reserved3} , #{ReservedInt}
			,#{RegUserCode} , NOW()
			,#{RegUserCode} , NOW()
		)
	</insert>
	
	<!-- 휴가유형 삭제 -->
	<delete id="delVacationType" parameterType="cmap" >
		DELETE FROM covi_smart4j.sys_base_code
		WHERE CodeGroup = 'VACATION_TYPE'
		AND CodeID = #{CodeID}
	</delete>
	
	<select id="selectDeptList" parameterType="cmap" resultType="cmap">
		SELECT  
			gr.GroupID
			,gr.GroupCode
			,gr.CompanyCode
			,gr.GroupType
			,gr.MemberOf
			,gr.DisplayName
			,covi_smart4j.Fn_BaseGetDictionary_S(#{lang},gr.MultiDisPlayName) AS MultiDisplayName  
			,CHAR_LENGTH(gr.SortPath) - CHAR_LENGTH(REPLACE(gr.SortPath,';','')) SortDepth
			,SortPath
		FROM covi_smart4j.sys_object_group gr
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			AND gr.IsUse = 'Y' 
			AND gr.IsDisplay = 'Y'
	        AND (gr.MemberOf != 'NOUSE' OR gr.MemberOf is null)
	        AND (gr.MemberOf != 'NOUNIT' OR gr.MemberOf is null)
		  	AND gr.GroupType IN ('Dept','Company')
		  	AND gr.CompanyCode = #{CompanyCode}
			<if test='isAdmin neq "Y"'>
				  AND CONCAT(';',gr.GroupPath) LIKE CONCAT('%;',#{DeptCode} ,';%')
			</if>
		</trim>
		ORDER BY SortPath
	</select>
	
	<select id="selectVacationInfoCnt" resultType="java.lang.Long">
	/* groupware.vacation.selectVacationInfoCnt */
		SELECT COUNT(*)
		FROM covi_smart4j.vm_vacationinfo
		WHERE 1=1
		AND UR_Code = #{urCode}
		AND GUBUN = #{gubun}
		<![CDATA[
		AND (
			Sdate <= DATE_FORMAT(#{eDate}, '%Y-%m-%d') AND Edate >= DATE_FORMAT(#{eDate}, '%Y-%m-%d') OR
			Sdate <= DATE_FORMAT(#{sDate}, '%Y-%m-%d') AND Edate >= DATE_FORMAT(#{sDate}, '%Y-%m-%d') OR
			Sdate >= DATE_FORMAT(#{sDate}, '%Y-%m-%d') AND Edate <= DATE_FORMAT(#{eDate}, '%Y-%m-%d')
		)
		]]>
	</select>

	<select id="selectVacationType" parameterType="cmap" resultType="cmap">
		/* queryId = groupware.vacation.selectVacationType */
		SELECT	
			 	CODE
			 	, Fn_BaseGetDictionary_S(#{lang}, MultiCodeName) AS CodeName
				, IFNULL(Reserved3, '1') AS Reserved3
		FROM 	covi_smart4j.sys_base_code
		WHERE	1=1
		AND 	CodeGroup = 'VACATION_TYPE'
		AND	 	DomainID = #{domainId}
		AND		IsUse = 'Y'
		AND 	Reserved1 = '+'
		ORDER BY SortKey ASC
	</select>

	<select id="selectExtraVacationKind" parameterType="cmap" resultType="cmap">
		/* queryId = groupware.vacation.selectExtraVacationKind */
		SELECT B.Code,
			CASE WHEN Fn_BaseGetDictionary_S(#{lang}, B.MultiCodeName) is not null THEN
				Fn_BaseGetDictionary_S(#{lang}, B.MultiCodeName)
			ELSE
				B.CodeName
			END AS CodeName
		FROM (select *
				from covi_smart4j.sys_base_code
				WHERE CodeGroup = 'VACATION_KIND'
				AND IsUse = 'Y'
				AND Code = 'EXTRA'
				AND DomainID = 0
				) A,
			covi_smart4j.sys_base_code B
		WHERE A.CodeID = B.ReservedInt
		AND B.IsUse = 'Y'
		AND B.DomainID = #{domainId}
		ORDER BY B.SortKey ASC
	</select>

	<!-- 회사 휴가/근태 현황 조회 -->
	<select id="selectVacationListByAll" parameterType="cmap" resultType="cmap">
		SELECT a.UR_Code
				,a.UR_Name
				,a.JobPositionName
				,a.Gubun
        		,case when Gubun ='Vac' then COVI_SMART4J.Fn_GetBaseCodeName(#{DN_ID},'VACATION_TYPE',Gubun2) else Gubun2 end Gubun2
				,a.Gubun3
				,a.Sdate
				,a.Edate
				,a.Stime
				,a.Etime
				,a.DeptCode
				,a.MEMO
		FROM (
			SELECT distinct C.UserCode UR_Code
					,C.MultiDisplayName UR_Name
					,B.MultiJobPositionName JobPositionName
					,'Vac' Gubun
					,VacFlag  Gubun2
					,A.VacOffFlag Gubun3
					,A.Sdate Sdate
					,A.Edate Edate
					,'' Stime
					,'' Etime
					,b.DeptCode
					,'' MEMO
					,JobLevelSortKey
			 FROM  covi_smart4j.attendance_daylist d 
		     JOIN covi_smart4j.vm_vacationinfo a ON d.dayList BETWEEN a.Sdate AND a.eDate
	   INNER JOIN covi_smart4j.sys_object_user_basegroup B ON A.UR_Code = B.UserCode AND JobType='Origin'
	   INNER JOIN covi_smart4j.sys_object_user C ON B.UserCode = C.UserCode AND C.IsUse='Y'
			WHERE B.CompanyCode= #{CompanyCode}
			  AND d.dayList between  DATE_FORMAT(#{sDate}, '%Y-%m-%d') AND  DATE_ADD(DATE_FORMAT(#{sDate}, '%Y-%m-%d'), INTERVAL 1 MONTH) 
         GROUP BY c.UserCode, dayList
           HAVING SUM(fn_attend_calVacDay(VacFlag, VacOffFlag, GUBUN))>0
        UNION ALL
           SELECT C.UserCode UR_Code
					,C.MultiDisplayName UR_Name
					,B.MultiJobPositionName JobPositionName
					,'Att' Gubun
					,A.JobStsName Gubun2
					,'' Gubun3
					,A.JobDate Sdate
					,A.JobDate Edate
					,A.StartTime Stime
					,A.EndTime Etime
					,B.DeptCode
					,A.Etc MEMO
					,JobLevelSortKey
			  FROM covi_smart4j.attendance_mng_job_history A
		INNER JOIN covi_smart4j.sys_object_user_basegroup B ON A.UserCode = B.UserCode AND JobType='Origin'
		INNER JOIN covi_smart4j.sys_object_user C ON B.UserCode = C.UserCode AND C.IsUse='Y'
	   	     WHERE A.CompanyCode = #{CompanyCode}
			   AND A.JobDate BETWEEN  DATE_FORMAT(#{sDate}, '%Y-%m-%d')  and  DATE_ADD(DATE_FORMAT(#{sDate}, '%Y-%m-%d'), INTERVAL 1 MONTH) 

		) a
		ORDER BY a.JobLevelSortKey ASC, a.Sdate ASC
	</select>
	
	<select id="getVacationListByUse" parameterType="cmap" resultType="cmap">
		SELECT a.VacationInfoID
			, A.UR_Code
			, APPDATE
			, VacYear
			, VacDate
			, Sdate
			, Edate
			, VacFlag
			, VacOffFlag
			, Fn_BaseGetDictionary_S(#{lang}, b.MultiDisplayName) AS DisplayName
			, Fn_BaseGetDictionary_S(#{lang}, IFNULL(E.DeptName, b.MultiDeptName)) AS DeptName
			, Fn_BaseGetDictionary_S(#{lang}, b.MultiJobPositionName) AS JobPositionName
			, Fn_BaseGetDictionary_S(#{lang}, D.MultiCodeName) AS VacFlagName
			, FORMAT(b.VacDay,1) AS VacDay
			, Reason
			, WorkItemID
			, ProcessID
		FROM covi_smart4j.vm_vacationinfo A
        JOIN (SELECT   vm.UR_Code , ad.dayList VacDate
   						,u.MultiDisplayName
   						,bg.MultiDeptName
   						,bg.MultiJobPositionName
        				,SUM(fn_attend_calVacDay(VacFlag, VacOffFlag, GUBUN))  VacDay
   						,MAX(case when Gubun IN ('VACATION_APPLY','VACATION_PUBLIC') then VacationInfoID END) vacationinfoid
			  FROM      covi_smart4j.vm_vacationinfo  vm 	
			  JOIN      covi_smart4j.attendance_daylist ad ON ad.dayList BETWEEN vm.Sdate AND vm.Edate
		      LEFT JOIN covi_smart4j.sys_object_user u ON vm.UR_Code = u.UserCode
		      LEFT JOIN covi_smart4j.sys_object_user_basegroup bg ON u.UserCode = bg.UserCode AND JobType = 'Origin'
			  WHERE     vacYear =#{year}
			  AND       bg.Companycode = #{domainCode}
				<if test='DEPTID != null and DEPTID != ""'>
					AND DeptCode = #{DEPTID}
				</if>
				<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
					<choose>
						<when test='schTypeSel == "deptName"'>
							AND DeptName LIKE CONCAT('%', #{schTxt}, '%')
						</when>
						<otherwise>
							AND DisplayName LIKE CONCAT('%', #{schTxt}, '%')
						</otherwise>
					</choose>
				</if>
				<if test='schUrName != null and schUrName !="" '>
					AND DisplayName LIKE CONCAT('%', #{schUrName}, '%')
				</if>
				<if test='sDate != null and sDate !="" and eDate != null and eDate !=""'>
					 AND ad.dayList between DATE_FORMAT( #{sDate},'%Y%m%d') AND DATE_FORMAT(#{eDate},'%Y%m%d')
				</if>
				  	 
				<if test='vacFlag != null and vacFlag !="" '>
					AND vacFlag = #{vacFlag}
				</if>
	   	      GROUP BY  vm.Ur_Code, ad.dayList
			  HAVING    SUM(fn_attend_calVacDay(VacFlag, VacOffFlag, GUBUN))>0 ) b ON A.vacationinfoid = b.vacationinfoid
  LEFT JOIN covi_smart4j.vm_vacationplan E ON A.UR_Code = E.UR_Code and E.year = a.VacYear
  LEFT JOIN covi_smart4j.sys_base_code D ON A.VacFlag = D.Code AND D.CodeGroup = 'VACATION_TYPE' AND D.DomainID =#{domainID}
		WHERE	  1 =1
		<trim prefix='ORDER BY'>
			<if test="sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
				VacDate DESC
			</if>
			<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("DisplayName")'>DisplayName</when>
					<when test='sortColumn.equalsIgnoreCase("VacFlagName")'>VacFlagName</when>
					<when test='sortColumn.equalsIgnoreCase("VacYear")'>VacYear</when>
					<when test='sortColumn.equalsIgnoreCase("VacDate")'>VacDate</when>
					<when test='sortColumn.equalsIgnoreCase("VacDay")'>VacDay</when>
					<when test='sortColumn.equalsIgnoreCase("DeptName")'>DeptName</when>
					<otherwise>VacDate</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if>
		</trim>
		<if test='pageSize != null and pageOffset != null and pageSize >= 0 and pageOffset >= 0'>
			LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>		 
	</select>
	<select id="getVacationListByUseCnt" parameterType="cmap" resultType="java.lang.Long">
		SELECT count(*)
		FROM covi_smart4j.vm_vacationinfo A
        JOIN (SELECT vm.UR_Code , ad.dayList, SUM(fn_attend_calVacDay(VacFlag, VacOffFlag, GUBUN)) 
   						, MAX(case when Gubun IN ('VACATION_APPLY','VACATION_PUBLIC') then VacationInfoID END) vacationinfoid
			  FROM     covi_smart4j.vm_vacationinfo  vm 	
			  JOIN     covi_smart4j.attendance_daylist ad ON ad.dayList BETWEEN vm.Sdate AND vm.Edate
		      LEFT JOIN covi_smart4j.sys_object_user u ON vm.UR_Code = u.UserCode
		      LEFT JOIN covi_smart4j.sys_object_user_basegroup bg ON u.UserCode = bg.UserCode AND JobType = 'Origin'
			  WHERE     vacYear =#{year}
			  AND       bg.Companycode = #{domainCode}
				<if test='DEPTID != null and DEPTID != ""'>
					AND DeptCode = #{DEPTID}
				</if>
				<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
					<choose>
						<when test='schTypeSel == "deptName"'>
							AND DeptName LIKE CONCAT('%', #{schTxt}, '%')
						</when>
						<otherwise>
							AND DisplayName LIKE CONCAT('%', #{schTxt}, '%')
						</otherwise>
					</choose>
				</if>
				<if test='schUrName != null and schUrName !="" '>
					AND DisplayName LIKE CONCAT('%', #{schUrName}, '%')
				</if>
				<if test='sDate != null and sDate !="" and eDate != null and eDate !=""'>
					 AND ad.dayList between DATE_FORMAT( #{sDate},'%Y%m%d') AND DATE_FORMAT(#{eDate},'%Y%m%d')
				</if>
				  	 
				<if test='vacFlag != null and vacFlag !="" '>
					AND vacFlag = #{vacFlag}
				</if>
	   	      GROUP BY  vm.Ur_Code, ad.dayList
			  HAVING    SUM(fn_attend_calVacDay(VacFlag, VacOffFlag, GUBUN))>0 ) b ON A.vacationinfoid = b.vacationinfoid
		WHERE	  1 =1
		<if test='month != null and month !="" '>
			 AND concat(#{year},#{month}) BETWEEN  DATE_FORMAT(SDate,'%Y%m') AND DATE_FORMAT(EDate,'%Y%m')
		</if>
		  	 
		<if test='vacFlag != null and vacFlag !="" '>
			AND vacFlag = #{vacFlag}
		</if>
	</select>
	<select id="getVacationListByUseHist" parameterType="cmap" resultType="cmap">
		SELECT vm.VacationInfoID
			, vm.UR_Code
			, ifnull(j.StartDate, APPDATE) AppDate
			, ifnull(j.EndDate, vm.EndDate) EndDate
			, VacYear
			, CONCAT(Sdate, ' (', CASE WEEKDAY(Sdate) WHEN '0' THEN 'Mon'  WHEN '1' THEN 'Tue'  WHEN '2' THEN 'Wed'  WHEN '3' THEN 'Thu'  WHEN '4' THEN 'Fri'  WHEN '5' THEN 'Sat' ELSE 'Sun'  END,')') Sdate
			, CONCAT(Edate, ' (', CASE WEEKDAY(Edate) WHEN '0' THEN 'Mon'  WHEN '1' THEN 'Tue'  WHEN '2' THEN 'Wed'  WHEN '3' THEN 'Thu'  WHEN '4' THEN 'Fri'  WHEN '5' THEN 'Sat' ELSE 'Sun'  END,')') Edate
			, VacFlag
			, VacOffFlag
			, Fn_BaseGetDictionary_S(#{lang}, u.MultiDisplayName) AS DisplayName
			, Fn_BaseGetDictionary_S(#{lang}, bg.MultiDeptName) AS DeptName
			, (SELECT Fn_BaseGetDictionary_S(#{lang}, ug.MultiDisplayName) FROM sys_object_group g 
					JOIN sys_object_group ug ON  ug.GroupType ='Dept' AND ug.GroupCode = g.MemberOf
			 		WHERE g.GroupType ='Dept' AND g.GroupCode = bg.DeptCode) AS UpDeptName  			
			, Fn_BaseGetDictionary_S(#{lang}, bg.MultiJobPositionName) AS JobPositionName
			, bg.JobPositionSortKey
			, bg.JobLevelSortKey
			, bg.JobTitleSortKey
			, Fn_BaseGetDictionary_S(#{lang}, D.MultiCodeName) AS VacFlagName
			, cast(cast(FORMAT(vm.VacDay,3) as DECIMAL(9,3)) as float) AS VacDay
			, Reason
			, WorkItemID
			, vm.ProcessID  ProcessID
			, vm.Gubun 
			, Fn_BaseGetDictionary_S(#{lang}, C.MultiCodeName) AS GubunName
			, CONCAT (CASE WHEN GUBUN in  ('VACATION_CANCEL' ,'VACATION_PUBLIC' ,'VACATION_PUBLIC_CANCEL' )	
					THEN CONCAT('(', Fn_BaseGetDictionary_S(#{lang}, C.MultiCodeName), ')') ELSE ''
					END, Fn_BaseGetDictionary_S(#{lang}, D.MultiCodeName))  AS VacText
	  FROM      vm_vacationinfo  vm 	
      LEFT JOIN sys_object_user u ON vm.UR_Code = u.UserCode
      LEFT JOIN sys_object_user_basegroup bg ON u.UserCode = bg.UserCode AND JobType = 'Origin'
	  LEFT JOIN sys_base_code C ON vm.GUBUN = C.Code AND C.CodeGroup = 'VACATION_GUBUN' AND C.DomainID =0
	  LEFT JOIN sys_base_code D ON vm.VacFlag = D.Code AND D.CodeGroup = 'VACATION_TYPE' AND D.DomainID =#{domainID}
	  LEFT JOIN covi_approval4j.jwf_process j ON vm.processid = j.processid
	  WHERE     #{year} BETWEEN  DATE_FORMAT(SDate,'%Y') AND DATE_FORMAT(EDate,'%Y')
	  AND       bg.Companycode = #{domainCode}
		<if test='DEPTID != null and DEPTID != ""'>
			AND bg.DeptCode = #{DEPTID}
		</if>
		<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
			<choose>
				<when test='schTypeSel == "deptName"'>
					AND bg.DeptName LIKE CONCAT('%', #{schTxt}, '%')
				</when>
				<otherwise>
					AND DisplayName LIKE CONCAT('%', #{schTxt}, '%')
				</otherwise>
			</choose>
		</if>
		<if test='schUrName != null and schUrName !="" '>
			AND DisplayName LIKE CONCAT('%', #{schUrName}, '%')
		</if>
		  	 
		<if test='vacFlag != null and vacFlag !="" '>
			AND vacFlag = #{vacFlag}
		</if>
		<if test='month != null and month !="" '>
			 AND concat(#{year},#{month}) BETWEEN  DATE_FORMAT(SDate,'%Y%m') AND DATE_FORMAT(EDate,'%Y%m')
		</if>
		<trim prefix="ORDER BY"  prefixOverrides =",">
			<choose>
				<when test="orgOrders != null and orgOrders != '' ">
				  	<foreach collection="orgOrders" item="orgOrder" separator=",">
				  		<if test="orgOrder != null and orgOrder == 'JobTitle'">
				  			JobTitleSortKey ASC
				  		</if>
				  		<if test="orgOrder != null and orgOrder == 'JobLevel'">
				  			JobLevelSortKey ASC
				  		</if>
				  		<if test="orgOrder != null and orgOrder == 'JobPosition'">
				  			JobPositionSortKey ASC
				  		</if>
		  				<if test="orgOrder != null and orgOrder == 'DN'">
				  			DisplayName ASC
				  		</if>
				  	</foreach>
				  	, Sdate DESC
			  	</when>
			</choose>
		</trim>
		<if test='pageSize != null and pageOffset != null and pageSize >= 0 and pageOffset >= 0'>
			LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>		 
	</select>
	<select id="getVacationListByUseHistCnt" parameterType="cmap" resultType="java.lang.Long">
		  SELECT count(*)
		  FROM covi_smart4j.vm_vacationinfo vm
	      LEFT JOIN covi_smart4j.sys_object_user u ON vm.UR_Code = u.UserCode
	      LEFT JOIN covi_smart4j.sys_object_user_basegroup bg ON u.UserCode = bg.UserCode AND JobType = 'Origin'
		  WHERE     #{year} BETWEEN  DATE_FORMAT(SDate,'%Y') AND DATE_FORMAT(EDate,'%Y')
		  AND       bg.Companycode = #{domainCode}
			<if test='DEPTID != null and DEPTID != ""'>
				AND bg.DeptCode = #{DEPTID}
			</if>
			<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
				<choose>
					<when test='schTypeSel == "deptName"'>
						AND bg.DeptName LIKE CONCAT('%', #{schTxt}, '%')
					</when>
					<otherwise>
						AND DisplayName LIKE CONCAT('%', #{schTxt}, '%')
					</otherwise>
				</choose>
			</if>
			<if test='schUrName != null and schUrName !="" '>
				AND DisplayName LIKE CONCAT('%', #{schUrName}, '%')
			</if>
			<if test='vacFlag != null and vacFlag !="" '>
				AND vacFlag = #{vacFlag}
			</if>
		<if test='month != null and month !="" '>
			 AND concat(#{year},#{month}) BETWEEN  DATE_FORMAT(SDate,'%Y%m') AND DATE_FORMAT(EDate,'%Y%m')
		</if>

		<if test='vacFlag != null and vacFlag !="" '>
			AND vacFlag = #{vacFlag}
		</if>
	</select>

	<select id="selectVacationExtraListCnt" resultType="java.lang.Long">
		SELECT COUNT(*)
		FROM covi_smart4j.vm_vacationplan A
		LEFT JOIN (	SELECT A.UserCode
					, B.CompanyCode
					, Fn_BaseGetDictionary_S(#{lang}, A.MultiDisplayName) AS DisplayName
					, Fn_BaseGetDictionary_S(#{lang}, B.MultiJobPositionName) AS JobPositionName
					FROM covi_smart4j.sys_object_user A
					LEFT JOIN covi_smart4j.sys_object_user_basegroup B ON A.UserCode = B.UserCode AND JobType = 'Origin'
		 		) B ON A.UR_Code = B.UserCode
		WHERE A.Year = #{year}
		AND A.VacKind <![CDATA[ <> ]]> 'PUBLIC'
		<if test='domainCode != null and domainCode != ""'>
			AND B.Companycode = #{domainCode}
		</if>
		<if test='vacKind != null and vacKind != ""'>
			AND A.VacKind = #{vacKind}
		</if>
		<if test='sDate != null and sDate != ""'>
			AND A.UseStartDate = #{sDate}
		</if>
		<if test='eDate != null and eDate != ""'>
			AND A.UseEndDate = #{eDate}
		</if>
		<if test='urCode != null and urCode != ""'>
			AND A.UR_Code = #{urCode}
		</if>
		<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
			<choose>
				<when test='schTypeSel == "deptName"'>
					AND DeptName LIKE CONCAT('%', #{schTxt}, '%')
				</when>
				<when test='schTypeSel == "userCode"'>
					AND A.UR_Code = #{schTxt}
				</when>
				<otherwise>
					AND DisplayName LIKE CONCAT('%', #{schTxt}, '%')
				</otherwise>
			</choose>
		</if>
	</select>

	<select id="selectVacationExtraList" parameterType="cmap" resultType="cmap">
		SELECT A.UR_Code
			, B.DisplayName
			, Fn_BaseGetDictionary_S(#{lang}, IFNULL(B.MultiDeptName, A.DeptName)) AS DeptName
			, B.JobPositionName
			, B.JobPositionSortKey
			, B.JobLevelSortKey
			, B.JobTitleSortKey
			, C.CodeName AS ExtVacName
			, C.IsUse
			, Year as ExtVacYear
			, UseStartDate as ExtSdate
			, UseEndDate as ExtEdate
			, VacKind as ExtVacType
			, cast(cast(A.VacDay as DECIMAL(9,3)) as float) AS ExtVacDay
			, VmComment as ExtReason
			, CASE WHEN RegisterName is not null THEN
					RegisterName
				ELSE
					A.RegisterCode
				END AS RegisterName
			, A.RegisterCode AS RegisterCode
			, DATE_FORMAT(A.RegistDate, '%Y-%m-%d') AS RegistDate
			, CONCAT(DATE_FORMAT(A.UseStartDate, '%Y.%m.%d'),' ~ ',DATE_FORMAT(A.UseEndDate, '%Y.%m.%d')) AS ExpDate
			, cast(SUM(IFNULL(F.VacDay,0.0)) as float) AS ExtUseVacDay
			, cast(A.VacDay-SUM(IFNULL(F.VacDay,0.0)) as float) AS ExtRemainVacDay
		FROM covi_smart4j.vm_vacationplan A
		LEFT JOIN (	SELECT A.UserCode
					, B.CompanyCode
					, B.MultiDeptName
					, B.JobPositionSortKey
					, B.JobLevelSortKey
					, B.JobTitleSortKey
					, Fn_BaseGetDictionary_S(#{lang}, A.MultiDisplayName) AS DisplayName
					, Fn_BaseGetDictionary_S(#{lang}, B.MultiJobPositionName) AS JobPositionName
					FROM covi_smart4j.sys_object_user A
					LEFT JOIN covi_smart4j.sys_object_user_basegroup B ON A.UserCode = B.UserCode AND JobType = 'Origin'
		) B ON A.UR_Code = B.UserCode
		LEFT JOIN (SELECT  B.Code
					, CASE WHEN Fn_BaseGetDictionary_S(#{lang}, B.MultiCodeName) is not null THEN
							Fn_BaseGetDictionary_S(#{lang}, B.MultiCodeName)
						ELSE
							B.CodeName
						END AS CodeName
					, CASE WHEN A.IsUse = 'N' OR B.IsUse = 'N' THEN
						'N' ELSE 'Y' END AS IsUse
					FROM (select *
							from covi_smart4j.sys_base_code
							WHERE CodeGroup = 'VACATION_KIND'
							AND DomainID = 0
							) A,
							(select *
								from covi_smart4j.sys_base_code
								where DomainID = #{domainID}
								AND CodeGroup = 'VACATION_TYPE'
							) B
							WHERE A.CodeID = B.ReservedInt
						) C ON A.VacKind = C.Code
		LEFT JOIN (SELECT UserCode ,Fn_BaseGetDictionary_S(#{lang}, MultiDisplayName) AS RegisterName
					FROM covi_smart4j.sys_object_user ) E ON A.RegisterCode = E.UserCode
		LEFT JOIN covi_smart4j.vm_vacationinfo_day F ON A.UR_Code = F.UR_Code AND STR_TO_DATE(F.VacDate,'%Y-%m-%d') between STR_TO_DATE(A.UseStartDate,'%Y%m%d') and STR_TO_DATE(A.UseEndDate,'%Y%m%d') AND F.VacFlag = A.VacKind
		WHERE A.Year = #{year}
		AND A.VacKind <![CDATA[ <> ]]> 'PUBLIC'
		<if test='domainCode != null and domainCode != ""'>
			AND B.Companycode = #{domainCode}
		</if>
		<if test='vacKind != null and vacKind != ""'>
			AND A.VacKind = #{vacKind}
		</if>
		<if test='sDate != null and sDate != ""'>
			AND A.UseStartDate = #{sDate}
		</if>
		<if test='eDate != null and eDate != ""'>
			AND A.UseEndDate = #{eDate}
		</if>
		<if test='urCode != null and urCode != ""'>
			AND A.UR_Code = #{urCode}
		</if>
		<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
			<choose>
				<when test='schTypeSel == "deptName"'>
					AND DeptName LIKE CONCAT('%', #{schTxt}, '%')
				</when>
				<when test='schTypeSel == "userCode"'>
					AND A.UR_Code = #{schTxt}
				</when>
				<otherwise>
					AND DisplayName LIKE CONCAT('%', #{schTxt}, '%')
				</otherwise>
			</choose>
		</if>
		GROUP BY A.UR_Code, A.VacKind, A.UseStartDate, A.UseEndDate
		<trim prefix="ORDER BY"  prefixOverrides =",">
			<if test="sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
			<choose>
				<when test="orgOrders != null and orgOrders != '' ">
				  	<foreach collection="orgOrders" item="orgOrder" separator=",">
				  		<if test="orgOrder != null and orgOrder == 'JobTitle'">
				  			JobTitleSortKey ASC
				  		</if>
				  		<if test="orgOrder != null and orgOrder == 'JobLevel'">
				  			JobLevelSortKey ASC
				  		</if>
				  		<if test="orgOrder != null and orgOrder == 'JobPosition'">
				  			JobPositionSortKey ASC
				  		</if>
		  				<if test="orgOrder != null and orgOrder == 'DN'">
				  			DisplayName ASC
				  		</if>
				  	</foreach>
				  	, ExtVacType, RegistDate ASC
			  	</when>
			</choose>
			</if>
			<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("DeptName")'>DeptName</when>
					<when test='sortColumn.equalsIgnoreCase("DisplayName")'>DisplayName</when>
					<when test='sortColumn.equalsIgnoreCase("ExtVacName")'>ExtVacName</when>
					<when test='sortColumn.equalsIgnoreCase("ExtVacDay")'>ExtVacDay</when>
					<when test='sortColumn.equalsIgnoreCase("RegisterName")'>RegisterName</when>
					<when test='sortColumn.equalsIgnoreCase("RegistDate")'>RegistDate</when>
					<when test='sortColumn.equalsIgnoreCase("ExpDate")'>ExpDate</when>
					<when test='sortColumn.equalsIgnoreCase("ExtUseVacDay")'>ExtUseVacDay</when>
					<when test='sortColumn.equalsIgnoreCase("ExtRemainVacDay")'>ExtRemainVacDay</when>
					<when test='sortColumn.equalsIgnoreCase("IsUse")'>IsUse</when>
					<when test='sortColumn.equalsIgnoreCase("ExtReason")'>ExtReason</when>
					<otherwise>ExtVacType, RegistDate</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if>
		</trim>
		<if test='pageSize != null and pageOffset != null and pageSize >= 0 and pageOffset >= 0'>
			LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>
	</select>
	<select id="selectVacationManageListCnt" resultType="java.lang.Long">
		/* groupware.vacation.selectVacationManageListCnt */
		SELECT count(VacationInfoID)
		FROM 		vm_vacationinfo A
		LEFT JOIN sys_object_user U ON A.UR_Code = u.UserCode
		LEFT JOIN sys_object_user_basegroup B ON A.UR_Code = B.UserCode AND JobType = 'Origin'
		WHERE  #{year}  BETWEEN DATE_FORMAT(a.Sdate, '%Y') AND  DATE_FORMAT(a.Sdate  , '%Y')
		AND (GUBUN ='VACATION_PUBLIC' OR GUBUN ='VACATION_PUBLIC_CANCEL')
		<if test='vacationInfoID != null and vacationInfoID !=""'>
			AND A.VacationInfoID = #{vacationInfoID}
		</if>
		<if test='domainCode != null and domainCode != ""'>
			AND B.Companycode = #{domainCode}
		</if>
		<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
			<choose>
				<when test='schTypeSel == "deptName"'>
					AND DeptName LIKE CONCAT('%', #{schTxt}, '%')
				</when>
				<otherwise>
					AND DisplayName LIKE CONCAT('%', #{schTxt}, '%')
				</otherwise>
			</choose>
		</if>
	</select>
	<select id="selectVacationManageList" parameterType="cmap" resultType="cmap">
		/* groupware.vacation.selectVacationManageList */
		SELECT VacationInfoID
			, A.UR_Code
			, Fn_BaseGetDictionary_S(#{lang}, u.MultiDisplayName) DisplayName
			, APPDATE
			, ENDDATE
			, GUBUN
			, Fn_BaseGetDictionary_S(#{lang}, C.MultiCodeName) AS GubunName
			, VacYear
			, Sdate
			, Edate
			, VacFlag
			, VacOffFlag
			, Fn_BaseGetDictionary_S(#{lang}, D.MultiCodeName) AS VacFlagName
			, cast(cast(FORMAT(a.VacDay,3) as DECIMAL(9,3)) as float) AS VacDay
			, Reason
			, WorkItemID
			, A.ProcessID
			, Fn_BaseGetDictionary_S(#{lang}, B.MultiDeptName) DeptName
			, Fn_BaseGetDictionary_S(#{lang}, B.MultiJobPositionName) AS JobPositionName
			, B.JobPositionSortKey
			, B.JobLevelSortKey
			, B.JobTitleSortKey
			, (CASE WHEN (GUBUN = 'VACATION_CANCEL' OR GUBUN = 'VACATION_PUBLIC' OR GUBUN = 'VACATION_PUBLIC_CANCEL' )	
					THEN CONCAT('(', Fn_BaseGetDictionary_S(#{lang}, C.MultiCodeName), ')', Fn_BaseGetDictionary_S(#{lang}, D.MultiCodeName))
					ELSE Fn_BaseGetDictionary_S(#{lang}, D.MultiCodeName)
					END ) AS VACTEXT
		FROM 		vm_vacationinfo A
		LEFT JOIN sys_object_user U ON A.UR_Code = u.UserCode
		LEFT JOIN sys_object_user_basegroup B ON A.UR_Code = B.UserCode AND JobType = 'Origin'
		LEFT JOIN sys_base_code C ON A.GUBUN = C.Code AND C.CodeGroup = 'VACATION_GUBUN' AND C.DomainID =0
		LEFT JOIN sys_base_code D ON A.VacFlag = D.Code AND D.CodeGroup = 'VACATION_TYPE' AND D.DomainID =#{domainID}
		WHERE  #{year}  BETWEEN DATE_FORMAT(a.Sdate, '%Y') AND  DATE_FORMAT(a.Sdate  , '%Y')
		AND (GUBUN ='VACATION_PUBLIC' OR GUBUN ='VACATION_PUBLIC_CANCEL')
		<if test='vacationInfoID != null and vacationInfoID !=""'>
			AND A.VacationInfoID = #{vacationInfoID}
		</if>
		<if test='domainCode != null and domainCode != ""'>
			AND B.Companycode = #{domainCode}
		</if>
		<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
			<choose>
				<when test='schTypeSel == "deptName"'>
					AND DeptName LIKE CONCAT('%', #{schTxt}, '%')
				</when>
				<otherwise>
					AND DisplayName LIKE CONCAT('%', #{schTxt}, '%')
				</otherwise>
			</choose>
		</if>
		<trim prefix="ORDER BY"  prefixOverrides =",">
			<if test="sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
			<choose>
				<when test="orgOrders != null and orgOrders != '' ">
				  	<foreach collection="orgOrders" item="orgOrder" separator=",">
				  		<if test="orgOrder != null and orgOrder == 'JobTitle'">
				  			JobTitleSortKey ASC
				  		</if>
				  		<if test="orgOrder != null and orgOrder == 'JobLevel'">
				  			JobLevelSortKey ASC
				  		</if>
				  		<if test="orgOrder != null and orgOrder == 'JobPosition'">
				  			JobPositionSortKey ASC
				  		</if>
		  				<if test="orgOrder != null and orgOrder == 'DN'">
				  			DisplayName ASC
				  		</if>
				  	</foreach>
				  	, VacationInfoID DESC
			  	</when>
			</choose>
			</if>
			<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("DeptName")'>DeptName</when>
					<when test='sortColumn.equalsIgnoreCase("DisplayName")'>DisplayName</when>
					<when test='sortColumn.equalsIgnoreCase("GubunName")'>GubunName</when>
					<when test='sortColumn.equalsIgnoreCase("VacFlagName")'>VacFlagName</when>
					<when test='sortColumn.equalsIgnoreCase("APPDATE")'>APPDATE</when>
					<when test='sortColumn.equalsIgnoreCase("Sdate")'>Sdate</when>
					<when test='sortColumn.equalsIgnoreCase("Edate")'>Edate</when>
					<when test='sortColumn.equalsIgnoreCase("VacDay")'>VacDay</when>
					<when test='sortColumn.equalsIgnoreCase("Reason")'>Reason</when>
					<otherwise>VacationInfoID</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if>
		</trim>
		<if test='pageSize != null and pageOffset != null and pageSize >= 0 and pageOffset >= 0'>
			LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>		 
	</select>
	
	<select id="selectVacationListByKindCnt" resultType="java.lang.Long">
		SELECT COUNT(*)
		FROM covi_smart4j.vm_vacationplan A
		LEFT JOIN (	SELECT A.UserCode
		, B.CompanyCode
		, Fn_BaseGetDictionary_S(#{lang}, A.MultiDisplayName) AS DisplayName
		, Fn_BaseGetDictionary_S(#{lang}, B.MultiJobPositionName) AS JobPositionName
		FROM covi_smart4j.sys_object_user A
		LEFT JOIN covi_smart4j.sys_object_user_basegroup B ON A.UserCode = B.UserCode AND JobType = 'Origin'
		) B ON A.UR_Code = B.UserCode
		WHERE A.Year = #{year}
		<if test='domainCode != null and domainCode != ""'>
			AND B.Companycode = #{domainCode}
		</if>
		<if test='vacKind != null and vacKind != ""'>
			AND A.VacKind = #{vacKind}
		</if>
		<if test='sDate != null and sDate != ""'>
			AND A.UseStartDate = #{sDate}
		</if>
		<if test='eDate != null and eDate != ""'>
			AND A.UseEndDate = #{eDate}
		</if>
		<if test='urCode != null and urCode != ""'>
			AND A.UR_Code = #{urCode}
		</if>
		<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
			<choose>
				<when test='schTypeSel == "deptName"'>
					AND DeptName LIKE CONCAT('%', #{schTxt}, '%')
				</when>
				<when test='schTypeSel == "userCode"'>
					AND A.UR_Code = #{schTxt}
				</when>
				<otherwise>
					AND DisplayName LIKE CONCAT('%', #{schTxt}, '%')
				</otherwise>
			</choose>
		</if>
	</select>

	<select id="selectVacationListByKind" parameterType="cmap" resultType="cmap">
		/* groupware.vacation.selectVacationListByKind */
		SELECT
			UR_Code, DisplayName, DeptName, JobPositionName, VacName, VacYear, Sdate, Edate, VacKind, VacDay, Reason
			, RegisterName, RegisterCode, RegistDate, ExpDate, VacDayUse, SortKey
			, cast(VacDay-VacDayUse as float) AS RemainVacDay
		FROM (
			SELECT A.UR_Code
			, B.DisplayName
			, Fn_BaseGetDictionary_S(#{lang}, IFNULL(A.DeptName, B.MultiDeptName)) AS DeptName
			, B.JobPositionName
			, IFNULL(C.CodeName, G.CodeName) AS VacName
			, Year as VacYear
			, UseStartDate as Sdate
			, UseEndDate as Edate
			, VacKind
			, cast(cast(A.VacDay as DECIMAL(9,3)) as float) AS VacDay
			, VmComment as Reason
			, CASE WHEN RegisterName is not null THEN
					RegisterName
				ELSE
					A.RegisterCode
				END AS RegisterName
			, A.RegisterCode AS RegisterCode
			, DATE_FORMAT(A.RegistDate, '%Y-%m-%d') AS RegistDate
			, CONCAT(DATE_FORMAT(A.UseStartDate, '%Y.%m.%d'),' ~ ',DATE_FORMAT(A.UseEndDate, '%Y.%m.%d')) AS ExpDate
		, CASE WHEN A.VacKind = 'PUBLIC' THEN
				(select CAST(IFNULL(SUM(VacDay), 0.0) AS FLOAT)
						from covi_smart4j.vm_vacationinfo V,
						(select BA.Code, BA.ReservedInt, BA.CodeGroup, BB.Code as VacKindCode, BA.Reserved1
						from (select *
						from covi_smart4j.sys_base_code
						where IsUse = 'Y'
						and DomainID = #{domainID}
						and CodeGroup = 'VACATION_TYPE') BA,
					(select *
					from covi_smart4j.sys_base_code
					where IsUse = 'Y'
					and DomainID = '0'
					and CodeGroup = 'VACATION_KIND') BB
					where BA.ReservedInt = BB.CodeID
					) B
				where V.VacFlag = B.Code
				AND B.Reserved1 = '+'
				AND V.UR_Code = A.UR_Code
				AND STR_TO_DATE(V.Sdate, '%Y-%m-%d') <![CDATA[>=]]> STR_TO_DATE(A.UseStartDate, '%Y%m%d')
				AND STR_TO_DATE(V.Edate, '%Y-%m-%d') <![CDATA[<=]]> STR_TO_DATE(A.UseEndDate, '%Y%m%d')
				AND B.VacKindCode = A.VacKind
				)
			ELSE
				(select CAST(IFNULL(SUM(VacDay), 0.0) AS FLOAT)
					from covi_smart4j.vm_vacationinfo V,
					(select BA.Code, BA.ReservedInt, BA.CodeGroup, BB.Code as VacKindCode, BA.Reserved1
					from (select *
					from covi_smart4j.sys_base_code
					where IsUse = 'Y'
					and DomainID = #{domainID}
					and CodeGroup = 'VACATION_TYPE') BA,
					(select *
						from covi_smart4j.sys_base_code
						where IsUse = 'Y'
						and DomainID = '0'
						and CodeGroup = 'VACATION_KIND') BB
						where BA.ReservedInt = BB.CodeID
					) B
					where V.VacFlag = B.Code
					AND V.UR_Code = A.UR_Code
					AND B.Reserved1 = '+'
					AND STR_TO_DATE(V.Sdate, '%Y-%m-%d') <![CDATA[>=]]> STR_TO_DATE(A.UseStartDate, '%Y%m%d')
					AND STR_TO_DATE(V.Edate, '%Y-%m-%d') <![CDATA[<=]]> STR_TO_DATE(A.UseEndDate, '%Y%m%d')
					AND B.Code = A.VacKind
				)
			END AS VacDayUse
			, IFNULL(C.SortKey, G.SortKey) AS SortKey
			FROM covi_smart4j.vm_vacationplan A
			LEFT JOIN (	SELECT A.UserCode
			, B.CompanyCode
			, B.MultiDeptName
			, Fn_BaseGetDictionary_S(#{lang}, A.MultiDisplayName) AS DisplayName
			, Fn_BaseGetDictionary_S(#{lang}, B.MultiJobPositionName) AS JobPositionName
			FROM covi_smart4j.sys_object_user A
			LEFT JOIN covi_smart4j.sys_object_user_basegroup B ON A.UserCode = B.UserCode AND JobType = 'Origin'
			) B ON A.UR_Code = B.UserCode
			LEFT JOIN (SELECT  B.Code
						, CASE WHEN Fn_BaseGetDictionary_S(#{lang}, B.MultiCodeName) is not null THEN
							Fn_BaseGetDictionary_S(#{lang}, B.MultiCodeName)
						ELSE
							B.CodeName
						END AS CodeName
						,A.Code as GroupCode
						,B.SortKey
						,B.CodeID
						FROM (select *
								from covi_smart4j.sys_base_code
								WHERE IsUse = 'Y'
								AND DomainID = 0
							) A,
							covi_smart4j.sys_base_code B
					WHERE A.CodeID = B.ReservedInt
					AND B.IsUse = 'Y'
					AND B.DomainID = #{domainID}) C ON A.VacKind = C.GroupCode
			LEFT JOIN (SELECT UserCode ,Fn_BaseGetDictionary_S(#{lang}, MultiDisplayName) AS RegisterName
			FROM covi_smart4j.sys_object_user ) E ON A.RegisterCode = E.UserCode
			LEFT JOIN  (select Code, Fn_BaseGetDictionary_S(#{lang}, IFNULL(MultiCodeName, CodeName)) AS CodeName, SortKey
						from covi_smart4j.sys_base_code
						where IsUse = 'Y'
						and DomainID = #{domainID}
						and CodeGroup = 'VACATION_TYPE') G ON G.Code = A.VacKind
			WHERE A.Year = #{year}
			<if test='domainCode != null and domainCode != ""'>
				AND B.Companycode = #{domainCode}
			</if>
			<if test='vacKind != null and vacKind != ""'>
				AND A.VacKind = #{vacKind}
			</if>
			<if test='sDate != null and sDate != ""'>
				AND A.UseStartDate = #{sDate}
			</if>
			<if test='eDate != null and eDate != ""'>
				AND A.UseEndDate = #{eDate}
			</if>
			<if test='urCode != null and urCode != ""'>
				AND A.UR_Code = #{urCode}
			</if>
			<if test='codeID != null and codeID != ""'>
				AND C.CodeID = #{codeID}
			</if>
			<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
				<choose>
					<when test='schTypeSel == "deptName"'>
						AND DeptName LIKE CONCAT('%', #{schTxt}, '%')
					</when>
					<when test='schTypeSel == "userCode"'>
						AND A.UR_Code = #{schTxt}
					</when>
					<otherwise>
						AND DisplayName LIKE CONCAT('%', #{schTxt}, '%')
					</otherwise>
				</choose>
			</if>
			GROUP BY A.UR_Code, A.VacKind, A.UseStartDate, A.UseEndDate
			<trim prefix='ORDER BY'>
				<if test="sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
					SortKey, DisplayName, VacKind, RegistDate ASC
				</if>
				<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
					<choose>
						<when test='sortColumn.equalsIgnoreCase("DisplayName")'>DisplayName</when>
						<when test='sortColumn.equalsIgnoreCase("ExtVacName")'>ExtVacName</when>
						<when test='sortColumn.equalsIgnoreCase("RegistDate")'>RegistDate</when>
						<when test='sortColumn.equalsIgnoreCase("ExtRemainVacDay")'>ExtRemainVacDay</when>
						<when test='sortColumn.equalsIgnoreCase("ExtUseVacDay")'>ExtUseVacDay</when>
						<when test='sortColumn.equalsIgnoreCase("ExpDate")'>ExpDate</when>
						<when test='sortColumn.equalsIgnoreCase("ExtVacDay")'>ExtVacDay</when>
						<when test='sortColumn.equalsIgnoreCase("ExtReason")'>ExtReason</when>
						<when test='sortColumn.equalsIgnoreCase("RegisterName")'>RegisterName</when>
						<when test='sortColumn.equalsIgnoreCase("DeptName")'>DeptName</when>
						<otherwise>DisplayName, VacKind, RegistDate</otherwise>
					</choose>
					<choose>
						<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
						<otherwise> DESC</otherwise>
					</choose>
				</if>
			</trim>
		) TBL
		WHERE VacName is not null
		<if test='pageSize != null and pageOffset != null and pageSize >= 0 and pageOffset >= 0'>
			LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>
	</select>

	<select id="selectVacationListByKindAll" parameterType="cmap" resultType="cmap">
	<![CDATA[
		/* groupware.vacation.selectVacationListByKindAll */
		SELECT Year  AS Year, VacKind, Fn_BaseGetDictionary_S('', VacName)  VacName
					,VacDay
					,VacDayUse
					,VacDayProc
					,cast(VacDay-VacDayUse as float) AS RemainVacDay 
					,A.UseStartDate Sdate
					,A.UseEndDate Edate
					,CONCAT(DATE_FORMAT(A.UseStartDate, '%Y.%m.%d'),' ~ ',DATE_FORMAT(A.UseEndDate, '%Y.%m.%d')) AS ExpDate
					,Reason
					,case when DATE_FORMAT(now(),'%Y%m%d') BETWEEN UseStartDate AND UseEndDate then 'Y' ELSE 'N' END CurYear
			FROM   (
				SELECT YEAR, VacKind
							, case when p.vackind = 'PUBLIC' then k.MultiCodeName ELSE t.MultiCodeName END VacName
							, case when p.vackind = 'PUBLIC' then k.IsUse ELSE t.IsUse END IsUse
							, UseStartDate, UseEndDate
							,FORMAT(IFNULL(p.VacDay,0),3) VacDay
							,(SELECT IFNULL(SUM(u.VacDay), 0) 
								FROM vm_vacationinfo_day u 
					   LEFT JOIN covi_smart4j.SYS_BASE_CODE k ON  u.VacFlag =  k.CODE AND k.CodeGroup = 'VACATION_TYPE' AND k.IsUse ='Y'	AND k.DomainID = #{domainID}						AND k.Reserved1 ='+' 
					   LEFT JOIN covi_smart4j.SYS_BASE_CODE t ON  k.ReservedInt = t.CodeID
							 WHERE p.ur_code = u.UR_Code AND u.VacDate BETWEEN DATE_FORMAT(p.UseStartDate, '%Y-%m-%d') AND  DATE_FORMAT(P.UseEndDate  , '%Y-%m-%d')
							   AND (p.VacKind = 'PUBLIC' AND p.VacKind = t.Code	OR p.vackind != 'PUBLIC' AND p.VacKind = K.Code)
							     ) VacDayUse
							 ,(SELECT IFNULL(SUM(u.VacDay), 0) 
								FROM vm_vacationinfo_process u 
					   LEFT JOIN SYS_BASE_CODE k ON  u.VacFlag =  k.CODE AND k.CodeGroup = 'VACATION_TYPE' AND k.IsUse ='Y'					AND k.DomainID = #{domainID}						AND k.Reserved1 ='+' 
					   LEFT JOIN SYS_BASE_CODE t ON  k.ReservedInt = t.CodeID
							 WHERE p.ur_code = u.UR_Code AND u.Sdate >= DATE_FORMAT(p.UseStartDate, '%Y-%m-%d') AND u.EDate<=  DATE_FORMAT(P.UseEndDate  , '%Y-%m-%d')
							   AND (p.VacKind = 'PUBLIC' AND p.VacKind = t.Code	OR p.vackind != 'PUBLIC' AND p.VacKind = K.Code)
							   AND Gubun = 'VACATION_APPLY'
							     ) VacDayProc
							 , p.VmComment Reason
			     FROM vm_vacationplan p
				 LEFT JOIN sys_base_code k ON p.vackind = 'PUBLIC'  AND k.CodeGroup = 'VACATION_KIND' AND k.DOMAINID=0 AND  k.code = vackind 
				 LEFT JOIN sys_base_code t ON p.vackind != 'PUBLIC' AND t.CodeGroup = 'VACATION_TYPE' AND t.DOMAINID in (0,#{domainID}) AND  t.code = vackind  AND t.IsUse = 'Y'
				 WHERE p.ur_code = #{schTxt}
		]]>		 
				<choose>
					<when test='mySummary == "Y"'>
						 AND	DATE_FORMAT(now(),'%Y%m%d')  BETWEEN UseStartDate AND UseEndDate	-- 현재
						 AND    VacKind = 'PUBLIC'
					</when>	
					<when test='reqType == "myVacation"'>
					</when>	
					<otherwise>
						 AND  ( UseEndDate BETWEEN DATE_FORMAT(DATE_SUB(now(), INTERVAL 3 month),'%Y%m%d') and DATE_FORMAT(DATE_SUB(now(), INTERVAL 1 day),'%Y%m%d')  -- 과거 최대 3달
								OR	DATE_FORMAT(now(),'%Y%m%d')  BETWEEN UseStartDate AND UseEndDate	-- 현재
								OR  UseStartDate > DATE_FORMAT(now(),'%Y%m%d')	-- 미래 all
								)
					</otherwise> 
				</choose>		
			) A	 
			WHERE a.IsUse = 'Y'
			ORDER BY YEAR <if test='reqType == "myVacation"'>desc</if>, VacKind, UseStartDate, UseEndDate 
	</select>	
	

	<select id="selectVacationListByKindCntV2" resultType="java.lang.Long">
		SELECT COUNT(*)
		FROM covi_smart4j.vm_vacationplan A
		LEFT JOIN (	SELECT A.UserCode
		, B.CompanyCode
		, Fn_BaseGetDictionary_S(#{lang}, A.MultiDisplayName) AS DisplayName
		, Fn_BaseGetDictionary_S(#{lang}, B.MultiJobPositionName) AS JobPositionName
		FROM covi_smart4j.sys_object_user A
		LEFT JOIN covi_smart4j.sys_object_user_basegroup B ON A.UserCode = B.UserCode AND JobType = 'Origin'
		) B ON A.UR_Code = B.UserCode
		WHERE A.Year = #{year}
		<if test='domainCode != null and domainCode != ""'>
			AND B.Companycode = #{domainCode}
		</if>
		<if test='vacKind != null and vacKind != ""'>
			AND A.VacKind = #{vacKind}
		</if>
		<if test='sDate != null and sDate != ""'>
			AND A.UseStartDate = #{sDate}
		</if>
		<if test='eDate != null and eDate != ""'>
			AND A.UseEndDate = #{eDate}
		</if>
		<if test='urCode != null and urCode != ""'>
			AND A.UR_Code = #{urCode}
		</if>
		<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
			<choose>
				<when test='schTypeSel == "deptName"'>
					AND DeptName LIKE CONCAT('%', #{schTxt}, '%')
				</when>
				<when test='schTypeSel == "userCode"'>
					AND A.UR_Code = #{schTxt}
				</when>
				<otherwise>
					AND DisplayName LIKE CONCAT('%', #{schTxt}, '%')
				</otherwise>
			</choose>
		</if>
	</select>

	<select id="selectVacationListByKindV2" parameterType="cmap" resultType="cmap">
		/* groupware.vacation.selectVacationListByKindV2 */
		SELECT UR_Code
		, DisplayName
		, CompanyCode
		, DeptName
		, JobPositionName
		, VacName
		, VacYear
		, Sdate
		, Edate
		, VacKind
		, MAX(VacDay) AS VacDay
		, Reason
		, RegisterName
		, RegisterCode
		, RegistDate
		, ExpDate
		, SUM(UseVacDay) AS UseVacDay
		, cast(MAX(VacDay)-IFNULL(SUM(UseVacDay),0.0) as float) AS RemainVacDay
		, SortKey
		, TargetYear
		FROM (SELECT A.UR_Code, B.DisplayName
		, B.CompanyCode
		, Fn_BaseGetDictionary_S(#{lang}, IFNULL(A.DeptName, B.MultiDeptName)) AS DeptName
		, B.JobPositionName
		, IFNULL(C.CodeName, G.CodeName) AS VacName
		, Year as VacYear
		, UseStartDate as Sdate
		, UseEndDate as Edate
		, VacKind
		, cast(cast(A.VacDay as DECIMAL(9,3)) as float) AS VacDay
		, VmComment as Reason
		, CASE WHEN RegisterName is not null THEN
				RegisterName
			ELSE
				A.RegisterCode
			END AS RegisterName
		, A.RegisterCode AS RegisterCode
		, DATE_FORMAT(A.RegistDate, '%Y-%m-%d') AS RegistDate
		, CONCAT(DATE_FORMAT(A.UseStartDate, '%Y.%m.%d'),' ~ ',DATE_FORMAT(A.UseEndDate, '%Y.%m.%d')) AS ExpDate
		, IFNULL(C.SortKey, G.SortKey) AS SortKey
		, TargetYear
		, (SELECT cast(SUM(IFNULL(VacDay,0.0)) as float)
			FROM vm_vacationinfo V
			LEFT JOIN sys_base_code B ON B.CodeGroup = 'VACATION_TYPE'
			AND B.DOMAINID = #{domainID}
			AND B.Reserved1 = '+'
			<!--AND (B.Reserved2 is null or B.Reserved2 ='')-->
			AND B.IsUse = 'Y'
			AND V.VacFlag = B.Code
			where UR_Code = A.UR_Code AND VacFlag = C.Code
			AND B.CODE is not null
			AND STR_TO_DATE(Sdate,'%Y-%m-%d') between STR_TO_DATE(A.UseStartDate,'%Y%m%d') and STR_TO_DATE(A.UseEndDate,'%Y%m%d')
			AND STR_TO_DATE(Edate,'%Y-%m-%d') between STR_TO_DATE(A.UseStartDate,'%Y%m%d') and STR_TO_DATE(A.UseEndDate,'%Y%m%d')
		) AS UseVacDay
		FROM  (	SELECT A.UserCode
					, B.CompanyCode
					, B.MultiDeptName
					, Fn_BaseGetDictionary_S(#{lang}, A.MultiDisplayName) AS DisplayName
					, Fn_BaseGetDictionary_S(#{lang}, B.MultiJobPositionName) AS JobPositionName
					, A.TargetYear
					FROM (select UserCode, EnterDate, MultiDisplayName, RetireDate, SortKey
							, CASE WHEN STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'),'%m%d')),'%Y%m%d')  <![CDATA[<=]]>  STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(NOW(3),'%m%d')),'%Y%m%d') THEN
									YEAR(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'))
								ELSE
									YEAR(DATE_ADD(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'), INTERVAL -1 YEAR )) END AS TargetYear
							from covi_smart4j.sys_object_user where EnterDate is not null) A
					LEFT JOIN covi_smart4j.sys_object_user_basegroup B ON A.UserCode = B.UserCode AND JobType = 'Origin'
		) B
		LEFT JOIN (select * from covi_smart4j.vm_vacationplan where VacKind='PUBLIC') A
			ON A.UR_Code = B.UserCode and A.YEAR = B.TargetYear
		LEFT JOIN (SELECT  B.Code
						, CASE WHEN Fn_BaseGetDictionary_S(#{lang}, B.MultiCodeName) is not null THEN
							Fn_BaseGetDictionary_S(#{lang}, B.MultiCodeName)
						ELSE
							B.CodeName
						END AS CodeName
						,A.Code as GroupCode
						,B.SortKey
						,B.CodeID
					FROM (select * from covi_smart4j.sys_base_code WHERE IsUse = 'Y' AND DomainID = 0 ) A,
						covi_smart4j.sys_base_code B
					WHERE A.CodeID = B.ReservedInt
					AND B.IsUse = 'Y'
					AND B.DomainID = #{domainID}) C ON A.VacKind = C.GroupCode
			LEFT JOIN (SELECT UserCode ,Fn_BaseGetDictionary_S(#{lang}, MultiDisplayName) AS RegisterName
						FROM covi_smart4j.sys_object_user  where RetireDate is not null) E ON A.RegisterCode = E.UserCode
			LEFT JOIN  (select Code, Fn_BaseGetDictionary_S(#{lang}, IFNULL(MultiCodeName, CodeName)) AS CodeName, SortKey
						from covi_smart4j.sys_base_code
						where IsUse = 'Y'
						and DomainID = #{domainID}
						and CodeGroup = 'VACATION_TYPE') G ON G.Code = A.VacKind
			WHERE  1=1
		<if test='domainCode != null and domainCode != ""'>
			AND Companycode = #{domainCode}
		</if>
		<if test='vacKind != null and vacKind != ""'>
			AND VacKind = #{vacKind}
		</if>
		<if test='sDate != null and sDate != ""'>
			AND UseStartDate = #{sDate}
		</if>
		<if test='eDate != null and eDate != ""'>
			AND UseEndDate = #{eDate}
		</if>
		<if test='urCode != null and urCode != ""'>
			AND UR_Code = #{urCode}
		</if>
		<if test='codeID != null and codeID != ""'>
			AND CodeID = #{codeID}
		</if>
		<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
			<choose>
				<when test='schTypeSel == "deptName"'>
					AND DeptName LIKE CONCAT('%', #{schTxt}, '%')
				</when>
				<when test='schTypeSel == "userCode"'>
					AND UR_Code = #{schTxt}
				</when>
				<otherwise>
					AND DisplayName LIKE CONCAT('%', #{schTxt}, '%')
				</otherwise>
			</choose>
		</if>
			GROUP BY UR_Code, DisplayName, DeptName, JobPositionName, VacName, Year, UseStartDate, UseEndDate, VacKind, VmComment, RegisterName, RegisterCode, RegistDate, ExpDate, TargetYear

		<trim prefix='ORDER BY'>
			<if test="sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
				SortKey, DisplayName, VacKind, RegistDate ASC
			</if>
			<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("DisplayName")'>DisplayName</when>
					<when test='sortColumn.equalsIgnoreCase("ExtVacName")'>ExtVacName</when>
					<when test='sortColumn.equalsIgnoreCase("RegistDate")'>RegistDate</when>
					<when test='sortColumn.equalsIgnoreCase("ExtRemainVacDay")'>ExtRemainVacDay</when>
					<when test='sortColumn.equalsIgnoreCase("ExtUseVacDay")'>ExtUseVacDay</when>
					<when test='sortColumn.equalsIgnoreCase("ExpDate")'>ExpDate</when>
					<when test='sortColumn.equalsIgnoreCase("ExtVacDay")'>ExtVacDay</when>
					<when test='sortColumn.equalsIgnoreCase("ExtReason")'>ExtReason</when>
					<when test='sortColumn.equalsIgnoreCase("RegisterName")'>RegisterName</when>
					<when test='sortColumn.equalsIgnoreCase("DeptName")'>DeptName</when>
					<otherwise>DisplayName, VacKind, RegistDate</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if>
		</trim>
		) TB
		<if test='pageSize != null and pageOffset != null and pageSize >= 0 and pageOffset >= 0'>
			LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>
	</select>

	<select id="selectVacationListByKindV3" parameterType="cmap" resultType="cmap">
		/* groupware.vacation.selectVacationListByKindV3 */
		SELECT A.UR_Code
		, B.DisplayName
		, Fn_BaseGetDictionary_S(#{lang}, IFNULL(A.DeptName, B.MultiDeptName)) AS DeptName
		, B.JobPositionName
		, IFNULL(C.CodeName, G.CodeName) AS VacName
		, Year as VacYear
		, UseStartDate as Sdate
		, UseEndDate as Edate
		, VacKind
		, cast(cast(A.VacDay as DECIMAL(9,3)) as float) AS VacDay
		, VmComment as Reason
		, CASE WHEN RegisterName is not null THEN
				RegisterName
			ELSE
				A.RegisterCode
			END AS RegisterName
		, A.RegisterCode AS RegisterCode
		, DATE_FORMAT(A.RegistDate, '%Y-%m-%d') AS RegistDate
		, CONCAT(DATE_FORMAT(A.UseStartDate, '%Y.%m.%d'),' ~ ',DATE_FORMAT(A.UseEndDate, '%Y.%m.%d')) AS ExpDate
		, A.UseVacDay AS UseVacDay
		, cast(A.VacDay-A.UseVacDay as float) AS RemainVacDay
		, IFNULL(C.SortKey, G.SortKey) AS SortKey
		, TargetYear
		FROM  (	SELECT A.UserCode
		, B.CompanyCode
		, B.MultiDeptName
		, Fn_BaseGetDictionary_S(#{lang}, A.MultiDisplayName) AS DisplayName
		, Fn_BaseGetDictionary_S(#{lang}, B.MultiJobPositionName) AS JobPositionName
		, A.TargetYear
		, CONCAT(A.TargetYear,DATE_FORMAT(STR_TO_DATE(REPLACE(A.EnterDate,'-',''),'%Y%m%d'),'%m%d')) AS TargetSdate
		, CONCAT(DATE_FORMAT(DATE_ADD(DATE_ADD(STR_TO_DATE(CONCAT(A.TargetYear,DATE_FORMAT(STR_TO_DATE(REPLACE(A.EnterDate,'-',''),'%Y%m%d'),'%m%d')),'%Y%m%d'), INTERVAL 1 YEAR), INTERVAL -1 DAY),'%Y%m%d')) AS TargetEdate
		FROM (select UserCode, EnterDate, MultiDisplayName, RetireDate, SortKey
		, CASE WHEN STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'),'%m%d')),'%Y%m%d')  <![CDATA[<=]]>  STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(NOW(3),'%m%d')),'%Y%m%d') THEN
				YEAR(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'))
			ELSE
				YEAR(DATE_ADD(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'), INTERVAL -1 YEAR )) END AS TargetYear
		from covi_smart4j.sys_object_user) A
		LEFT JOIN covi_smart4j.sys_object_user_basegroup B ON A.UserCode = B.UserCode AND JobType = 'Origin'
		) B
		LEFT JOIN 	(select
						P.*,
						(
							select cast(IFNULL(SUM(VacDay), 0.0) as float)
							from covi_smart4j.vm_vacationinfo V
								LEFT JOIN covi_smart4j.sys_base_code B ON B.CodeGroup = 'VACATION_TYPE'
									AND B.DOMAINID = #{domainID}
									AND B.IsUse = 'Y'
									AND V.VacFlag = B.Code
							where UR_Code = P.UR_Code
							AND STR_TO_DATE(Sdate, '%Y-%m-%d') between STR_TO_DATE(P.UseStartDate, '%Y%m%d') and STR_TO_DATE(P.UseEndDate, '%Y%m%d')
							AND STR_TO_DATE(Edate, '%Y-%m-%d') between STR_TO_DATE(P.UseStartDate, '%Y%m%d') and STR_TO_DATE(P.UseEndDate, '%Y%m%d')
 							AND B.Reserved1 = '+'
							AND VacFlag = P.VacKind
						) AS UseVacDay
					from covi_smart4j.vm_vacationplan P
					where VacKind  <![CDATA[<>]]>  'PUBLIC') A
					ON A.UR_Code = B.UserCode and A.UseStartDate <![CDATA[>=]]> B.TargetSdate and A.UseEndDate <![CDATA[<=]]> B.TargetEdate
		LEFT JOIN (SELECT  B.Code
				, CASE WHEN Fn_BaseGetDictionary_S(#{lang}, B.MultiCodeName) is not null THEN
						Fn_BaseGetDictionary_S(#{lang}, B.MultiCodeName)
					ELSE
						B.CodeName
					END AS CodeName
				,A.Code as GroupCode
				,B.SortKey
				,B.CodeID
				FROM (select * from covi_smart4j.sys_base_code WHERE IsUse = 'Y' AND DomainID = 0 ) A,
					covi_smart4j.sys_base_code B
				WHERE A.CodeID = B.ReservedInt
				AND B.IsUse = 'Y'
				AND B.DomainID = #{domainID}) C ON A.VacKind = C.GroupCode
		LEFT JOIN (SELECT UserCode ,Fn_BaseGetDictionary_S(#{lang}, MultiDisplayName) AS RegisterName
		FROM covi_smart4j.sys_object_user ) E ON A.RegisterCode = E.UserCode
		LEFT JOIN  (select Code, Fn_BaseGetDictionary_S(#{lang}, IFNULL(MultiCodeName, CodeName)) AS CodeName, SortKey
					from covi_smart4j.sys_base_code
					where IsUse = 'Y'
					and DomainID = #{domainID}
					and CodeGroup = 'VACATION_TYPE') G ON G.Code = A.VacKind
		WHERE  1=1
		AND (C.CodeName is not null OR  G.CodeName is not null)
		<if test='domainCode != null and domainCode != ""'>
			AND B.Companycode = #{domainCode}
		</if>
		<if test='vacKind != null and vacKind != ""'>
			AND A.VacKind = #{vacKind}
		</if>
		<if test='sDate != null and sDate != ""'>
			AND A.UseStartDate = #{sDate}
		</if>
		<if test='eDate != null and eDate != ""'>
			AND A.UseEndDate = #{eDate}
		</if>
		<if test='urCode != null and urCode != ""'>
			AND A.UR_Code = #{urCode}
		</if>
		<if test='codeID != null and codeID != ""'>
			AND C.CodeID = #{codeID}
		</if>
		<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
			<choose>
				<when test='schTypeSel == "deptName"'>
					AND DeptName LIKE CONCAT('%', #{schTxt}, '%')
				</when>
				<when test='schTypeSel == "userCode"'>
					AND A.UR_Code = #{schTxt}
				</when>
				<otherwise>
					AND DisplayName LIKE CONCAT('%', #{schTxt}, '%')
				</otherwise>
			</choose>
		</if>
		GROUP BY A.UR_Code, A.VacKind, A.UseStartDate, A.UseEndDate
		<trim prefix='ORDER BY'>
			<if test="sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
				SortKey, DisplayName, VacKind, Sdate ASC
			</if>
			<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("DisplayName")'>DisplayName</when>
					<when test='sortColumn.equalsIgnoreCase("ExtVacName")'>ExtVacName</when>
					<when test='sortColumn.equalsIgnoreCase("RegistDate")'>RegistDate</when>
					<when test='sortColumn.equalsIgnoreCase("ExtRemainVacDay")'>ExtRemainVacDay</when>
					<when test='sortColumn.equalsIgnoreCase("ExtUseVacDay")'>ExtUseVacDay</when>
					<when test='sortColumn.equalsIgnoreCase("ExpDate")'>ExpDate</when>
					<when test='sortColumn.equalsIgnoreCase("ExtVacDay")'>ExtVacDay</when>
					<when test='sortColumn.equalsIgnoreCase("ExtReason")'>ExtReason</when>
					<when test='sortColumn.equalsIgnoreCase("RegisterName")'>RegisterName</when>
					<when test='sortColumn.equalsIgnoreCase("DeptName")'>DeptName</when>
					<otherwise>DisplayName, VacKind, RegistDate</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if>
		</trim>
		<if test='pageSize != null and pageOffset != null and pageSize >= 0 and pageOffset >= 0'>
			LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>
	</select>

	<select id="selectVacationByCode" parameterType="cmap" resultType="cmap">
		SELECT VT.UR_Code as UR_Code
				,DeptName,CodeName
				,UseStartDate as Sdate
				,UseEndDate as Edate
				,VacKind
				,VacDay
				,VacDayUse
				,CAST(VacDay-VacDayUse AS FLOAT) as VacDayRemain
		FROM (
			SELECT
				UR_Code,DeptName,CodeName,UseStartDate,UseEndDate,VacKind
				, CAST(VacDay AS FLOAT) AS VacDay
				, CASE WHEN TY.GroupCode = 'PUBLIC' THEN
					(select CAST(IFNULL(SUM(VacDay),0.0) AS FLOAT )
					from covi_smart4j.vm_vacationinfo A,

					(select BA.Code, BA.ReservedInt, BA.CodeGroup, BB.Code as VacKindCode
					from

					(select *
					from covi_smart4j.sys_base_code
					where IsUse = 'Y'
					and DomainID = #{domainID}
					and Reserved1 = '+'
					and CodeGroup = 'VACATION_TYPE') BA
					,

					(select *
					from covi_smart4j.sys_base_code
					where IsUse = 'Y'
					and DomainID = '0'
					and CodeGroup = 'VACATION_KIND') BB
					where BA.ReservedInt = BB.CodeID
					)B
					where A.VacFlag = B.Code
					AND A.UR_Code = P.UR_Code
					AND STR_TO_DATE(A.Sdate,'%Y-%m-%d')  <![CDATA[>=]]>  STR_TO_DATE(UseStartDate,'%Y%m%d')
					AND STR_TO_DATE(A.Edate,'%Y-%m-%d')  <![CDATA[<=]]>  STR_TO_DATE(UseEndDate,'%Y%m%d')
					AND VacKindCode = TY.GroupCode
					)
				ELSE
					(select CAST(IFNULL(SUM(VacDay),0.0) AS FLOAT )
					from covi_smart4j.vm_vacationinfo A,

					(select BA.Code, BA.ReservedInt, BA.CodeGroup, BB.Code as VacKindCode
					from

					(select *
					from covi_smart4j.sys_base_code
					where IsUse = 'Y'
					and DomainID = #{domainID}
					and Reserved1 = '+'
					and CodeGroup = 'VACATION_TYPE') BA
					,
					(select *
					from covi_smart4j.sys_base_code
					where IsUse = 'Y'
					and DomainID = '0'
					and CodeGroup = 'VACATION_KIND') BB
					where BA.ReservedInt = BB.CodeID
					)B
					where A.VacFlag = B.Code
					AND A.UR_Code = P.UR_Code
					AND STR_TO_DATE(A.Sdate,'%Y-%m-%d')  <![CDATA[>=]]>  STR_TO_DATE(UseStartDate,'%Y%m%d')
					AND STR_TO_DATE(A.Edate,'%Y-%m-%d')  <![CDATA[<=]]>  STR_TO_DATE(UseEndDate,'%Y%m%d')
					AND VacKindCode = TY.GroupCode
					AND B.Code = TY.Code
					)
				END AS VacDayUse
			FROM (SELECT  B.Code
					, CASE WHEN Fn_BaseGetDictionary_S(#{lang}, B.MultiCodeName) is not null THEN
						Fn_BaseGetDictionary_S(#{lang}, B.MultiCodeName)
					ELSE
						B.CodeName
					END AS CodeName
					,A.Code as GroupCode
					,A.CodeName as GroupCodeName
					,B.SortKey
					,B.CodeID
				FROM
				(select *
					from covi_smart4j.sys_base_code
					WHERE IsUse = 'Y'
					AND DomainID = 0
				) A,
				covi_smart4j.sys_base_code B
				WHERE A.CodeID = B.ReservedInt
				AND B.IsUse = 'Y'
				AND B.CodeID = #{codeID}
				AND B.DomainID = #{domainID}) TY
				,
				(SELECT UR_Code, DeptName, VacKind
					, UseStartDate
					, UseEndDate
					, VacDay
				FROM covi_smart4j.vm_vacationplan
					WHERE 1=1
					<if test='urCode != null and urCode != ""'>
						AND UR_Code = #{urCode}
					</if>
					<if test='userList != null and userList != ""'>
						AND UR_Code in
						<foreach collection="userList" item="item" open="(" separator="," close=")">
							#{item}
						</foreach>
					</if>
		<if test='calMonth != null and calMonth != ""'>
			AND	STR_TO_DATE(#{calMonth}, '%Y-%m') between STR_TO_DATE(SUBSTR(UseStartDate,1,6), '%Y%m') and STR_TO_DATE(SUBSTR(UseEndDate,1,6), '%Y%m')
		</if>
				) P
			WHERE (TY.GroupCode = P.VacKind OR (TY.GroupCode <![CDATA[<>]]> 'PUBLIC' AND TY.Code = P.VacKind))
			) VT

	</select>

	<select id="checkVacationExtraPlan" parameterType="cmap" resultType="cmap">
		SELECT UR_Code, DisplayName, DeptName, JobPositionName, Year
			,CASE WHEN VacDay <![CDATA[<]]> 0 THEN
					0.0
				ELSE
					VacDay
				END AS VacDay
			,CASE WHEN TotVacDay <![CDATA[<]]> 0 THEN
					0.0
				ELSE
					TotVacDay
				END AS TotVacDay
			,(select CONCAT(DATE_FORMAT(STR_TO_DATE(UseStartDate,'%Y%m%d'),'%y.%m.%d'),'~',DATE_FORMAT(STR_TO_DATE(UseEndDate,'%Y%m%d'),'%y.%m.%d'))
				from covi_smart4j.vm_vacationplan
				where YEAR = #{year}
				and VacKind  =  #{vacKind}
				and UR_Code = TBL.UR_Code
				and   (STR_TO_DATE(#{sDate},'%Y-%m-%d') between STR_TO_DATE(UseStartDate,'%Y%m%d') and STR_TO_DATE(UseEndDate,'%Y%m%d')
				or  STR_TO_DATE(#{eDate},'%Y-%m-%d') between STR_TO_DATE(UseStartDate,'%Y%m%d') and STR_TO_DATE(UseEndDate,'%Y%m%d'))
				LIMIT  1
			) AS ExistDate
		FROM (
			SELECT B.UserCode AS UR_Code
				, B.DisplayName
				, Fn_BaseGetDictionary_S(#{lang}, IFNULL(A.DeptName, B.MultiDeptName)) AS DeptName
				, B.JobPositionName
				, Year
				, cast(SUM(IFNULL(A.VacDay,0.0)) as float) AS VacDay
				, cast(SUM(IFNULL(A.VacDay,0.0))+#{vacDay} as float) AS TotVacDay
			FROM (	SELECT A.UserCode
					, B.CompanyCode
					, B.MultiDeptName
					, Fn_BaseGetDictionary_S(#{lang}, A.MultiDisplayName) AS DisplayName
					, Fn_BaseGetDictionary_S(#{lang}, B.MultiJobPositionName) AS JobPositionName
					FROM covi_smart4j.sys_object_user A
					LEFT JOIN covi_smart4j.sys_object_user_basegroup B ON A.UserCode = B.UserCode AND JobType = 'Origin'
					WHERE A.UserCode in
					<foreach collection="urCode" item="item" open="(" separator="," close=")">
						#{item}
					</foreach>
					<if test='domainCode != null and domainCode != ""'>
						AND B.Companycode = #{domainCode}
					</if>
				) B
			LEFT JOIN (select UR_Code, YEAR, VacKind, DeptName, SUM(VacDay) as VacDay
						from covi_smart4j.vm_vacationplan
						where YEAR = #{year} and VacKind <![CDATA[<>]]> 'PUBLIC'
						group by UR_Code, YEAR, VacKind, DeptName) A ON A.UR_Code = B.UserCode

			GROUP BY UR_Code, DisplayName, DeptName, Year
		) TBL
		<if test='pageSize != null and pageOffset != null and pageSize >= 0 and pageOffset >= 0'>
			LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>
	</select>

	<update id="updateExtraVacDay" parameterType="cmap">
		UPDATE covi_smart4j.vm_vacationplan
		SET VacDay = #{vacDay}
		, UseStartDate = #{sDate}
		, UseEndDate = #{eDate}
		, VmComment = #{comment}
		WHERE UR_Code = #{urCode}
		AND VacKind = #{vacKind}
		AND UseStartDate = #{extSdate}
		AND UseEndDate = #{extEdate}
	</update>

	<insert id="insertExtraVacationPlan" parameterType="cmap">
		INSERT INTO covi_smart4j.vm_vacationplan (UR_Code, YEAR, VacDay, VacKind, UseStartDate, UseEndDate
		, DeptCode, DeptName
		, VmComment, RewardVacDay, RegisterCode, RegistDate)
		VALUES (#{urCode}, #{year}, #{vacDay}, #{vacKind}, #{sDate}, #{eDate},
		(select DeptCode from sys_object_user_basegroup where UserCode = #{urCode} and JobType='Origin'),
		(select MultiDeptName from sys_object_user_basegroup where UserCode = #{urCode} and JobType='Origin')
		, #{comment}, 0, #{registerCode}, now(3)
		)
	</insert>

	<insert id="insertVmPlanHist" parameterType="cmap">
		INSERT INTO covi_smart4j.vm_plan_hist (
			VacKind, UR_Code, UseStartDate, UseEndDate
			, VacDay
			, VmComment
			, VmMethod
			, RegisterCode
			, RegistDate
			, ModifyerCode
			, ModifyDate
		)
		VALUES (
			#{vacKind}, #{urCode}, #{sDate}, #{eDate}
			,#{vacDay}
			,#{comment}
			,#{vmMethod}
			,#{registerCode}
			, now(3)
			,#{modifierCode}
			, now(3)
		)
	</insert>

	<update id="updateVmPlanHist" parameterType="cmap">
		UPDATE covi_smart4j.vm_plan_hist SET
			  VacKind = #{vacKind}
			, UR_Code = #{urCode}
			, UseStartDate = #{sDate}
			, UseEndDate = #{eDate}
			, VacDay = #{vacDay}
			, VmComment = #{comment}
			, ModifyerCode = #{modifierCode}
			, ModifyDate = now(3)
		WHERE UR_Code = #{urCode}
			AND VacKind = #{vacKind}
			AND UseStartDate = #{extSdate}
			AND UseEndDate = #{extEdate}
	</update>

	<select id="selectVacationPlanHistListCnt" resultType="java.lang.Long">
		SELECT COUNT(*)
		FROM (
				SELECT A.UR_Code
				FROM vm_plan_hist H
				LEFT JOIN vm_vacationplan A ON A.VacKind = H.VacKind AND A.UR_Code = H.UR_Code AND A.UseStartDate = H.UseStartDate AND A.UseEndDate = H.UseEndDate  AND A.YEAR = #{year}
				LEFT JOIN sys_object_user e ON A.UR_Code = e.UserCode
				LEFT JOIN sys_object_user_basegroup B ON e.UserCode = B.UserCode AND JobType = 'Origin'  
				LEFT JOIN sys_base_code C ON A.VacKind = C.Code AND C.CodeGroup = 'VACATION_KIND' AND C.DomainID = 0
			 	LEFT JOIN sys_base_code D ON A.VacKind = D.Code AND D.CodeGroup = 'VACATION_TYPE' AND D.DomainID =#{domainID}
				LEFT JOIN covi_smart4j.vm_vacationinfo F
					ON A.UR_Code = F.UR_Code
						AND STR_TO_DATE(F.Sdate,'%Y-%m-%d') between STR_TO_DATE(A.UseStartDate,'%Y%m%d') and STR_TO_DATE(A.UseEndDate,'%Y%m%d')
						AND F.VacFlag = A.VacKind
				WHERE 1=1
				<if test='domainCode != null and domainCode != ""'>
					AND B.Companycode = #{domainCode}
				</if>
				<if test='vacKind != null and vacKind != ""'>
					AND A.VacKind = #{vacKind}
				</if>
				<if test='sDate != null and sDate != ""'>
					AND A.UseStartDate = #{sDate}
				</if>
				<if test='eDate != null and eDate != ""'>
					AND A.UseEndDate = #{eDate}
				</if>
				<if test='schEmploySel != null and schEmploySel != ""'>
					<choose>
						<when test='schEmploySel == "INOFFICE"'>
							AND e.RetireDate = ''
							AND B.DeptCode NOT LIKE '%RetireDept'
						</when>
						<otherwise> <!-- RETIRE -->
							AND e.RetireDate != ''
							AND year(e.RetireDate) = #{year}
						</otherwise>
					</choose>
				</if>
				<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
					<choose>
						<when test='schTypeSel == "deptName"'>
							AND (A.DeptName LIKE CONCAT('%', #{schTxt}, '%') or b.MultiDeptName LIKE CONCAT('%', #{schTxt}, '%'))
						</when>
						<otherwise>
							AND DisplayName LIKE CONCAT('%', #{schTxt}, '%')
						</otherwise>
					</choose>
				</if>
				GROUP BY A.UR_Code, A.VacKind, A.UseStartDate, A.UseEndDate, H.VacDay
			) T
	</select>

	<select id="selectVacationPlanHistList" parameterType="cmap" resultType="cmap">
		SELECT A.UR_Code
			, e.DisplayName
			, Fn_BaseGetDictionary_S(#{lang}, IFNULL(A.DeptName, B.MultiDeptName)) AS DeptName
			, B.JobPositionName
			, CASE WHEN Fn_BaseGetDictionary_S(#{lang}, D.MultiCodeName) is not null THEN
					Fn_BaseGetDictionary_S(#{lang}, D.MultiCodeName)
				ELSE
					Fn_BaseGetDictionary_S(#{lang}, C.MultiCodeName)
				END AS ExtVacName
			, Year as ExtVacYear
			, H.UseStartDate as ExtSdate
			, H.UseEndDate as ExtEdate
			, H.VacKind as ExtVacType
			, H.VmComment as VmComment
			, DATE_FORMAT(H.RegistDate, '%Y-%m-%d') as ChangeDate
			, cast(cast(A.VacDay as DECIMAL(9,3)) as float) AS ExtVacDay
			, H.VmComment as ExtReason
			, (SELECT Fn_BaseGetDictionary_S(#{lang}, MultiDisplayName) FROM sys_object_user WHERE UserCode =  a.RegisterCode) AS RegisterName
			, A.RegisterCode
			, DATE_FORMAT(A.RegistDate, '%Y-%m-%d') AS RegistDate
			, CONCAT(DATE_FORMAT(A.UseStartDate,'%y.%m.%d'),' ~ ',DATE_FORMAT(A.UseEndDate,'%y.%m.%d')) AS ExpDate
			, cast(SUM(IFNULL(F.VacDay,0.0)) as float) AS ExtUseVacDay
			, cast(A.VacDay-SUM(IFNULL(F.VacDay,0.0)) as float) AS ExtRemainVacDay
		FROM vm_plan_hist H
		LEFT JOIN vm_vacationplan A ON A.VacKind = H.VacKind AND A.UR_Code = H.UR_Code AND A.UseStartDate = H.UseStartDate AND A.UseEndDate = H.UseEndDate  AND A.YEAR = #{year}
		LEFT JOIN sys_object_user e ON A.UR_Code = e.UserCode
		LEFT JOIN sys_object_user_basegroup B ON e.UserCode = B.UserCode AND JobType = 'Origin'  
		LEFT JOIN sys_base_code C ON A.VacKind = C.Code AND C.CodeGroup = 'VACATION_KIND' AND C.DomainID = 0
	 	LEFT JOIN sys_base_code D ON A.VacKind = D.Code AND D.CodeGroup = 'VACATION_TYPE' AND D.DomainID =#{domainID}
		LEFT JOIN covi_smart4j.vm_vacationinfo F
			ON A.UR_Code = F.UR_Code
				AND STR_TO_DATE(F.Sdate,'%Y-%m-%d') between STR_TO_DATE(A.UseStartDate,'%Y%m%d') and STR_TO_DATE(A.UseEndDate,'%Y%m%d')
				AND F.VacFlag = A.VacKind
		WHERE 1=1
		<if test='domainCode != null and domainCode != ""'>
			AND B.Companycode = #{domainCode}
		</if>
		<if test='vacKind != null and vacKind != ""'>
			AND A.VacKind = #{vacKind}
		</if>
		<if test='sDate != null and sDate != ""'>
			AND A.UseStartDate = #{sDate}
		</if>
		<if test='eDate != null and eDate != ""'>
			AND A.UseEndDate = #{eDate}
		</if>
		<if test='schEmploySel != null and schEmploySel != ""'>
			<choose>
				<when test='schEmploySel == "INOFFICE"'>
					AND e.RetireDate = ''
					AND B.DeptCode NOT LIKE '%RetireDept'
				</when>
				<otherwise> <!-- RETIRE -->
					AND e.RetireDate != ''
					AND year(e.RetireDate) = #{year}
				</otherwise>
			</choose>
		</if>
		<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
			<choose>
				<when test='schTypeSel == "deptName"'>
					AND (A.DeptName LIKE CONCAT('%', #{schTxt}, '%') or b.MultiDeptName LIKE CONCAT('%', #{schTxt}, '%'))
				</when>
				<otherwise>
					AND DisplayName LIKE CONCAT('%', #{schTxt}, '%')
				</otherwise>
			</choose>
		</if>
		GROUP BY A.UR_Code, A.VacKind, A.UseStartDate, A.UseEndDate, H.VacDay
		<trim prefix='ORDER BY'>
			<if test="sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
				H.RegistDate DESC, DisplayName ASC
			</if>
			<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("DisplayName")'>DisplayName</when>
					<when test='sortColumn.equalsIgnoreCase("ExtVacName")'>ExtVacName</when>
					<when test='sortColumn.equalsIgnoreCase("ChangeDate")'>H.RegistDate</when>
					<when test='sortColumn.equalsIgnoreCase("ExtRemainVacDay")'>ExtRemainVacDay</when>
					<when test='sortColumn.equalsIgnoreCase("ExtUseVacDay")'>ExtUseVacDay</when>
					<when test='sortColumn.equalsIgnoreCase("ExpDate")'>ExpDate</when>
					<when test='sortColumn.equalsIgnoreCase("ExtVacDay")'>ExtVacDay</when>
					<when test='sortColumn.equalsIgnoreCase("ExtReason")'>ExtReason</when>
					<when test='sortColumn.equalsIgnoreCase("RegisterName")'>RegisterName</when>
					<when test='sortColumn.equalsIgnoreCase("DeptName")'>DeptName</when>
					<otherwise>H.RegistDate, DisplayName</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if>
		</trim>
		<if test='pageSize != null and pageOffset != null and pageSize >= 0 and pageOffset >= 0'>
			LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>
	</select>

	<select id="selectVacationCancelList" parameterType="cmap" resultType="cmap">
	SELECT A.VacationInfoID
			, A.UR_Code
			, A.DisplayName
			, A.APPDATE
			, A.ENDDATE
			, A.GUBUN
			, Fn_BaseGetDictionary_S(#{lang}, C.MultiCodeName) AS GubunName
			, A.VacYear
			, A.Sdate
			, A.Edate
			, A.VacFlag
			, A.VacOffFlag
			, Fn_BaseGetDictionary_S(#{lang}, D.MultiCodeName) AS VacFlagName
			, VacDay
			, (SELECT ifnull(SUM(vacday),0) FROM vm_vacationinfo_day d WHERE d.UR_Code = a.UR_Code and d.VacDate BETWEEN a.Sdate AND a.Edate) VacDayTot
			, A.Reason
			, A.WorkItemID
			, A.ProcessID
			, DeptName
			, JobPositionName
	FROM (	
		SELECT
				A.VacationInfoID
					, A.UR_Code
					, B.DisplayName
					, A.APPDATE
					, A.ENDDATE
					, A.GUBUN
					, A.VacYear
					, A.Sdate
					, A.Edate
					, A.VacFlag
					, A.VacOffFlag
					, cast(cast(FORMAT(A.VacDay,3) as DECIMAL(9,3)) as float) AS VacDay
					, A.Reason
					, A.WorkItemID
					, A.ProcessID
					, DeptName
					, JobPositionName
			FROM vm_vacationinfo A
			LEFT JOIN (	SELECT A.UserCode
						, B.CompanyCode
						, Fn_BaseGetDictionary_S(#{lang}, A.MultiDisplayName) AS DisplayName
						, Fn_BaseGetDictionary_S(#{lang}, B.MultiDeptName) AS DeptName
						, Fn_BaseGetDictionary_S(#{lang}, B.MultiJobPositionName) AS JobPositionName
						FROM covi_smart4j.sys_object_user A
						LEFT JOIN covi_smart4j.sys_object_user_basegroup B ON A.UserCode = B.UserCode AND JobType = 'Origin') B ON A.UR_Code = B.UserCode
			WHERE A.GUBUN not like '%_CANCEL'  
			AND   #{year} between  DATE_FORMAT(A.SDate,'%Y') AND DATE_FORMAT(A.EDate,'%Y')
			<if test='VacationInfoId != null and VacationInfoId !=""'>
				AND A.VacationInfoID = #{VacationInfoId}
			</if>
			<if test='domainCode != null and domainCode != ""'>
				AND B.Companycode = #{domainCode}
			</if>
			<if test='urCode != null and urCode !=""'>
				AND A.UR_Code = #{urCode}
			</if>
			<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
				<choose>
					<when test='schTypeSel == "deptName"'>
						AND B.DeptName LIKE CONCAT('%', #{schTxt}, '%')
					</when>
					<otherwise>
						AND B.DisplayName LIKE CONCAT('%', #{schTxt}, '%')
					</otherwise>
				</choose>
			</if>
			<trim prefix='ORDER BY'>
				<if test="sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
					A.VacationInfoID DESC
				</if>
				<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
					<choose>
						<when test='sortColumn.equalsIgnoreCase("DisplayName")'>DisplayName</when>
						<when test='sortColumn.equalsIgnoreCase("APPDATE")'>APPDATE</when>
						<when test='sortColumn.equalsIgnoreCase("ENDDATE")'>ENDDATE</when>
						<when test='sortColumn.equalsIgnoreCase("VacYear")'>VacYear</when>
						<when test='sortColumn.equalsIgnoreCase("Sdate")'>Sdate</when>
						<when test='sortColumn.equalsIgnoreCase("Edate")'>Edate</when>
						<when test='sortColumn.equalsIgnoreCase("VacDay")'>VacDay</when>
						<when test='sortColumn.equalsIgnoreCase("DeptName")'>DeptName</when>
						<otherwise>VacationInfoID</otherwise>
					</choose>
					<choose>
						<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
						<otherwise> DESC</otherwise>
					</choose>
				</if>
			</trim>
			<if test='pageSize != null and pageOffset != null and pageSize >= 0 and pageOffset >= 0'>
				LIMIT #{pageSize} OFFSET #{pageOffset}
			</if>
			) A
			LEFT JOIN covi_smart4j.sys_base_code C ON A.GUBUN = C.Code AND C.CodeGroup = 'VACATION_GUBUN' AND C.DomainID =0
			LEFT JOIN covi_smart4j.sys_base_code D ON A.VacFlag = D.Code AND D.CodeGroup = 'VACATION_TYPE' AND D.DomainID =#{domainID}
		<trim prefix='ORDER BY'>
			<if test="sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
				A.VacationInfoID DESC
			</if>
			<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("DisplayName")'>DisplayName</when>
					<when test='sortColumn.equalsIgnoreCase("APPDATE")'>APPDATE</when>
					<when test='sortColumn.equalsIgnoreCase("ENDDATE")'>ENDDATE</when>
					<when test='sortColumn.equalsIgnoreCase("VacFlagName")'>VacFlagName</when>
					<when test='sortColumn.equalsIgnoreCase("VacYear")'>VacYear</when>
					<when test='sortColumn.equalsIgnoreCase("Sdate")'>Sdate</when>
					<when test='sortColumn.equalsIgnoreCase("Edate")'>Edate</when>
					<when test='sortColumn.equalsIgnoreCase("VacDay")'>VacDay</when>
					<when test='sortColumn.equalsIgnoreCase("Reason")'>Reason</when>
					<when test='sortColumn.equalsIgnoreCase("GubunName")'>GubunName</when>
					<when test='sortColumn.equalsIgnoreCase("VACTEXT")'>VACTEXT</when>
					<when test='sortColumn.equalsIgnoreCase("DeptName")'>DeptName</when>
					<otherwise>VacationInfoID</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if>
		</trim>
	</select>

	<select id="selectVacationCancelListCnt" resultType="java.lang.Long">
		SELECT COUNT(VacationInfoID)
		FROM vm_vacationinfo A
		LEFT JOIN (	SELECT A.UserCode
			, B.CompanyCode
			, Fn_BaseGetDictionary_S(#{lang}, A.MultiDisplayName) AS DisplayName
			, Fn_BaseGetDictionary_S(#{lang}, B.MultiDeptName) AS DeptName
			, Fn_BaseGetDictionary_S(#{lang}, B.MultiJobPositionName) AS JobPositionName
			FROM covi_smart4j.sys_object_user A
			LEFT JOIN covi_smart4j.sys_object_user_basegroup B ON A.UserCode = B.UserCode AND JobType = 'Origin'
		 ) B ON A.UR_Code = B.UserCode
		WHERE  A.GUBUN not like '%_CANCEL'
		AND   #{year} between  DATE_FORMAT(A.SDate,'%Y') AND DATE_FORMAT(A.EDate,'%Y')
		<if test='VacationInfoId != null and VacationInfoId !=""'>
			AND A.VacationInfoID = #{VacationInfoId}
		</if>
		<if test='domainCode != null and domainCode != ""'>
			AND B.Companycode = #{domainCode}
		</if>
		<if test='urCode != null and urCode !=""'>
			AND A.UR_Code = #{urCode}
		</if>
		<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
			<choose>
				<when test='schTypeSel == "deptName"'>
					AND B.DeptName LIKE CONCAT('%', #{schTxt}, '%')
				</when>
				<otherwise>
					AND B.DisplayName LIKE CONCAT('%', #{schTxt}, '%')
				</otherwise>
			</choose>
		</if>
	</select>

	<select id="selectVacationCancelCheck" parameterType="cmap" resultType="cmap">
		SELECT A.VacationInfoID
		, A.UR_Code
		, B.DisplayName
		, A.APPDATE
		, A.ENDDATE
		, A.GUBUN
		, Fn_BaseGetDictionary_S(#{lang}, C.MultiCodeName) AS GubunName
		, A.VacYear
		, A.Sdate
		, A.Edate
		, A.VacFlag
		, A.VacOffFlag
		, Fn_BaseGetDictionary_S(#{lang}, D.MultiCodeName) AS VacFlagName
		, cast(cast(FORMAT(A.VacDay,3) as DECIMAL(9,3)) as float) AS VacDay
		, cast(IFNULL(B.VacDayTot,0.0) as float) AS VacDayTot
		, cast(cast(FORMAT(IFNULL(SUM(V.VacDayUse),0.0),3) as DECIMAL(9,3)) as float) AS VacDayUse
		, cast(cast(FORMAT(IFNULL(B.VacDayTot-SUM(V.VacDayUse),0.0),3) as DECIMAL(9,3)) as float) AS VacDayRemain
		, A.Reason
		, A.WorkItemID
		, A.ProcessID
		, DeptName
		, JobPositionName
		, (CASE WHEN (A.GUBUN = 'VACATION_CANCEL' OR A.GUBUN = 'VACATION_PUBLIC' OR A.GUBUN = 'VACATION_PUBLIC_CANCEL' )
		THEN CONCAT('(', Fn_BaseGetDictionary_S(#{lang}, C.MultiCodeName), ')', Fn_BaseGetDictionary_S(#{lang}, D.MultiCodeName))
		ELSE Fn_BaseGetDictionary_S(#{lang}, D.MultiCodeName)
		END ) AS VACTEXT
		FROM (select * from covi_smart4j.vm_vacationinfo where VacYear = #{year}) A
		LEFT JOIN (	SELECT A.UserCode
					, B.CompanyCode
					, Fn_BaseGetDictionary_S(#{lang}, A.MultiDisplayName) AS DisplayName
					, Fn_BaseGetDictionary_S(#{lang}, IFNULL(E.DeptName, B.MultiDeptName)) AS DeptName
					, Fn_BaseGetDictionary_S(#{lang}, B.MultiJobPositionName) AS JobPositionName
					, SUM(VacDay) AS VacDayTot
					, A.Sdate, A.Edate
					FROM (
							select  UserCode, DisplayName, MULTIDISPLAYNAME, ENTERDATE
								,CASE WHEN CREATEMETHOD = 'J' THEN
									STR_TO_DATE(CONCAT(TargetYear,DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'),'m%d')),'YYYYMMDD')
								ELSE
									STR_TO_DATE(CONCAT(TargetYear, '0101'),'%Y%m%d')
								END as Sdate
								,CASE WHEN CREATEMETHOD = 'J' THEN
									DATE_ADD(DATE_ADD(STR_TO_DATE(CONCAT(TargetYear,DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'),'m%d')),'YYYYMMDD'),INTERVAL 1 YEAR),INTERVAL -1 DAY)
								ELSE
									STR_TO_DATE(CONCAT(TargetYear, '1231'),'%Y%m%d')
								END as Edate
							from (
									select UserCode, DisplayName, MULTIDISPLAYNAME, ENTERDATE, CFG.CREATEMETHOD
										,CASE WHEN CFG.CREATEMETHOD = 'J' THEN
											CASE WHEN STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'),'%m%d')),'%Y%m%d') <![CDATA[<=]]> STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(NOW(3),'%m%d')),'%Y%m%d') THEN
												YEAR(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'))
											ELSE
												YEAR(DATE_ADD(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'), INTERVAL -1 YEAR))
											END
										ELSE
											#{year}
										END AS TargetYear
									from SYS_OBJECT_USER
									left join VM_CONFIG CFG ON CFG.COMPANYCODE = #{CompanyCode}) a ) A
					LEFT JOIN covi_smart4j.sys_object_user_basegroup B ON A.UserCode = B.UserCode AND JobType = 'Origin'
					LEFT JOIN covi_smart4j.vm_vacationplan E ON A.UserCode = E.UR_Code
																and STR_TO_DATE(E.USESTARTDATE,'%Y%m%d')  <![CDATA[>=]]>  A.Sdate
																and STR_TO_DATE(E.USEENDDATE,'%Y%m%d')  <![CDATA[<=]]>  A.Edate
					group by A.UserCode, B.CompanyCode, DisplayName, JobPositionName, A.MultiDisplayName, B.MultiDeptName, B.MultiJobPositionName, A.SDATE, A.EDATE
		) B ON A.UR_Code = B.UserCode
		LEFT JOIN covi_smart4j.sys_base_code C ON A.GUBUN = C.Code AND C.CodeGroup = 'VACATION_GUBUN' AND C.DomainID = 0
		LEFT JOIN covi_smart4j.sys_base_code D ON A.VacFlag = D.Code AND D.CodeGroup = 'VACATION_TYPE' AND D.DomainID =#{domainID}
		LEFT JOIN (select UR_Code,  VacDay as VacDayUse, Sdate, Edate
					from covi_smart4j.vm_vacationinfo) V ON V.UR_Code = A.UR_Code AND STR_TO_DATE(V.Sdate,'%Y-%m-%d') <![CDATA[>=]]> B.Sdate AND STR_TO_DATE(V.Edate,'%Y-%m-%d') <![CDATA[<=]]> B.Edate
			WHERE A.VacationInfoID in
			<foreach collection="VacationInfoId" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
			<if test='domainCode != null and domainCode != ""'>
				AND B.Companycode = #{domainCode}
			</if>
		group by A.VacationInfoID, A.UR_Code, B.DisplayName, A.APPDATE
				, A.ENDDATE
				, A.GUBUN, C.MULTICODENAME
				, A.VacYear
				, A.Sdate
				, A.Edate
				, A.VacFlag
				, A.VacOffFlag
				, D.MultiCodeName, A.Reason
				, A.WorkItemID
				, A.ProcessID
				, B.DeptName, JobPositionName
			<trim prefix='ORDER BY'>
				<if test="sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
					A.VacationInfoID DESC
				</if>
			</trim>
			<if test='pageSize != null and pageOffset != null and pageSize >= 0 and pageOffset >= 0'>
				LIMIT #{pageSize} OFFSET #{pageOffset}
			</if>
	</select>

	<select id="selectVacationCancelCheckCnt" resultType="java.lang.Long">
		SELECT COUNT(*)
		FROM (select * from covi_smart4j.vm_vacationinfo where VacYear = #{year}
			AND VacationInfoID in
			<foreach collection="VacationInfoId" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
			GROUP BY UR_Code) A
		LEFT JOIN (	SELECT A.UserCode
				, B.CompanyCode
				, Fn_BaseGetDictionary_S(#{lang}, A.MultiDisplayName) AS DisplayName
				, Fn_BaseGetDictionary_S(#{lang}, B.MultiDeptName) AS DeptName
				, Fn_BaseGetDictionary_S(#{lang}, B.MultiJobPositionName) AS JobPositionName
				FROM covi_smart4j.sys_object_user A
				LEFT JOIN covi_smart4j.sys_object_user_basegroup B ON A.UserCode = B.UserCode AND JobType = 'Origin'
				<if test='domainCode != null and domainCode != ""'>
					AND B.Companycode = #{domainCode}
				</if>
		) B ON A.UR_Code = B.UserCode


	</select>

	<select id="selectVacationPromotionDateList" parameterType="cmap" resultType="cmap">
	/* groupware.vacation.selectVacationPromotionDateList */
		SELECT * FROM
		(		SELECT
					CompanyCode,
					ReqType,
					covi_smart4j.Fn_GetBaseCodeName(#{domainID}, 'VacationPromotionDate', ReqType) ReqTypeName,
					ReqOrd,
					cast(cast(ReqMonth as DECIMAL(9,3)) as float) AS ReqMonth,
					ReqTermDay,
					ReqOrder
				FROM covi_smart4j.vm_reqconf
				WHERE CompanyCode = #{CompanyCode}
					AND ReqOrd IN ('0','1')
		) A
		LEFT JOIN
		(
				SELECT
					CompanyCode AS CompanyCode2,
					ReqType AS ReqType2,
					covi_smart4j.Fn_GetBaseCodeName(#{domainID}, 'VacationPromotionDate', ReqType) ReqTypeName2,
					ReqOrd AS ReqOrd2,
					cast(cast(ReqMonth as DECIMAL(9,3)) as float) AS ReqMonth2,
					ReqTermDay AS ReqTermDay2,
					ReqOrder AS ReqOrder2
				FROM covi_smart4j.vm_reqconf
				WHERE CompanyCode = #{CompanyCode}
					AND ReqOrd = '2'

		) B ON(A.CompanyCode = B.CompanyCode2 AND A.ReqOrder = B.ReqOrder2)
		WHERE 1=1
		ORDER BY A.ReqOrder ASC
	</select>

	<select id="selectVacPromotionDate" parameterType="cmap" resultType="cmap">
	/* groupware.vacation.selectVacPromotionDate */
		SELECT
			CompanyCode, ReqType, ReqOrd
			, CAST(CAST(ReqMonth AS DECIMAL(9,3)) AS FLOAT) AS ReqMonth
			, ReqTermDay, ReqOrder
		FROM covi_smart4j.vm_reqconf
		WHERE CompanyCode = #{CompanyCode}
			AND ReqType = #{reqType}
	</select>

	<update id="updateVacPromotionDate" parameterType="cmap">
	/* groupware.vacation.updateVacPromotionDate */
		INSERT INTO covi_smart4j.vm_reqconf
		      (  CompanyCode, ReqType, ReqOrd, ReqMonth, ReqTermDay, ReqOrder )
		VALUES ( #{CompanyCode}, #{reqType}, #{reqOrd}, #{reqMonth}, #{reqTermDay}, #{reqOrder} )
	    ON   DUPLICATE KEY
		UPDATE 	 ReqMonth = #{reqMonth}
				,reqTermDay = #{reqTermDay}
	</update>

	<insert id="initVacationPromotionDate" parameterType="cmap">
		/* groupware.vacation.initVacationPromotionDate */
		INSERT INTO covi_smart4j.vm_reqconf
		(  CompanyCode, ReqType, ReqOrd, ReqMonth, ReqTermDay, ReqOrder )
		( SELECT #{companyCode}, ReqType, ReqOrd, ReqMonth, ReqTermDay, ReqOrder
			FROM covi_smart4j.vm_reqconf
			WHERE CompanyCode = 'ORGROOT')
	</insert>

	<insert id="initVacationConfig" parameterType="cmap">
		/* groupware.vacation.initVacationConfig */
		INSERT INTO vm_config
		(  CompanyCode, CreateMethod, InitCnt, IncTerm, IncCnt
		, MaxCnt, RemMethod, YearRemMethod, IsRemRenewal, ReqInfoMethod, IsAuto
		, FormTitle090, FormTitle091, FormTitle092, FormTitle021, FormTitle022, FormTitle100, FormTitle101, FormTitle102
		, FormBody090, FormBody091, FormBody092, FormBody021, FormBody022, FormBody100, FormBody101, FormBody102
		, MailSenderName, MailSenderAddr
		, useYn090, useYn091, useYn092, useYn021, useYn022, useYn100, useYn101, useYn102
		)
		(
		SELECT
		#{companyCode}, CreateMethod, InitCnt, IncTerm, IncCnt
		, MaxCnt, 'N', 'Y', 'N',ReqInfoMethod, IsAuto
		, FormTitle090, FormTitle091, FormTitle092, FormTitle021, FormTitle022, FormTitle100, FormTitle101, FormTitle102
		, FormBody090, FormBody091, FormBody092, FormBody021, FormBody022, FormBody100, FormBody101, FormBody102
		, MailSenderName, MailSenderAddr
		, useYn090, useYn091, useYn092, useYn021, useYn022, useYn100, useYn101, useYn102
		FROM covi_smart4j.vm_config
		WHERE CompanyCode = 'ORGROOT'
		)
	</insert>
	
	<select id="getVacationConfig" parameterType="cmap" resultType="cmap">
	/* groupware.vacation.getVacationConfig */
		SELECT
			CompanyCode,
			CreateMethod,
			InitCnt,
			IncTerm,
			IncCnt,
			MaxCnt,
			RemMethod,
			YearRemMethod,
			IsRemRenewal,
			ReqInfoMethod,
			IsAuto,
			FormTitle090,
			FormTitle091,
			FormTitle092,
			FormTitle021,
			FormTitle022,
			FormTitle100,
			FormTitle101,
			FormTitle102,
			FormBody090,
			FormBody091,
			FormBody092,
			FormBody021,
			FormBody022,
			FormBody100,
			FormBody101,
			FormBody102,
			MailSenderName,
			MailSenderAddr,
			useYn100,
			useYn101,
			useYn102,
			useYn090,
			useYn091,
			useYn092,
			useYn021,
			useYn022
		FROM covi_smart4j.vm_config
		WHERE CompanyCode = #{CompanyCode}
	</select>
	
	<update id="updateVacationConfig" parameterType="cmap">
	/* groupware.vacation.updateVacationConfig */
		INSERT INTO covi_smart4j.vm_config ( 
				CompanyCode, CreateMethod, InitCnt, IncTerm, IncCnt,
				MaxCnt, RemMethod, YearRemMethod, IsRemRenewal, ReqInfoMethod, IsAuto, ModifierCode,
				ModifyDate,
				FormTitle090, FormTitle091, FormTitle092, FormTitle021, FormTitle022, FormTitle100, FormTitle101, FormTitle102,
				FormBody090, FormBody091, FormBody092, FormBody021, FormBody022, FormBody100, FormBody101, FormBody102,
				MailSenderName, MailSenderAddr,
				useYn100, useYn101, useYn102, useYn090, useYn091, useYn092, useYn021, useYn022
		)
		VALUES ( 
			#{CompanyCode}, #{createMethod}, #{initCnt}, #{incTerm}, #{incCnt},
			#{maxCnt}, #{remMethod}, #{yearRemMethod}, #{isRemRenewal}, #{reqInfoMethod}, #{isAuto}, #{urCode},
			NOW(),
			#{formTitle090}, #{formTitle091}, #{formTitle092}, #{formTitle021}, #{formTitle022}, #{formTitle100}, #{formTitle101}, #{formTitle102},
			#{formBody090}, #{formBody091}, #{formBody092}, #{formBody021}, #{formBody022}, #{formBody100}, #{formBody101}, #{formBody102},
			#{mailSenderName}, #{mailSenderAddr},
			#{useYn100}, #{useYn101}, #{useYn102}, #{useYn090}, #{useYn091}, #{useYn092}, #{useYn021}, #{useYn022}
    )
    ON DUPLICATE KEY UPDATE
         CreateMethod = #{createMethod},
	     	InitCnt = #{initCnt}, 
	     	IncTerm = #{incTerm}, 
	     	IncCnt = #{incCnt}, 
	     	MaxCnt = #{maxCnt}, 
			RemMethod = #{remMethod}, 
			YearRemMethod = #{yearRemMethod}, 
			IsRemRenewal = #{isRemRenewal}, 
			ReqInfoMethod = #{reqInfoMethod}, 
			IsAuto = #{isAuto}, 
			ModifierCode = #{urCode}, 
			ModifyDate = NOW(),
			FormTitle090 = #{formTitle090},
			FormTitle091 = #{formTitle091},
			FormTitle092 = #{formTitle092},
			FormTitle021 = #{formTitle021},
			FormTitle022 = #{formTitle022},
			FormTitle100 = #{formTitle100},
			FormTitle101 = #{formTitle101},
			FormTitle102 = #{formTitle102},
			FormBody090 = #{formBody090},
			FormBody091 = #{formBody091},
			FormBody092 = #{formBody092},
			FormBody021 = #{formBody021},
			FormBody022 = #{formBody022},
			FormBody100 = #{formBody100},
			FormBody101 = #{formBody101},
			FormBody102 = #{formBody102},
			MailSenderName = #{mailSenderName},
			MailSenderAddr = #{mailSenderAddr},
			useYn100 = #{useYn100},
			useYn101 = #{useYn101},
			useYn102 = #{useYn102},
			useYn090 = #{useYn090},
			useYn091 = #{useYn091},
			useYn092 = #{useYn092},
			useYn021 = #{useYn021},
			useYn022 = #{useYn022}
	</update>

	<update id="updateResetVacationDays" statementType="CALLABLE" parameterType= "cmap" >
		{CALL covi_smart4j.sp_resetVacationDays(#{createMethod},#{CompanyCode})}
	</update>

	<delete id="deleteVacationPlanHist" parameterType="cmap">
		/* groupware.vacation.deleteVacationPlanHist */
		delete from covi_smart4j.vm_plan_hist
		WHERE VacKind = 'PUBLIC'
		AND UR_Code in (
			SELECT A.UserCode
			FROM covi_smart4j.sys_object_user A
			LEFT JOIN (SELECT UserCode, CompanyName, CompanyCode, DeptCode, MultiDeptName
			FROM covi_smart4j.sys_object_user_basegroup
			WHERE JobType = 'Origin'
			) B ON A.UserCode = B.UserCode
			WHERE B.CompanyCode = #{CompanyCode}
		)
	</delete>

	<update id="updateVacationExpireDateRange" parameterType="cmap">
		/* groupware.vacation.updateVacationExpireDateRangeF */
		UPDATE covi_smart4j.vm_vacationplan
		SET
		<if test='createMethod != null and createMethod !=""'>
			<if test='createMethod == "F"'>
				UseStartDate = CONCAT(YEAR,'0101')
				,UseEndDate = CONCAT(YEAR,'1231')
			</if>
			<if test='createMethod == "J"'>
				UseStartDate = CONCAT(YEAR,DATE_FORMAT(STR_TO_DATE(REPLACE((select EnterDate from covi_smart4j.sys_object_user where UserCode=UR_Code), '-', ''), '%Y%m%d'),'%m%d'))
				,UseEndDate = DATE_FORMAT(DATE_ADD(DATE_ADD(STR_TO_DATE(CONCAT(YEAR,DATE_FORMAT(STR_TO_DATE(REPLACE((select EnterDate from covi_smart4j.sys_object_user where UserCode=UR_Code), '-', ''), '%Y%m%d'),'%m%d')), '%Y%m%d'), INTERVAL 1 YEAR),INTERVAL -1 DAY), '%Y%m%d')
			</if>
		</if>
		WHERE VacKind = 'PUBLIC'
		AND UR_Code in (
			SELECT A.UserCode
			FROM covi_smart4j.sys_object_user A
			LEFT JOIN (SELECT UserCode, CompanyName, CompanyCode, DeptCode, MultiDeptName
			FROM covi_smart4j.sys_object_user_basegroup
			WHERE JobType = 'Origin'
			) B ON A.UserCode = B.UserCode
			WHERE A.IsUse = 'Y'
			AND A.IsDisplay = 'Y'
			AND A.IsHR = 'Y'
			AND B.CompanyCode = #{CompanyCode}
			AND (EnterDate is not null and EnterDate != '')
			AND (RetireDate IS NULL OR RetireDate='')
		)
	</update>

	<!-- 월차 자동증가 전, 연차 생성안된 사용자 연차 생성 입사일기준 -->
	<insert id="insertNewAnnualVacationV2" parameterType="cmap">
		/* groupware.vacation.insertNewAnnualVacationV2 */
		INSERT INTO covi_smart4j.vm_vacationplan (UR_Code, DeptCode, DeptName, YEAR, VacDay, VacKind, UseStartDate, UseEndDate, RegistDate)
		SELECT U.UserCode, U.DeptCode, U.DeptName,U.YEAR, U.VacDay, U.VacKind, U.UseStartDate, U.UseEndDate, now()
		FROM (
			SELECT a.UserCode, b.DeptCode, b.MultiDeptName AS DeptName, TARGETYEAR AS YEAR, 0 AS VacDay, 'PUBLIC' AS VacKind
			, CONCAT(TARGETYEAR,DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'),'%m%d')) AS UseStartDate
			, DATE_FORMAT(DATE_ADD(DATE_ADD(STR_TO_DATE(CONCAT(TARGETYEAR,DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'),'%m%d')),'%Y%m%d'),INTERVAL 1 YEAR),INTERVAL -1 DAY),'%Y%m%d') AS UseEndDate

			FROM (select UserCode, IsUse, IsHR, IsDisplay, EnterDate
				  , CASE WHEN STR_TO_DATE(CONCAT(YEAR(NOW()),DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'),'%m%d')),'%Y%m%d') <![CDATA[<=]]> NOW(3) THEN
						YEAR(NOW())
					ELSE YEAR(DATE_ADD(NOW(), INTERVAL -1 YEAR )) END AS TARGETYEAR
				from covi_smart4j.sys_object_user
				where IsUse = 'Y'
				and IsHR = 'Y'
				and IsDisplay = 'Y'
				and EnterDate IS NOT NULL
				and EnterDate != ''
			) a
			INNER JOIN covi_smart4j.sys_object_user_basegroup b
				ON a.usercode = b.usercode AND b.JobType = 'Origin' and b.CompanyCode = #{domainCode}
		) U
		LEFT JOIN covi_smart4j.vm_vacationplan V
		ON U.UserCode = V.UR_Code
			AND V.VacKind = 'PUBLIC'
			AND V.YEAR = U.YEAR
		where V.VacDay is null
	</insert>

	<select id="selectAutoIncreaseMonthlyVacationV2" parameterType="cmap" resultType="cmap">
		/* groupware.vacation.selectAutoIncreaseMonthlyVacationV2 */
	<![CDATA[
	SELECT U.UserCode, U.DeptCode, U.DeptName,U.YEAR, (IFNULL(V.VacDay,0.0)+1) as VacDay, U.VacKind, U.UseStartDate, U.UseEndDate, CONCAT('[스케줄러] ', NOW(), ' 월차1개 추가') as VmComment
	FROM (
         SELECT a.UserCode, b.DeptCode, b.DeptName, TARGETYEAR AS YEAR, 0 AS VacDay, 'PUBLIC' AS VacKind
              , CONCAT(TARGETYEAR,DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'),'%m%d')) AS UseStartDate
              , DATE_FORMAT(DATE_ADD(DATE_ADD(STR_TO_DATE(CONCAT(TARGETYEAR,DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'),'%m%d')),'%Y%m%d'),INTERVAL 1 YEAR),INTERVAL -1 DAY),'%Y%m%d') AS UseEndDate

         FROM (select UserCode, IsUse, IsHR, IsDisplay, EnterDate
                    , CASE WHEN STR_TO_DATE(CONCAT(YEAR(NOW()),DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'),'%m%d')),'%Y%m%d') <= NOW(3) THEN
                               YEAR(NOW())
                           ELSE
                               YEAR(DATE_ADD(NOW(), INTERVAL -1 YEAR )) END AS TARGETYEAR
               from covi_smart4j.sys_object_user
               where IsUse = 'Y'
                 and EnterDate IS NOT NULL
                 and EnterDate != ''
                 AND STR_TO_DATE(REPLACE(EnterDate, '-', ''), '%Y%m%d') > DATE_SUB(NOW(), INTERVAL 1 YEAR)
                 AND TIMESTAMPDIFF(MONTH, DATE_FORMAT(EnterDate, '%Y-%m-01'), DATE_FORMAT(NOW(), '%Y-%m-01')) > 0 #다음달부터 연차 생성
                 AND (DAY(EnterDate) = DAY(NOW()) # 입사일과 오늘의 일(Day)이 동일하거나
               # 오늘이 이번 달의 마지막날인데 입사일이 이번 달의 마지막일 보다 클 때
                   OR (date_format(NOW(), '%Y-%m-%d') = LAST_DAY(NOW())
                       AND DAY(EnterDate) > DAY(LAST_DAY(NOW())))
                   )
              ) a
                  INNER JOIN covi_smart4j.sys_object_user_basegroup b
                             ON a.usercode = b.usercode AND b.JobType = 'Origin' and b.CompanyCode = #{domainCode}
     ) U
         LEFT JOIN covi_smart4j.vm_vacationplan V
                   ON U.UserCode = V.UR_Code
                       AND V.VacKind = 'PUBLIC'
                       AND V.UseStartDate >= U.UseStartDate
                       AND V.UseEndDate <= U.UseEndDate
	]]>
	</select>

	<update id="updateAutoIncreaseMonthlyVacationV2" parameterType="cmap">
		/* groupware.vacation.updateAutoIncreaseMonthlyVacationV2 */
	<![CDATA[
		UPDATE covi_smart4j.vm_vacationplan
		SET VacDay = #{vacDay}
		, LongVacDay = #{vacDay}-LastVacDay
		WHERE UR_Code = #{urCode}
		AND  VacKind = #{vacKind}
		AND  UseStartDate = #{useStartDate}
		AND  UseEndDate = #{useEndDate}
	]]>
	</update>

	<select id="selectAutoCreateAnnualVacationV2" parameterType="cmap" resultType="cmap">
		/* groupware.vacation.selectAutoCreateAnnualVacationV2 */
		<![CDATA[
  		SELECT
			YEAR, UR_Code
			 , 'PUBLIC' AS VacKind
			 , UseStartDate, UseEndDate, DeptCode, DeptName
			 , CASE WHEN LongVacDay > #{MaxCnt} THEN
				  #{MaxCnt}
			    ELSE
				   LongVacDay
				END AS LongVacDay
			 , fn_GetLastVacDay(UR_Code, YEAR(NOW()), #{domainCode}) AS LastVacDay
			 , 0 AS RewardVacDay
			 , 'system' AS RegisterCode
		FROM (
				 SELECT YEAR(NOW()) AS YEAR,
						A.usercode  AS UR_Code,
						DATE_FORMAT(NOW(), '%Y%m%d')                                                      AS UseStartDate,
						DATE_FORMAT(date_sub(date_add(NOW(), INTERVAL 1 YEAR), INTERVAL 1 DAY), '%Y%m%d') AS UseEndDate,
						B.DeptCode AS DeptCode,
						B.MultiDeptName                                                                   AS DeptName,
						a.EnterDate,
						(#{InitCnt} + FLOOR(((YEAR(NOW()) - YEAR(enterdate) - 1) / #{IncTerm}))) * #{IncCnt}   AS LongVacDay
				 FROM covi_smart4j.sys_object_user A
						  LEFT JOIN (SELECT UserCode, CompanyName, CompanyCode, DeptCode, MultiDeptName
									 FROM covi_smart4j.sys_object_user_basegroup
									 WHERE JobType = 'Origin'
				 ) B ON A.UserCode = B.UserCode
				 WHERE A.IsUse = 'Y'
				   AND A.IsDisplay = 'Y'
				   AND A.IsHR = 'Y'
				   AND B.CompanyCode = #{domainCode}
				   AND EnterDate IS NOT NULL
				   AND LENGTH(REPLACE(EnterDate,'-','')) = 8
				   AND (RetireDate IS NULL OR TRIM(RetireDate) = '')
				   AND MONTH(STR_TO_DATE(REPLACE(EnterDate, '-', ''), '%Y%m%d')) = MONTH(NOW())
				   AND (DAY(STR_TO_DATE(REPLACE(EnterDate, '-', ''), '%Y%m%d')) = DAY(NOW())
					 OR (date_format(NOW(), '%Y-%m-%d') = LAST_DAY(NOW())
						 AND DAY(EnterDate) > DAY(LAST_DAY(NOW())))
					 )
			 ) TBL
		]]>
	</select>

	<update id="insertAutoCreateAnnualVacationV2" parameterType="cmap">
		/* groupware.vacation.insertAutoCreateAnnualVacationV2 */
		<![CDATA[
	     UPDATE  vm_vacationplan
	      SET    LongVacDay = #{longVacDay},
	      		 LastVacDay = #{lastVacDay},
	      		 VacDay = #{longVacDay}+#{lastVacDay},
	      		 UseStartDate = #{useStartDate},
	      		 UseEndDate = #{useEndDate},
		     	 VmComment = #{comment}
	     WHERE  UR_Code = #{urCode}
		  AND   YEAR = #{year}
		  AND   VacKind = 'PUBLIC' 
		]]>
	</update>

	<select id="selectVacationPromotionTargetList" parameterType="cmap" resultType="cmap">
		/* groupware.vacation.selectVacationPromotionTargetList */
		<![CDATA[
		SELECT UserCode, MailAddress
        , DisplayName
        , EnterDate
        , ReqType
        , RetireDate
        , CreateMethod
        , IsOneYear
        , VacDate
        , OneDate
        , TwoDate
        , LessVacDate
        , LessOneDate9
        , LessTwoDate9
        , LessOneDate2
        , LessTwoDate2
        , useYn100
        , useYn101
        , useYn102
        , useYn090
        , useYn091
        , useYn092
        , useYn021
        , useYn022
        , SortKey
        , JobPositionSortKey
	FROM (
         SELECT UserCode
              , MailAddress
              , DisplayName
              , EnterDate
              , CASE
                    WHEN IsOneYear = 0 AND DATE_FORMAT(LessVacDate, '%Y-%m-%d') = DATE_FORMAT(NOW(), '%Y-%m-%d') AND
                         useYn090 = 'Y' THEN
                        '090'
                    WHEN IsOneYear = 0 AND DATE_FORMAT(LessOneDate9, '%Y-%m-%d') = DATE_FORMAT(NOW(), '%Y-%m-%d') AND
                         useYn091 = 'Y' THEN
                        '091'
                    WHEN IsOneYear = 0 AND DATE_FORMAT(LessTwoDate9, '%Y-%m-%d') = DATE_FORMAT(NOW(), '%Y-%m-%d') AND
                         useYn092 = 'Y' THEN
                        '092'
                    WHEN IsOneYear = 0 AND DATE_FORMAT(LessOneDate2, '%Y-%m-%d') = DATE_FORMAT(NOW(), '%Y-%m-%d') AND
                         useYn021 = 'Y' THEN
                        '021'
                    WHEN IsOneYear = 0 AND DATE_FORMAT(LessTwoDate2, '%Y-%m-%d') = DATE_FORMAT(NOW(), '%Y-%m-%d') AND
                         useYn022 = 'Y' THEN
                        '022'
                    WHEN IsOneYear = 1 AND DATE_FORMAT(VacDate, '%Y-%m-%d') = DATE_FORMAT(NOW(), '%Y-%m-%d') AND
                         useYn100 = 'Y' THEN
                        '100'
                    WHEN IsOneYear = 1 AND DATE_FORMAT(OneDate, '%Y-%m-%d') = DATE_FORMAT(NOW(), '%Y-%m-%d') AND
                         useYn101 = 'Y' THEN
                        '101'
                    WHEN IsOneYear = 1 AND DATE_FORMAT(TwoDate, '%Y-%m-%d') = DATE_FORMAT(NOW(), '%Y-%m-%d') AND
                         useYn102 = 'Y' THEN
                        '102'
             END AS ReqType
              , RetireDate
              , CreateMethod
              , IsOneYear
              , VacDate
              , OneDate
              , TwoDate
              , LessVacDate
              , LessOneDate9
              , LessTwoDate9
              , LessOneDate2
              , LessTwoDate2
              , useYn100
              , useYn101
              , useYn102
              , useYn090
              , useYn091
              , useYn092
              , useYn021
              , useYn022
              , SortKey
              , JobPositionSortKey
         FROM (
			  SELECT A.UserCode
				   , A.MailAddress
				   , Fn_BaseGetDictionary_S('', A.MultiDisplayName) AS DisplayName
				   , A.EnterDate
				   , A.RetireDate
				   , A.SortKey
				   , B.DeptCode
				   , B.JobPositionSortKey
				   , B.JobTitleCode
				   , B.CompanyCode
				   , V.CreateMethod
				   , V.useYn100
				   , V.useYn101
				   , V.useYn102
				   , V.useYn090
				   , V.useYn091
				   , V.useYn092
				   , V.useYn021
				   , V.useYn022
				   , IsOneYear
					,(CASE WHEN IsOneYear = 0 THEN
					 			fn_attend_getPromotionDateRage('F','Code1'
								 ,DATE_ADD(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						WHEN V.CreateMethod = 'J' THEN
								 fn_attend_getPromotionDateRage('F','Code1'
								 ,DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'),'%m%d')),'%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						 WHEN V.CreateMethod = 'F' THEN
								 fn_attend_getPromotionDateRage('F','Code1'
								 ,DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),'0101'),'%Y%m%d'), INTERVAL 12 MONTH)
								  ,#{domainCode})
						  END) AS VacDate
					  ,(
						CASE WHEN IsOneYear = 0 THEN
					 			fn_attend_getPromotionDateRage('F','Code2'
								 ,DATE_ADD(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						WHEN V.CreateMethod = 'J' THEN
							 fn_attend_getPromotionDateRage('F','Code2'
							 ,DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'),'%m%d')),'%Y%m%d'), INTERVAL 12 MONTH)
							 ,#{domainCode})
						 WHEN V.CreateMethod = 'F' THEN
							 fn_attend_getPromotionDateRage('F','Code2'
							 ,DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),'0101'),'%Y%m%d'), INTERVAL 12 MONTH)
							 ,#{domainCode})
						 END
					 ) AS OneDate
					  ,(
					 	CASE WHEN IsOneYear = 0 THEN
					 			fn_attend_getPromotionDateRage('F','Code3'
								 ,DATE_ADD(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						WHEN V.CreateMethod = 'J' THEN
							 fn_attend_getPromotionDateRage('F','Code3'
								 ,DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'),'%m%d')),'%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						 WHEN V.CreateMethod = 'F' THEN
							 fn_attend_getPromotionDateRage('F','Code3'
								 ,DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),'0101'),'%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						 END
					 ) AS TwoDate
					 ,(
						CASE WHEN IsOneYear = 0 THEN
					 			fn_attend_getPromotionDateRage('F','Code4'
								 ,DATE_ADD(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						WHEN V.CreateMethod = 'J' THEN
							 fn_attend_getPromotionDateRage('F','Code4'
								 ,DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'),'%m%d')),'%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						 WHEN V.CreateMethod = 'F' THEN
							 fn_attend_getPromotionDateRage('F','Code4'
								 ,DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),'0101'),'%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						 END
					 ) AS LessVacDate
					  ,(
						CASE WHEN IsOneYear = 0 THEN
					 			fn_attend_getPromotionDateRage('F','Code5'
								 ,DATE_ADD(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						 WHEN V.CreateMethod = 'J' THEN
							 fn_attend_getPromotionDateRage('F','Code5'
								 ,DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'),'%m%d')),'%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						 WHEN V.CreateMethod = 'F' THEN
							 fn_attend_getPromotionDateRage('F','Code5'
								 ,DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),'0101'),'%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						 END
					 ) AS LessOneDate9
					  ,(
						 CASE WHEN IsOneYear = 0 THEN
					 			fn_attend_getPromotionDateRage('F','Code6'
								 ,DATE_ADD(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						 WHEN V.CreateMethod = 'J' THEN
							 fn_attend_getPromotionDateRage('F','Code6'
								 ,DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'),'%m%d')),'%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						 WHEN V.CreateMethod = 'F' THEN
							 fn_attend_getPromotionDateRage('F','Code6'
								 ,DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),'0101'),'%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						 END
					 ) AS LessTwoDate9
					  ,(
						 CASE WHEN IsOneYear = 0 THEN
					 			fn_attend_getPromotionDateRage('F','Code7'
								 ,DATE_ADD(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						 WHEN V.CreateMethod = 'J' THEN
							 fn_attend_getPromotionDateRage('F','Code7'
								 ,DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'),'%m%d')),'%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						 WHEN V.CreateMethod = 'F' THEN
							 fn_attend_getPromotionDateRage('F','Code7'
								 ,DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),'0101'),'%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						 END
					 ) AS LessOneDate2
					  ,(
						CASE WHEN IsOneYear = 0 THEN
					 			fn_attend_getPromotionDateRage('F','Code8'
								 ,DATE_ADD(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						 WHEN V.CreateMethod = 'J' THEN
							 fn_attend_getPromotionDateRage('F','Code8'
								 ,DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'),'%m%d')),'%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						 WHEN V.CreateMethod = 'F' THEN
							 fn_attend_getPromotionDateRage('F','Code8'
								 ,DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),'0101'),'%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						 END
					 ) AS LessTwoDate2
					FROM (select UserCode,
							  MultiDisplayName,
							  MailAddress,
							  STR_TO_DATE(CONCAT(YEAR(NOW()), '0101'), '%Y%m%d') AS Tyear,
							  STR_TO_DATE(REPLACE(EnterDate, '-', ''), '%Y%m%d') AS EnterDate,
							  RetireDate,
							  SortKey,
							  (
								  CASE
									  WHEN DATE(DATE_ADD(EnterDate, INTERVAL 12 MONTH)) < DATE(NOW())	-- 입사 1년 이상
										  THEN 1
									  ELSE 0
									  END
							  ) as IsOneYear
					  from (select *
						  from covi_smart4j.sys_object_user
						  where RetireDate = ''
							AND EnterDate <> '') U
				    ) A
				    LEFT JOIN covi_smart4j.sys_object_user_basegroup B
								 ON A.UserCode = B.UserCode AND B.JobType = 'Origin' AND
									B.DeptCode NOT LIKE '%RetireDept'
					LEFT JOIN covi_smart4j.vm_config V ON V.CompanyCode = B.CompanyCode
					WHERE B.CompanyCode = #{domainCode}
			  ) T
              ,(select SettingValue
                from covi_smart4j.sys_base_config SBC
                WHERE  SBC.DomainID = (select DomainID from covi_smart4j.sys_object_domain SOD where SOD.DomainCode = #{domainCode})
                AND SettingKey = 'FacilitatingTarget'
              ) SBC
              WHERE ((LENGTH(SBC.SettingValue) > 0 AND INSTR(CONCAT('_',SBC.SettingValue), T.JobTitleCode) > 0 AND LENGTH(T.JobTitleCode) > 0)
				OR (LENGTH(SBC.SettingValue) = 0 ))
	 ) TBL
	WHERE TBL.ReqType <> ''
	]]>
	</select>

	<select id="selectVacationPromotionTargetUserInfo" parameterType="cmap" resultType="cmap">
		/* groupware.vacation.selectVacationPromotionTargetUserInfo */
		<![CDATA[
		SELECT UserCode
			 , DisplayName AS UR_Name
			 , JobPositionName
			 , EnterDate
			 , RetireDate
			 , CreateMethod
			 , JobPositionSortKey
			 , Tyear AS TYEAR
			 , YEAR(NOW()) AS YYYY
			 , IsOneYear
			 , VacDate AS VacDateFrom
			 , fn_attend_getPromotionDateRage('T','Code1',VacDate, #{domainCode}) AS VacDateTo
			 , CONCAT(VacDate,' ~ ',fn_attend_getPromotionDateRage('T','Code1',VacDate, #{domainCode})) AS VacDateRange
			 , OneDate AS OneDateFrom
			 , fn_attend_getPromotionDateRage('T','Code2',OneDate, #{domainCode}) AS OneDateTo
			 , CONCAT(OneDate,' ~ ',fn_attend_getPromotionDateRage('T','Code2',OneDate, #{domainCode})) AS OneDateRange
			 , TwoDate AS TwoDateFrom
			 , fn_attend_getPromotionDateRage('T','Code3',TwoDate, #{domainCode}) AS TwoDateTo
			 , CONCAT(TwoDate,' ~ ',fn_attend_getPromotionDateRage('T','Code3',OneDate, #{domainCode})) AS TwoDateRange
			 , LessVacDate AS LessVacDateFrom
			 , fn_attend_getPromotionDateRage('T','Code4',LessVacDate, #{domainCode}) AS LessVacDateTo
			 , LessOneDate9 AS LessOneDate9From
			 , fn_attend_getPromotionDateRage('T','Code5',LessOneDate9, #{domainCode}) AS LessOneDate9To
			 , CONCAT(LessOneDate9,' ~ ',fn_attend_getPromotionDateRage('T','Code5',LessOneDate9, #{domainCode})) AS LessOneDate9Range
			 , LessTwoDate9 AS LessTwoDate9From
			 , fn_attend_getPromotionDateRage('T','Code6',LessTwoDate9, #{domainCode}) AS LessTwoDate9To
			 , CONCAT(LessTwoDate9,' ~ ',fn_attend_getPromotionDateRage('T','Code6',LessTwoDate9, #{domainCode})) AS LessTwoDate9Range
			 , LessOneDate2 AS LessOneDate2From
			 , fn_attend_getPromotionDateRage('T','Code7',LessOneDate2, #{domainCode}) AS LessOneDate2To
			 , CONCAT(LessOneDate2,' ~ ',fn_attend_getPromotionDateRage('T','Code7',LessOneDate2, #{domainCode})) AS LessOneDate2Range
			 , LessTwoDate2 AS LessTwoDate2From
			 , fn_attend_getPromotionDateRage('T','Code8',LessTwoDate2, #{domainCode}) AS LessTwoDate2To
			 , CONCAT(LessTwoDate2,' ~ ',fn_attend_getPromotionDateRage('T','Code8',LessTwoDate2, #{domainCode})) AS LessTwoDate2Range
		FROM (
				 SELECT A.UserCode, A.MailAddress
					  , Fn_BaseGetDictionary_S(#{lang}, A.MultiDisplayName) AS DisplayName
				      , Fn_BaseGetDictionary_S(#{lang}, B.MultiJobPositionName) AS JobPositionName
					  , A.EnterDate
					  , A.RetireDate
					  , A.SortKey
					  , B.DeptCode
					  , B.JobPositionSortKey
					  , V.CreateMethod
              		  , Tyear
              		  , IsOneYear
					  ,(
						CASE WHEN IsOneYear = 0 THEN
									fn_attend_getPromotionDateRage('F','Code1'
									 ,DATE_ADD(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'), INTERVAL 12 MONTH)
									 ,#{domainCode})
							 WHEN V.CreateMethod = 'J' THEN
								 fn_attend_getPromotionDateRage('F','Code1'
									 ,DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'),'%m%d')),'%Y%m%d'), INTERVAL 12 MONTH)
									 ,#{domainCode})
							 WHEN V.CreateMethod = 'F' THEN
								 fn_attend_getPromotionDateRage('F','Code1'
									 ,DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),'0101'),'%Y%m%d'), INTERVAL 12 MONTH)
									 ,#{domainCode})
							 END
						 ) AS VacDate
					  ,(
						 CASE WHEN IsOneYear = 0 THEN
									fn_attend_getPromotionDateRage('F','Code2'
									 ,DATE_ADD(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'), INTERVAL 12 MONTH)
									 ,#{domainCode})
							 WHEN V.CreateMethod = 'J' THEN
								 fn_attend_getPromotionDateRage('F','Code2'
									 ,DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'),'%m%d')),'%Y%m%d'), INTERVAL 12 MONTH)
									  ,#{domainCode})
							 WHEN V.CreateMethod = 'F' THEN
								 fn_attend_getPromotionDateRage('F','Code2'
									 ,DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),'0101'),'%Y%m%d'), INTERVAL 12 MONTH)
									  ,#{domainCode})
							 END
						 ) AS OneDate
					  ,(
						CASE WHEN IsOneYear = 0 THEN
									fn_attend_getPromotionDateRage('F','Code3'
									 ,DATE_ADD(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'), INTERVAL 12 MONTH)
									 ,#{domainCode})
							WHEN V.CreateMethod = 'J' THEN
								 fn_attend_getPromotionDateRage('F','Code3'
									 ,DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'),'%m%d')),'%Y%m%d'), INTERVAL 12 MONTH)
									  ,#{domainCode})
							 WHEN V.CreateMethod = 'F' THEN
								 fn_attend_getPromotionDateRage('F','Code3'
									 ,DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),'0101'),'%Y%m%d'), INTERVAL 12 MONTH)
									  ,#{domainCode})
							 END
						 ) AS TwoDate
					  ,(
						CASE WHEN IsOneYear = 0 THEN
									fn_attend_getPromotionDateRage('F','Code4'
									 ,DATE_ADD(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'), INTERVAL 12 MONTH)
									 ,#{domainCode})
							 WHEN V.CreateMethod = 'J' THEN
								 fn_attend_getPromotionDateRage('F','Code4'
									 ,DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'),'%m%d')),'%Y%m%d'), INTERVAL 12 MONTH)
									 ,#{domainCode})
							 WHEN V.CreateMethod = 'F' THEN
								 fn_attend_getPromotionDateRage('F','Code4'
									 ,DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),'0101'),'%Y%m%d'), INTERVAL 12 MONTH)
									 ,#{domainCode})
							 END
						 ) AS LessVacDate
					  ,(
					 	CASE WHEN IsOneYear = 0 THEN
					 			fn_attend_getPromotionDateRage('F','Code5'
								 ,DATE_ADD(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						 WHEN V.CreateMethod = 'J' THEN
							 fn_attend_getPromotionDateRage('F','Code5'
								 ,DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'),'%m%d')),'%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						 WHEN V.CreateMethod = 'F' THEN
							 fn_attend_getPromotionDateRage('F','Code5'
								 ,DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),'0101'),'%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						 END
					 ) AS LessOneDate9
					  ,(
					 	CASE WHEN IsOneYear = 0 THEN
					 			fn_attend_getPromotionDateRage('F','Code6'
								 ,DATE_ADD(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						 WHEN V.CreateMethod = 'J' THEN
							 fn_attend_getPromotionDateRage('F','Code6'
								 ,DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'),'%m%d')),'%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						 WHEN V.CreateMethod = 'F' THEN
							 fn_attend_getPromotionDateRage('F','Code6'
								 ,DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),'0101'),'%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						 END
					 ) AS LessTwoDate9
					  ,(
					 	CASE WHEN IsOneYear = 0 THEN
					 			fn_attend_getPromotionDateRage('F','Code7'
								 ,DATE_ADD(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						 WHEN V.CreateMethod = 'J' THEN
							 fn_attend_getPromotionDateRage('F','Code7'
								 ,DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'),'%m%d')),'%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						 WHEN V.CreateMethod = 'F' THEN
							 fn_attend_getPromotionDateRage('F','Code7'
								 ,DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),'0101'),'%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						 END
					 ) AS LessOneDate2
					  ,(
					 	CASE WHEN IsOneYear = 0 THEN
					 			fn_attend_getPromotionDateRage('F','Code8'
								 ,DATE_ADD(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						 WHEN V.CreateMethod = 'J' THEN
							 fn_attend_getPromotionDateRage('F','Code8'
								 ,DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'),'%m%d')),'%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						 WHEN V.CreateMethod = 'F' THEN
							 fn_attend_getPromotionDateRage('F','Code8'
								 ,DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),'0101'),'%Y%m%d'), INTERVAL 12 MONTH)
								 ,#{domainCode})
						 END
					 ) AS LessTwoDate2
				  FROM (select UserCode,
							  MultiDisplayName,
							  MailAddress
							   , CASE WHEN STR_TO_DATE(CONCAT(YEAR(NOW()),DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'),'%m%d')),'%Y%m%d') <= STR_TO_DATE(CONCAT(YEAR(NOW()),DATE_FORMAT(NOW(3),'%m%d')),'%Y%m%d') THEN
							 YEAR(STR_TO_DATE(CONCAT(YEAR(NOW()),'0101'),'%Y%m%d'))
									 ELSE
									 YEAR(DATE_ADD(STR_TO_DATE(CONCAT(YEAR(NOW()),'0101'),'%Y%m%d'), INTERVAL -1 YEAR )) END AS   Tyear,
							  STR_TO_DATE(REPLACE(EnterDate, '-', ''), '%Y%m%d') AS EnterDate,
							  RetireDate,
							  SortKey
							  ,CASE
								 WHEN DATE(DATE_ADD(EnterDate, INTERVAL 12 MONTH)) < DATE(NOW())
									 THEN 1
								 ELSE 0
								 END
							   as IsOneYear
					   from covi_smart4j.sys_object_user) A
						  LEFT JOIN covi_smart4j.sys_object_user_basegroup B ON A.UserCode = B.UserCode AND B.JobType = 'Origin'
						  LEFT JOIN covi_smart4j.vm_config V ON V.CompanyCode = B.CompanyCode
				 WHERE B.CompanyCode = #{domainCode}
			 ) A
		WHERE  A.RetireDate = ''
			AND A.DeptCode NOT LIKE	'%RetireDept'
			AND A.EnterDate <> ''
			AND A.UserCode = #{urCode}
		]]>
	</select>

	<select id="selectVacationFacilitatingDateCnt" resultType="java.lang.Long">
	/* groupware.vacation.selectVacationFacilitatingDateCnt */
		SELECT COUNT(UserCode) FROM (
			SELECT UserCode, RetireDate, DisplayName, DeptName, DeptCode, EnterDate, CreateMethod, IsOneYear
				, VacDate
				, fn_attend_getPromotionDateRage('T','Code1',VacDate, #{domainCode}) AS VacDateUntil
				, OneDate
				, fn_attend_getPromotionDateRage('T','Code2',OneDate, #{domainCode}) AS OneDateUntil
				, TwoDate
				, fn_attend_getPromotionDateRage('T','Code3',TwoDate, #{domainCode}) AS TwoDateUntil
				, LessVacDate
				, fn_attend_getPromotionDateRage('T','Code4',LessVacDate, #{domainCode}) AS LessVacDateUntil
				, LessOneDate9
				, fn_attend_getPromotionDateRage('T','Code5',LessOneDate9, #{domainCode}) AS LessOneDate9Until
				, LessTwoDate9
				, fn_attend_getPromotionDateRage('T','Code6',LessTwoDate9, #{domainCode}) AS LessTwoDate9Until
				, LessOneDate2
				, fn_attend_getPromotionDateRage('T','Code7',LessOneDate2, #{domainCode}) AS LessOneDate2Until
				, LessTwoDate2
				, fn_attend_getPromotionDateRage('T','Code8',LessTwoDate2, #{domainCode}) AS LessTwoDate2Until
			FROM (
				SELECT A.UserCode
					, Fn_BaseGetDictionary_S(#{lang}, A.MultiDisplayName) AS DisplayName
					, Fn_BaseGetDictionary_S(#{lang},IFNULL(B.DeptName, B.MultiDeptName)) AS DeptName
					, A.EnterDate
					, A.RetireDate
					, B.DeptCode
					, B.JobTitleCode
					, V.CreateMethod
					, IsOneYear
					,(CASE WHEN IsOneYear = 0 THEN
						fn_attend_getPromotionDateRage('F','Code1'
						,DATE_ADD(STR_TO_DATE(EnterDate, '%Y%m%d'), INTERVAL 12 MONTH)
						,#{domainCode})
					WHEN V.CreateMethod = 'J' THEN
						fn_attend_getPromotionDateRage('F','Code1'
						,STR_TO_DATE(CONCAT(#{year}+1,DATE_FORMAT(STR_TO_DATE(EnterDate, '%Y%m%d'),'%m%d')),'%Y%m%d')
						,#{domainCode})
					WHEN V.CreateMethod = 'F' THEN
						fn_attend_getPromotionDateRage('F','Code1'
						,STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d')
						,#{domainCode})
					END) AS VacDate
					,(CASE WHEN IsOneYear = 0 THEN
						fn_attend_getPromotionDateRage('F','Code2'
						,DATE_ADD(STR_TO_DATE(EnterDate, '%Y%m%d'), INTERVAL 12 MONTH)
						,#{domainCode})
					WHEN V.CreateMethod = 'J' THEN
						fn_attend_getPromotionDateRage('F','Code2'
						,STR_TO_DATE(CONCAT(#{year}+1,DATE_FORMAT(STR_TO_DATE(EnterDate, '%Y%m%d'),'%m%d')),'%Y%m%d')
						,#{domainCode})
					WHEN V.CreateMethod = 'F' THEN
						fn_attend_getPromotionDateRage('F','Code2'
						,STR_TO_DATE(CONCAT(#{year}+1,'0101'),'%Y%m%d')
						,#{domainCode})
					END) AS OneDate
					,(CASE WHEN IsOneYear = 0 THEN
						fn_attend_getPromotionDateRage('F','Code3'
						,DATE_ADD(STR_TO_DATE(EnterDate, '%Y%m%d'), INTERVAL 12 MONTH)
						,#{domainCode})
					WHEN V.CreateMethod = 'J' THEN
						fn_attend_getPromotionDateRage('F','Code3'
						,STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(EnterDate, '%Y%m%d'),'%m%d')),'%Y%m%d')
						,#{domainCode})
					WHEN V.CreateMethod = 'F' THEN
					fn_attend_getPromotionDateRage('F','Code3'
					,STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d')
					,#{domainCode})
					END) AS TwoDate

					,(CASE WHEN IsOneYear = 0 OR (IsOneYear = 1 AND YEAR(DATE(DATE_ADD(EnterDate, INTERVAL 12 MONTH))) <![CDATA[<=]]> #{year}) THEN
						fn_attend_getPromotionDateRage('F','Code4'
						,DATE_ADD(STR_TO_DATE(EnterDate, '%Y%m%d'), INTERVAL 12 MONTH)
						,#{domainCode})
					WHEN V.CreateMethod = 'J' THEN
						fn_attend_getPromotionDateRage('F','Code4'
						,STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(EnterDate, '%Y%m%d'),'%m%d')),'%Y%m%d')
						,#{domainCode})
					WHEN V.CreateMethod = 'F' THEN
						fn_attend_getPromotionDateRage('F','Code4'
						,STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d')
						,#{domainCode})
					END) AS LessVacDate
					,(CASE WHEN IsOneYear = 0 OR (IsOneYear = 1 AND YEAR(DATE(DATE_ADD(EnterDate, INTERVAL 12 MONTH))) <![CDATA[<=]]> #{year}) THEN
						fn_attend_getPromotionDateRage('F','Code5'
						,DATE_ADD(STR_TO_DATE(EnterDate, '%Y%m%d'), INTERVAL 12 MONTH)
						,#{domainCode})
					WHEN V.CreateMethod = 'J' THEN
						fn_attend_getPromotionDateRage('F','Code5'
						,STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(EnterDate, '%Y%m%d'),'%m%d')),'%Y%m%d')
						,#{domainCode})
					WHEN V.CreateMethod = 'F' THEN
						fn_attend_getPromotionDateRage('F','Code5'
						,STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d')
						,#{domainCode})
					END) AS LessOneDate9
					,(CASE WHEN IsOneYear = 0 OR (IsOneYear = 1 AND YEAR(DATE(DATE_ADD(STR_TO_DATE(EnterDate, '%Y%m%d'), INTERVAL 12 MONTH))) <![CDATA[<=]]> #{year}) THEN
						fn_attend_getPromotionDateRage('F','Code6'
						,DATE_ADD(STR_TO_DATE(EnterDate, '%Y%m%d'), INTERVAL 12 MONTH)
						,#{domainCode})
					WHEN V.CreateMethod = 'J' THEN
						fn_attend_getPromotionDateRage('F','Code6'
						,STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(EnterDate, '%Y%m%d'),'%m%d')),'%Y%m%d')
						,#{domainCode})
					WHEN V.CreateMethod = 'F' THEN
						fn_attend_getPromotionDateRage('F','Code6'
						,STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d')
						,#{domainCode})
					END) AS LessTwoDate9
					,(CASE WHEN IsOneYear = 0 OR (IsOneYear = 1 AND YEAR(DATE(DATE_ADD(STR_TO_DATE(EnterDate, '%Y%m%d'), INTERVAL 12 MONTH))) <![CDATA[<=]]> #{year}) THEN
						fn_attend_getPromotionDateRage('F','Code7'
						,DATE_ADD(STR_TO_DATE(EnterDate, '%Y%m%d'), INTERVAL 12 MONTH)
						,#{domainCode})
					WHEN V.CreateMethod = 'J' THEN
						fn_attend_getPromotionDateRage('F','Code7'
						,STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(EnterDate, '%Y%m%d'),'%m%d')),'%Y%m%d')
						,#{domainCode})
					WHEN CreateMethod = 'F' THEN
						fn_attend_getPromotionDateRage('F','Code7'
						,STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d')
						,#{domainCode})
					END) AS LessOneDate2
					,(CASE WHEN IsOneYear = 0 OR (IsOneYear = 1 AND YEAR(DATE(DATE_ADD(STR_TO_DATE(EnterDate, '%Y%m%d'), INTERVAL 12 MONTH))) <![CDATA[<=]]> #{year}) THEN
						fn_attend_getPromotionDateRage('F','Code8'
						,DATE_ADD(STR_TO_DATE(EnterDate, '%Y%m%d'), INTERVAL 12 MONTH)
						,#{domainCode})
					WHEN V.CreateMethod = 'J' THEN
						fn_attend_getPromotionDateRage('F','Code8'
						,STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(EnterDate, '%Y%m%d'),'%m%d')),'%Y%m%d')
						,#{domainCode})
					WHEN V.CreateMethod = 'F' THEN
					fn_attend_getPromotionDateRage('F','Code8'
					,STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d')
					,#{domainCode})
					END) AS LessTwoDate2
				FROM (select UserCode, REPLACE(EnterDate,'-','') AS EnterDate, MultiDisplayName, RetireDate, SortKey
						, (CASE WHEN YEAR(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d')) = #{year}
							THEN 0
							WHEN DATE(DATE_ADD(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'), INTERVAL 12 MONTH))  <![CDATA[<]]> STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'),'%m%d')),'%Y%m%d')
							THEN 1
							WHEN DATE(DATE_ADD(EnterDate, INTERVAL 12 MONTH))  <![CDATA[<=]]>  DATE(NOW())
							THEN 1
							ELSE 0 END
						) as IsOneYear
						from covi_smart4j.sys_object_user
						where IsDisplay = 'Y'
						and IsHR = 'Y'
						and (RetireDate is null or RetireDate = '')
						and (EnterDate is not null and LENGTH(EnterDate) > 0)
					)  A
				LEFT JOIN covi_smart4j.sys_object_user_basegroup B ON A.UserCode = B.UserCode AND JobType = 'Origin' AND B.CompanyCode = #{domainCode}
				LEFT JOIN covi_smart4j.vm_config V ON V.CompanyCode = B.CompanyCode

			) A
			,(select SettingValue
				from covi_smart4j.sys_base_config SBC
				WHERE  SBC.DomainID = (select DomainID from covi_smart4j.sys_object_domain SOD where SOD.DomainCode = #{domainCode})
				AND SettingKey = 'FacilitatingTarget'
			) SBC
			WHERE ((LENGTH(SBC.SettingValue) > 0 AND INSTR(SBC.SettingValue, A.JobTitleCode) > 0 AND LENGTH(A.JobTitleCode) > 0)
				OR LENGTH(SBC.SettingValue) = 0)
		) TBL
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			AND RetireDate = ''
			AND DeptCode NOT LIKE	'%RetireDept'
			AND EnterDate <![CDATA[<>]]> ''
			AND SUBSTR(EnterDate,1,4) <![CDATA[<=]]> #{year}
			<if test='tabType != null and tabType !=""'>
				<choose>
					<when test='tabType.equalsIgnoreCase("1") or tabType.equalsIgnoreCase("4")'>
						AND IsOneYear = 1
					</when>
					<!--<otherwise>
						AND YEAR(DATE_ADD(STR_TO_DATE(EnterDate,'%Y%m%d'), INTERVAL 12 MONTH) <![CDATA[>=]]> #{year}
					</otherwise>-->
				</choose>
			</if>
			
			<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
				<choose>
					<when test='schTypeSel == "deptName"'>
						AND DeptName LIKE CONCAT('%', #{schTxt}, '%')
					</when>
					<otherwise>
						AND DisplayName LIKE CONCAT('%', #{schTxt}, '%')
					</otherwise>
				</choose>
			</if>

			<if test='startDate != null and startDate != "" and endDate != null and endDate != "" '>
				<choose>
					<when test='tabType.equalsIgnoreCase("2")'>
						<if test='schDateType.equalsIgnoreCase("0")'>
							AND (
							LessOneDate9 BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
							OR LessOneDate9Until BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
							OR LessTwoDate9 BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
							OR LessTwoDate9Until BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
							OR STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') BETWEEN LessOneDate9 AND LessOneDate9Until
							OR STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d') BETWEEN LessOneDate9 AND LessOneDate9Until
							OR STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') BETWEEN LessTwoDate9 AND LessTwoDate9Until
							OR STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d') BETWEEN LessTwoDate9 AND LessTwoDate9Until
							)
						</if>
						<if test='schDateType.equalsIgnoreCase("1")'>
							AND (
							LessOneDate9 BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
							OR LessOneDate9Until BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
							OR STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') BETWEEN LessOneDate9 AND LessOneDate9Until
							OR STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d') BETWEEN LessOneDate9 AND LessOneDate9Until
							)
						</if>
						<if test='schDateType.equalsIgnoreCase("2")'>
							AND (
							LessTwoDate9 BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
							OR LessTwoDate9Until BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
							OR STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') BETWEEN LessTwoDate9 AND LessTwoDate9Until
							OR STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d') BETWEEN LessTwoDate9 AND LessTwoDate9Until
							)
						</if>
					</when>
					<when test='tabType.equalsIgnoreCase("3")'>
						<if test='schDateType.equalsIgnoreCase("0")'>
							AND (
							LessOneDate2 BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
							OR LessOneDate2Until BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
							OR LessTwoDate2 BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
							OR LessTwoDate2Until BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
							OR STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') BETWEEN LessOneDate2 AND LessOneDate2Until
							OR STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d') BETWEEN LessOneDate2 AND LessOneDate2Until
							OR STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') BETWEEN LessTwoDate2 AND LessTwoDate2Until
							OR STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d') BETWEEN LessTwoDate2 AND LessTwoDate2Until
							)
						</if>
						<if test='schDateType.equalsIgnoreCase("1")'>
							AND (
							LessOneDate2 BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
							OR LessOneDate2Until BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
							OR STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') BETWEEN LessOneDate2 AND LessOneDate2Until
							OR STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d') BETWEEN LessOneDate2 AND LessOneDate2Until
							)
						</if>
						<if test='schDateType.equalsIgnoreCase("2")'>
							AND (
							LessTwoDate2 BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
							OR LessTwoDate2Until BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
							OR STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') BETWEEN LessTwoDate2 AND LessTwoDate2Until
							OR STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d') BETWEEN LessTwoDate2 AND LessTwoDate2Until
							)
						</if>
					</when>
					<when test='tabType.equalsIgnoreCase("4")'>
						<if test='schDateType.equalsIgnoreCase("1")'>
							AND (
							VacDate BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
							OR VacDateUntil BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
							OR STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') BETWEEN VacDate AND VacDateUntil
							OR STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d') BETWEEN VacDate AND VacDateUntil
							)
						</if>
					</when>
					<when test='tabType.equalsIgnoreCase("5")'>
						<if test='schDateType.equalsIgnoreCase("1")'>
							AND (
							LessVacDate BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
							OR LessVacDateUntil BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
							OR STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') BETWEEN LessVacDate AND LessVacDateUntil
							OR STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d') BETWEEN LessVacDate AND LessVacDateUntil
							)
						</if>
					</when>
					<otherwise>
						<if test='schDateType.equalsIgnoreCase("0")'>
							AND (
							OneDate BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
							OR OneDateUntil BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
							OR TwoDate BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
							OR TwoDateUntil BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
							OR STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') BETWEEN OneDate AND OneDateUntil
							OR STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d') BETWEEN OneDate AND OneDateUntil
							OR STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') BETWEEN TwoDate AND TwoDateUntil
							OR STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d') BETWEEN TwoDate AND TwoDateUntil
							)
						</if>
						<if test='schDateType.equalsIgnoreCase("1")'>
							AND (
							OneDate BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
							OR OneDateUntil BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
							OR STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') BETWEEN OneDate AND OneDateUntil
							OR STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d') BETWEEN OneDate AND OneDateUntil
							)
						</if>
						<if test='schDateType.equalsIgnoreCase("2")'>
							AND (
							TwoDate BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
							OR TwoDateUntil BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
							OR STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') BETWEEN TwoDate AND TwoDateUntil
							OR STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d') BETWEEN TwoDate AND TwoDateUntil
							)
						</if>
					</otherwise>
				</choose>
			</if>

			<if test='dayType != null and dayType != "" and daysValue != null and daysValue != "" '>
				<choose>
					<when test='tabType.equalsIgnoreCase("1")'>
						<if test='dayType.equalsIgnoreCase("D")'>
							AND (TwoDate BETWEEN DATE_ADD(NOW(3), INTERVAL -1 DAY ) AND DATE_ADD(NOW(3), INTERVAL #{daysValue} DAY )
							or OneDate BETWEEN DATE_ADD(NOW(3), INTERVAL -1 DAY ) AND DATE_ADD(NOW(3), INTERVAL #{daysValue} DAY ))
						</if>
						<if test='dayType.equalsIgnoreCase("M")'>
							AND (TwoDate BETWEEN DATE_ADD(NOW(3), INTERVAL -1 DAY ) AND DATE_ADD(NOW(3), INTERVAL #{daysValue} MONTH )
							or OneDate BETWEEN DATE_ADD(NOW(3), INTERVAL -1 DAY ) AND DATE_ADD(NOW(3), INTERVAL #{daysValue} MONTH ))
						</if>
					</when>
					<when test='tabType.equalsIgnoreCase("2")'>
						<if test='dayType.equalsIgnoreCase("D")'>
							AND (LessTwoDate9 BETWEEN DATE_ADD(NOW(3), INTERVAL -1 DAY ) AND DATE_ADD(NOW(3), INTERVAL #{daysValue} DAY )
							or LessOneDate9 BETWEEN DATE_ADD(NOW(3), INTERVAL -1 DAY ) AND DATE_ADD(NOW(3), INTERVAL #{daysValue} DAY ))
						</if>
						<if test='dayType.equalsIgnoreCase("M")'>
							AND (LessTwoDate9 BETWEEN DATE_ADD(NOW(3), INTERVAL -1 DAY ) AND DATE_ADD(NOW(3), INTERVAL #{daysValue} MONTH )
							or LessOneDate9 BETWEEN DATE_ADD(NOW(3), INTERVAL -1 DAY ) AND DATE_ADD(NOW(3), INTERVAL #{daysValue} MONTH ))
						</if>
					</when>
					<when test='tabType.equalsIgnoreCase("3")'>
						<if test='dayType.equalsIgnoreCase("D")'>
							AND (LessTwoDate2 BETWEEN DATE_ADD(NOW(3), INTERVAL -1 DAY ) AND DATE_ADD(NOW(), INTERVAL #{daysValue} DAY )
							or LessOneDate2 BETWEEN DATE_ADD(NOW(3), INTERVAL -1 DAY ) AND DATE_ADD(NOW(3), INTERVAL #{daysValue} DAY ))
						</if>
						<if test='dayType.equalsIgnoreCase("M")'>
							AND (LessTwoDate2 BETWEEN DATE_ADD(NOW(3), INTERVAL -1 DAY ) AND DATE_ADD(NOW(), INTERVAL #{daysValue} MONTH )
							or LessOneDate2 BETWEEN DATE_ADD(NOW(3), INTERVAL -1 DAY ) AND DATE_ADD(NOW(3), INTERVAL #{daysValue} DAY ))
						</if>
					</when>
					<when test='tabType.equalsIgnoreCase("4")'>
						<if test='dayType.equalsIgnoreCase("D")'>
							AND VacDate BETWEEN DATE_ADD(NOW(3), INTERVAL -1 DAY ) AND DATE_ADD(NOW(), INTERVAL #{daysValue} DAY )
						</if>
						<if test='dayType.equalsIgnoreCase("M")'>
							AND VacDate BETWEEN DATE_ADD(NOW(3), INTERVAL -1 DAY ) AND DATE_ADD(NOW(), INTERVAL #{daysValue} MONTH )
						</if>
					</when>
					<when test='tabType.equalsIgnoreCase("5")'>
						<if test='dayType.equalsIgnoreCase("D")'>
							AND LessVacDate BETWEEN DATE_ADD(NOW(3), INTERVAL -1 DAY ) AND DATE_ADD(NOW(), INTERVAL #{daysValue} DAY )
						</if>
						<if test='dayType.equalsIgnoreCase("M")'>
							AND LessVacDate BETWEEN DATE_ADD(NOW(3), INTERVAL -1 DAY ) AND DATE_ADD(NOW(), INTERVAL #{daysValue} MONTH )
						</if>
					</when>
				</choose>
			</if>

			<choose>
				<when test='tabType.equalsIgnoreCase("1")'>
					AND OneDate <![CDATA[>]]> STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d')
				</when>
				<when test='tabType.equalsIgnoreCase("2")'>
					AND YEAR(LessOneDate9) = #{year}
					AND
					(
					(LessOneDate9 <![CDATA[>=]]> STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d')
					AND LessOneDate9 <![CDATA[<=]]> DATE_ADD(DATE_ADD(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'), INTERVAL 12 MONTH), INTERVAL -1 DAY )
					)
					OR
					(LessTwoDate9 <![CDATA[>=]]> STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d')
					AND LessTwoDate9 <![CDATA[<=]]> DATE_ADD(DATE_ADD(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'), INTERVAL 12 MONTH), INTERVAL -1 DAY )
					)
					)
				</when>
				<when test='tabType.equalsIgnoreCase("3")'>
					AND YEAR(LessOneDate2) = #{year}
					AND
					(
					(LessOneDate2 <![CDATA[>=]]> STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d')
					AND LessOneDate2 <![CDATA[<=]]> DATE_ADD(DATE_ADD(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'), INTERVAL 12 MONTH), INTERVAL -1 DAY )
					)
					OR
					(LessTwoDate2 <![CDATA[>=]]> STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d')
					AND LessTwoDate2 <![CDATA[<=]]> DATE_ADD(DATE_ADD(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'), INTERVAL 12 MONTH), INTERVAL -1 DAY )
					)
					)
				</when>
				<when test='tabType.equalsIgnoreCase("4")'>
					AND VacDate <![CDATA[>]]> STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d')
				</when>
				<when test='tabType.equalsIgnoreCase("5")'>
					AND YEAR(LessVacDate) = #{year}
					AND (LessVacDate <![CDATA[>=]]> STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d')
					AND LessVacDate <![CDATA[<=]]> DATE_ADD(DATE_ADD(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'), INTERVAL 12 MONTH), INTERVAL -1 DAY )
					)
				</when>
			</choose>
		</trim>
	</select>
	
	<select id="selectVacationFacilitatingDateList" parameterType="cmap" resultType="cmap">
	/* groupware.vacation.selectVacationFacilitatingDateList */
		SELECT * FROM
		(
			SELECT UserCode
				, DeptName
				, DisplayName
				, JobPositionName
				, JobPositionSortKey
				, JobLevelSortKey
				, JobTitleSortKey
				, JobTitleCode
				, SortKey
				, MailAddress
				, DeptCode
				, EnterDate
				, RetireDate
				, CreateMethod
				, TargetYear
				, IsOneYear
				, VacDate
				, fn_attend_getPromotionDateRage('T','Code1',VacDate, #{domainCode}) AS VacDateUntil
				, OneDate
				, fn_attend_getPromotionDateRage('T','Code2',OneDate, #{domainCode}) AS OneDateUntil
				, CASE WHEN OneDate <![CDATA[>]]> TwoDate THEN
						DATE_ADD(TwoDate, INTERVAL 1 YEAR)
					ELSE
						TwoDate
					END AS TwoDate
				, CASE WHEN OneDate <![CDATA[>]]> TwoDate THEN
						fn_attend_getPromotionDateRage('T','Code3',DATE_ADD(TwoDate, INTERVAL 1 YEAR), #{domainCode})
					ELSE
						fn_attend_getPromotionDateRage('T','Code3',TwoDate, #{domainCode})
					END AS TwoDateUntil
				, LessVacDate
				, fn_attend_getPromotionDateRage('T','Code4',LessVacDate, #{domainCode}) AS LessVacDateUntil
				, LessOneDate9
				, fn_attend_getPromotionDateRage('T','Code5',LessOneDate9, #{domainCode}) AS LessOneDate9Until
				, CASE WHEN LessOneDate9 <![CDATA[>]]> LessTwoDate9 THEN
						DATE_ADD(LessTwoDate9, INTERVAL 1 YEAR)
					ELSE
						LessTwoDate9
					END AS LessTwoDate9
				, CASE WHEN LessOneDate9 <![CDATA[>]]> LessTwoDate9 THEN
						fn_attend_getPromotionDateRage('T','Code6',DATE_ADD(LessTwoDate9, INTERVAL 1 YEAR), #{domainCode})
					ELSE
						fn_attend_getPromotionDateRage('T','Code6',LessTwoDate9, #{domainCode})
					END AS LessTwoDate9Until
				, LessOneDate2
				, fn_attend_getPromotionDateRage('T','Code7',LessOneDate2, #{domainCode}) AS LessOneDate2Until
				, CASE WHEN LessOneDate2 <![CDATA[>]]> LessTwoDate2 THEN
						DATE_ADD(LessTwoDate2, INTERVAL 1 YEAR)
					ELSE
						LessTwoDate2
					END AS LessTwoDate2
				, CASE WHEN LessOneDate2 <![CDATA[>]]> LessTwoDate2 THEN
						fn_attend_getPromotionDateRage('T','Code8',DATE_ADD(LessTwoDate2, INTERVAL 1 YEAR), #{domainCode})
					ELSE
						fn_attend_getPromotionDateRage('T','Code8',LessTwoDate2, #{domainCode})
					END AS LessTwoDate2Until
				, B.Read10
				, B.Read11
				, B.Read12
				, B.Read13
				, B.Read14
				, B.Read18
				, B.Read19
				, B.Read20
				, P.VACPLAN AS VACPLAN
				, INSTR(P.VACPLAN, 'notification1') AS VACPLAN1
				, INSTR(P.VACPLAN, 'notification2') AS VACPLAN2
				, P2.VACPLAN AS NEXT_VACPLAN
			FROM (
				SELECT A.UserCode
					, Fn_BaseGetDictionary_S(#{lang}, A.MultiDisplayName) AS DisplayName
					, A.EnterDate
					, A.RetireDate
					, A.SortKey
					, A.MailAddress
					, B.DeptCode
					, B.JobTitleCode
					, Fn_BaseGetDictionary_S(#{lang},IFNULL(B.DeptName, B.MultiDeptName)) AS DeptName
					, Fn_BaseGetDictionary_S(#{lang}, B.MultiJobPositionName) AS JobPositionName
					, JobPositionSortKey
					, JobLevelSortKey
					, JobTitleSortKey
					, V.CreateMethod
						<choose>
							<when test='tabType != null and tabType != "" and (tabType.equalsIgnoreCase("2") or tabType.equalsIgnoreCase("3"))'>
								, SUBSTR(EnterDate,1,4) TargetYear
							</when>	  
							<otherwise>
								, CASE WHEN V.CreateMethod = 'J' THEN
										CASE WHEN STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(EnterDate,'%Y%m%d'),'%m%d')),'%Y%m%d') <![CDATA[<=]]> STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(NOW(3),'%m%d')),'%Y%m%d') THEN
											YEAR(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'))
										  ELSE
											YEAR(DATE_ADD(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'), INTERVAL -1 YEAR ))
										END
									ELSE
										CASE WHEN DATE_ADD(DATE_FORMAT(STR_TO_DATE(A.EnterDate,'%Y%m%d'),'%Y%m%d'), INTERVAL 1 YEAR) >= STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(NOW(),'%m%d')),'%Y%m%d') THEN
											YEAR(DATE_FORMAT(STR_TO_DATE(A.EnterDate,'%Y%m%d'),'%Y%m%d'))
										ELSE
											YEAR(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'))
										END
								  END AS TargetYear
							</otherwise>
						</choose>
					, IsOneYear
					,(CASE WHEN IsOneYear = 0 THEN
							fn_attend_getPromotionDateRage('F','Code1'
							,DATE_ADD(STR_TO_DATE(EnterDate, '%Y%m%d'), INTERVAL 12 MONTH)
							,#{domainCode})
						WHEN V.CreateMethod = 'J' THEN
							CASE WHEN YEAR(fn_attend_getPromotionDateRage('F','Code1'
										,STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(EnterDate, '%Y%m%d'),'%m%d')),'%Y%m%d')
										,#{domainCode})) <![CDATA[<]]> #{year} THEN
								fn_attend_getPromotionDateRage('F','Code1'
								,DATE_ADD(STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(EnterDate, '%Y%m%d'),'%m%d')),'%Y%m%d'), INTERVAL 12 MONTH)
								,#{domainCode})
							ELSE
								fn_attend_getPromotionDateRage('F','Code1'
								,STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(EnterDate, '%Y%m%d'),'%m%d')),'%Y%m%d')
								,#{domainCode})
							END
						WHEN V.CreateMethod = 'F' THEN
							fn_attend_getPromotionDateRage('F','Code1'
							,DATE_ADD(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'), INTERVAL 12 MONTH)
							,#{domainCode})
						END) AS VacDate
					,(CASE WHEN IsOneYear = 0 THEN
							fn_attend_getPromotionDateRage('F','Code2'
							,DATE_ADD(STR_TO_DATE(EnterDate, '%Y%m%d'), INTERVAL 12 MONTH)
							,#{domainCode})
						WHEN V.CreateMethod = 'J' THEN
							CASE WHEN YEAR(fn_attend_getPromotionDateRage('F','Code2'
										,STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(EnterDate, '%Y%m%d'),'%m%d')),'%Y%m%d')
										,#{domainCode})) <![CDATA[<]]> #{year} THEN
								fn_attend_getPromotionDateRage('F','Code2'
								,DATE_ADD(STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(EnterDate, '%Y%m%d'),'%m%d')),'%Y%m%d'), INTERVAL 12 MONTH)
								,#{domainCode})
							ELSE
								fn_attend_getPromotionDateRage('F','Code2'
								,STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(EnterDate, '%Y%m%d'),'%m%d')),'%Y%m%d')
								,#{domainCode})
							END
						WHEN V.CreateMethod = 'F' THEN
							fn_attend_getPromotionDateRage('F','Code2'
							,DATE_ADD(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'), INTERVAL 12 MONTH)
							,#{domainCode})
						END) AS OneDate
					,(CASE WHEN IsOneYear = 0 THEN
							fn_attend_getPromotionDateRage('F','Code3'
							,DATE_ADD(STR_TO_DATE(EnterDate, '%Y%m%d'), INTERVAL 12 MONTH)
							,#{domainCode})
						WHEN V.CreateMethod = 'J' THEN
							CASE WHEN YEAR(fn_attend_getPromotionDateRage('F','Code3'
										,STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(EnterDate, '%Y%m%d'),'%m%d')),'%Y%m%d')
										,#{domainCode})) <![CDATA[<]]> #{year} THEN
								fn_attend_getPromotionDateRage('F','Code3'
								,DATE_ADD(STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(EnterDate, '%Y%m%d'),'%m%d')),'%Y%m%d'), INTERVAL 12 MONTH)
								,#{domainCode})
							ELSE
								fn_attend_getPromotionDateRage('F','Code3'
								,STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(EnterDate, '%Y%m%d'),'%m%d')),'%Y%m%d')
								,#{domainCode})
							END
						WHEN V.CreateMethod = 'F' THEN
							fn_attend_getPromotionDateRage('F','Code3'
							,DATE_ADD(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'), INTERVAL 12 MONTH)
							,#{domainCode})
						END) AS TwoDate

					,(CASE WHEN IsOneYear = 0 OR (IsOneYear = 1 AND YEAR(DATE(DATE_ADD(STR_TO_DATE(EnterDate, '%Y%m%d'), INTERVAL 12 MONTH))) <![CDATA[<=]]> #{year}) THEN
							fn_attend_getPromotionDateRage('F','Code4'
							,DATE_ADD(STR_TO_DATE(EnterDate, '%Y%m%d'), INTERVAL 12 MONTH)
							,#{domainCode})
						WHEN V.CreateMethod = 'J' THEN
							fn_attend_getPromotionDateRage('F','Code4'
							,STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(EnterDate, '%Y%m%d'),'%m%d')),'%Y%m%d')
							,#{domainCode})
						WHEN V.CreateMethod = 'F' THEN
							fn_attend_getPromotionDateRage('F','Code4'
							,DATE_ADD(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'), INTERVAL 12 MONTH)
							,#{domainCode})
					END) AS LessVacDate
					,(CASE WHEN IsOneYear = 0 OR (IsOneYear = 1 AND YEAR(DATE(DATE_ADD(STR_TO_DATE(EnterDate, '%Y%m%d'), INTERVAL 12 MONTH))) <![CDATA[<=]]> #{year}) THEN
							fn_attend_getPromotionDateRage('F','Code5'
							,DATE_ADD(STR_TO_DATE(EnterDate, '%Y%m%d'), INTERVAL 12 MONTH)
							,#{domainCode})
						WHEN V.CreateMethod = 'J' THEN
							fn_attend_getPromotionDateRage('F','Code5'
							,STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(EnterDate, '%Y%m%d'),'%m%d')),'%Y%m%d')
							,#{domainCode})
						WHEN V.CreateMethod = 'F' THEN
							fn_attend_getPromotionDateRage('F','Code5'
							,DATE_ADD(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'), INTERVAL 12 MONTH)
							,#{domainCode})
						END) AS LessOneDate9
					,(CASE WHEN IsOneYear = 0 OR (IsOneYear = 1 AND YEAR(DATE(DATE_ADD(STR_TO_DATE(EnterDate, '%Y%m%d'), INTERVAL 12 MONTH))) <![CDATA[<=]]> #{year}) THEN
							fn_attend_getPromotionDateRage('F','Code6'
							,DATE_ADD(STR_TO_DATE(EnterDate, '%Y%m%d'), INTERVAL 12 MONTH)
							,#{domainCode})
						WHEN V.CreateMethod = 'J' THEN
							fn_attend_getPromotionDateRage('F','Code6'
							,STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(EnterDate, '%Y%m%d'),'%m%d')),'%Y%m%d')
							,#{domainCode})
						WHEN V.CreateMethod = 'F' THEN
							fn_attend_getPromotionDateRage('F','Code6'
							,DATE_ADD(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'), INTERVAL 12 MONTH)
							,#{domainCode})
						END) AS LessTwoDate9
					,(CASE WHEN IsOneYear = 0 OR (IsOneYear = 1 AND YEAR(DATE(DATE_ADD(STR_TO_DATE(EnterDate, '%Y%m%d'), INTERVAL 12 MONTH))) <![CDATA[<=]]> #{year}) THEN
							fn_attend_getPromotionDateRage('F','Code7'
							,DATE_ADD(STR_TO_DATE(EnterDate, '%Y%m%d'), INTERVAL 12 MONTH)
							,#{domainCode})
						WHEN V.CreateMethod = 'J' THEN
							fn_attend_getPromotionDateRage('F','Code7'
							,STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(EnterDate, '%Y%m%d'),'%m%d')),'%Y%m%d')
							,#{domainCode})
						WHEN CreateMethod = 'F' THEN
							fn_attend_getPromotionDateRage('F','Code7'
							,DATE_ADD(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'), INTERVAL 12 MONTH)
							,#{domainCode})
						END) AS LessOneDate2
					,(CASE WHEN IsOneYear = 0 OR (IsOneYear = 1 AND YEAR(DATE(DATE_ADD(STR_TO_DATE(EnterDate, '%Y%m%d'), INTERVAL 12 MONTH))) <![CDATA[<=]]> #{year}) THEN
							fn_attend_getPromotionDateRage('F','Code8'
							,DATE_ADD(STR_TO_DATE(EnterDate, '%Y%m%d'), INTERVAL 12 MONTH)
							,#{domainCode})
						WHEN V.CreateMethod = 'J' THEN
							fn_attend_getPromotionDateRage('F','Code8'
							,STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(EnterDate, '%Y%m%d'),'%m%d')),'%Y%m%d')
							,#{domainCode})
						WHEN V.CreateMethod = 'F' THEN
							fn_attend_getPromotionDateRage('F','Code8'
							,DATE_ADD(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'), INTERVAL 12 MONTH)
							,#{domainCode})
						END) AS LessTwoDate2
				FROM (select UserCode, REPLACE(EnterDate,'-','') AS EnterDate, MultiDisplayName, RetireDate, SortKey, MailAddress
						, (CASE WHEN YEAR(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d')) = #{year}
							THEN 0
							WHEN DATE(DATE_ADD(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'), INTERVAL 12 MONTH))  <![CDATA[<]]> STR_TO_DATE(CONCAT(#{year},DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'),'%m%d')),'%Y%m%d')
							THEN 1
							WHEN DATE(DATE_ADD(EnterDate, INTERVAL 12 MONTH))  <![CDATA[<=]]>  DATE(NOW())
							THEN 1
							ELSE 0 END
						) as IsOneYear
						from covi_smart4j.sys_object_user
						where IsDisplay = 'Y'
						and IsHR = 'Y'
						and (RetireDate is null or RetireDate = '')
						and (EnterDate is not null and LENGTH(EnterDate) > 0)
					)  A
				LEFT JOIN covi_smart4j.sys_object_user_basegroup B ON A.UserCode = B.UserCode AND JobType = 'Origin' AND B.CompanyCode = #{domainCode}
				LEFT JOIN vm_config V ON V.CompanyCode = B.CompanyCode
			) A
			LEFT JOIN (	SELECT Year, ReaderCode,
							GROUP_CONCAT(if(MessageID ='10', ReadDate, NULL)) AS Read10,
							GROUP_CONCAT(if(MessageID ='11', ReadDate, NULL)) AS Read11,
							GROUP_CONCAT(if(MessageID ='12', ReadDate, NULL)) AS Read12,
							GROUP_CONCAT(if(MessageID ='13', ReadDate, NULL)) AS Read13,
							GROUP_CONCAT(if(MessageID ='14', ReadDate, NULL)) AS Read14,
							GROUP_CONCAT(if(MessageID ='18', ReadDate, NULL)) AS Read18,
							GROUP_CONCAT(if(MessageID ='19', ReadDate, NULL)) AS Read19,
							GROUP_CONCAT(if(MessageID ='20', ReadDate, NULL)) AS Read20
						FROM covi_smart4j.vm_message_reader
						WHERE MessageID IN ('10','11','12','13','14','18','19','20') GROUP BY Year, ReaderCode
			) B ON A.TargetYear = B.Year AND A.UserCode = B.ReaderCode
			LEFT JOIN covi_smart4j.vm_useage_plan P ON  P.YEAR = A.TargetYear and A.UserCode = P.UR_CODE
			LEFT JOIN covi_smart4j.vm_useage_plan P2 ON  P2.YEAR = A.TargetYear+1 and A.UserCode = P2.UR_CODE
		) TBL
		,(select SettingValue
			from covi_smart4j.sys_base_config SBC
			WHERE  SBC.DomainID = (select DomainID from covi_smart4j.sys_object_domain SOD where SOD.DomainCode = #{domainCode})
			AND SettingKey = 'FacilitatingTarget'
		) SBC
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			AND RetireDate = ''
			AND DeptCode NOT LIKE	'%RetireDept'
			AND EnterDate <![CDATA[<>]]> ''
			AND SUBSTR(EnterDate,1,4) <![CDATA[<=]]> #{year}
			AND ((LENGTH(SBC.SettingValue) > 0 AND INSTR(CONCAT('_',SBC.SettingValue), TBL.JobTitleCode) > 0 AND LENGTH(TBL.JobTitleCode) > 0)
				OR (LENGTH(SBC.SettingValue) = 0 ))
			<if test='tabType != null and tabType !=""'>
				<choose>
					<when test='tabType.equalsIgnoreCase("1") or tabType.equalsIgnoreCase("4")'>
						AND IsOneYear = 1
					</when>
					<!--<otherwise>
						AND YEAR(DATE_ADD(STR_TO_DATE(EnterDate,'%Y%m%d'), INTERVAL 12 MONTH) <![CDATA[>=]]> #{year}
					</otherwise>-->
				</choose>
			</if>
			<if test='urCode != null and urCode !=""'>
				AND UserCode = #{urCode}
			</if>
			<if test='sendMailUsersList != null and sendMailUsersList != ""'>
				<foreach collection="sendMailUsersList" item="item" open="AND UserCode IN (" close=")" separator=",">
					#{item}
				</foreach>
			</if>
			<if test='schTypeSel != null and schTypeSel !="" and schTxt != null and schTxt !=""'>
				<choose>
					<when test='schTypeSel == "deptName"'>
						AND DeptName LIKE CONCAT('%', #{schTxt}, '%')
					</when>
					<otherwise>
						AND DisplayName LIKE CONCAT('%', #{schTxt}, '%')
					</otherwise>
				</choose>
			</if>
			
			<if test='startDate != null and startDate != "" and endDate != null and endDate != "" '>
				<choose>
					<when test='tabType.equalsIgnoreCase("2")'>
						<if test='schDateType.equalsIgnoreCase("0")'>
							AND (
								LessOneDate9 BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
								OR LessOneDate9Until BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
								OR LessTwoDate9 BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
								OR LessTwoDate9Until BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
								OR STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') BETWEEN LessOneDate9 AND LessOneDate9Until
								OR STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d') BETWEEN LessOneDate9 AND LessOneDate9Until
								OR STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') BETWEEN LessTwoDate9 AND LessTwoDate9Until
								OR STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d') BETWEEN LessTwoDate9 AND LessTwoDate9Until
							)
						</if>
						<if test='schDateType.equalsIgnoreCase("1")'>
							AND (
								LessOneDate9 BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
								OR LessOneDate9Until BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
								OR STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') BETWEEN LessOneDate9 AND LessOneDate9Until
								OR STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d') BETWEEN LessOneDate9 AND LessOneDate9Until
							)
						</if>
						<if test='schDateType.equalsIgnoreCase("2")'>
							AND (
								LessTwoDate9 BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
								OR LessTwoDate9Until BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
								OR STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') BETWEEN LessTwoDate9 AND LessTwoDate9Until
								OR STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d') BETWEEN LessTwoDate9 AND LessTwoDate9Until
							)
						</if>
					</when>
					<when test='tabType.equalsIgnoreCase("3")'>
						<if test='schDateType.equalsIgnoreCase("0")'>
							AND (
								LessOneDate2 BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
								OR LessOneDate2Until BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
								OR LessTwoDate2 BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
								OR LessTwoDate2Until BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
								OR STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') BETWEEN LessOneDate2 AND LessOneDate2Until
								OR STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d') BETWEEN LessOneDate2 AND LessOneDate2Until
								OR STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') BETWEEN LessTwoDate2 AND LessTwoDate2Until
								OR STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d') BETWEEN LessTwoDate2 AND LessTwoDate2Until
							)
						</if>
						<if test='schDateType.equalsIgnoreCase("1")'>
							AND (
								LessOneDate2 BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
								OR LessOneDate2Until BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
								OR STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') BETWEEN LessOneDate2 AND LessOneDate2Until
								OR STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d') BETWEEN LessOneDate2 AND LessOneDate2Until
							)
						</if>
						<if test='schDateType.equalsIgnoreCase("2")'>
							AND (
								LessTwoDate2 BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
								OR LessTwoDate2Until BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
								OR STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') BETWEEN LessTwoDate2 AND LessTwoDate2Until
								OR STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d') BETWEEN LessTwoDate2 AND LessTwoDate2Until
							)
						</if>
					</when>
					<when test='tabType.equalsIgnoreCase("4")'>
						<if test='schDateType.equalsIgnoreCase("1")'>
							AND (
							VacDate BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
							OR VacDateUntil BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
							OR STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') BETWEEN VacDate AND VacDateUntil
							OR STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d') BETWEEN VacDate AND VacDateUntil
							)
						</if>
					</when>
					<when test='tabType.equalsIgnoreCase("5")'>
						<if test='schDateType.equalsIgnoreCase("1")'>
							AND (
							LessVacDate BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
							OR LessVacDateUntil BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
							OR STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') BETWEEN LessVacDate AND LessVacDateUntil
							OR STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d') BETWEEN LessVacDate AND LessVacDateUntil
							)
						</if>
					</when>
					<otherwise>
						<if test='schDateType.equalsIgnoreCase("0")'>
						AND (
								OneDate BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
								OR OneDateUntil BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
								OR TwoDate BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
								OR TwoDateUntil BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
								OR STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') BETWEEN OneDate AND OneDateUntil
								OR STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d') BETWEEN OneDate AND OneDateUntil
								OR STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') BETWEEN TwoDate AND TwoDateUntil
								OR STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d') BETWEEN TwoDate AND TwoDateUntil
							)
						</if>
						<if test='schDateType.equalsIgnoreCase("1")'>
							AND (
								OneDate BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
								OR OneDateUntil BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
								OR STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') BETWEEN OneDate AND OneDateUntil
								OR STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d') BETWEEN OneDate AND OneDateUntil
							)
						</if>
						<if test='schDateType.equalsIgnoreCase("2")'>
							AND (
								TwoDate BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
								OR TwoDateUntil BETWEEN STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') AND STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d')
								OR STR_TO_DATE(REPLACE(#{startDate},'.',''),'%Y%m%d') BETWEEN TwoDate AND TwoDateUntil
								OR STR_TO_DATE(REPLACE(#{endDate},'.',''),'%Y%m%d') BETWEEN TwoDate AND TwoDateUntil
							)
						</if>
					</otherwise>
				</choose>
			</if>

			<if test='dayType != null and dayType != "" and daysValue != null and daysValue != "" '>
				<choose>
					<when test='tabType.equalsIgnoreCase("1")'>
						<if test='dayType.equalsIgnoreCase("D")'>
							AND (TwoDate BETWEEN DATE_ADD(NOW(3), INTERVAL -1 DAY ) AND DATE_ADD(NOW(3), INTERVAL #{daysValue} DAY )
							or OneDate BETWEEN DATE_ADD(NOW(3), INTERVAL -1 DAY ) AND DATE_ADD(NOW(3), INTERVAL #{daysValue} DAY ))
						</if>
						<if test='dayType.equalsIgnoreCase("M")'>
							AND (TwoDate BETWEEN DATE_ADD(NOW(3), INTERVAL -1 DAY ) AND DATE_ADD(NOW(3), INTERVAL #{daysValue} MONTH )
							or OneDate BETWEEN DATE_ADD(NOW(3), INTERVAL -1 DAY ) AND DATE_ADD(NOW(3), INTERVAL #{daysValue} MONTH ))
						</if>
					</when>
					<when test='tabType.equalsIgnoreCase("2")'>
						<if test='dayType.equalsIgnoreCase("D")'>
							AND (LessTwoDate9 BETWEEN DATE_ADD(NOW(3), INTERVAL -1 DAY ) AND DATE_ADD(NOW(3), INTERVAL #{daysValue} DAY )
							or LessOneDate9 BETWEEN DATE_ADD(NOW(3), INTERVAL -1 DAY ) AND DATE_ADD(NOW(3), INTERVAL #{daysValue} DAY ))
						</if>
						<if test='dayType.equalsIgnoreCase("M")'>
							AND (LessTwoDate9 BETWEEN DATE_ADD(NOW(3), INTERVAL -1 DAY ) AND DATE_ADD(NOW(3), INTERVAL #{daysValue} MONTH )
							or LessOneDate9 BETWEEN DATE_ADD(NOW(3), INTERVAL -1 DAY ) AND DATE_ADD(NOW(3), INTERVAL #{daysValue} MONTH ))
						</if>
					</when>
					<when test='tabType.equalsIgnoreCase("3")'>
						<if test='dayType.equalsIgnoreCase("D")'>
							AND (LessTwoDate2 BETWEEN DATE_ADD(NOW(3), INTERVAL -1 DAY ) AND DATE_ADD(NOW(), INTERVAL #{daysValue} DAY )
							or LessOneDate2 BETWEEN DATE_ADD(NOW(3), INTERVAL -1 DAY ) AND DATE_ADD(NOW(3), INTERVAL #{daysValue} DAY ))
						</if>
						<if test='dayType.equalsIgnoreCase("M")'>
							AND (LessTwoDate2 BETWEEN DATE_ADD(NOW(3), INTERVAL -1 DAY ) AND DATE_ADD(NOW(), INTERVAL #{daysValue} MONTH )
							or LessOneDate2 BETWEEN DATE_ADD(NOW(3), INTERVAL -1 DAY ) AND DATE_ADD(NOW(3), INTERVAL #{daysValue} DAY ))
						</if>
					</when>
					<when test='tabType.equalsIgnoreCase("4")'>
						<if test='dayType.equalsIgnoreCase("D")'>
							AND VacDate BETWEEN DATE_ADD(NOW(3), INTERVAL -1 DAY ) AND DATE_ADD(NOW(), INTERVAL #{daysValue} DAY )
						</if>
						<if test='dayType.equalsIgnoreCase("M")'>
							AND VacDate BETWEEN DATE_ADD(NOW(3), INTERVAL -1 DAY ) AND DATE_ADD(NOW(), INTERVAL #{daysValue} MONTH )
						</if>
					</when>
					<when test='tabType.equalsIgnoreCase("5")'>
						<if test='dayType.equalsIgnoreCase("D")'>
							AND LessVacDate BETWEEN DATE_ADD(NOW(3), INTERVAL -1 DAY ) AND DATE_ADD(NOW(), INTERVAL #{daysValue} DAY )
						</if>
						<if test='dayType.equalsIgnoreCase("M")'>
							AND LessVacDate BETWEEN DATE_ADD(NOW(3), INTERVAL -1 DAY ) AND DATE_ADD(NOW(), INTERVAL #{daysValue} MONTH )
						</if>
					</when>
				</choose>
			</if>
			<if test='tabType != null and tabType != "" '>
				<choose>
					<when test='tabType.equalsIgnoreCase("1")'>
						AND OneDate <![CDATA[>]]> STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d')
					</when>
					<when test='tabType.equalsIgnoreCase("2")'>
						AND YEAR(LessOneDate9) = #{year}
						AND
						(
						(LessOneDate9 <![CDATA[>=]]> STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d')
						AND LessOneDate9 <![CDATA[<=]]> DATE_ADD(DATE_ADD(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'), INTERVAL 12 MONTH), INTERVAL -1 DAY )
						)
						OR
						(LessTwoDate9 <![CDATA[>=]]> STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d')
						AND LessTwoDate9 <![CDATA[<=]]> DATE_ADD(DATE_ADD(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'), INTERVAL 12 MONTH), INTERVAL -1 DAY )
						)
						)
					</when>
					<when test='tabType.equalsIgnoreCase("3")'>
						AND YEAR(LessOneDate2) = #{year}
						AND
						(
						(LessOneDate2 <![CDATA[>=]]> STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d')
						AND LessOneDate2 <![CDATA[<=]]> DATE_ADD(DATE_ADD(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'), INTERVAL 12 MONTH), INTERVAL -1 DAY )
						)
						OR
						(LessTwoDate2 <![CDATA[>=]]> STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d')
						AND LessTwoDate2 <![CDATA[<=]]> DATE_ADD(DATE_ADD(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'), INTERVAL 12 MONTH), INTERVAL -1 DAY )
						)
						)
					</when>
					<when test='tabType.equalsIgnoreCase("4")'>
						AND VacDate <![CDATA[>]]> STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d')
					</when>
					<when test='tabType.equalsIgnoreCase("5")'>
						AND YEAR(LessVacDate) = #{year}
						AND (LessVacDate <![CDATA[>=]]> STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d')
						AND LessVacDate <![CDATA[<=]]> DATE_ADD(DATE_ADD(STR_TO_DATE(REPLACE(EnterDate,'-',''), '%Y%m%d'), INTERVAL 12 MONTH), INTERVAL -1 DAY )
						)
					</when>
				</choose>
			</if>
		</trim>
	 	<trim prefix="ORDER BY"  prefixOverrides =",">
			<choose>
				<when test="orgOrders != null and orgOrders != '' ">
				  	<foreach collection="orgOrders" item="orgOrder" separator=",">
				  		<if test="orgOrder != null and orgOrder == 'JobTitle'">
				  			JobTitleSortKey ASC
				  		</if>
				  		<if test="orgOrder != null and orgOrder == 'JobLevel'">
				  			JobLevelSortKey ASC
				  		</if>
				  		<if test="orgOrder != null and orgOrder == 'JobPosition'">
				  			JobPositionSortKey ASC
				  		</if>
		  				<if test="orgOrder != null and orgOrder == 'DN'">
				  			DisplayName ASC
				  		</if>
				  	</foreach>
				  	, DeptCode, SortKey ASC
			  	</when>
			</choose>
		</trim>
		<if test='pageSize != null and pageOffset != null'>
			LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>
	</select>

	<select id="selectVacationUsePlanMigrationList" parameterType="cmap" resultType="cmap">
		/* groupware.vacation.selectVacationUsePlanMigrationList */
		SELECT * FROM
		(
			SELECT UserCode
			, DeptName
			, DisplayName
			, JobPositionName
			, JobPositionSortKey
			, SortKey
			, DeptCode
			, EnterDate
			, RetireDate
			, CreateMethod
			, TargetYear
			, IsOneYear
			, P.VACPLAN AS VACPLAN
			, P2.VACPLAN AS NEXT_VACPLAN
			FROM (
				SELECT A.UserCode
				, Fn_BaseGetDictionary_S(#{lang}, A.MultiDisplayName) AS DisplayName
				, A.EnterDate
				, A.RetireDate
				, A.SortKey
				, B.DeptCode
				, Fn_BaseGetDictionary_S(#{lang},IFNULL(B.DeptName, B.MultiDeptName)) AS DeptName
				, Fn_BaseGetDictionary_S(#{lang}, B.MultiJobPositionName) AS JobPositionName
				, JobPositionSortKey
				, V.CreateMethod
				, (CASE WHEN DATE(DATE_ADD(EnterDate, INTERVAL 12 MONTH)) <![CDATA[<=]]> DATE(NOW()) THEN YEAR(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'))
						ELSE YEAR(DATE_ADD(STR_TO_DATE(CONCAT(#{year},'0101'),'%Y%m%d'), INTERVAL -1 YEAR )) END
				) as TargetYear
				, IsOneYear
			FROM (select UserCode, EnterDate, MultiDisplayName, RetireDate, SortKey
					, (CASE WHEN DATE(DATE_ADD(EnterDate, INTERVAL 12 MONTH))  <![CDATA[<=]]>  DATE(NOW()) THEN 1
					ELSE 0 END
					) as IsOneYear
		from covi_smart4j.sys_object_user)  A
		LEFT JOIN covi_smart4j.sys_object_user_basegroup B ON A.UserCode = B.UserCode AND JobType = 'Origin' AND B.CompanyCode = #{domainCode}
		LEFT JOIN vm_config V ON V.CompanyCode = B.CompanyCode
		WHERE  A.IsOneYear = 0
		) A
		LEFT JOIN covi_smart4j.vm_useage_plan P ON  P.YEAR = A.TargetYear and A.UserCode = P.UR_CODE
		LEFT JOIN covi_smart4j.vm_useage_plan P2 ON  P2.YEAR = A.TargetYear+1 and A.UserCode = P2.UR_CODE
		) TBL
		WHERE USERCODE <![CDATA[<>]]> 'superadmin'
	</select>

	<update id="updateVacPlanMigration" parameterType="cmap">
		/* groupware.vacation.updateVacPlanMigration */
		INSERT INTO covi_smart4j.vm_useage_plan
			(YEAR, GR_CODE, GR_NAME, UR_CODE, UR_NAME, VACPLAN, INSERT_DATE)
		VALUES
			(#{TargetYear}, #{GrCode}, #{GrName}, #{UserCode}, #{UserName}, #{updateVacPlan}, NOW())
		ON DUPLICATE KEY UPDATE
	     	YEAR = #{TargetYear},
	     	UR_CODE = #{UserCode}
	</update>
	<!-- 결재시 체크 -->
	<select id="selectVacationInfo" parameterType="cmap" resultType="Long">
		/* legacy.formCmmFunction.selectVacationInfo */
		SELECT SUM(EXIST) AS cnt
		FROM (SELECT
				CASE WHEN #{VacOffFlag}='AM' OR #{VacOffFlag}='PM' THEN
					CASE WHEN COUNT(1) = 0 THEN 0
						WHEN LENGTH(#{STime}) > 0 AND LENGTH(#{ETime}) > 0 THEN
							CASE WHEN (CAST(REPLACE(#{STime},':','') AS INTEGER)+1 <![CDATA[>=]]> CAST(REPLACE(StartTime,':','') AS INTEGER)
								AND CAST(REPLACE(#{STime},':','') AS INTEGER)+1 <![CDATA[<=]]> CAST(REPLACE(EndTime,':','') AS INTEGER))
								OR (CAST(REPLACE(#{ETime},':','') AS INTEGER)-1 <![CDATA[>=]]> CAST(REPLACE(StartTime,':','') AS INTEGER)
								AND CAST(REPLACE(#{ETime},':','') AS INTEGER)-1 <![CDATA[<=]]> CAST(REPLACE(EndTime,':','') AS INTEGER)) THEN
									1
							ELSE 0
							END
						WHEN LENGTH(#{STime}) = 0 AND LENGTH(#{ETime}) = 0 THEN
							CASE WHEN LENGTH(StartTime) > 0 AND LENGTH(EndTime) > 0 AND VacOffFlag=#{VacOffFlag} THEN
								1
								WHEN LENGTH(StartTime) = 0 AND LENGTH(EndTime) = 0 AND VacOffFlag=#{VacOffFlag} THEN
								1
								WHEN VacFlag='VACATION_ANNUAL' THEN
								1
							ELSE
								0
							END
						ELSE 1 END
				ELSE
					COUNT(1)
				END AS EXIST
			FROM covi_smart4j.vm_vacationinfo_day
			WHERE STR_TO_DATE(VacDate,'%Y-%m-%d') BETWEEN STR_TO_DATE(#{StartDate},'%Y-%m-%d') AND STR_TO_DATE(#{EndDate},'%Y-%m-%d')
			AND UR_Code = #{UserCode}
			AND (GUBUN != 'VACATION_CANCEL' and GUBUN != 'VACATION_PUBLIC_CANCEL')
			<if test="(VacOffFlag=='AM' or VacOffFlag=='PM') and STime.length() == 0 and ETime.length() == 0">
				 	AND (VacOffFlag is null OR VacOffFlag = '0' OR VacOffFlag = #{VacOffFlag})
			</if>
		) T
	</select>
	
	<!-- 결재시 체크 -->
	<select id="selectVacationCancelInfo" parameterType="cmap" resultType="Long">
	    SELECT COUNT(1) - (DATEDIFF(STR_TO_DATE(#{EndDate},'%Y-%m-%d') , STR_TO_DATE(#{StartDate},'%Y-%m-%d')) + 1) AS invalidcnt
	    FROM covi_smart4j.vm_vacationinfo_day
		WHERE UR_Code = #{UserCode}
		AND VacFlag = #{VacFlag}
		AND VacOffFlag = #{VacOffFlag}
		AND STR_TO_DATE(VacDate,'%Y-%m-%d') BETWEEN STR_TO_DATE(#{StartDate},'%Y-%m-%d') AND STR_TO_DATE(#{EndDate},'%Y-%m-%d')
		AND (GUBUN != 'VACATION_CANCEL' and GUBUN != 'VACATION_PUBLIC_CANCEL')
	</select>	

	<!-- 휴가부여이력팝업 -->
	<select id="getVacationPlanHistCnt" resultType="java.lang.Long">
	/* groupware.vacation.getVacationPlanHistCnt */
	<![CDATA[
		SELECT count(HistSeq)
		FROM covi_smart4j.vm_plan_hist 
		WHERE UR_Code = #{urCode}
		AND UseStartDate = DATE_FORMAT(#{startDate}, '%Y%m%d')
		AND UseEndDate = DATE_FORMAT(#{endDate}, '%Y%m%d')
		AND Vackind = 'PUBLIC'
	]]>
	</select>
	<select id="getVacationPlanHist" parameterType="cmap" resultType="cmap">
		/* groupware.vacation.getVacationPlanHist */
		SELECT UR_Code
			, (SELECT Fn_BaseGetDictionary_S(#{lang}, MultiDisplayName) FROM covi_smart4j.sys_object_user WHERE UserCode =  UR_Code) AS DisplayName
			, CONCAT(DATE_FORMAT(UseStartDate,'%y.%m.%d'),' ~ ',DATE_FORMAT(UseEndDate,'%y.%m.%d')) AS UseDate 
			, cast(cast(VacDay as DECIMAL(9,3)) as float) AS VacDay 
			, VmComment as Comment 
			, DATE_FORMAT(RegistDate, '%Y-%m-%d') as ChangeDate 
			, VmMethod
		FROM covi_smart4j.vm_plan_hist 
		WHERE UR_Code = #{urCode}
		AND UseStartDate = DATE_FORMAT(#{startDate}, '%Y%m%d')
		AND UseEndDate = DATE_FORMAT(#{endDate}, '%Y%m%d')
		AND Vackind = 'PUBLIC'
		<trim prefix='ORDER BY'>
			<if test="sortColumn == '' or sortColumn == null or sortDirection == '' or sortDirection == null">
				RegistDate DESC
			</if>
			<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("DisplayName")'>DisplayName</when>
					<when test='sortColumn.equalsIgnoreCase("UseDate")'>UseDate</when>
					<when test='sortColumn.equalsIgnoreCase("VacDay")'>VacDay</when>
					<when test='sortColumn.equalsIgnoreCase("Comment")'>Comment</when>
					<when test='sortColumn.equalsIgnoreCase("ChangeDate")'>ChangeDate</when>
					<when test='sortColumn.equalsIgnoreCase("VmMethod")'>VmMethod</when>
					<otherwise>RegistDate</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</if>
		</trim>
		<if test='pageSize != null and pageOffset != null and pageSize >= 0 and pageOffset >= 0'>
			LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>		 
	</select>
	<select id="selectLastLongVacDay" parameterType="cmap" resultType="cmap">
		/* groupware.vacation.selectLastLongVacDay */
		select  UR_Code
			, YEAR
			, VacDay
		from covi_smart4j.vm_vacationplan
		WHERE YEAR = year(NOW())
    	AND VacKind = 'PUBLIC'
    	AND UseStartDate = CONCAT(YEAR(NOW()),'0101')
    	AND UseEndDate = CONCAT(YEAR(NOW()),'1231')
		AND UR_Code IN(
			SELECT u.usercode
			FROM covi_smart4j.sys_object_user u
			LEFT JOIN covi_smart4j.sys_object_user_basegroup ub ON u.UserCode = ub.UserCode AND ub.JobType = 'Origin'
			where u.IsUse = 'Y'
			AND u.IsHR = 'Y'
			AND u.IsDisplay = 'Y'
			AND u.EnterDate IS NOT NULL 
			AND u.EnterDate != ''
			AND ub.CompanyCode = #{domainCode}
		)
		AND registdate is not null 
		<if test='lastVacDayReCalcDate != null and lastVacDayReCalcDate !=""'>
		AND (date_format(registdate, '%Y%m%d')) > #{lastVacDayReCalcDate}
		</if>
	</select>
	<select id="selectLastLongVacDayV2" parameterType="cmap" resultType="cmap">
		/* groupware.vacation.selectLastLongVacDayV2 */
		SELECT U.UserCode, U.YEAR, V.VacDay
		FROM (
			SELECT a.UserCode, TARGETYEAR AS YEAR
              , CONCAT(TARGETYEAR,DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'),'%m%d')) AS UseStartDate
              , DATE_FORMAT(DATE_ADD(DATE_ADD(STR_TO_DATE(CONCAT(TARGETYEAR,DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'),'%m%d')),'%Y%m%d'),INTERVAL 1 YEAR),INTERVAL -1 DAY),'%Y%m%d') AS UseEndDate
			FROM (select UserCode, EnterDate
				  , CASE WHEN STR_TO_DATE(CONCAT(YEAR(NOW()),DATE_FORMAT(STR_TO_DATE(REPLACE(EnterDate,'-',''),'%Y%m%d'),'%m%d')),'%Y%m%d')  <![CDATA[<=]]> NOW(3) THEN
						YEAR(NOW())
					ELSE YEAR(DATE_ADD(NOW(), INTERVAL -1 YEAR )) END AS TARGETYEAR
				from covi_smart4j.sys_object_user
				where IsUse = 'Y'
				and IsHR = 'Y'
				and IsDisplay = 'Y'
				and EnterDate IS NOT NULL
				and EnterDate != ''
			) a
			INNER JOIN covi_smart4j.sys_object_user_basegroup b
				ON a.usercode = b.usercode AND b.JobType = 'Origin' and b.CompanyCode = #{domainCode}
		) U
		LEFT JOIN covi_smart4j.vm_vacationplan V
		ON U.UserCode = V.UR_Code
			AND V.VacKind = 'PUBLIC'
			AND V.YEAR = U.year
			AND V.UseStartDate = U.UseStartDate
            AND V.UseEndDate = U.UseEndDate
		where V.registdate is not null 
		<if test='lastVacDayReCalcDate != null and lastVacDayReCalcDate !=""'>
		AND (date_format(V.registdate, '%Y%m%d')) > #{lastVacDayReCalcDate}
		</if>
	</select>
	<update id="updateLastLongVacDay" parameterType="cmap">
	/* groupware.vacation.updateLastLongVacDay */
		UPDATE covi_smart4j.vm_vacationplan
		   SET LastVacDay = fn_GetLastVacDay(#{userCode}, #{year}, #{domainCode}) , 
		       LongVacDay = (VacDay-fn_GetLastVacDay(#{userCode}, #{year}, #{domainCode}))
		 WHERE UR_Code = #{userCode}
		   AND YEAR = #{year}
			AND VacKind = 'PUBLIC'
	</update>	
	
	<select id="selectVacDay" parameterType="cmap" resultType="java.lang.Long">
		/* groupware.vacation.selectVacDay */
	       SELECT IF(IFNULL(Reserved3, 1) = '', 1, IFNULL(Reserved3, 1)) as vacday
	       FROM covi_smart4j.sys_base_code 
	       WHERE DomainID = (SELECT DomainID FROM covi_smart4j.sys_object_domain WHERE DomainCode = #{CompanyCode}) 
	       AND CodeGroup = 'VACATION_TYPE' AND Code = #{vacFlag}
	</select>
	<select id="selectConfig" parameterType="cmap" resultType="cmap">
		select IsRemRenewal,RemMethod from covi_smart4j.vm_config where CompanyCode=(SELECT CompanyCode FROM covi_smart4j.sys_object_user_basegroup WHERE UserCode = #{urCode} AND JobType = 'Origin')
	</select>
</mapper>
