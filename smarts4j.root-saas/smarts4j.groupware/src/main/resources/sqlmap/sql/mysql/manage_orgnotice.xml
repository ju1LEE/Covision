<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="manage.orgnotice">
	<select id="getNoticeFolderPath" parameterType="cmap" resultType="cmap">
		SELECT Fn_BaseGetDictionary_S(#{lang}, MultiDisplayName) AS MultiDisplayName
        		,f.FolderPath
        		,Fn_FolderPathByLangGet_S(#{lang},f.FolderPath) FolderPathName
        FROM covi_smart4j.SYS_OBJECT_FOLDER f
        WHERE FolderID = #{folderID}
	</select>
	
    <select id="getOrgNoticeListCount" resultType="java.lang.Long">
    	/* orgNotice.message.getOrgNotice */
        SELECT count(*)
        FROM board_message AS BM
		WHERE bm.FolderId =  #{folderID}
		AND   (BM.ExpiredDate IS NULL OR  BM.ExpiredDate >= #{localCurrentDate} ) 
		AND BM.DeleteDate IS NULL
		AND (BM.ReservationDate IS NULL OR BM.ReservationDate &lt; #{localCurrentDate})
		AND BM.IsCurrent = 'Y'
	    <!-- 검색어 항목 -->
		<if test="searchText != null and searchText != ''">
			<choose>
	       	 	<when test="searchType == 'Total'">
	           		 AND ( BM.Subject LIKE CONCAT('%',#{searchText},'%') || BM.BodyText LIKE CONCAT('%',#{searchText},'%') )
	       		</when>
	       		<when test="searchType == 'Mobile'">
	       	  		 AND ( BM.Subject LIKE CONCAT('%',#{searchText},'%')  || BM.BodyText LIKE CONCAT('%',#{searchText},'%')  || BM.CreatorName LIKE CONCAT('%',#{searchText},'%') )
	       		</when>
	       		<otherwise>
	       			AND 
					<choose>
						<when test='searchType.equalsIgnoreCase("BodyText")'>BM.BodyText </when>
						<when test='searchType.equalsIgnoreCase("CreatorName")'>BM.CreatorName </when>
						<when test='searchType.equalsIgnoreCase("Number")'>BM.Number </when>
						<otherwise>BM.Subject </otherwise>
					</choose>
					LIKE CONCAT('%',#{searchText},'%')   
	       		</otherwise>
			</choose>
		</if>
		<if test="startDate != '' or endDate != ''">
			AND BM.RegistDate between #{startDate} and #{endDate}
		</if>
    </select>
	<select id="getOrgNoticeList" parameterType="cmap" resultType="cmap">
    <!-- 폴더/게시판 게시글 목록 조회 -->
    /* orgNotice.message.getOrgNotice */
        SELECT BM.MessageID, bm.Version, FolderID, Subject, BodyText
				,(CASE IsTop WHEN 'N' THEN 'Z' ELSE (CASE WHEN #{localCurrentDate} BETWEEN TopStartDate AND TopEndDate THEN 'A' ELSE 'Z' END) END) AS ListTop
				 , bm.CreatorCode
				,  Fn_BaseGetDictionary_S(#{lang},bm.CreatorName) CreatorName
				 , DATE_FORMAT(BM.CreateDate, '%Y-%m-%d %H:%i:%s') AS CreateDate
   				 , (SELECT historyID FROM board_message_history bmh where BM.MessageID = bmh.MessageID AND bmh.HistoryType = 'Export' AND bmh.DomainID = #{domainID} 
   				   order by historyid desc limit 1) HistoryID
        FROM board_message AS BM
	   WHERE bm.FolderId =  #{folderID}
		AND (BM.ExpiredDate IS NULL OR  BM.ExpiredDate >= #{localCurrentDate} ) 
		AND BM.DeleteDate IS NULL
		AND (BM.ReservationDate IS NULL OR BM.ReservationDate &lt; #{localCurrentDate})
		AND BM.IsCurrent = 'Y'
	    <!-- 검색어 항목 -->
		<if test="searchText != null and searchText != ''">
			<choose>
	       	 	<when test="searchType == 'Total'">
	           		 AND ( BM.Subject LIKE CONCAT('%',#{searchText},'%') || BM.BodyText LIKE CONCAT('%',#{searchText},'%') )
	       		</when>
	       		<when test="searchType == 'Mobile'">
	       	  		 AND ( BM.Subject LIKE CONCAT('%',#{searchText},'%')  || BM.BodyText LIKE CONCAT('%',#{searchText},'%')  || BM.CreatorName LIKE CONCAT('%',#{searchText},'%') )
	       		</when>
	       		<otherwise>
	       			AND 
					<choose>
						<when test='searchType.equalsIgnoreCase("BodyText")'>BM.BodyText </when>
						<when test='searchType.equalsIgnoreCase("CreatorName")'>BM.CreatorName </when>
						<when test='searchType.equalsIgnoreCase("Number")'>BM.Number </when>
						<otherwise>BM.Subject </otherwise>
					</choose>
					LIKE CONCAT('%',#{searchText},'%')   
	       		</otherwise>
			</choose>
		</if>
		<if test="startDate != '' or endDate != ''">
			AND BM.RegistDate between #{startDate} and #{endDate}
		</if>
		<trim prefix="ORDER BY"  prefixOverrides =",">
			<if test='useTopNotice == "Y"'>
				ListTop ASC,
			</if>
			<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("Subject")'>Subject</when>
					<when test='sortColumn.equalsIgnoreCase("BodyText")'>BodyText</when>
					<when test='sortColumn.equalsIgnoreCase("CreatorName")'>CreatorName</when>
					<when test='sortColumn.equalsIgnoreCase("RegistDate")'>RegistDate</when>
					<otherwise>MessageID</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>,
			</if>
			Seq DESC, Step ASC
		</trim>
		<if test="pageSize != null and pageOffset != null">
			LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>
    </select>
    
    <select id="selectMenuList" parameterType="cmap" resultType="cmap">
        with recursive  input as (SELECT SettingValue vals FROM sys_base_config  	  WHERE settingkey = 'BoardMenu' AND domainid=#{domainID}   ),
		  recurs as (
		        SELECT 1 as pos, vals as remain, substring_index( vals, ';', 1 ) as val
		          FROM input
		      UNION ALL
		        SELECT pos + 1, substring( remain, char_length( val ) + 2 ), substring_index( substring( remain, char_length( val ) + 2 ), ';', 1 )
		          FROM recurs
		         WHERE char_length( remain ) > char_length( val )
		    )
		SELECT val optionValue, Fn_BaseGetDictionary_S(#{lang}, MultiDisplayName) AS optionText
		  FROM recurs
		  JOIN sys_object_menu		 on IsUse = 'Y'		   AND DeleteDate IS NULL	   AND MenuID = val
    </select>
    
    <select id="getNoticeHistoryListCount" resultType="java.lang.Long">
    	/* orgNotice.message.getOrgNotice */
        SELECT count(*)
          FROM sys_object_domain od
  LEFT JOIN board_message AS BM ON bm.MessageID =   #{messageID}
  LEFT JOIN board_message_history bmh on BM.MessageID = bmh.MessageID AND bmh.HistoryType = 'Export' AND bmh.DomainID = od.DomainID
	  WHERE od.DomainID > 0
	    AND bm.Registdate BETWEEN od.ServiceStart AND od.ServiceEnd
	</select>
    <select id="getNoticeHistoryList" parameterType="cmap" resultType="cmap">
      SELECT od.DomainID
				, Fn_BaseGetDictionary_S(#{lang}, od.MultiDisplayName) DomainName
				 , (SELECT DATE_FORMAT(MIN(ReadDate) , '%Y-%m-%d %H:%i:%s')
				              FROM board_message_reader bmr 
				 		INNER JOIN sys_object_user AS SOU ON (SOU.UserCode = BMR.ReaderCode)
			 			INNER JOIN sys_object_user_basegroup AS SOUB ON (SOU.UserCode = SOUB.UserCode) AND SOUB.JobType = 'Origin'
			 			     WHERE bmr.MessageID = bm.MessageID AND SOUB.CompanyCode= od.DomainCode) ReadDate
				 , bmh.RegisterCode
				, (SELECT Fn_BaseGetDictionary_S(#{lang}, MultiDisplayName) FROM sys_object_user WHERE UserCode = bmh.RegisterCode) AS RegisterName
				 , DATE_FORMAT(bmh.RegistDate, '%Y-%m-%d %H:%i:%s') AS RegistDate
				 , bmh.Comment
       FROM sys_object_domain od
  LEFT JOIN board_message AS BM ON bm.MessageID =   #{messageID}
  LEFT JOIN board_message_history bmh on BM.MessageID = bmh.MessageID AND bmh.HistoryType = 'Export' AND bmh.DomainID = od.DomainID
	  WHERE od.DomainID > 0
	    AND bm.Registdate BETWEEN od.ServiceStart AND od.ServiceEnd
	<trim prefix="ORDER BY"  prefixOverrides =",">
			<if test="sortColumn != null and sortColumn != '' and sortDirection != null and sortDirection !='' ">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("DomainName")'>DomainName</when>
					<when test='sortColumn.equalsIgnoreCase("ReadDate")'>ReadDate</when>
					<when test='sortColumn.equalsIgnoreCase("RegisterName")'>RegisterName</when>
					<when test='sortColumn.equalsIgnoreCase("RegistDate")'>RegistDate</when>
					<otherwise>od.DomainID </otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>,
			</if>
			od.DomainID 
		</trim>	    
		<if test="pageSize != null and pageOffset != null">
			LIMIT #{pageSize} OFFSET #{pageOffset}
		</if>
    </select>
    
</mapper>
