<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="framework.messaging">

    <select id="selectDefaultMediaType" parameterType="cmap" resultType="String">
        <![CDATA[
			SELECT Reserved1 AS "Reserved1"
			FROM SYS_BASE_CODE sbc
			WHERE CodeGroup = 'TodoMsgType'
			AND Code = #{MsgType}
			AND DomainID = (SELECT NVL(MAX(DomainID), 0) FROM SYS_BASE_CODE WHERE Code = sbc.Code AND CodeGroup = 'TodoMsgType' AND DomainID = #{DomainID})
	    ]]>
    </select>

    <insert id="insertMsgData" parameterType="cmap" useGeneratedKeys="true" keyProperty="MessagingID"
            keyColumn="MessagingID">
        INSERT INTO SYS_MESSAGING
        (
        ServiceType
        , ObjectType
        , ObjectID
        , MsgType
        , MessageID
        , SubMsgID
        , MediaType
        , IsUse
        , IsDelay
        , MessagingSubject
        , MessagingState
        , ApprovalState
        , ApproverCode
        , SubTotalCount
        , SendCount
        , FailCnt
        , SenderCode
        , ReceiverText
        , ReservedDate
        , SendStartDate
        , SendEndDate
        , XSLPath
        , Width
        , Height
        , PopupURL
        , GotoURL
        , MobileURL
        , OpenType
        , MessageContext
        , ReservedStr1
        , ReservedStr2
        , ReservedStr3
        , ReservedStr4
        , ReservedInt1
        , ReservedInt2
        , RegistDate
        , RegisterCode
        , ModifiedDate
        , ModifierCode
        , DeleteDate
        , ThreadType
        , MessageTarget
        )
        VALUES
        (
        #{ServiceType}
        , #{ObjectType}
        , #{ObjectID}
        , #{MsgType}
        , #{MessageID}
        , #{SubMsgID}
        , #{MediaType}
        , #{IsUse}
        , #{IsDelay}
        , #{MessagingSubject}
        , '1'
        , #{ApprovalState}
        , #{strApproverCode}
        , #{SubTotalCount}
        , #{SendCount}
        , 0
        , NVL(#{SenderCode}, 'superadmin')
        , #{ReceiverText}
        , NVL(TO_DATE(#{ReservedDate}, 'YYYY-MM-DD HH24:MI:SS'), SYSDATE)
        , NULL
        , NULL
        , #{XSLPath}
        , #{Width}
        , #{Height}
        , #{PopupURL}
        , #{GotoURL}
        , #{MobileURL}
        , #{OpenType}
        , #{MessageContext}
        , #{ReservedStr1}
        , #{ReservedStr2}
        , #{ReservedStr3}
        , #{ReservedStr4}
        , #{ReservedInt1}
        , #{ReservedInt2}
        , SYSDATE
        , NVL(#{RegistererCode}, 'superadmin')
        , NULL
        , NULL
        , NULL
        , NVL(#{ThreadType}, 'SCHEDULER')
        , #{MessageTarget}
        )

        <selectKey keyProperty="LastMsgID" resultType="int" order="AFTER">
            SELECT SYS_MESSAGING_SEQ.CURRVAL AS LastMsgID FROM dual
        </selectKey>
    </insert>

    <insert id="insertMsgData_TargetSurvey" parameterType="cmap">
        INSERT INTO SYS_MESSAGING_TARGET (MessagingID, TargetID, InfoType, TargetObjectType, TargetCode)
        SELECT #{MessagingID}
        , ROWNUM
        , InfoType
        , TargetType
        , TargetCode
        FROM
        (

        SELECT CASE
        WHEN NVL(TargetType,'') = 'GR' THEN 'Group'
        WHEN NVL(TargetType,'') = 'UR' THEN 'User'
        END AS InfoType
        , TargetType
        , TargetCode
        , RespondentID
        FROM SURVEY_TARGET_RESPONDENT
        WHERE SurveyID = #{MessageID}
        ) D ORDER BY D.RespondentID
    </insert>

<!--    <insert id="insertMsgData_Target" parameterType="cmap">-->
<!--        INSERT INTO SYS_MESSAGING_TARGET (-->
<!--        MessagingID, TargetID, InfoType, TargetObjectType, TargetCode-->
<!--        )-->
<!--        SELECT-->
<!--        #{MessagingID}-->
<!--        , ROWNUM-->
<!--        , D.InfoType-->
<!--        , D.TargetObjectType-->
<!--        , D.TargetCode-->
<!--        FROM-->
<!--        (-->
<!--        SELECT CASE-->
<!--        WHEN NVL(C.GroupCode,'') IS NOT NULL THEN 'Group'-->
<!--        WHEN NVL(B.UserCode,'') IS NOT NULL THEN 'User'-->
<!--        END AS InfoType-->
<!--        , CASE-->
<!--        WHEN NVL(C.GroupType,'') = 'Company' THEN 'DN'-->
<!--        WHEN NVL(C.GroupCode,'') IS NOT NULL THEN 'GR'-->
<!--        WHEN NVL(B.UserCode,'') IS NOT NULL THEN 'UR'-->
<!--        END AS TargetObjectType-->
<!--        ,CASE-->
<!--        WHEN NVL(C.GroupCode,'') IS NOT NULL THEN C.GroupCode-->
<!--        WHEN NVL(B.UserCode,'') IS NOT NULL THEN B.UserCode-->
<!--        END AS TargetCode-->
<!--        FROM TT_VALUETABLE A-->
<!--        LEFT OUTER JOIN SYS_OBJECT_USER B ON B.UserCode = A.Value-->
<!--        LEFT OUTER JOIN SYS_OBJECT_GROUP C ON C.GroupCode = A.Value-->
<!--        ) D-->
<!--        ORDER BY D.TargetObjectType-->
<!--    </insert>-->

    <insert id="insertMsgData_Target" parameterType="cmap">
        INSERT INTO SYS_MESSAGING_TARGET (
        MessagingID, TargetID, InfoType, TargetObjectType, TargetCode
        )
        SELECT
        #{MessagingID}
        , ROWNUM
        , D.InfoType
        , D.TargetObjectType
        , D.TargetCode
        FROM
        (
        SELECT InfoType, TargetObjectType, TargetCode
        FROM (
        SELECT 'User' AS InfoType
        , 'UR' AS TargetObjectType
        , UserCode AS TargetCode
        FROM SYS_OBJECT_USER

        UNION ALL

        SELECT 'Group' AS InfoType
        , CASE GroupType WHEN  'Company' then 'DN' ELSE 'GR' END AS TargetObjectType
        , GroupCode AS TargetCode
        FROM SYS_OBJECT_GROUP
        ) A
        WHERE TargetCode IN
        <foreach collection="ReceiversCode" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        ) D
        ORDER BY D.TargetObjectType
    </insert>

    <insert id="createTT_ValueTable" parameterType="cmap">
        CALL SP_CreateValueTable_T()
    </insert>

    <insert id="insertTT_ValueTable" parameterType="cmap">
        INSERT ALL
        <foreach collection="ReceiversCode" item="item" separator=" ">
            INTO TT_VALUETABLE
            (
            value
            )
            VALUES
            (
            #{item}
            )
        </foreach>
        SELECT * FROM DUAL
    </insert>

    <insert id="createTT_tbReceivers" parameterType="cmap">
        CALL SP_CREATERECEIVERS_T()
    </insert>

    <insert id="createTT_tbReceivers_User" parameterType="cmap">
        CALL SP_CREATERECEIVERS_USER_T()
    </insert>

    <select id="selectSurveyTargetRespondentType" parameterType="cmap" resultType="String">
        <![CDATA[
			SELECT TargetRespondentType AS "TargetRespondentType"
			FROM SURVEY 
			WHERE SurveyID = #{MessageID}
	    ]]>
    </select>

    <insert id="insertTT_tbReceivers_User" parameterType="cmap">
        INSERT INTO TT_TBRECEIVERS_USER
        (
        Seq
        , UserCode
        )
        <if test="TargetRespondentType == 'S'.toString()">
            SELECT TT_TBRECEIVERS_USER_SEQ.NEXTVAL, TBL.* FROM(
            SELECT TBL.RespondentCode
            FROM(
            SELECT TargetCode AS RespondentCode
            FROM SURVEY_TARGET_RESPONDENT UserList
            WHERE SurveyID = #{MessageID} AND TargetType = 'UR'

            UNION ALL

            SELECT B.UserCode AS RespondentCode
            FROM SURVEY_TARGET_RESPONDENT A
            INNER JOIN ( SELECT A.UserCode, B.GroupCode, C.GroupPath FROM sys_object_user_basegroup A
            LEFT JOIN sys_object_group_member B ON A.UserCode = B.UserCode AND B.IsUse= 'Y'
            LEFT JOIN sys_object_group C ON B.GroupCode = C.GroupCode AND C.IsDisplay = 'Y' AND C.IsUse =
            'Y') B
            ON (A.TargetCode = B.GroupCode OR (';' || B.GroupPath) LIKE ('%;'|| A.TargetCode|| ';%') ) AND A.TargetType
            = 'GR'
            WHERE A.SurveyID = #{MessageID}
            ) TBL
            GROUP BY RespondentCode
            )TBL
        </if>
        <if test="TargetRespondentType == 'A'.toString()">
            SELECT TT_TBRECEIVERS_USER_SEQ.NEXTVAL, TBL.* FROM(
            SELECT TBL.RespondentCode
            FROM (
            SELECT UR.UserCode AS RespondentCode
            FROM SYS_OBJECT_GROUP_MEMBER UR
            INNER JOIN ( SELECT GRH.GroupCode
            FROM SURVEY_TARGET_RESPONDENT TR
            INNER JOIN SYS_OBJECT_GROUP GR
            ON TR.TargetCode = GR.GroupCode AND TR.SurveyID = #{MessageID} AND TargetType = 'GR'
            LEFT OUTER JOIN SYS_OBJECT_GROUP GRH
            ON GRH.GroupPath LIKE (GR.GroupPath ||'%')
            WHERE GRH.IsUse = 'Y'
            ) HGR
            ON UR.GroupCode = HGR.GroupCode
            ) TBL
            GROUP BY RespondentCode
            )TBL
        </if>
    </insert>

    <insert id="insertMsgData_SubTempSurvey" parameterType="cmap">
        INSERT INTO TT_TBRECEIVERS
        (Seq, ReceiverCode, TargetMedia)
        SELECT TT_TBRECEIVERS_SEQ.NEXTVAL ,VM.ReceiverCode, VM.TargetMedia FROM (
        SELECT DISTINCT UserCode AS ReceiverCode, TargetMedia
        FROM
        (
        SELECT UR.UserCode
        , NVL(C.MediaType,NVL(#{mMediaType},B.Reserved3)) AS TargetMedia
        FROM TT_TBRECEIVERS_USER UR
        INNER JOIN SYS_BASE_CODE B ON CodeGroup = 'TodoMsgType' AND Code = #{MsgType}
        LEFT JOIN SYS_MESSAGING_SETTING C ON UR.UserCode = C.UserCode AND B.Code = C.ServiceType
        WHERE B.IsUse = 'Y'
        ) VW
        )VM
    </insert>

    <insert id="insertMsgData_SubTemp" parameterType="cmap">
        INSERT INTO TT_TBRECEIVERS
        (Seq, ReceiverCode, TargetMedia)
        SELECT TT_TBRECEIVERS_SEQ.NEXTVAL
        , VM.UserCode AS ReceiverCode
        , TargetMedia
        FROM (
        SELECT DISTINCT UserCode, TargetMedia
        FROM
        (
        SELECT UR.UserCode
        , NVL(C.MediaType,NVL(#{mMediaType},B.Reserved3)) AS TargetMedia
        FROM SYS_MESSAGING_TARGET A
        INNER JOIN SYS_OBJECT_USER UR ON A.TargetCode = UR.UserCode AND A.TargetObjectType = 'UR'
        INNER JOIN SYS_BASE_CODE B ON CodeGroup = 'TodoMsgType' AND Code = #{MsgType}
        LEFT JOIN SYS_MESSAGING_SETTING C ON UR.UserCode = C.UserCode AND B.Code = C.ServiceType
        WHERE A.MessagingID = #{MessagingID} AND UR.IsUse = 'Y' AND B.IsUse = 'Y'

        UNION

        SELECT UR.UserCode
        , NVL(C.MediaType,NVL(#{mMediaType},B.Reserved3)) AS TargetMedia
        FROM SYS_OBJECT_USER UR
        INNER JOIN SYS_BASE_CODE B ON CodeGroup = 'TodoMsgType' AND Code = #{MsgType}
        LEFT JOIN SYS_MESSAGING_SETTING C ON UR.UserCode = C.UserCode AND B.Code = C.ServiceType
        LEFT JOIN SYS_OBJECT_GROUP_MEMBER GM ON UR.UserCode = GM.UserCode
        WHERE GM.GroupCode IN(
        SELECT GroupCode
        FROM SYS_OBJECT_GROUP GR
        INNER JOIN SYS_MESSAGING_TARGET A ON CONCAT(';',GR.GroupPath) LIKE
        CONCAT(CONCAT('%;',A.TargetCode),';%') AND A.InfoType = 'Group'
        WHERE A.MessagingID = #{MessagingID} AND GR.IsUse = 'Y' ) AND UR.IsUse = 'Y'
        ) VW
        )VM

    </insert>

    <insert id="insertMsgData_Sub" parameterType="cmap">
        INSERT INTO SYS_MESSAGING_SUB
        (MessagingID, ReceiverCode, SendDate, SuccessState, MediaType, ResultMessage, RetryCount)
        SELECT MasterID
        , ReceiverCode
        , NULL
        , 'N'
        , Media
        , NULL
        , 0
        FROM
        (
        SELECT MasterID
        , ReceiverCode
        , B.Code AS Media
        FROM
        (
        SELECT #{MessagingID} AS MasterID
        , A.ReceiverCode AS ReceiverCode
        , A.TargetMedia
        FROM TT_TBRECEIVERS A
        ) TargetTB
        INNER JOIN SYS_BASE_CODE B ON B.CodeGroup = 'NotificationMedia' AND INSTR(TargetTB.TargetMedia,
        B.Code, 1, 1) > 0
        WHERE B.IsUse = 'Y'
        AND B.DomainID = (SELECT NVL(MAX(DomainID), 0) FROM SYS_BASE_CODE WHERE Code = B.Code AND CodeGroup = 'TodoMsgType' AND DomainID = #{DomainID})
        ) OuterTB
        WHERE INSTR(#{MediaType}, Media, 1, 1) > 0

    </insert>

    <update id="updateMsgData_Sub" parameterType="cmap">
        UPDATE SYS_MESSAGING
        SET SubTotalCount = (SELECT COUNT(0) FROM SYS_MESSAGING_SUB WHERE MessagingID = #{MessagingID})
        WHERE MessagingID = #{MessagingID}
    </update>

    <select id="selectNeedApprovalNSendAmount" parameterType="cmap" resultType="cmap">
        SELECT CASE WHEN D.IsNeedEmailAuth + D.IsNeedSMSAuth + D.IsNeedMessengerAuth + D.IsNeedTodoListAuth +
        D.IsNeedMDMAuth > 0 THEN 'Y' ELSE 'N' END AS "NeedAuth"
        , D.MailTotalCount+D.SMSTotalCount+D.MessengerTotalCount+D.TodoListTotalCount+D.MDMTotalCount AS "SendAmount"
        FROM(
        SELECT MAX(IsNeedEmailAuth) AS IsNeedEmailAuth
        ,SUM(MailTotalCount) AS MailTotalCount
        ,MAX(IsNeedSMSAuth) AS IsNeedSMSAuth
        ,SUM(SMSTotalCount) AS SMSTotalCount
        ,MAX(IsNeedMessengerAuth) AS IsNeedMessengerAuth
        ,SUM(MessengerTotalCount) AS MessengerTotalCount
        ,MAX(IsNeedTodoListAuth) AS IsNeedTodoListAuth
        ,SUM(TodoListTotalCount) AS TodoListTotalCount
        ,MAX(IsNeedMDMAuth) AS IsNeedMDMAuth
        ,SUM(MDMTotalCount) AS MDMTotalCount
        FROM(
        SELECT CASE WHEN B.MediaType = 'MAIL' AND #{intMinCountForEmail} > 0 THEN CASE WHEN #{intMinCountForEmail}
        <![CDATA[<=]]> B.MediaCount THEN 1 ELSE 0 END ELSE 0 END AS IsNeedEmailAuth
        ,CASE WHEN B.MediaType = 'MAIL' THEN B.MediaCount ELSE 0 END AS MailTotalCount
        ,CASE WHEN B.MediaType = 'SMS' AND #{intMinCountForSMS} > 0 THEN CASE WHEN #{intMinCountForSMS} <![CDATA[<=]]>
        B.MediaCount THEN 1 ELSE 0 END ELSE 0 END AS IsNeedSMSAuth
        ,CASE WHEN B.MediaType = 'SMS' THEN B.MediaCount ELSE 0 END AS SMSTotalCount
        ,CASE WHEN B.MediaType = 'MESSENGER' AND #{intMinCountForMessenger} > 0 THEN CASE WHEN
        #{intMinCountForMessenger} <![CDATA[<=]]> B.MediaCount THEN 1 ELSE 0 END ELSE 0 END AS IsNeedMessengerAuth
        ,CASE WHEN B.MediaType = 'MESSENGER' THEN B.MediaCount ELSE 0 END AS MessengerTotalCount
        ,CASE WHEN B.MediaType = 'TODOLIST' AND #{intMinCountForTodoList} > 0 THEN CASE WHEN #{intMinCountForTodoList}
        <![CDATA[<=]]> B.MediaCount THEN 1 ELSE 0 END ELSE 0 END AS IsNeedTodoListAuth
        ,CASE WHEN B.MediaType = 'TODOLIST' THEN B.MediaCount ELSE 0 END AS TodoListTotalCount
        ,CASE WHEN B.MediaType = 'MDM' AND #{intMinCountForMDM} > 0 THEN CASE WHEN #{intMinCountForMDM} <![CDATA[<=]]>
        B.MediaCount THEN 1 ELSE 0 END ELSE 0 END AS IsNeedMDMAuth
        ,CASE WHEN B.MediaType = 'MDM' THEN B.MediaCount ELSE 0 END AS MDMTotalCount
        FROM
        (
        SELECT A.MediaType
        , COUNT(*) AS MediaCount
        FROM SYS_MESSAGING_SUB A
        WHERE 1 = 1
        AND A.MessagingID = #{MessagingID}
        GROUP BY A.MediaType
        ) B
        ) C
        ) D
    </select>

    <update id="updateMsgApvStatus" parameterType="cmap">
        UPDATE SYS_MESSAGING
        SET ApprovalState = CASE WHEN #{NeedAuth} = 'Y' THEN 'W' ELSE 'P' END
        , SubTotalCount = NVL(#{SendAmount}, 0)
        , ApproverCode = CASE WHEN #{NeedAuth} = 'Y' THEN '' ELSE NULL END
        WHERE MessagingID = #{MessagingID}
        AND IsUse = 'Y'
        AND MessagingState = 1
        AND ApprovalState <![CDATA[<>]]> 'W'
        AND DeleteDate IS NULL
    </update>

    <update id="cancelMsg" parameterType="cmap">
        UPDATE SYS_MESSAGING
        SET DeleteDate = SYSTIMESTAMP
        , MessagingState = 4
        , ApprovalState = 'P'
        WHERE MessagingID = #{MessagingID}
    </update>

    <update id="dropTempTable" parameterType="cmap">
        SELECT 1 FROM DUAL
        <!-- 		DROP TABLE ${TempTableName} -->
    </update>

    <update id="updateMsgData" parameterType="cmap">
        UPDATE SYS_MESSAGING
        SET
        `ServiceType` = #{ServiceType}
        , `ObjectType` = #{ObjectType}
        , `ObjectID` = #{ObjectID}
        , `MsgType` = #{MsgType}
        , `MessageID` = #{MessageID}
        , `SubMsgID` = #{SubMsgID}
        , `MediaType` = #{MediaType}
        , `IsUse` = #{IsUse}
        , `IsDelay` = #{IsDelay}
        , `MessagingSubject` = #{MessagingSubject}
        , `MessagingState` = #{MessagingState}
        , `ApprovalState` = #{ApprovalState}
        , `ApproverCode` = #{ApproverCode}
        , `SubTotalCount` = #{SubTotalCount}
        , `SendCount` = #{SendCount}
        , `FailCnt` = #{FailCnt}
        , `SenderCode` = #{SenderCode}
        , `ReceiverText` = #{ReceiverText}
        , `ReservedDate` = #{ReservedDate}
        , `SendStartDate` = #{SendStartDate}
        , `SendEndDate` = #{SendEndDate}
        , `XSLPath` = #{XSLPath}
        , `Width` = #{Width}
        , `Height` = #{Height}
        , `PopupURL` = #{PopupURL}
        , `GotoURL` = #{GotoURL}
        , `MobileURL` = #{MobileURL}
        , `OpenType` = #{OpenType}
        , `MessageContext` = #{MessageContext}
        , `ReservedStr1` = #{ReservedStr1}
        , `ReservedStr2` = #{ReservedStr2}
        , `ReservedStr3` = #{ReservedStr3}
        , `ReservedStr4` = #{ReservedStr4}
        , `ReservedInt1` = #{ReservedInt1}
        , `ReservedInt2` = #{ReservedInt2}
        , `RegistDate` = #{RegistDate}
        , `RegisterCode` = #{RegisterCode}
        , `ModifiedDate` = SYSDATE
        , `ModifierCode` = #{ModifierCode}
        , `DeleteDate` = #{DeleteDate}
        WHERE
        MessagingID = #{MessagingID}
    </update>

    <delete id="deleteMsgData" parameterType="cmap">
        DELETE SYS_MESSAGING
        WHERE MessagingID = #{MessagingID}
    </delete>

    <delete id="deleteMsgData_Target" parameterType="cmap">
        DELETE SYS_MESSAGING_TARGET
        WHERE MessagingID = #{MessagingID}
    </delete>

    <delete id="deleteMsgData_Sub" parameterType="cmap">
        DELETE SYS_MESSAGING_SUB
        WHERE MessagingID = #{MessagingID}
        <if test="SubID != null and SubID != '' ">
            AND SubID = #{SubID}
        </if>
    </delete>

    <update id="updateMsgDataMessagingState" parameterType="cmap">
        UPDATE SYS_MESSAGING
        SET
        MessagingState = #{MessagingState}
        , DeleteDate = SYSDATE
        WHERE ServiceType = #{ServiceType}
        AND ObjectID = #{ObjectID}
        <if test="ObjectType != null and ObjectType != '' ">
            <if test="SearchType != null and SearchType != '' and (SearchType eq 'LIKE'.toString())">
                AND ObjectType LIKE #{ObjectType}
            </if>
            <if test="SearchType != null and SearchType != '' and (SearchType eq 'EQ'.toString())">
                AND ObjectType = #{ObjectType}
            </if>
            <!-- <if test="SearchType != null and SearchType != '' and (SearchType eq 'IN'.toString())">
                AND ObjectType IN ${ObjectType}
            </if> -->
        </if>
        <if test="MessagingID != null and MessagingID != '' ">
            AND MessagingID = #{MessagingID}
        </if>
        AND NVL(ReservedDate,RegistDate) <![CDATA[>]]> SYSDATE
        AND DeleteDate IS NULL
        AND MessagingState = '1'
        AND ApprovalState IN('P','A')
    </update>

    <update id="updateArrMsgDataMessagingState" parameterType="cmap">
        UPDATE SYS_MESSAGING
        SET
        MessagingState = #{MessagingState}
        , DeleteDate = SYSDATE
        WHERE ServiceType = #{ServiceType}
        AND ObjectID IN
        <foreach item="item" index="index" collection="arrObjectID" open="(" close=")" separator=",">
            #{item}
        </foreach>
        <if test="ObjectType != null and ObjectType != '' ">
            <if test="SearchType != null and SearchType != '' and (SearchType eq 'LIKE'.toString())">
                AND ObjectType LIKE #{ObjectType}
            </if>
            <if test="SearchType != null and SearchType != '' and (SearchType eq 'EQ'.toString())">
                AND ObjectType = #{ObjectType}
            </if>
           <!--  <if test="SearchType != null and SearchType != '' and (SearchType eq 'IN'.toString())">
                AND ObjectType IN ${ObjectType}
            </if> -->
        </if>
        <if test="MessagingID != null and MessagingID != '' ">
            AND MessagingID = #{MessagingID}
        </if>
        AND NVL(ReservedDate,RegistDate) <![CDATA[>]]> SYSDATE
        AND DeleteDate IS NULL
        AND MessagingState = '1'
        AND ApprovalState IN('P','A')
    </update>

    <insert id="insertMsgData_Sub_individual" parameterType="cmap">
        INSERT INTO SYS_MESSAGING_SUB (MessagingID, ReceiverCode, SuccessState,
        MediaType,RetryCount)
        VALUES(#{MessagingID},#{target},'N',#{targetMedia},0)
    </insert>

    <select id="selectTargetMedia" parameterType="cmap" resultType="cmap">
        SELECT DISTINCT a.UserCode AS "ReceiverCode", TargetMedia AS "TargetMedia"-- 중복 제거
        FROM (
	        SELECT UR.UserCode, NVL(C.MediaType,NVL(#{mMediaType},B.Reserved3)) AS TargetMedia
	        FROM SYS_MESSAGING_TARGET A
	        INNER JOIN SYS_OBJECT_USER UR ON A.TargetCode = UR.UserCode AND A.TargetObjectType = 'UR'
	        INNER JOIN SYS_BASE_CODE B ON CodeGroup = 'TodoMsgType' AND CODE = #{MsgType}
	        LEFT JOIN SYS_MESSAGING_SETTING C ON UR.UserCode = C.UserCode AND B.Code = C.ServiceType -- 사용자가 정의 한 타입 테이블
	        WHERE A.MessagingID = #{MessagingID}  AND UR.IsUse = 'Y' AND B.IsUse = 'Y'
	        AND B.DomainID = (SELECT NVL(MAX(DomainID), 0) FROM SYS_BASE_CODE WHERE Code = B.Code AND CodeGroup = 'TodoMsgType' AND DomainID = #{DomainID})
	
	        UNION
	
	        SELECT UR.UserCode, NVL(C.MediaType,NVL(#{mMediaType},B.Reserved3)) AS TargetMedia
	        FROM SYS_OBJECT_USER UR
	        INNER JOIN SYS_BASE_CODE B ON CodeGroup = 'TodoMsgType' AND Code = #{MsgType}
	        LEFT JOIN SYS_MESSAGING_SETTING C ON  UR.UserCode = C.UserCode AND B.Code = C.ServiceType AND C.MediaType LIKE '%'||#{MediaType}||'%'
	        LEFT JOIN SYS_OBJECT_GROUP_MEMBER GM ON UR.UserCode = GM.UserCode
	        WHERE GM.GroupCode IN( -- 하위부서 인원 전원 가져옴
			        SELECT GroupCode
			        FROM SYS_OBJECT_GROUP GR
			        INNER JOIN SYS_MESSAGING_TARGET A  ON  ';'||GR.GroupPath LIKE '%;'||A.TargetCode||';%' AND A.InfoType = 'Group'
			        WHERE A.MessagingID = #{MessagingID} AND GR.IsUse = 'Y'
			        )
	        AND UR.IsUse = 'Y'
	        AND B.DomainID = (SELECT NVL(MAX(DomainID), 0) FROM SYS_BASE_CODE WHERE Code = B.Code AND CodeGroup = 'TodoMsgType' AND DomainID = #{DomainID})
	        ) A
        <if test="ExceptersCode != null and ExceptersCode.length != 0 ">
		  left join
		  	(SELECT UR.UserCode
		       FROM SYS_OBJECT_USER UR
		  LEFT JOIN SYS_OBJECT_GROUP_MEMBER GM ON UR.UserCode = GM.UserCode
		      WHERE GM.GroupCode IN
				<foreach collection="ExceptersCode" item="item" index="index" separator="," open="(" close=")">
	                    #{item}
	            </foreach>
	        ) c ON A.UserCode = C.UserCode
		</if>  
        INNER JOIN SYS_BASE_CODE B ON B.CodeGroup = 'NotificationMedia'
        WHERE B.IsUse = 'Y'
        AND B.DomainID = (SELECT NVL(MAX(DomainID), 0) FROM SYS_BASE_CODE WHERE Code = B.Code AND CodeGroup = 'NotificationMedia' AND DomainID = #{DomainID})
        <if test="ExceptersCode != null and ExceptersCode.length != 0 ">
          AND A.UserCode not in 
			<foreach collection="ExceptersCode" item="item" index="index" separator="," open="(" close=")">
                    #{item}
            </foreach>
        </if>  
		<if test="ExceptersCode != null and ExceptersCode.length != 0 ">
          AND C.UserCode IS NULL
		</if>

    </select>
    <update id="updateMsgThreadType" parameterType="cmap">
        UPDATE SYS_MESSAGING
        SET ThreadType = 'SCHEDULER'
        WHERE MessagingID = #{MessagingID}
    </update>
</mapper>